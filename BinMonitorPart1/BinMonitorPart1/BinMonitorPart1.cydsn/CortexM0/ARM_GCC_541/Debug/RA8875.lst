ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RA8875.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	_cs,1,1
  20              		.comm	_rst,1,1
  21              		.comm	_width,2,2
  22              		.comm	_height,2,2
  23              		.comm	_textScale,1,1
  24              		.comm	_size,1,1
  25              		.global	spi_speed
  26              		.data
  27              		.align	2
  28              		.type	spi_speed, %object
  29              		.size	spi_speed, 4
  30              	spi_speed:
  31 0000 00093D00 		.word	4000000
  32              		.section	.text.begin,"ax",%progbits
  33              		.align	2
  34              		.global	begin
  35              		.code	16
  36              		.thumb_func
  37              		.type	begin, %function
  38              	begin:
  39              	.LFB35:
  40              		.file 1 "RA8875.c"
   1:RA8875.c      **** /**************************************************************************/
   2:RA8875.c      **** /*!
   3:RA8875.c      ****     @file     Adafruit_RA8875.cpp
   4:RA8875.c      ****     @author   Limor Friend/Ladyada, K.Townsend/KTOWN for Adafruit Industries
   5:RA8875.c      ****     @license  BSD license, all text above and below must be included in
   6:RA8875.c      ****               any redistribution
   7:RA8875.c      **** 
   8:RA8875.c      ****  This is the library for the Adafruit RA8875 Driver board for TFT displays
   9:RA8875.c      ****  ---------------> http://www.adafruit.com/products/1590
  10:RA8875.c      ****  The RA8875 is a TFT driver for up to 800x480 dotclock'd displays
  11:RA8875.c      ****  It is tested to work with displays in the Adafruit shop. Other displays
  12:RA8875.c      ****  may need timing adjustments and are not guanteed to work.
  13:RA8875.c      ****  
  14:RA8875.c      ****  Adafruit invests time and resources providing this open
  15:RA8875.c      ****  source code, please support Adafruit and open-source hardware
  16:RA8875.c      ****  by purchasing products from Adafruit!
  17:RA8875.c      ****  
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 2


  18:RA8875.c      ****  Written by Limor Fried/Ladyada for Adafruit Industries.
  19:RA8875.c      ****  BSD license, check license.txt for more information.
  20:RA8875.c      ****  All text above must be included in any redistribution.
  21:RA8875.c      **** 
  22:RA8875.c      ****     @section  HISTORY
  23:RA8875.c      ****     
  24:RA8875.c      ****     v1.0 - First release
  25:RA8875.c      **** */
  26:RA8875.c      **** /**************************************************************************/
  27:RA8875.c      **** 
  28:RA8875.c      **** #include <project.h>
  29:RA8875.c      **** #include "RA8875.h"
  30:RA8875.c      **** 
  31:RA8875.c      **** #if defined (ARDUINO_ARCH_ARC32)
  32:RA8875.c      ****   uint32_t spi_speed = 12000000;
  33:RA8875.c      **** #else
  34:RA8875.c      ****   uint32_t spi_speed = 4000000;
  35:RA8875.c      **** #endif
  36:RA8875.c      **** 
  37:RA8875.c      **** // If the SPI library has transaction support, these functions
  38:RA8875.c      **** // establish settings and protect from interference from other
  39:RA8875.c      **** // libraries.  Otherwise, they simply do nothing.
  40:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
  41:RA8875.c      ****     static inline void spi_begin(void) __attribute__((always_inline));
  42:RA8875.c      ****     static inline void spi_begin(void) {
  43:RA8875.c      ****         // max speed!
  44:RA8875.c      ****         SPI.beginTransaction(SPISettings(spi_speed, MSBFIRST, SPI_MODE0));
  45:RA8875.c      ****     }
  46:RA8875.c      ****     static inline void spi_end(void) __attribute__((always_inline));
  47:RA8875.c      ****     static inline void spi_end(void) {
  48:RA8875.c      ****         SPI.endTransaction();
  49:RA8875.c      ****     }
  50:RA8875.c      **** #else
  51:RA8875.c      ****     #define spi_begin()
  52:RA8875.c      ****     #define spi_end()
  53:RA8875.c      **** #endif
  54:RA8875.c      **** 
  55:RA8875.c      **** 
  56:RA8875.c      **** /**************************************************************************/
  57:RA8875.c      **** /*!
  58:RA8875.c      ****       Constructor for a new RA8875 instance
  59:RA8875.c      ****       
  60:RA8875.c      ****       @args CS[in]  Location of the SPI chip select pin
  61:RA8875.c      ****       @args RST[in] Location of the reset pin
  62:RA8875.c      **** */
  63:RA8875.c      **** /**************************************************************************/
  64:RA8875.c      **** //Adafruit_RA8875::Adafruit_RA8875(uint8_t CS, uint8_t RST) : Adafruit_GFX(800, 480) {
  65:RA8875.c      **** //  _cs = CS;
  66:RA8875.c      **** //  _rst = RST;
  67:RA8875.c      **** //}
  68:RA8875.c      **** 
  69:RA8875.c      **** /**************************************************************************/
  70:RA8875.c      **** /*!
  71:RA8875.c      ****       Initialises the LCD driver and any HW required by the display
  72:RA8875.c      ****       
  73:RA8875.c      ****       @args s[in] The display size, which can be either:
  74:RA8875.c      ****                   'RA8875_480x272' (4.3" displays) r
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 3


  75:RA8875.c      ****                   'RA8875_800x480' (5" and 7" displays)
  76:RA8875.c      **** */
  77:RA8875.c      **** /**************************************************************************/
  78:RA8875.c      **** boolean begin(enum RA8875sizes s) {
  41              		.loc 1 78 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 16
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 90B5     		push	{r4, r7, lr}
  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 85B0     		sub	sp, sp, #20
  51              		.cfi_def_cfa_offset 32
  52 0004 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  54 0006 0200     		movs	r2, r0
  55 0008 FB1D     		adds	r3, r7, #7
  56 000a 1A70     		strb	r2, [r3]
  79:RA8875.c      ****   uint8_t x;
  80:RA8875.c      **** //  uint32_t compare;  
  81:RA8875.c      ****     _size = s;
  57              		.loc 1 81 0
  58 000c 214B     		ldr	r3, .L6
  59 000e FA1D     		adds	r2, r7, #7
  60 0010 1278     		ldrb	r2, [r2]
  61 0012 1A70     		strb	r2, [r3]
  82:RA8875.c      **** 
  83:RA8875.c      ****   if (_size == RA8875_480x272) {
  62              		.loc 1 83 0
  63 0014 1F4B     		ldr	r3, .L6
  64 0016 1B78     		ldrb	r3, [r3]
  65 0018 002B     		cmp	r3, #0
  66 001a 08D1     		bne	.L2
  84:RA8875.c      ****     _width = 480;
  67              		.loc 1 84 0
  68 001c 1E4B     		ldr	r3, .L6+4
  69 001e F022     		movs	r2, #240
  70 0020 5200     		lsls	r2, r2, #1
  71 0022 1A80     		strh	r2, [r3]
  85:RA8875.c      ****     _height = 272;
  72              		.loc 1 85 0
  73 0024 1D4B     		ldr	r3, .L6+8
  74 0026 8822     		movs	r2, #136
  75 0028 5200     		lsls	r2, r2, #1
  76 002a 1A80     		strh	r2, [r3]
  77 002c 0EE0     		b	.L3
  78              	.L2:
  86:RA8875.c      ****   } 
  87:RA8875.c      ****   else if (_size == RA8875_800x480) {
  79              		.loc 1 87 0
  80 002e 194B     		ldr	r3, .L6
  81 0030 1B78     		ldrb	r3, [r3]
  82 0032 012B     		cmp	r3, #1
  83 0034 08D1     		bne	.L4
  88:RA8875.c      ****     _width = 800;
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 4


  84              		.loc 1 88 0
  85 0036 184B     		ldr	r3, .L6+4
  86 0038 C822     		movs	r2, #200
  87 003a 9200     		lsls	r2, r2, #2
  88 003c 1A80     		strh	r2, [r3]
  89:RA8875.c      ****     _height = 480;
  89              		.loc 1 89 0
  90 003e 174B     		ldr	r3, .L6+8
  91 0040 F022     		movs	r2, #240
  92 0042 5200     		lsls	r2, r2, #1
  93 0044 1A80     		strh	r2, [r3]
  94 0046 01E0     		b	.L3
  95              	.L4:
  90:RA8875.c      ****     //CyDelay(5000); //TESTING, REMOVE
  91:RA8875.c      ****   }
  92:RA8875.c      ****   else {
  93:RA8875.c      ****     return false;
  96              		.loc 1 93 0
  97 0048 0023     		movs	r3, #0
  98 004a 1FE0     		b	.L5
  99              	.L3:
  94:RA8875.c      ****   }
  95:RA8875.c      **** 
  96:RA8875.c      ****  // pinMode(_cs, OUTPUT);
  97:RA8875.c      ****   //digitalWrite(_cs, HIGH);
  98:RA8875.c      ****     //LCDSPI_ss0_m_SetDriveMode(LCDSPI_ss0_m_DM_STRONG);
  99:RA8875.c      ****     //CyDelay(100);
 100:RA8875.c      ****     //LCDSPI_ss0_m_Write(0u);
 101:RA8875.c      ****     //CyDelay(100);
 102:RA8875.c      ****     LCDSPI_ss0_m_Write(1u);
 100              		.loc 1 102 0
 101 004c 0120     		movs	r0, #1
 102 004e FFF7FEFF 		bl	LCDSPI_ss0_m_Write
 103:RA8875.c      **** 
 104:RA8875.c      ****     //pinMode(_rst, OUTPUT);
 105:RA8875.c      ****   //digitalWrite(_rst, LOW);
 106:RA8875.c      ****     rst0_m_Write(0u);
 103              		.loc 1 106 0
 104 0052 0020     		movs	r0, #0
 105 0054 FFF7FEFF 		bl	rst0_m_Write
 107:RA8875.c      ****   CyDelay(100);
 106              		.loc 1 107 0
 107 0058 6420     		movs	r0, #100
 108 005a FFF7FEFF 		bl	CyDelay
 108:RA8875.c      ****   //digitalWrite(_rst, HIGH);
 109:RA8875.c      ****     rst0_m_Write(1u);
 109              		.loc 1 109 0
 110 005e 0120     		movs	r0, #1
 111 0060 FFF7FEFF 		bl	rst0_m_Write
 110:RA8875.c      ****   CyDelay(10);
 112              		.loc 1 110 0
 113 0064 0A20     		movs	r0, #10
 114 0066 FFF7FEFF 		bl	CyDelay
 111:RA8875.c      ****   
 112:RA8875.c      ****     //LCDSPI_Start();  // Need this?
 113:RA8875.c      ****     
 114:RA8875.c      ****     
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 5


 115:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
 116:RA8875.c      ****     #if defined (ARDUINO_ARCH_ARC32)
 117:RA8875.c      ****         spi_speed = 2000000;
 118:RA8875.c      ****     #else
 119:RA8875.c      ****         spi_speed = 125000;
 120:RA8875.c      ****     #endif
 121:RA8875.c      **** #else
 122:RA8875.c      ****     #ifdef __AVR__
 123:RA8875.c      ****         SPI.setClockDivider(SPI_CLOCK_DIV128);
 124:RA8875.c      ****         SPI.setDataMode(SPI_MODE0);
 125:RA8875.c      ****     #endif
 126:RA8875.c      **** #endif
 127:RA8875.c      **** 
 128:RA8875.c      ****     x = readReg(0);
 115              		.loc 1 128 0
 116 006a 0F23     		movs	r3, #15
 117 006c FC18     		adds	r4, r7, r3
 118 006e 0020     		movs	r0, #0
 119 0070 FFF7FEFF 		bl	readReg
 120 0074 0300     		movs	r3, r0
 121 0076 2370     		strb	r3, [r4]
 129:RA8875.c      **** //    compare = 0x75;
 130:RA8875.c      ****     writeReg(0,x);
 122              		.loc 1 130 0
 123 0078 0F23     		movs	r3, #15
 124 007a FB18     		adds	r3, r7, r3
 125 007c 1B78     		ldrb	r3, [r3]
 126 007e 1900     		movs	r1, r3
 127 0080 0020     		movs	r0, #0
 128 0082 FFF7FEFF 		bl	writeReg
 131:RA8875.c      **** //    CyDelay(100);
 132:RA8875.c      **** //    writeReg(0,compare);
 133:RA8875.c      **** //    CyDelay(100);
 134:RA8875.c      **** //    Serial.print("x = 0x"); Serial.println(x,HEX);
 135:RA8875.c      **** //    if (x != 0x75) {
 136:RA8875.c      **** //        return false;
 137:RA8875.c      **** //    }
 138:RA8875.c      **** //    CyDelay(100);
 139:RA8875.c      ****   initialize();
 129              		.loc 1 139 0
 130 0086 FFF7FEFF 		bl	initialize
 140:RA8875.c      **** 
 141:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
 142:RA8875.c      ****     #if defined (ARDUINO_ARCH_ARC32)
 143:RA8875.c      ****         spi_speed = 12000000L;
 144:RA8875.c      ****     #else
 145:RA8875.c      ****         spi_speed = 4000000L;
 146:RA8875.c      ****     #endif
 147:RA8875.c      **** #else
 148:RA8875.c      ****     #ifdef __AVR__
 149:RA8875.c      ****         SPI.setClockDivider(SPI_CLOCK_DIV4);
 150:RA8875.c      ****     #endif
 151:RA8875.c      **** #endif
 152:RA8875.c      ****     
 153:RA8875.c      ****   return true;
 131              		.loc 1 153 0
 132 008a 0123     		movs	r3, #1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 6


 133              	.L5:
 154:RA8875.c      **** }
 134              		.loc 1 154 0
 135 008c 1800     		movs	r0, r3
 136 008e BD46     		mov	sp, r7
 137 0090 05B0     		add	sp, sp, #20
 138              		@ sp needed
 139 0092 90BD     		pop	{r4, r7, pc}
 140              	.L7:
 141              		.align	2
 142              	.L6:
 143 0094 00000000 		.word	_size
 144 0098 00000000 		.word	_width
 145 009c 00000000 		.word	_height
 146              		.cfi_endproc
 147              	.LFE35:
 148              		.size	begin, .-begin
 149              		.section	.text.softReset,"ax",%progbits
 150              		.align	2
 151              		.global	softReset
 152              		.code	16
 153              		.thumb_func
 154              		.type	softReset, %function
 155              	softReset:
 156              	.LFB36:
 155:RA8875.c      **** 
 156:RA8875.c      **** /************************* Initialization *********************************/
 157:RA8875.c      **** 
 158:RA8875.c      **** /**************************************************************************/
 159:RA8875.c      **** /*!
 160:RA8875.c      ****       Performs a SW-based reset of the RA8875
 161:RA8875.c      **** */
 162:RA8875.c      **** /**************************************************************************/
 163:RA8875.c      **** void softReset(void) {
 157              		.loc 1 163 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 164:RA8875.c      ****   writeCommand(RA8875_PWRR);
 167              		.loc 1 164 0
 168 0004 0120     		movs	r0, #1
 169 0006 FFF7FEFF 		bl	writeCommand
 165:RA8875.c      ****   writeData(RA8875_PWRR_SOFTRESET);
 170              		.loc 1 165 0
 171 000a 0120     		movs	r0, #1
 172 000c FFF7FEFF 		bl	writeData
 166:RA8875.c      ****   writeData(RA8875_PWRR_NORMAL);
 173              		.loc 1 166 0
 174 0010 0020     		movs	r0, #0
 175 0012 FFF7FEFF 		bl	writeData
 167:RA8875.c      ****   CyDelay(1);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 7


 176              		.loc 1 167 0
 177 0016 0120     		movs	r0, #1
 178 0018 FFF7FEFF 		bl	CyDelay
 168:RA8875.c      **** }
 179              		.loc 1 168 0
 180 001c C046     		nop
 181 001e BD46     		mov	sp, r7
 182              		@ sp needed
 183 0020 80BD     		pop	{r7, pc}
 184              		.cfi_endproc
 185              	.LFE36:
 186              		.size	softReset, .-softReset
 187 0022 C046     		.section	.text.PLLinit,"ax",%progbits
 188              		.align	2
 189              		.global	PLLinit
 190              		.code	16
 191              		.thumb_func
 192              		.type	PLLinit, %function
 193              	PLLinit:
 194              	.LFB37:
 169:RA8875.c      **** 
 170:RA8875.c      **** /**************************************************************************/
 171:RA8875.c      **** /*!
 172:RA8875.c      ****       Initialise the PLL
 173:RA8875.c      **** */
 174:RA8875.c      **** /**************************************************************************/
 175:RA8875.c      **** void PLLinit(void) {
 195              		.loc 1 175 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
 176:RA8875.c      ****   if (_size == RA8875_480x272) {
 205              		.loc 1 176 0
 206 0004 114B     		ldr	r3, .L13
 207 0006 1B78     		ldrb	r3, [r3]
 208 0008 002B     		cmp	r3, #0
 209 000a 0ED1     		bne	.L10
 177:RA8875.c      ****     writeReg(RA8875_PLLC1, RA8875_PLLC1_PLLDIV1 + 10);
 210              		.loc 1 177 0
 211 000c 0A21     		movs	r1, #10
 212 000e 8820     		movs	r0, #136
 213 0010 FFF7FEFF 		bl	writeReg
 178:RA8875.c      ****     CyDelay(1);
 214              		.loc 1 178 0
 215 0014 0120     		movs	r0, #1
 216 0016 FFF7FEFF 		bl	CyDelay
 179:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 217              		.loc 1 179 0
 218 001a 0221     		movs	r1, #2
 219 001c 8920     		movs	r0, #137
 220 001e FFF7FEFF 		bl	writeReg
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 8


 180:RA8875.c      ****     CyDelay(1);
 221              		.loc 1 180 0
 222 0022 0120     		movs	r0, #1
 223 0024 FFF7FEFF 		bl	CyDelay
 181:RA8875.c      ****   }
 182:RA8875.c      ****   else /* (_size == RA8875_800x480) */ {
 183:RA8875.c      ****     writeReg(RA8875_PLLC1, RA8875_PLLC1_PLLDIV1 + 10);
 184:RA8875.c      ****     //writeReg(RA8875_PLLC1, 0x0b);
 185:RA8875.c      ****     CyDelay(1);
 186:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 187:RA8875.c      ****     CyDelay(1);
 188:RA8875.c      ****   }
 189:RA8875.c      **** }
 224              		.loc 1 189 0
 225 0028 0DE0     		b	.L12
 226              	.L10:
 183:RA8875.c      ****     //writeReg(RA8875_PLLC1, 0x0b);
 227              		.loc 1 183 0
 228 002a 0A21     		movs	r1, #10
 229 002c 8820     		movs	r0, #136
 230 002e FFF7FEFF 		bl	writeReg
 185:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 231              		.loc 1 185 0
 232 0032 0120     		movs	r0, #1
 233 0034 FFF7FEFF 		bl	CyDelay
 186:RA8875.c      ****     CyDelay(1);
 234              		.loc 1 186 0
 235 0038 0221     		movs	r1, #2
 236 003a 8920     		movs	r0, #137
 237 003c FFF7FEFF 		bl	writeReg
 187:RA8875.c      ****   }
 238              		.loc 1 187 0
 239 0040 0120     		movs	r0, #1
 240 0042 FFF7FEFF 		bl	CyDelay
 241              	.L12:
 242              		.loc 1 189 0
 243 0046 C046     		nop
 244 0048 BD46     		mov	sp, r7
 245              		@ sp needed
 246 004a 80BD     		pop	{r7, pc}
 247              	.L14:
 248              		.align	2
 249              	.L13:
 250 004c 00000000 		.word	_size
 251              		.cfi_endproc
 252              	.LFE37:
 253              		.size	PLLinit, .-PLLinit
 254              		.section	.text.initialize,"ax",%progbits
 255              		.align	2
 256              		.global	initialize
 257              		.code	16
 258              		.thumb_func
 259              		.type	initialize, %function
 260              	initialize:
 261              	.LFB38:
 190:RA8875.c      **** 
 191:RA8875.c      **** /**************************************************************************/
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 9


 192:RA8875.c      **** /*!
 193:RA8875.c      ****       Initialises the driver IC (clock setup, etc.)
 194:RA8875.c      **** */
 195:RA8875.c      **** /**************************************************************************/
 196:RA8875.c      **** void initialize(void) {
 262              		.loc 1 196 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 16
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266 0000 80B5     		push	{r7, lr}
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 270 0002 84B0     		sub	sp, sp, #16
 271              		.cfi_def_cfa_offset 24
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 197:RA8875.c      ****   PLLinit();
 274              		.loc 1 197 0
 275 0006 FFF7FEFF 		bl	PLLinit
 198:RA8875.c      ****   writeReg(RA8875_SYSR, RA8875_SYSR_16BPP | RA8875_SYSR_MCU8);
 276              		.loc 1 198 0
 277 000a 0C21     		movs	r1, #12
 278 000c 1020     		movs	r0, #16
 279 000e FFF7FEFF 		bl	writeReg
 199:RA8875.c      **** 
 200:RA8875.c      ****   /* Timing values */
 201:RA8875.c      ****   uint8_t pixclk;
 202:RA8875.c      ****   uint8_t hsync_start;
 203:RA8875.c      ****   uint8_t hsync_pw;
 204:RA8875.c      ****   uint8_t hsync_finetune;
 205:RA8875.c      ****   uint8_t hsync_nondisp;
 206:RA8875.c      ****   uint8_t vsync_pw; 
 207:RA8875.c      ****   uint16_t vsync_nondisp;
 208:RA8875.c      ****   uint16_t vsync_start;
 209:RA8875.c      **** 
 210:RA8875.c      ****   /* Set the correct values for the display being used */  
 211:RA8875.c      ****   if (_size == RA8875_480x272) 
 280              		.loc 1 211 0
 281 0012 874B     		ldr	r3, .L19
 282 0014 1B78     		ldrb	r3, [r3]
 283 0016 002B     		cmp	r3, #0
 284 0018 1FD1     		bne	.L16
 212:RA8875.c      ****   {
 213:RA8875.c      ****     pixclk          = RA8875_PCSR_PDATL | RA8875_PCSR_4CLK;
 285              		.loc 1 213 0
 286 001a 0F23     		movs	r3, #15
 287 001c FB18     		adds	r3, r7, r3
 288 001e 8222     		movs	r2, #130
 289 0020 1A70     		strb	r2, [r3]
 214:RA8875.c      ****     hsync_nondisp   = 10;
 290              		.loc 1 214 0
 291 0022 0B23     		movs	r3, #11
 292 0024 FB18     		adds	r3, r7, r3
 293 0026 0A22     		movs	r2, #10
 294 0028 1A70     		strb	r2, [r3]
 215:RA8875.c      ****     hsync_start     = 8;
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 10


 295              		.loc 1 215 0
 296 002a 0E23     		movs	r3, #14
 297 002c FB18     		adds	r3, r7, r3
 298 002e 0822     		movs	r2, #8
 299 0030 1A70     		strb	r2, [r3]
 216:RA8875.c      ****     hsync_pw        = 48;
 300              		.loc 1 216 0
 301 0032 0D23     		movs	r3, #13
 302 0034 FB18     		adds	r3, r7, r3
 303 0036 3022     		movs	r2, #48
 304 0038 1A70     		strb	r2, [r3]
 217:RA8875.c      ****     hsync_finetune  = 0;
 305              		.loc 1 217 0
 306 003a 0C23     		movs	r3, #12
 307 003c FB18     		adds	r3, r7, r3
 308 003e 0022     		movs	r2, #0
 309 0040 1A70     		strb	r2, [r3]
 218:RA8875.c      ****     vsync_nondisp   = 3;
 310              		.loc 1 218 0
 311 0042 0823     		movs	r3, #8
 312 0044 FB18     		adds	r3, r7, r3
 313 0046 0322     		movs	r2, #3
 314 0048 1A80     		strh	r2, [r3]
 219:RA8875.c      ****     vsync_start     = 8;
 315              		.loc 1 219 0
 316 004a BB1D     		adds	r3, r7, #6
 317 004c 0822     		movs	r2, #8
 318 004e 1A80     		strh	r2, [r3]
 220:RA8875.c      ****     vsync_pw        = 10;
 319              		.loc 1 220 0
 320 0050 0A23     		movs	r3, #10
 321 0052 FB18     		adds	r3, r7, r3
 322 0054 0A22     		movs	r2, #10
 323 0056 1A70     		strb	r2, [r3]
 324 0058 1EE0     		b	.L17
 325              	.L16:
 221:RA8875.c      ****   } 
 222:RA8875.c      ****   else // (_size == RA8875_800x480)
 223:RA8875.c      ****   {
 224:RA8875.c      ****     pixclk          = RA8875_PCSR_PDATL | RA8875_PCSR_2CLK;
 326              		.loc 1 224 0
 327 005a 0F23     		movs	r3, #15
 328 005c FB18     		adds	r3, r7, r3
 329 005e 8122     		movs	r2, #129
 330 0060 1A70     		strb	r2, [r3]
 225:RA8875.c      ****     hsync_nondisp   = 26;
 331              		.loc 1 225 0
 332 0062 0B23     		movs	r3, #11
 333 0064 FB18     		adds	r3, r7, r3
 334 0066 1A22     		movs	r2, #26
 335 0068 1A70     		strb	r2, [r3]
 226:RA8875.c      ****     hsync_start     = 32;
 336              		.loc 1 226 0
 337 006a 0E23     		movs	r3, #14
 338 006c FB18     		adds	r3, r7, r3
 339 006e 2022     		movs	r2, #32
 340 0070 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 11


 227:RA8875.c      ****     hsync_pw        = 96;
 341              		.loc 1 227 0
 342 0072 0D23     		movs	r3, #13
 343 0074 FB18     		adds	r3, r7, r3
 344 0076 6022     		movs	r2, #96
 345 0078 1A70     		strb	r2, [r3]
 228:RA8875.c      ****     hsync_finetune  = 0;
 346              		.loc 1 228 0
 347 007a 0C23     		movs	r3, #12
 348 007c FB18     		adds	r3, r7, r3
 349 007e 0022     		movs	r2, #0
 350 0080 1A70     		strb	r2, [r3]
 229:RA8875.c      ****     vsync_nondisp   = 32;
 351              		.loc 1 229 0
 352 0082 0823     		movs	r3, #8
 353 0084 FB18     		adds	r3, r7, r3
 354 0086 2022     		movs	r2, #32
 355 0088 1A80     		strh	r2, [r3]
 230:RA8875.c      ****     vsync_start     = 23;
 356              		.loc 1 230 0
 357 008a BB1D     		adds	r3, r7, #6
 358 008c 1722     		movs	r2, #23
 359 008e 1A80     		strh	r2, [r3]
 231:RA8875.c      ****     vsync_pw        = 2;
 360              		.loc 1 231 0
 361 0090 0A23     		movs	r3, #10
 362 0092 FB18     		adds	r3, r7, r3
 363 0094 0222     		movs	r2, #2
 364 0096 1A70     		strb	r2, [r3]
 365              	.L17:
 232:RA8875.c      ****   }
 233:RA8875.c      **** 
 234:RA8875.c      ****   writeReg(RA8875_PCSR, pixclk);
 366              		.loc 1 234 0
 367 0098 0F23     		movs	r3, #15
 368 009a FB18     		adds	r3, r7, r3
 369 009c 1B78     		ldrb	r3, [r3]
 370 009e 1900     		movs	r1, r3
 371 00a0 0420     		movs	r0, #4
 372 00a2 FFF7FEFF 		bl	writeReg
 235:RA8875.c      ****   CyDelay(1);
 373              		.loc 1 235 0
 374 00a6 0120     		movs	r0, #1
 375 00a8 FFF7FEFF 		bl	CyDelay
 236:RA8875.c      ****   
 237:RA8875.c      ****   /* Horizontal settings registers */
 238:RA8875.c      ****   writeReg(RA8875_HDWR, (_width / 8) - 1);                          // H width: (HDWR + 1) * 8 = 48
 376              		.loc 1 238 0
 377 00ac 614B     		ldr	r3, .L19+4
 378 00ae 1B88     		ldrh	r3, [r3]
 379 00b0 DB08     		lsrs	r3, r3, #3
 380 00b2 9BB2     		uxth	r3, r3
 381 00b4 DBB2     		uxtb	r3, r3
 382 00b6 013B     		subs	r3, r3, #1
 383 00b8 DBB2     		uxtb	r3, r3
 384 00ba 1900     		movs	r1, r3
 385 00bc 1420     		movs	r0, #20
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 12


 386 00be FFF7FEFF 		bl	writeReg
 239:RA8875.c      ****   writeReg(RA8875_HNDFTR, RA8875_HNDFTR_DE_HIGH + hsync_finetune);
 387              		.loc 1 239 0
 388 00c2 0C23     		movs	r3, #12
 389 00c4 FB18     		adds	r3, r7, r3
 390 00c6 1B78     		ldrb	r3, [r3]
 391 00c8 1900     		movs	r1, r3
 392 00ca 1520     		movs	r0, #21
 393 00cc FFF7FEFF 		bl	writeReg
 240:RA8875.c      ****   writeReg(RA8875_HNDR, (hsync_nondisp - hsync_finetune - 2)/8);    // H non-display: HNDR * 8 + HN
 394              		.loc 1 240 0
 395 00d0 0B23     		movs	r3, #11
 396 00d2 FB18     		adds	r3, r7, r3
 397 00d4 1A78     		ldrb	r2, [r3]
 398 00d6 0C23     		movs	r3, #12
 399 00d8 FB18     		adds	r3, r7, r3
 400 00da 1B78     		ldrb	r3, [r3]
 401 00dc D31A     		subs	r3, r2, r3
 402 00de 023B     		subs	r3, r3, #2
 403 00e0 002B     		cmp	r3, #0
 404 00e2 00DA     		bge	.L18
 405 00e4 0733     		adds	r3, r3, #7
 406              	.L18:
 407 00e6 DB10     		asrs	r3, r3, #3
 408 00e8 DBB2     		uxtb	r3, r3
 409 00ea 1900     		movs	r1, r3
 410 00ec 1620     		movs	r0, #22
 411 00ee FFF7FEFF 		bl	writeReg
 241:RA8875.c      ****   writeReg(RA8875_HSTR, hsync_start/8 - 1);                         // Hsync start: (HSTR + 1)*8 
 412              		.loc 1 241 0
 413 00f2 0E23     		movs	r3, #14
 414 00f4 FB18     		adds	r3, r7, r3
 415 00f6 1B78     		ldrb	r3, [r3]
 416 00f8 DB08     		lsrs	r3, r3, #3
 417 00fa DBB2     		uxtb	r3, r3
 418 00fc 013B     		subs	r3, r3, #1
 419 00fe DBB2     		uxtb	r3, r3
 420 0100 1900     		movs	r1, r3
 421 0102 1720     		movs	r0, #23
 422 0104 FFF7FEFF 		bl	writeReg
 242:RA8875.c      ****   writeReg(RA8875_HPWR, RA8875_HPWR_LOW + (hsync_pw/8 - 1));        // HSync pulse width = (HPWR+1)
 423              		.loc 1 242 0
 424 0108 0D23     		movs	r3, #13
 425 010a FB18     		adds	r3, r7, r3
 426 010c 1B78     		ldrb	r3, [r3]
 427 010e DB08     		lsrs	r3, r3, #3
 428 0110 DBB2     		uxtb	r3, r3
 429 0112 013B     		subs	r3, r3, #1
 430 0114 DBB2     		uxtb	r3, r3
 431 0116 1900     		movs	r1, r3
 432 0118 1820     		movs	r0, #24
 433 011a FFF7FEFF 		bl	writeReg
 243:RA8875.c      ****   
 244:RA8875.c      ****   /* Vertical settings registers */
 245:RA8875.c      ****   writeReg(RA8875_VDHR0, (uint16_t)(_height - 1) & 0xFF);
 434              		.loc 1 245 0
 435 011e 464B     		ldr	r3, .L19+8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 13


 436 0120 1B88     		ldrh	r3, [r3]
 437 0122 DBB2     		uxtb	r3, r3
 438 0124 013B     		subs	r3, r3, #1
 439 0126 DBB2     		uxtb	r3, r3
 440 0128 1900     		movs	r1, r3
 441 012a 1920     		movs	r0, #25
 442 012c FFF7FEFF 		bl	writeReg
 246:RA8875.c      ****   writeReg(RA8875_VDHR1, (uint16_t)(_height - 1) >> 8);
 443              		.loc 1 246 0
 444 0130 414B     		ldr	r3, .L19+8
 445 0132 1B88     		ldrh	r3, [r3]
 446 0134 013B     		subs	r3, r3, #1
 447 0136 9BB2     		uxth	r3, r3
 448 0138 1B0A     		lsrs	r3, r3, #8
 449 013a 9BB2     		uxth	r3, r3
 450 013c DBB2     		uxtb	r3, r3
 451 013e 1900     		movs	r1, r3
 452 0140 1A20     		movs	r0, #26
 453 0142 FFF7FEFF 		bl	writeReg
 247:RA8875.c      ****   writeReg(RA8875_VNDR0, vsync_nondisp-1);                          // V non-display period = VNDR 
 454              		.loc 1 247 0
 455 0146 0823     		movs	r3, #8
 456 0148 FB18     		adds	r3, r7, r3
 457 014a 1B88     		ldrh	r3, [r3]
 458 014c DBB2     		uxtb	r3, r3
 459 014e 013B     		subs	r3, r3, #1
 460 0150 DBB2     		uxtb	r3, r3
 461 0152 1900     		movs	r1, r3
 462 0154 1B20     		movs	r0, #27
 463 0156 FFF7FEFF 		bl	writeReg
 248:RA8875.c      ****   //writeReg(RA8875_VNDR0, 0x20);
 249:RA8875.c      ****   writeReg(RA8875_VNDR1, vsync_nondisp >> 8);
 464              		.loc 1 249 0
 465 015a 0823     		movs	r3, #8
 466 015c FB18     		adds	r3, r7, r3
 467 015e 1B88     		ldrh	r3, [r3]
 468 0160 1B0A     		lsrs	r3, r3, #8
 469 0162 9BB2     		uxth	r3, r3
 470 0164 DBB2     		uxtb	r3, r3
 471 0166 1900     		movs	r1, r3
 472 0168 1C20     		movs	r0, #28
 473 016a FFF7FEFF 		bl	writeReg
 250:RA8875.c      ****   writeReg(RA8875_VSTR0, vsync_start-1);                            // Vsync start position = VSTR 
 474              		.loc 1 250 0
 475 016e BB1D     		adds	r3, r7, #6
 476 0170 1B88     		ldrh	r3, [r3]
 477 0172 DBB2     		uxtb	r3, r3
 478 0174 013B     		subs	r3, r3, #1
 479 0176 DBB2     		uxtb	r3, r3
 480 0178 1900     		movs	r1, r3
 481 017a 1D20     		movs	r0, #29
 482 017c FFF7FEFF 		bl	writeReg
 251:RA8875.c      ****   writeReg(RA8875_VSTR1, vsync_start >> 8);
 483              		.loc 1 251 0
 484 0180 BB1D     		adds	r3, r7, #6
 485 0182 1B88     		ldrh	r3, [r3]
 486 0184 1B0A     		lsrs	r3, r3, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 14


 487 0186 9BB2     		uxth	r3, r3
 488 0188 DBB2     		uxtb	r3, r3
 489 018a 1900     		movs	r1, r3
 490 018c 1E20     		movs	r0, #30
 491 018e FFF7FEFF 		bl	writeReg
 252:RA8875.c      ****   writeReg(RA8875_VPWR, RA8875_VPWR_LOW + vsync_pw - 1);            // Vsync pulse width = VPWR + 1
 492              		.loc 1 252 0
 493 0192 0A23     		movs	r3, #10
 494 0194 FB18     		adds	r3, r7, r3
 495 0196 1B78     		ldrb	r3, [r3]
 496 0198 013B     		subs	r3, r3, #1
 497 019a DBB2     		uxtb	r3, r3
 498 019c 1900     		movs	r1, r3
 499 019e 1F20     		movs	r0, #31
 500 01a0 FFF7FEFF 		bl	writeReg
 253:RA8875.c      ****   
 254:RA8875.c      ****   /* Set active window X */
 255:RA8875.c      ****   writeReg(RA8875_HSAW0, 0);                                        // horizontal start point
 501              		.loc 1 255 0
 502 01a4 0021     		movs	r1, #0
 503 01a6 3020     		movs	r0, #48
 504 01a8 FFF7FEFF 		bl	writeReg
 256:RA8875.c      ****   writeReg(RA8875_HSAW1, 0);
 505              		.loc 1 256 0
 506 01ac 0021     		movs	r1, #0
 507 01ae 3120     		movs	r0, #49
 508 01b0 FFF7FEFF 		bl	writeReg
 257:RA8875.c      ****   writeReg(RA8875_HEAW0, (uint16_t)(_width - 1) & 0xFF);            // horizontal end point
 509              		.loc 1 257 0
 510 01b4 1F4B     		ldr	r3, .L19+4
 511 01b6 1B88     		ldrh	r3, [r3]
 512 01b8 DBB2     		uxtb	r3, r3
 513 01ba 013B     		subs	r3, r3, #1
 514 01bc DBB2     		uxtb	r3, r3
 515 01be 1900     		movs	r1, r3
 516 01c0 3420     		movs	r0, #52
 517 01c2 FFF7FEFF 		bl	writeReg
 258:RA8875.c      ****   writeReg(RA8875_HEAW1, (uint16_t)(_width - 1) >> 8);
 518              		.loc 1 258 0
 519 01c6 1B4B     		ldr	r3, .L19+4
 520 01c8 1B88     		ldrh	r3, [r3]
 521 01ca 013B     		subs	r3, r3, #1
 522 01cc 9BB2     		uxth	r3, r3
 523 01ce 1B0A     		lsrs	r3, r3, #8
 524 01d0 9BB2     		uxth	r3, r3
 525 01d2 DBB2     		uxtb	r3, r3
 526 01d4 1900     		movs	r1, r3
 527 01d6 3520     		movs	r0, #53
 528 01d8 FFF7FEFF 		bl	writeReg
 259:RA8875.c      ****   
 260:RA8875.c      ****   /* Set active window Y */
 261:RA8875.c      ****   writeReg(RA8875_VSAW0, 0);                                        // vertical start point
 529              		.loc 1 261 0
 530 01dc 0021     		movs	r1, #0
 531 01de 3220     		movs	r0, #50
 532 01e0 FFF7FEFF 		bl	writeReg
 262:RA8875.c      ****   writeReg(RA8875_VSAW1, 0);  
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 15


 533              		.loc 1 262 0
 534 01e4 0021     		movs	r1, #0
 535 01e6 3320     		movs	r0, #51
 536 01e8 FFF7FEFF 		bl	writeReg
 263:RA8875.c      ****   writeReg(RA8875_VEAW0, (uint16_t)(_height - 1) & 0xFF);           // horizontal end point
 537              		.loc 1 263 0
 538 01ec 124B     		ldr	r3, .L19+8
 539 01ee 1B88     		ldrh	r3, [r3]
 540 01f0 DBB2     		uxtb	r3, r3
 541 01f2 013B     		subs	r3, r3, #1
 542 01f4 DBB2     		uxtb	r3, r3
 543 01f6 1900     		movs	r1, r3
 544 01f8 3620     		movs	r0, #54
 545 01fa FFF7FEFF 		bl	writeReg
 264:RA8875.c      ****   writeReg(RA8875_VEAW1, (uint16_t)(_height - 1) >> 8);
 546              		.loc 1 264 0
 547 01fe 0E4B     		ldr	r3, .L19+8
 548 0200 1B88     		ldrh	r3, [r3]
 549 0202 013B     		subs	r3, r3, #1
 550 0204 9BB2     		uxth	r3, r3
 551 0206 1B0A     		lsrs	r3, r3, #8
 552 0208 9BB2     		uxth	r3, r3
 553 020a DBB2     		uxtb	r3, r3
 554 020c 1900     		movs	r1, r3
 555 020e 3720     		movs	r0, #55
 556 0210 FFF7FEFF 		bl	writeReg
 265:RA8875.c      ****   
 266:RA8875.c      ****   /* ToDo: Setup touch panel? */
 267:RA8875.c      ****   
 268:RA8875.c      ****   /* Clear the entire window */
 269:RA8875.c      ****   writeReg(RA8875_MCLR, RA8875_MCLR_START | RA8875_MCLR_FULL);
 557              		.loc 1 269 0
 558 0214 8021     		movs	r1, #128
 559 0216 8E20     		movs	r0, #142
 560 0218 FFF7FEFF 		bl	writeReg
 270:RA8875.c      ****   CyDelay(500); 
 561              		.loc 1 270 0
 562 021c FA23     		movs	r3, #250
 563 021e 5B00     		lsls	r3, r3, #1
 564 0220 1800     		movs	r0, r3
 565 0222 FFF7FEFF 		bl	CyDelay
 271:RA8875.c      **** }
 566              		.loc 1 271 0
 567 0226 C046     		nop
 568 0228 BD46     		mov	sp, r7
 569 022a 04B0     		add	sp, sp, #16
 570              		@ sp needed
 571 022c 80BD     		pop	{r7, pc}
 572              	.L20:
 573 022e C046     		.align	2
 574              	.L19:
 575 0230 00000000 		.word	_size
 576 0234 00000000 		.word	_width
 577 0238 00000000 		.word	_height
 578              		.cfi_endproc
 579              	.LFE38:
 580              		.size	initialize, .-initialize
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 16


 581              		.section	.text.width,"ax",%progbits
 582              		.align	2
 583              		.global	width
 584              		.code	16
 585              		.thumb_func
 586              		.type	width, %function
 587              	width:
 588              	.LFB39:
 272:RA8875.c      **** 
 273:RA8875.c      **** /**************************************************************************/
 274:RA8875.c      **** /*!
 275:RA8875.c      ****       Returns the display width in pixels
 276:RA8875.c      ****       
 277:RA8875.c      ****       @returns  The 1-based display width in pixels
 278:RA8875.c      **** */
 279:RA8875.c      **** /**************************************************************************/
 280:RA8875.c      **** uint16_t width(void) { return _width; }
 589              		.loc 1 280 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593 0000 80B5     		push	{r7, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599              		.loc 1 280 0
 600 0004 024B     		ldr	r3, .L23
 601 0006 1B88     		ldrh	r3, [r3]
 602 0008 1800     		movs	r0, r3
 603 000a BD46     		mov	sp, r7
 604              		@ sp needed
 605 000c 80BD     		pop	{r7, pc}
 606              	.L24:
 607 000e C046     		.align	2
 608              	.L23:
 609 0010 00000000 		.word	_width
 610              		.cfi_endproc
 611              	.LFE39:
 612              		.size	width, .-width
 613              		.section	.text.height,"ax",%progbits
 614              		.align	2
 615              		.global	height
 616              		.code	16
 617              		.thumb_func
 618              		.type	height, %function
 619              	height:
 620              	.LFB40:
 281:RA8875.c      **** 
 282:RA8875.c      **** /**************************************************************************/
 283:RA8875.c      **** /*!
 284:RA8875.c      ****       Returns the display height in pixels
 285:RA8875.c      **** 
 286:RA8875.c      ****       @returns  The 1-based display height in pixels
 287:RA8875.c      **** */
 288:RA8875.c      **** /**************************************************************************/
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 17


 289:RA8875.c      **** uint16_t height(void) { return _height; }
 621              		.loc 1 289 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 631              		.loc 1 289 0
 632 0004 024B     		ldr	r3, .L27
 633 0006 1B88     		ldrh	r3, [r3]
 634 0008 1800     		movs	r0, r3
 635 000a BD46     		mov	sp, r7
 636              		@ sp needed
 637 000c 80BD     		pop	{r7, pc}
 638              	.L28:
 639 000e C046     		.align	2
 640              	.L27:
 641 0010 00000000 		.word	_height
 642              		.cfi_endproc
 643              	.LFE40:
 644              		.size	height, .-height
 645              		.section	.text.textMode,"ax",%progbits
 646              		.align	2
 647              		.global	textMode
 648              		.code	16
 649              		.thumb_func
 650              		.type	textMode, %function
 651              	textMode:
 652              	.LFB41:
 290:RA8875.c      **** 
 291:RA8875.c      **** /************************* Text Mode ***********************************/
 292:RA8875.c      **** 
 293:RA8875.c      **** /**************************************************************************/
 294:RA8875.c      **** /*!
 295:RA8875.c      ****       Sets the display in text mode (as opposed to graphics mode)
 296:RA8875.c      **** */
 297:RA8875.c      **** /**************************************************************************/
 298:RA8875.c      **** void textMode(void) 
 299:RA8875.c      **** {
 653              		.loc 1 299 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 8
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657 0000 90B5     		push	{r4, r7, lr}
 658              		.cfi_def_cfa_offset 12
 659              		.cfi_offset 4, -12
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 0002 83B0     		sub	sp, sp, #12
 663              		.cfi_def_cfa_offset 24
 664 0004 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 300:RA8875.c      ****   /* Set text mode */
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 18


 301:RA8875.c      ****   writeCommand(RA8875_MWCR0);
 666              		.loc 1 301 0
 667 0006 4020     		movs	r0, #64
 668 0008 FFF7FEFF 		bl	writeCommand
 302:RA8875.c      ****   uint8_t temp = readData();
 669              		.loc 1 302 0
 670 000c FC1D     		adds	r4, r7, #7
 671 000e FFF7FEFF 		bl	readData
 672 0012 0300     		movs	r3, r0
 673 0014 2370     		strb	r3, [r4]
 303:RA8875.c      ****   //temp |= RA8875_MWCR0_TXTMODE; // Set bit 7
 304:RA8875.c      ****     temp = 0x80;
 674              		.loc 1 304 0
 675 0016 FB1D     		adds	r3, r7, #7
 676 0018 8022     		movs	r2, #128
 677 001a 1A70     		strb	r2, [r3]
 305:RA8875.c      ****   writeData(temp);
 678              		.loc 1 305 0
 679 001c FB1D     		adds	r3, r7, #7
 680 001e 1B78     		ldrb	r3, [r3]
 681 0020 1800     		movs	r0, r3
 682 0022 FFF7FEFF 		bl	writeData
 306:RA8875.c      ****   
 307:RA8875.c      ****   /* Select the internal (ROM) font */
 308:RA8875.c      ****   writeCommand(0x21);
 683              		.loc 1 308 0
 684 0026 2120     		movs	r0, #33
 685 0028 FFF7FEFF 		bl	writeCommand
 309:RA8875.c      ****   temp = readData();
 686              		.loc 1 309 0
 687 002c FC1D     		adds	r4, r7, #7
 688 002e FFF7FEFF 		bl	readData
 689 0032 0300     		movs	r3, r0
 690 0034 2370     		strb	r3, [r4]
 310:RA8875.c      ****   temp &= ~((1<<7) | (1<<5)); // Clear bits 7 and 5
 691              		.loc 1 310 0
 692 0036 FB1D     		adds	r3, r7, #7
 693 0038 FA1D     		adds	r2, r7, #7
 694 003a 1278     		ldrb	r2, [r2]
 695 003c 5F21     		movs	r1, #95
 696 003e 0A40     		ands	r2, r1
 697 0040 1A70     		strb	r2, [r3]
 311:RA8875.c      ****   writeData(temp);
 698              		.loc 1 311 0
 699 0042 FB1D     		adds	r3, r7, #7
 700 0044 1B78     		ldrb	r3, [r3]
 701 0046 1800     		movs	r0, r3
 702 0048 FFF7FEFF 		bl	writeData
 312:RA8875.c      **** }
 703              		.loc 1 312 0
 704 004c C046     		nop
 705 004e BD46     		mov	sp, r7
 706 0050 03B0     		add	sp, sp, #12
 707              		@ sp needed
 708 0052 90BD     		pop	{r4, r7, pc}
 709              		.cfi_endproc
 710              	.LFE41:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 19


 711              		.size	textMode, .-textMode
 712              		.section	.text.textSetCursor,"ax",%progbits
 713              		.align	2
 714              		.global	textSetCursor
 715              		.code	16
 716              		.thumb_func
 717              		.type	textSetCursor, %function
 718              	textSetCursor:
 719              	.LFB42:
 313:RA8875.c      **** 
 314:RA8875.c      **** /**************************************************************************/
 315:RA8875.c      **** /*!
 316:RA8875.c      ****       Sets the display in text mode (as opposed to graphics mode)
 317:RA8875.c      ****       
 318:RA8875.c      ****       @args x[in] The x position of the cursor (in pixels, 0..1023)
 319:RA8875.c      ****       @args y[in] The y position of the cursor (in pixels, 0..511)
 320:RA8875.c      **** */
 321:RA8875.c      **** /**************************************************************************/
 322:RA8875.c      **** void textSetCursor(uint16_t x, uint16_t y) 
 323:RA8875.c      **** {
 720              		.loc 1 323 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 8
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724 0000 80B5     		push	{r7, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 82B0     		sub	sp, sp, #8
 729              		.cfi_def_cfa_offset 16
 730 0004 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 732 0006 0200     		movs	r2, r0
 733 0008 BB1D     		adds	r3, r7, #6
 734 000a 1A80     		strh	r2, [r3]
 735 000c 3B1D     		adds	r3, r7, #4
 736 000e 0A1C     		adds	r2, r1, #0
 737 0010 1A80     		strh	r2, [r3]
 324:RA8875.c      ****   /* Set cursor location */
 325:RA8875.c      ****   writeCommand(0x2A);
 738              		.loc 1 325 0
 739 0012 2A20     		movs	r0, #42
 740 0014 FFF7FEFF 		bl	writeCommand
 326:RA8875.c      ****   writeData(x & 0xFF);
 741              		.loc 1 326 0
 742 0018 BB1D     		adds	r3, r7, #6
 743 001a 1B88     		ldrh	r3, [r3]
 744 001c DBB2     		uxtb	r3, r3
 745 001e 1800     		movs	r0, r3
 746 0020 FFF7FEFF 		bl	writeData
 327:RA8875.c      ****   writeCommand(0x2B);
 747              		.loc 1 327 0
 748 0024 2B20     		movs	r0, #43
 749 0026 FFF7FEFF 		bl	writeCommand
 328:RA8875.c      ****   writeData(x >> 8);
 750              		.loc 1 328 0
 751 002a BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 20


 752 002c 1B88     		ldrh	r3, [r3]
 753 002e 1B0A     		lsrs	r3, r3, #8
 754 0030 9BB2     		uxth	r3, r3
 755 0032 DBB2     		uxtb	r3, r3
 756 0034 1800     		movs	r0, r3
 757 0036 FFF7FEFF 		bl	writeData
 329:RA8875.c      ****   writeCommand(0x2C);
 758              		.loc 1 329 0
 759 003a 2C20     		movs	r0, #44
 760 003c FFF7FEFF 		bl	writeCommand
 330:RA8875.c      ****   writeData(y & 0xFF);
 761              		.loc 1 330 0
 762 0040 3B1D     		adds	r3, r7, #4
 763 0042 1B88     		ldrh	r3, [r3]
 764 0044 DBB2     		uxtb	r3, r3
 765 0046 1800     		movs	r0, r3
 766 0048 FFF7FEFF 		bl	writeData
 331:RA8875.c      ****   writeCommand(0x2D);
 767              		.loc 1 331 0
 768 004c 2D20     		movs	r0, #45
 769 004e FFF7FEFF 		bl	writeCommand
 332:RA8875.c      ****   writeData(y >> 8);
 770              		.loc 1 332 0
 771 0052 3B1D     		adds	r3, r7, #4
 772 0054 1B88     		ldrh	r3, [r3]
 773 0056 1B0A     		lsrs	r3, r3, #8
 774 0058 9BB2     		uxth	r3, r3
 775 005a DBB2     		uxtb	r3, r3
 776 005c 1800     		movs	r0, r3
 777 005e FFF7FEFF 		bl	writeData
 333:RA8875.c      **** }
 778              		.loc 1 333 0
 779 0062 C046     		nop
 780 0064 BD46     		mov	sp, r7
 781 0066 02B0     		add	sp, sp, #8
 782              		@ sp needed
 783 0068 80BD     		pop	{r7, pc}
 784              		.cfi_endproc
 785              	.LFE42:
 786              		.size	textSetCursor, .-textSetCursor
 787 006a C046     		.section	.text.textColor,"ax",%progbits
 788              		.align	2
 789              		.global	textColor
 790              		.code	16
 791              		.thumb_func
 792              		.type	textColor, %function
 793              	textColor:
 794              	.LFB43:
 334:RA8875.c      **** 
 335:RA8875.c      **** /**************************************************************************/
 336:RA8875.c      **** /*!
 337:RA8875.c      ****       Sets the fore and background color when rendering text
 338:RA8875.c      ****       
 339:RA8875.c      ****       @args foreColor[in] The RGB565 color to use when rendering the text
 340:RA8875.c      ****       @args bgColor[in]   The RGB565 colot to use for the background
 341:RA8875.c      **** */
 342:RA8875.c      **** /**************************************************************************/
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 21


 343:RA8875.c      **** void textColor(uint16_t foreColor, uint16_t bgColor)
 344:RA8875.c      **** {
 795              		.loc 1 344 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 16
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799 0000 90B5     		push	{r4, r7, lr}
 800              		.cfi_def_cfa_offset 12
 801              		.cfi_offset 4, -12
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 804 0002 85B0     		sub	sp, sp, #20
 805              		.cfi_def_cfa_offset 32
 806 0004 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 808 0006 0200     		movs	r2, r0
 809 0008 BB1D     		adds	r3, r7, #6
 810 000a 1A80     		strh	r2, [r3]
 811 000c 3B1D     		adds	r3, r7, #4
 812 000e 0A1C     		adds	r2, r1, #0
 813 0010 1A80     		strh	r2, [r3]
 345:RA8875.c      ****   /* Set Fore Color */
 346:RA8875.c      ****   writeCommand(0x63);
 814              		.loc 1 346 0
 815 0012 6320     		movs	r0, #99
 816 0014 FFF7FEFF 		bl	writeCommand
 347:RA8875.c      ****   writeData((foreColor & 0xf800) >> 11);
 817              		.loc 1 347 0
 818 0018 BB1D     		adds	r3, r7, #6
 819 001a 1B88     		ldrh	r3, [r3]
 820 001c DB0A     		lsrs	r3, r3, #11
 821 001e 9BB2     		uxth	r3, r3
 822 0020 DBB2     		uxtb	r3, r3
 823 0022 1800     		movs	r0, r3
 824 0024 FFF7FEFF 		bl	writeData
 348:RA8875.c      ****   writeCommand(0x64);
 825              		.loc 1 348 0
 826 0028 6420     		movs	r0, #100
 827 002a FFF7FEFF 		bl	writeCommand
 349:RA8875.c      ****   writeData((foreColor & 0x07e0) >> 5);
 828              		.loc 1 349 0
 829 002e BB1D     		adds	r3, r7, #6
 830 0030 1B88     		ldrh	r3, [r3]
 831 0032 5B11     		asrs	r3, r3, #5
 832 0034 DBB2     		uxtb	r3, r3
 833 0036 3F22     		movs	r2, #63
 834 0038 1340     		ands	r3, r2
 835 003a DBB2     		uxtb	r3, r3
 836 003c 1800     		movs	r0, r3
 837 003e FFF7FEFF 		bl	writeData
 350:RA8875.c      ****   writeCommand(0x65);
 838              		.loc 1 350 0
 839 0042 6520     		movs	r0, #101
 840 0044 FFF7FEFF 		bl	writeCommand
 351:RA8875.c      ****   writeData((foreColor & 0x001f));
 841              		.loc 1 351 0
 842 0048 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 22


 843 004a 1B88     		ldrh	r3, [r3]
 844 004c DBB2     		uxtb	r3, r3
 845 004e 1F22     		movs	r2, #31
 846 0050 1340     		ands	r3, r2
 847 0052 DBB2     		uxtb	r3, r3
 848 0054 1800     		movs	r0, r3
 849 0056 FFF7FEFF 		bl	writeData
 352:RA8875.c      ****   
 353:RA8875.c      ****   /* Set Background Color */
 354:RA8875.c      ****   writeCommand(0x60);
 850              		.loc 1 354 0
 851 005a 6020     		movs	r0, #96
 852 005c FFF7FEFF 		bl	writeCommand
 355:RA8875.c      ****   writeData((bgColor & 0xf800) >> 11);
 853              		.loc 1 355 0
 854 0060 3B1D     		adds	r3, r7, #4
 855 0062 1B88     		ldrh	r3, [r3]
 856 0064 DB0A     		lsrs	r3, r3, #11
 857 0066 9BB2     		uxth	r3, r3
 858 0068 DBB2     		uxtb	r3, r3
 859 006a 1800     		movs	r0, r3
 860 006c FFF7FEFF 		bl	writeData
 356:RA8875.c      ****   writeCommand(0x61);
 861              		.loc 1 356 0
 862 0070 6120     		movs	r0, #97
 863 0072 FFF7FEFF 		bl	writeCommand
 357:RA8875.c      ****   writeData((bgColor & 0x07e0) >> 5);
 864              		.loc 1 357 0
 865 0076 3B1D     		adds	r3, r7, #4
 866 0078 1B88     		ldrh	r3, [r3]
 867 007a 5B11     		asrs	r3, r3, #5
 868 007c DBB2     		uxtb	r3, r3
 869 007e 3F22     		movs	r2, #63
 870 0080 1340     		ands	r3, r2
 871 0082 DBB2     		uxtb	r3, r3
 872 0084 1800     		movs	r0, r3
 873 0086 FFF7FEFF 		bl	writeData
 358:RA8875.c      ****   writeCommand(0x62);
 874              		.loc 1 358 0
 875 008a 6220     		movs	r0, #98
 876 008c FFF7FEFF 		bl	writeCommand
 359:RA8875.c      ****   writeData((bgColor & 0x001f));
 877              		.loc 1 359 0
 878 0090 3B1D     		adds	r3, r7, #4
 879 0092 1B88     		ldrh	r3, [r3]
 880 0094 DBB2     		uxtb	r3, r3
 881 0096 1F22     		movs	r2, #31
 882 0098 1340     		ands	r3, r2
 883 009a DBB2     		uxtb	r3, r3
 884 009c 1800     		movs	r0, r3
 885 009e FFF7FEFF 		bl	writeData
 360:RA8875.c      ****   
 361:RA8875.c      ****   /* Clear transparency flag */
 362:RA8875.c      ****   writeCommand(0x22);
 886              		.loc 1 362 0
 887 00a2 2220     		movs	r0, #34
 888 00a4 FFF7FEFF 		bl	writeCommand
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 23


 363:RA8875.c      ****   uint8_t temp = readData();
 889              		.loc 1 363 0
 890 00a8 0F23     		movs	r3, #15
 891 00aa FC18     		adds	r4, r7, r3
 892 00ac FFF7FEFF 		bl	readData
 893 00b0 0300     		movs	r3, r0
 894 00b2 2370     		strb	r3, [r4]
 364:RA8875.c      ****   temp &= ~(1<<6); // Clear bit 6
 895              		.loc 1 364 0
 896 00b4 0F23     		movs	r3, #15
 897 00b6 FB18     		adds	r3, r7, r3
 898 00b8 0F22     		movs	r2, #15
 899 00ba BA18     		adds	r2, r7, r2
 900 00bc 1278     		ldrb	r2, [r2]
 901 00be 4021     		movs	r1, #64
 902 00c0 8A43     		bics	r2, r1
 903 00c2 1A70     		strb	r2, [r3]
 365:RA8875.c      ****   writeData(temp);
 904              		.loc 1 365 0
 905 00c4 0F23     		movs	r3, #15
 906 00c6 FB18     		adds	r3, r7, r3
 907 00c8 1B78     		ldrb	r3, [r3]
 908 00ca 1800     		movs	r0, r3
 909 00cc FFF7FEFF 		bl	writeData
 366:RA8875.c      **** }
 910              		.loc 1 366 0
 911 00d0 C046     		nop
 912 00d2 BD46     		mov	sp, r7
 913 00d4 05B0     		add	sp, sp, #20
 914              		@ sp needed
 915 00d6 90BD     		pop	{r4, r7, pc}
 916              		.cfi_endproc
 917              	.LFE43:
 918              		.size	textColor, .-textColor
 919              		.section	.text.textTransparent,"ax",%progbits
 920              		.align	2
 921              		.global	textTransparent
 922              		.code	16
 923              		.thumb_func
 924              		.type	textTransparent, %function
 925              	textTransparent:
 926              	.LFB44:
 367:RA8875.c      **** 
 368:RA8875.c      **** /**************************************************************************/
 369:RA8875.c      **** /*!
 370:RA8875.c      ****       Sets the fore color when rendering text with a transparent bg
 371:RA8875.c      ****       
 372:RA8875.c      ****       @args foreColor[in] The RGB565 color to use when rendering the text
 373:RA8875.c      **** */
 374:RA8875.c      **** /**************************************************************************/
 375:RA8875.c      **** void textTransparent(uint16_t foreColor)
 376:RA8875.c      **** {
 927              		.loc 1 376 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 16
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 24


 932              		.cfi_def_cfa_offset 12
 933              		.cfi_offset 4, -12
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 85B0     		sub	sp, sp, #20
 937              		.cfi_def_cfa_offset 32
 938 0004 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0006 0200     		movs	r2, r0
 941 0008 BB1D     		adds	r3, r7, #6
 942 000a 1A80     		strh	r2, [r3]
 377:RA8875.c      ****   /* Set Fore Color */
 378:RA8875.c      ****   writeCommand(0x63);
 943              		.loc 1 378 0
 944 000c 6320     		movs	r0, #99
 945 000e FFF7FEFF 		bl	writeCommand
 379:RA8875.c      ****   writeData((foreColor & 0xf800) >> 11);
 946              		.loc 1 379 0
 947 0012 BB1D     		adds	r3, r7, #6
 948 0014 1B88     		ldrh	r3, [r3]
 949 0016 DB0A     		lsrs	r3, r3, #11
 950 0018 9BB2     		uxth	r3, r3
 951 001a DBB2     		uxtb	r3, r3
 952 001c 1800     		movs	r0, r3
 953 001e FFF7FEFF 		bl	writeData
 380:RA8875.c      ****   writeCommand(0x64);
 954              		.loc 1 380 0
 955 0022 6420     		movs	r0, #100
 956 0024 FFF7FEFF 		bl	writeCommand
 381:RA8875.c      ****   writeData((foreColor & 0x07e0) >> 5);
 957              		.loc 1 381 0
 958 0028 BB1D     		adds	r3, r7, #6
 959 002a 1B88     		ldrh	r3, [r3]
 960 002c 5B11     		asrs	r3, r3, #5
 961 002e DBB2     		uxtb	r3, r3
 962 0030 3F22     		movs	r2, #63
 963 0032 1340     		ands	r3, r2
 964 0034 DBB2     		uxtb	r3, r3
 965 0036 1800     		movs	r0, r3
 966 0038 FFF7FEFF 		bl	writeData
 382:RA8875.c      ****   writeCommand(0x65);
 967              		.loc 1 382 0
 968 003c 6520     		movs	r0, #101
 969 003e FFF7FEFF 		bl	writeCommand
 383:RA8875.c      ****   writeData((foreColor & 0x001f));
 970              		.loc 1 383 0
 971 0042 BB1D     		adds	r3, r7, #6
 972 0044 1B88     		ldrh	r3, [r3]
 973 0046 DBB2     		uxtb	r3, r3
 974 0048 1F22     		movs	r2, #31
 975 004a 1340     		ands	r3, r2
 976 004c DBB2     		uxtb	r3, r3
 977 004e 1800     		movs	r0, r3
 978 0050 FFF7FEFF 		bl	writeData
 384:RA8875.c      **** 
 385:RA8875.c      ****   /* Set transparency flag */
 386:RA8875.c      ****   writeCommand(0x22);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 25


 979              		.loc 1 386 0
 980 0054 2220     		movs	r0, #34
 981 0056 FFF7FEFF 		bl	writeCommand
 387:RA8875.c      ****   uint8_t temp = readData();
 982              		.loc 1 387 0
 983 005a 0F23     		movs	r3, #15
 984 005c FC18     		adds	r4, r7, r3
 985 005e FFF7FEFF 		bl	readData
 986 0062 0300     		movs	r3, r0
 987 0064 2370     		strb	r3, [r4]
 388:RA8875.c      ****   temp |= (1<<6); // Set bit 6
 988              		.loc 1 388 0
 989 0066 0F23     		movs	r3, #15
 990 0068 FB18     		adds	r3, r7, r3
 991 006a 0F22     		movs	r2, #15
 992 006c BA18     		adds	r2, r7, r2
 993 006e 1278     		ldrb	r2, [r2]
 994 0070 4021     		movs	r1, #64
 995 0072 0A43     		orrs	r2, r1
 996 0074 1A70     		strb	r2, [r3]
 389:RA8875.c      ****   writeData(temp);  
 997              		.loc 1 389 0
 998 0076 0F23     		movs	r3, #15
 999 0078 FB18     		adds	r3, r7, r3
 1000 007a 1B78     		ldrb	r3, [r3]
 1001 007c 1800     		movs	r0, r3
 1002 007e FFF7FEFF 		bl	writeData
 390:RA8875.c      **** }
 1003              		.loc 1 390 0
 1004 0082 C046     		nop
 1005 0084 BD46     		mov	sp, r7
 1006 0086 05B0     		add	sp, sp, #20
 1007              		@ sp needed
 1008 0088 90BD     		pop	{r4, r7, pc}
 1009              		.cfi_endproc
 1010              	.LFE44:
 1011              		.size	textTransparent, .-textTransparent
 1012 008a C046     		.section	.text.textEnlarge,"ax",%progbits
 1013              		.align	2
 1014              		.global	textEnlarge
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	textEnlarge, %function
 1018              	textEnlarge:
 1019              	.LFB45:
 391:RA8875.c      **** 
 392:RA8875.c      **** /**************************************************************************/
 393:RA8875.c      **** /*!
 394:RA8875.c      ****       Sets the text enlarge settings, using one of the following values:
 395:RA8875.c      ****       
 396:RA8875.c      ****       0 = 1x zoom
 397:RA8875.c      ****       1 = 2x zoom
 398:RA8875.c      ****       2 = 3x zoom
 399:RA8875.c      ****       3 = 4x zoom
 400:RA8875.c      ****       
 401:RA8875.c      ****       @args scale[in]   The zoom factor (0..3 for 1-4x zoom)
 402:RA8875.c      **** */
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 26


 403:RA8875.c      **** /**************************************************************************/
 404:RA8875.c      **** void textEnlarge(uint8_t scale)
 405:RA8875.c      **** {
 1020              		.loc 1 405 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 16
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 90B5     		push	{r4, r7, lr}
 1025              		.cfi_def_cfa_offset 12
 1026              		.cfi_offset 4, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 85B0     		sub	sp, sp, #20
 1030              		.cfi_def_cfa_offset 32
 1031 0004 00AF     		add	r7, sp, #0
 1032              		.cfi_def_cfa_register 7
 1033 0006 0200     		movs	r2, r0
 1034 0008 FB1D     		adds	r3, r7, #7
 1035 000a 1A70     		strb	r2, [r3]
 406:RA8875.c      ****   if (scale > 3) scale = 3;
 1036              		.loc 1 406 0
 1037 000c FB1D     		adds	r3, r7, #7
 1038 000e 1B78     		ldrb	r3, [r3]
 1039 0010 032B     		cmp	r3, #3
 1040 0012 02D9     		bls	.L34
 1041              		.loc 1 406 0 is_stmt 0 discriminator 1
 1042 0014 FB1D     		adds	r3, r7, #7
 1043 0016 0322     		movs	r2, #3
 1044 0018 1A70     		strb	r2, [r3]
 1045              	.L34:
 407:RA8875.c      **** 
 408:RA8875.c      ****   /* Set font size flags */
 409:RA8875.c      ****   writeCommand(0x22);
 1046              		.loc 1 409 0 is_stmt 1
 1047 001a 2220     		movs	r0, #34
 1048 001c FFF7FEFF 		bl	writeCommand
 410:RA8875.c      ****   uint8_t temp = readData();
 1049              		.loc 1 410 0
 1050 0020 0F23     		movs	r3, #15
 1051 0022 FC18     		adds	r4, r7, r3
 1052 0024 FFF7FEFF 		bl	readData
 1053 0028 0300     		movs	r3, r0
 1054 002a 2370     		strb	r3, [r4]
 411:RA8875.c      ****   temp &= ~(0xF); // Clears bits 0..3
 1055              		.loc 1 411 0
 1056 002c 0F23     		movs	r3, #15
 1057 002e FB18     		adds	r3, r7, r3
 1058 0030 0F22     		movs	r2, #15
 1059 0032 BA18     		adds	r2, r7, r2
 1060 0034 1278     		ldrb	r2, [r2]
 1061 0036 0F21     		movs	r1, #15
 1062 0038 8A43     		bics	r2, r1
 1063 003a 1A70     		strb	r2, [r3]
 412:RA8875.c      ****   temp |= scale << 2;
 1064              		.loc 1 412 0
 1065 003c FB1D     		adds	r3, r7, #7
 1066 003e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 27


 1067 0040 9B00     		lsls	r3, r3, #2
 1068 0042 5AB2     		sxtb	r2, r3
 1069 0044 0F23     		movs	r3, #15
 1070 0046 FB18     		adds	r3, r7, r3
 1071 0048 1B78     		ldrb	r3, [r3]
 1072 004a 5BB2     		sxtb	r3, r3
 1073 004c 1343     		orrs	r3, r2
 1074 004e 5AB2     		sxtb	r2, r3
 1075 0050 0F23     		movs	r3, #15
 1076 0052 FB18     		adds	r3, r7, r3
 1077 0054 1A70     		strb	r2, [r3]
 413:RA8875.c      ****   temp |= scale;
 1078              		.loc 1 413 0
 1079 0056 0F23     		movs	r3, #15
 1080 0058 FB18     		adds	r3, r7, r3
 1081 005a 0F22     		movs	r2, #15
 1082 005c B918     		adds	r1, r7, r2
 1083 005e FA1D     		adds	r2, r7, #7
 1084 0060 0978     		ldrb	r1, [r1]
 1085 0062 1278     		ldrb	r2, [r2]
 1086 0064 0A43     		orrs	r2, r1
 1087 0066 1A70     		strb	r2, [r3]
 414:RA8875.c      ****   writeData(temp);  
 1088              		.loc 1 414 0
 1089 0068 0F23     		movs	r3, #15
 1090 006a FB18     		adds	r3, r7, r3
 1091 006c 1B78     		ldrb	r3, [r3]
 1092 006e 1800     		movs	r0, r3
 1093 0070 FFF7FEFF 		bl	writeData
 415:RA8875.c      **** 
 416:RA8875.c      ****   _textScale = scale;
 1094              		.loc 1 416 0
 1095 0074 034B     		ldr	r3, .L35
 1096 0076 FA1D     		adds	r2, r7, #7
 1097 0078 1278     		ldrb	r2, [r2]
 1098 007a 1A70     		strb	r2, [r3]
 417:RA8875.c      **** }
 1099              		.loc 1 417 0
 1100 007c C046     		nop
 1101 007e BD46     		mov	sp, r7
 1102 0080 05B0     		add	sp, sp, #20
 1103              		@ sp needed
 1104 0082 90BD     		pop	{r4, r7, pc}
 1105              	.L36:
 1106              		.align	2
 1107              	.L35:
 1108 0084 00000000 		.word	_textScale
 1109              		.cfi_endproc
 1110              	.LFE45:
 1111              		.size	textEnlarge, .-textEnlarge
 1112              		.section	.text.textWrite,"ax",%progbits
 1113              		.align	2
 1114              		.global	textWrite
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	textWrite, %function
 1118              	textWrite:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 28


 1119              	.LFB46:
 418:RA8875.c      **** 
 419:RA8875.c      **** /**************************************************************************/
 420:RA8875.c      **** /*!
 421:RA8875.c      ****       Renders some text on the screen when in text mode
 422:RA8875.c      ****       
 423:RA8875.c      ****       @args buffer[in]    The buffer containing the characters to render
 424:RA8875.c      ****       @args len[in]       The size of the buffer in bytes
 425:RA8875.c      **** */
 426:RA8875.c      **** /**************************************************************************/
 427:RA8875.c      **** void textWrite(const char* buffer, uint16_t len) 
 428:RA8875.c      **** {
 1120              		.loc 1 428 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 16
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 80B5     		push	{r7, lr}
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 0002 84B0     		sub	sp, sp, #16
 1129              		.cfi_def_cfa_offset 24
 1130 0004 00AF     		add	r7, sp, #0
 1131              		.cfi_def_cfa_register 7
 1132 0006 7860     		str	r0, [r7, #4]
 1133 0008 0A00     		movs	r2, r1
 1134 000a BB1C     		adds	r3, r7, #2
 1135 000c 1A80     		strh	r2, [r3]
 429:RA8875.c      ****   if (len == 0) len = strlen(buffer);
 1136              		.loc 1 429 0
 1137 000e BB1C     		adds	r3, r7, #2
 1138 0010 1B88     		ldrh	r3, [r3]
 1139 0012 002B     		cmp	r3, #0
 1140 0014 06D1     		bne	.L38
 1141              		.loc 1 429 0 is_stmt 0 discriminator 1
 1142 0016 7B68     		ldr	r3, [r7, #4]
 1143 0018 1800     		movs	r0, r3
 1144 001a FFF7FEFF 		bl	strlen
 1145 001e 0200     		movs	r2, r0
 1146 0020 BB1C     		adds	r3, r7, #2
 1147 0022 1A80     		strh	r2, [r3]
 1148              	.L38:
 430:RA8875.c      ****   writeCommand(RA8875_MRWC);
 1149              		.loc 1 430 0 is_stmt 1
 1150 0024 0220     		movs	r0, #2
 1151 0026 FFF7FEFF 		bl	writeCommand
 1152              	.LBB2:
 431:RA8875.c      ****   for (uint16_t i=0;i<len;i++)
 1153              		.loc 1 431 0
 1154 002a 0E23     		movs	r3, #14
 1155 002c FB18     		adds	r3, r7, r3
 1156 002e 0022     		movs	r2, #0
 1157 0030 1A80     		strh	r2, [r3]
 1158 0032 16E0     		b	.L39
 1159              	.L41:
 432:RA8875.c      ****   {
 433:RA8875.c      ****     writeData(buffer[i]);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 29


 1160              		.loc 1 433 0
 1161 0034 0E23     		movs	r3, #14
 1162 0036 FB18     		adds	r3, r7, r3
 1163 0038 1B88     		ldrh	r3, [r3]
 1164 003a 7A68     		ldr	r2, [r7, #4]
 1165 003c D318     		adds	r3, r2, r3
 1166 003e 1B78     		ldrb	r3, [r3]
 1167 0040 1800     		movs	r0, r3
 1168 0042 FFF7FEFF 		bl	writeData
 434:RA8875.c      **** #if defined(__AVR__)
 435:RA8875.c      ****     if (_textScale > 1) delay(1);
 436:RA8875.c      **** #elif defined(__arm__)
 437:RA8875.c      ****     // This delay is needed with textEnlarge(1) because
 438:RA8875.c      ****     // Teensy 3.X is much faster than Arduino Uno
 439:RA8875.c      ****     if (_textScale > 0) CyDelay(1); // was 1
 1169              		.loc 1 439 0
 1170 0046 0C4B     		ldr	r3, .L42
 1171 0048 1B78     		ldrb	r3, [r3]
 1172 004a 002B     		cmp	r3, #0
 1173 004c 02D0     		beq	.L40
 1174              		.loc 1 439 0 is_stmt 0 discriminator 1
 1175 004e 0120     		movs	r0, #1
 1176 0050 FFF7FEFF 		bl	CyDelay
 1177              	.L40:
 431:RA8875.c      ****   {
 1178              		.loc 1 431 0 is_stmt 1 discriminator 2
 1179 0054 0E23     		movs	r3, #14
 1180 0056 FB18     		adds	r3, r7, r3
 1181 0058 1A88     		ldrh	r2, [r3]
 1182 005a 0E23     		movs	r3, #14
 1183 005c FB18     		adds	r3, r7, r3
 1184 005e 0132     		adds	r2, r2, #1
 1185 0060 1A80     		strh	r2, [r3]
 1186              	.L39:
 431:RA8875.c      ****   {
 1187              		.loc 1 431 0 is_stmt 0 discriminator 1
 1188 0062 0E23     		movs	r3, #14
 1189 0064 FA18     		adds	r2, r7, r3
 1190 0066 BB1C     		adds	r3, r7, #2
 1191 0068 1288     		ldrh	r2, [r2]
 1192 006a 1B88     		ldrh	r3, [r3]
 1193 006c 9A42     		cmp	r2, r3
 1194 006e E1D3     		bcc	.L41
 1195              	.LBE2:
 440:RA8875.c      **** #endif
 441:RA8875.c      ****   }
 442:RA8875.c      **** }
 1196              		.loc 1 442 0 is_stmt 1
 1197 0070 C046     		nop
 1198 0072 BD46     		mov	sp, r7
 1199 0074 04B0     		add	sp, sp, #16
 1200              		@ sp needed
 1201 0076 80BD     		pop	{r7, pc}
 1202              	.L43:
 1203              		.align	2
 1204              	.L42:
 1205 0078 00000000 		.word	_textScale
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 30


 1206              		.cfi_endproc
 1207              	.LFE46:
 1208              		.size	textWrite, .-textWrite
 1209              		.section	.text.graphicsMode,"ax",%progbits
 1210              		.align	2
 1211              		.global	graphicsMode
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	graphicsMode, %function
 1215              	graphicsMode:
 1216              	.LFB47:
 443:RA8875.c      **** 
 444:RA8875.c      **** /************************* Graphics ***********************************/
 445:RA8875.c      **** 
 446:RA8875.c      **** /**************************************************************************/
 447:RA8875.c      **** /*!
 448:RA8875.c      ****       Sets the display in graphics mode (as opposed to text mode)
 449:RA8875.c      **** */
 450:RA8875.c      **** /**************************************************************************/
 451:RA8875.c      **** void graphicsMode(void) {
 1217              		.loc 1 451 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 8
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 90B5     		push	{r4, r7, lr}
 1222              		.cfi_def_cfa_offset 12
 1223              		.cfi_offset 4, -12
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 83B0     		sub	sp, sp, #12
 1227              		.cfi_def_cfa_offset 24
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 452:RA8875.c      ****   writeCommand(RA8875_MWCR0);
 1230              		.loc 1 452 0
 1231 0006 4020     		movs	r0, #64
 1232 0008 FFF7FEFF 		bl	writeCommand
 453:RA8875.c      ****   uint8_t temp = readData();
 1233              		.loc 1 453 0
 1234 000c FC1D     		adds	r4, r7, #7
 1235 000e FFF7FEFF 		bl	readData
 1236 0012 0300     		movs	r3, r0
 1237 0014 2370     		strb	r3, [r4]
 454:RA8875.c      ****   temp &= ~RA8875_MWCR0_TXTMODE; // bit #7
 1238              		.loc 1 454 0
 1239 0016 FB1D     		adds	r3, r7, #7
 1240 0018 FA1D     		adds	r2, r7, #7
 1241 001a 1278     		ldrb	r2, [r2]
 1242 001c 7F21     		movs	r1, #127
 1243 001e 0A40     		ands	r2, r1
 1244 0020 1A70     		strb	r2, [r3]
 455:RA8875.c      ****   writeData(temp);
 1245              		.loc 1 455 0
 1246 0022 FB1D     		adds	r3, r7, #7
 1247 0024 1B78     		ldrb	r3, [r3]
 1248 0026 1800     		movs	r0, r3
 1249 0028 FFF7FEFF 		bl	writeData
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 31


 456:RA8875.c      **** }
 1250              		.loc 1 456 0
 1251 002c C046     		nop
 1252 002e BD46     		mov	sp, r7
 1253 0030 03B0     		add	sp, sp, #12
 1254              		@ sp needed
 1255 0032 90BD     		pop	{r4, r7, pc}
 1256              		.cfi_endproc
 1257              	.LFE47:
 1258              		.size	graphicsMode, .-graphicsMode
 1259              		.section	.text.waitPoll,"ax",%progbits
 1260              		.align	2
 1261              		.global	waitPoll
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	waitPoll, %function
 1265              	waitPoll:
 1266              	.LFB48:
 457:RA8875.c      **** 
 458:RA8875.c      **** /**************************************************************************/
 459:RA8875.c      **** /*!
 460:RA8875.c      ****       Waits for screen to finish by polling the status!
 461:RA8875.c      **** */
 462:RA8875.c      **** /**************************************************************************/
 463:RA8875.c      **** boolean waitPoll(uint8_t regname, uint8_t waitflag) {
 1267              		.loc 1 463 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 90B5     		push	{r4, r7, lr}
 1272              		.cfi_def_cfa_offset 12
 1273              		.cfi_offset 4, -12
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 85B0     		sub	sp, sp, #20
 1277              		.cfi_def_cfa_offset 32
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 1280 0006 0200     		movs	r2, r0
 1281 0008 FB1D     		adds	r3, r7, #7
 1282 000a 1A70     		strb	r2, [r3]
 1283 000c BB1D     		adds	r3, r7, #6
 1284 000e 0A1C     		adds	r2, r1, #0
 1285 0010 1A70     		strb	r2, [r3]
 1286              	.L48:
 1287              	.LBB3:
 464:RA8875.c      ****   /* Wait for the command to finish */
 465:RA8875.c      ****   while (1)
 466:RA8875.c      ****   {
 467:RA8875.c      ****     uint8_t temp = readReg(regname);
 1288              		.loc 1 467 0
 1289 0012 0F23     		movs	r3, #15
 1290 0014 FC18     		adds	r4, r7, r3
 1291 0016 FB1D     		adds	r3, r7, #7
 1292 0018 1B78     		ldrb	r3, [r3]
 1293 001a 1800     		movs	r0, r3
 1294 001c FFF7FEFF 		bl	readReg
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 32


 1295 0020 0300     		movs	r3, r0
 1296 0022 2370     		strb	r3, [r4]
 468:RA8875.c      ****     if (!(temp & waitflag))
 1297              		.loc 1 468 0
 1298 0024 0F23     		movs	r3, #15
 1299 0026 FB18     		adds	r3, r7, r3
 1300 0028 BA1D     		adds	r2, r7, #6
 1301 002a 1B78     		ldrb	r3, [r3]
 1302 002c 1278     		ldrb	r2, [r2]
 1303 002e 1340     		ands	r3, r2
 1304 0030 DBB2     		uxtb	r3, r3
 1305 0032 002B     		cmp	r3, #0
 1306 0034 EDD1     		bne	.L48
 469:RA8875.c      ****       return true;
 1307              		.loc 1 469 0
 1308 0036 0123     		movs	r3, #1
 1309              	.LBE3:
 470:RA8875.c      ****   }  
 471:RA8875.c      ****   return false; // MEMEFIX: yeah i know, unreached! - add timeout?
 472:RA8875.c      **** }
 1310              		.loc 1 472 0
 1311 0038 1800     		movs	r0, r3
 1312 003a BD46     		mov	sp, r7
 1313 003c 05B0     		add	sp, sp, #20
 1314              		@ sp needed
 1315 003e 90BD     		pop	{r4, r7, pc}
 1316              		.cfi_endproc
 1317              	.LFE48:
 1318              		.size	waitPoll, .-waitPoll
 1319              		.section	.text.setXY,"ax",%progbits
 1320              		.align	2
 1321              		.global	setXY
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	setXY, %function
 1325              	setXY:
 1326              	.LFB49:
 473:RA8875.c      **** 
 474:RA8875.c      **** 
 475:RA8875.c      **** /**************************************************************************/
 476:RA8875.c      **** /*!
 477:RA8875.c      ****       Sets the current X/Y position on the display before drawing
 478:RA8875.c      ****       
 479:RA8875.c      ****       @args x[in] The 0-based x location
 480:RA8875.c      ****       @args y[in] The 0-base y location
 481:RA8875.c      **** */
 482:RA8875.c      **** /**************************************************************************/
 483:RA8875.c      **** void setXY(uint16_t x, uint16_t y) {
 1327              		.loc 1 483 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 8
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331 0000 80B5     		push	{r7, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 33


 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 1339 0006 0200     		movs	r2, r0
 1340 0008 BB1D     		adds	r3, r7, #6
 1341 000a 1A80     		strh	r2, [r3]
 1342 000c 3B1D     		adds	r3, r7, #4
 1343 000e 0A1C     		adds	r2, r1, #0
 1344 0010 1A80     		strh	r2, [r3]
 484:RA8875.c      ****   writeReg(RA8875_CURH0, x);
 1345              		.loc 1 484 0
 1346 0012 BB1D     		adds	r3, r7, #6
 1347 0014 1B88     		ldrh	r3, [r3]
 1348 0016 DBB2     		uxtb	r3, r3
 1349 0018 1900     		movs	r1, r3
 1350 001a 4620     		movs	r0, #70
 1351 001c FFF7FEFF 		bl	writeReg
 485:RA8875.c      ****   writeReg(RA8875_CURH1, x >> 8);
 1352              		.loc 1 485 0
 1353 0020 BB1D     		adds	r3, r7, #6
 1354 0022 1B88     		ldrh	r3, [r3]
 1355 0024 1B0A     		lsrs	r3, r3, #8
 1356 0026 9BB2     		uxth	r3, r3
 1357 0028 DBB2     		uxtb	r3, r3
 1358 002a 1900     		movs	r1, r3
 1359 002c 4720     		movs	r0, #71
 1360 002e FFF7FEFF 		bl	writeReg
 486:RA8875.c      ****   writeReg(RA8875_CURV0, y);
 1361              		.loc 1 486 0
 1362 0032 3B1D     		adds	r3, r7, #4
 1363 0034 1B88     		ldrh	r3, [r3]
 1364 0036 DBB2     		uxtb	r3, r3
 1365 0038 1900     		movs	r1, r3
 1366 003a 4820     		movs	r0, #72
 1367 003c FFF7FEFF 		bl	writeReg
 487:RA8875.c      ****   writeReg(RA8875_CURV1, y >> 8);  
 1368              		.loc 1 487 0
 1369 0040 3B1D     		adds	r3, r7, #4
 1370 0042 1B88     		ldrh	r3, [r3]
 1371 0044 1B0A     		lsrs	r3, r3, #8
 1372 0046 9BB2     		uxth	r3, r3
 1373 0048 DBB2     		uxtb	r3, r3
 1374 004a 1900     		movs	r1, r3
 1375 004c 4920     		movs	r0, #73
 1376 004e FFF7FEFF 		bl	writeReg
 488:RA8875.c      **** }
 1377              		.loc 1 488 0
 1378 0052 C046     		nop
 1379 0054 BD46     		mov	sp, r7
 1380 0056 02B0     		add	sp, sp, #8
 1381              		@ sp needed
 1382 0058 80BD     		pop	{r7, pc}
 1383              		.cfi_endproc
 1384              	.LFE49:
 1385              		.size	setXY, .-setXY
 1386 005a C046     		.section	.text.pushPixels,"ax",%progbits
 1387              		.align	2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 34


 1388              		.global	pushPixels
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	pushPixels, %function
 1392              	pushPixels:
 1393              	.LFB50:
 489:RA8875.c      **** 
 490:RA8875.c      **** /**************************************************************************/
 491:RA8875.c      **** /*!
 492:RA8875.c      ****       HW accelerated function to push a chunk of raw pixel data
 493:RA8875.c      ****       
 494:RA8875.c      ****       @args num[in] The number of pixels to push
 495:RA8875.c      ****       @args p[in]   The pixel color to use
 496:RA8875.c      **** */
 497:RA8875.c      **** /**************************************************************************/
 498:RA8875.c      **** void pushPixels(uint32_t num, uint16_t p) {
 1394              		.loc 1 498 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 8
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 82B0     		sub	sp, sp, #8
 1403              		.cfi_def_cfa_offset 16
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
 1407 0008 0A00     		movs	r2, r1
 1408 000a BB1C     		adds	r3, r7, #2
 1409 000c 1A80     		strh	r2, [r3]
 499:RA8875.c      ****     LCDSPI_Start(); 
 1410              		.loc 1 499 0
 1411 000e FFF7FEFF 		bl	LCDSPI_Start
 500:RA8875.c      ****  
 501:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 1412              		.loc 1 501 0
 1413 0012 0020     		movs	r0, #0
 1414 0014 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 502:RA8875.c      ****     
 503:RA8875.c      ****   while (num--) {
 1415              		.loc 1 503 0
 1416 0018 0BE0     		b	.L52
 1417              	.L53:
 504:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p >> 8);
 1418              		.loc 1 504 0
 1419 001a BB1C     		adds	r3, r7, #2
 1420 001c 1B88     		ldrh	r3, [r3]
 1421 001e 1B0A     		lsrs	r3, r3, #8
 1422 0020 9BB2     		uxth	r3, r3
 1423 0022 1800     		movs	r0, r3
 1424 0024 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 505:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p);
 1425              		.loc 1 505 0
 1426 0028 BB1C     		adds	r3, r7, #2
 1427 002a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 35


 1428 002c 1800     		movs	r0, r3
 1429 002e FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 1430              	.L52:
 503:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p >> 8);
 1431              		.loc 1 503 0
 1432 0032 7B68     		ldr	r3, [r7, #4]
 1433 0034 5A1E     		subs	r2, r3, #1
 1434 0036 7A60     		str	r2, [r7, #4]
 1435 0038 002B     		cmp	r3, #0
 1436 003a EED1     		bne	.L53
 506:RA8875.c      ****   }
 507:RA8875.c      **** 
 508:RA8875.c      ****     LCDSPI_Stop();
 1437              		.loc 1 508 0
 1438 003c FFF7FEFF 		bl	LCDSPI_Stop
 509:RA8875.c      **** }
 1439              		.loc 1 509 0
 1440 0040 C046     		nop
 1441 0042 BD46     		mov	sp, r7
 1442 0044 02B0     		add	sp, sp, #8
 1443              		@ sp needed
 1444 0046 80BD     		pop	{r7, pc}
 1445              		.cfi_endproc
 1446              	.LFE50:
 1447              		.size	pushPixels, .-pushPixels
 1448              		.section	.text.fillRect1,"ax",%progbits
 1449              		.align	2
 1450              		.global	fillRect1
 1451              		.code	16
 1452              		.thumb_func
 1453              		.type	fillRect1, %function
 1454              	fillRect1:
 1455              	.LFB51:
 510:RA8875.c      **** 
 511:RA8875.c      **** /**************************************************************************/
 512:RA8875.c      **** /*!
 513:RA8875.c      **** 
 514:RA8875.c      **** */
 515:RA8875.c      **** /**************************************************************************/
 516:RA8875.c      **** void fillRect1(void) {
 1456              		.loc 1 516 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 517:RA8875.c      ****   writeCommand(RA8875_DCR);
 1466              		.loc 1 517 0
 1467 0004 9020     		movs	r0, #144
 1468 0006 FFF7FEFF 		bl	writeCommand
 518:RA8875.c      ****   writeData(RA8875_DCR_LINESQUTRI_STOP | RA8875_DCR_DRAWSQUARE);
 1469              		.loc 1 518 0
 1470 000a 1020     		movs	r0, #16
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 36


 1471 000c FFF7FEFF 		bl	writeData
 519:RA8875.c      ****   writeData(RA8875_DCR_LINESQUTRI_START | RA8875_DCR_FILL | RA8875_DCR_DRAWSQUARE);
 1472              		.loc 1 519 0
 1473 0010 B020     		movs	r0, #176
 1474 0012 FFF7FEFF 		bl	writeData
 520:RA8875.c      **** }
 1475              		.loc 1 520 0
 1476 0016 C046     		nop
 1477 0018 BD46     		mov	sp, r7
 1478              		@ sp needed
 1479 001a 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE51:
 1482              		.size	fillRect1, .-fillRect1
 1483              		.section	.text.drawPixel,"ax",%progbits
 1484              		.align	2
 1485              		.global	drawPixel
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	drawPixel, %function
 1489              	drawPixel:
 1490              	.LFB52:
 521:RA8875.c      **** 
 522:RA8875.c      **** /**************************************************************************/
 523:RA8875.c      **** /*!
 524:RA8875.c      ****       Draws a single pixel at the specified location
 525:RA8875.c      **** 
 526:RA8875.c      ****       @args x[in]     The 0-based x location
 527:RA8875.c      ****       @args y[in]     The 0-base y location
 528:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 529:RA8875.c      **** */
 530:RA8875.c      **** /**************************************************************************/
 531:RA8875.c      **** void drawPixel(int16_t x, int16_t y, uint16_t color)
 532:RA8875.c      **** {
 1491              		.loc 1 532 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 90B5     		push	{r4, r7, lr}
 1496              		.cfi_def_cfa_offset 12
 1497              		.cfi_offset 4, -12
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 83B0     		sub	sp, sp, #12
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 0400     		movs	r4, r0
 1505 0008 0800     		movs	r0, r1
 1506 000a 1100     		movs	r1, r2
 1507 000c BB1D     		adds	r3, r7, #6
 1508 000e 221C     		adds	r2, r4, #0
 1509 0010 1A80     		strh	r2, [r3]
 1510 0012 3B1D     		adds	r3, r7, #4
 1511 0014 021C     		adds	r2, r0, #0
 1512 0016 1A80     		strh	r2, [r3]
 1513 0018 BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 37


 1514 001a 0A1C     		adds	r2, r1, #0
 1515 001c 1A80     		strh	r2, [r3]
 533:RA8875.c      ****   writeReg(RA8875_CURH0, x);
 1516              		.loc 1 533 0
 1517 001e BB1D     		adds	r3, r7, #6
 1518 0020 1B88     		ldrh	r3, [r3]
 1519 0022 DBB2     		uxtb	r3, r3
 1520 0024 1900     		movs	r1, r3
 1521 0026 4620     		movs	r0, #70
 1522 0028 FFF7FEFF 		bl	writeReg
 534:RA8875.c      ****   writeReg(RA8875_CURH1, x >> 8);
 1523              		.loc 1 534 0
 1524 002c BB1D     		adds	r3, r7, #6
 1525 002e 0022     		movs	r2, #0
 1526 0030 9B5E     		ldrsh	r3, [r3, r2]
 1527 0032 1B12     		asrs	r3, r3, #8
 1528 0034 1BB2     		sxth	r3, r3
 1529 0036 DBB2     		uxtb	r3, r3
 1530 0038 1900     		movs	r1, r3
 1531 003a 4720     		movs	r0, #71
 1532 003c FFF7FEFF 		bl	writeReg
 535:RA8875.c      ****   writeReg(RA8875_CURV0, y);
 1533              		.loc 1 535 0
 1534 0040 3B1D     		adds	r3, r7, #4
 1535 0042 1B88     		ldrh	r3, [r3]
 1536 0044 DBB2     		uxtb	r3, r3
 1537 0046 1900     		movs	r1, r3
 1538 0048 4820     		movs	r0, #72
 1539 004a FFF7FEFF 		bl	writeReg
 536:RA8875.c      ****   writeReg(RA8875_CURV1, y >> 8);  
 1540              		.loc 1 536 0
 1541 004e 3B1D     		adds	r3, r7, #4
 1542 0050 0022     		movs	r2, #0
 1543 0052 9B5E     		ldrsh	r3, [r3, r2]
 1544 0054 1B12     		asrs	r3, r3, #8
 1545 0056 1BB2     		sxth	r3, r3
 1546 0058 DBB2     		uxtb	r3, r3
 1547 005a 1900     		movs	r1, r3
 1548 005c 4920     		movs	r0, #73
 1549 005e FFF7FEFF 		bl	writeReg
 537:RA8875.c      ****   writeCommand(RA8875_MRWC);
 1550              		.loc 1 537 0
 1551 0062 0220     		movs	r0, #2
 1552 0064 FFF7FEFF 		bl	writeCommand
 538:RA8875.c      **** 
 539:RA8875.c      ****     LCDSPI_Start(); 
 1553              		.loc 1 539 0
 1554 0068 FFF7FEFF 		bl	LCDSPI_Start
 540:RA8875.c      ****  
 541:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 1555              		.loc 1 541 0
 1556 006c 0020     		movs	r0, #0
 1557 006e FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 542:RA8875.c      ****     
 543:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(color >> 8);
 1558              		.loc 1 543 0
 1559 0072 BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 38


 1560 0074 1B88     		ldrh	r3, [r3]
 1561 0076 1B0A     		lsrs	r3, r3, #8
 1562 0078 9BB2     		uxth	r3, r3
 1563 007a 1800     		movs	r0, r3
 1564 007c FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 544:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(color);
 1565              		.loc 1 544 0
 1566 0080 BB1C     		adds	r3, r7, #2
 1567 0082 1B88     		ldrh	r3, [r3]
 1568 0084 1800     		movs	r0, r3
 1569 0086 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 545:RA8875.c      ****     
 546:RA8875.c      ****     LCDSPI_Stop();
 1570              		.loc 1 546 0
 1571 008a FFF7FEFF 		bl	LCDSPI_Stop
 547:RA8875.c      **** }
 1572              		.loc 1 547 0
 1573 008e C046     		nop
 1574 0090 BD46     		mov	sp, r7
 1575 0092 03B0     		add	sp, sp, #12
 1576              		@ sp needed
 1577 0094 90BD     		pop	{r4, r7, pc}
 1578              		.cfi_endproc
 1579              	.LFE52:
 1580              		.size	drawPixel, .-drawPixel
 1581 0096 C046     		.section	.text.drawLine,"ax",%progbits
 1582              		.align	2
 1583              		.global	drawLine
 1584              		.code	16
 1585              		.thumb_func
 1586              		.type	drawLine, %function
 1587              	drawLine:
 1588              	.LFB53:
 548:RA8875.c      **** 
 549:RA8875.c      **** /**************************************************************************/
 550:RA8875.c      **** /*!
 551:RA8875.c      ****       Draws a HW accelerated line on the display
 552:RA8875.c      ****     
 553:RA8875.c      ****       @args x0[in]    The 0-based starting x location
 554:RA8875.c      ****       @args y0[in]    The 0-base starting y location
 555:RA8875.c      ****       @args x1[in]    The 0-based ending x location
 556:RA8875.c      ****       @args y1[in]    The 0-base ending y location
 557:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 558:RA8875.c      **** */
 559:RA8875.c      **** /**************************************************************************/
 560:RA8875.c      **** void drawLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color)
 561:RA8875.c      **** {
 1589              		.loc 1 561 0
 1590              		.cfi_startproc
 1591              		@ args = 4, pretend = 0, frame = 8
 1592              		@ frame_needed = 1, uses_anonymous_args = 0
 1593 0000 B0B5     		push	{r4, r5, r7, lr}
 1594              		.cfi_def_cfa_offset 16
 1595              		.cfi_offset 4, -16
 1596              		.cfi_offset 5, -12
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 39


 1599 0002 82B0     		sub	sp, sp, #8
 1600              		.cfi_def_cfa_offset 24
 1601 0004 00AF     		add	r7, sp, #0
 1602              		.cfi_def_cfa_register 7
 1603 0006 0500     		movs	r5, r0
 1604 0008 0C00     		movs	r4, r1
 1605 000a 1000     		movs	r0, r2
 1606 000c 1900     		movs	r1, r3
 1607 000e BB1D     		adds	r3, r7, #6
 1608 0010 2A1C     		adds	r2, r5, #0
 1609 0012 1A80     		strh	r2, [r3]
 1610 0014 3B1D     		adds	r3, r7, #4
 1611 0016 221C     		adds	r2, r4, #0
 1612 0018 1A80     		strh	r2, [r3]
 1613 001a BB1C     		adds	r3, r7, #2
 1614 001c 021C     		adds	r2, r0, #0
 1615 001e 1A80     		strh	r2, [r3]
 1616 0020 3B00     		movs	r3, r7
 1617 0022 0A1C     		adds	r2, r1, #0
 1618 0024 1A80     		strh	r2, [r3]
 562:RA8875.c      ****   /* Set X */
 563:RA8875.c      ****   writeCommand(0x91);
 1619              		.loc 1 563 0
 1620 0026 9120     		movs	r0, #145
 1621 0028 FFF7FEFF 		bl	writeCommand
 564:RA8875.c      ****   writeData(x0);
 1622              		.loc 1 564 0
 1623 002c BB1D     		adds	r3, r7, #6
 1624 002e 1B88     		ldrh	r3, [r3]
 1625 0030 DBB2     		uxtb	r3, r3
 1626 0032 1800     		movs	r0, r3
 1627 0034 FFF7FEFF 		bl	writeData
 565:RA8875.c      ****   writeCommand(0x92);
 1628              		.loc 1 565 0
 1629 0038 9220     		movs	r0, #146
 1630 003a FFF7FEFF 		bl	writeCommand
 566:RA8875.c      ****   writeData(x0 >> 8);
 1631              		.loc 1 566 0
 1632 003e BB1D     		adds	r3, r7, #6
 1633 0040 0022     		movs	r2, #0
 1634 0042 9B5E     		ldrsh	r3, [r3, r2]
 1635 0044 1B12     		asrs	r3, r3, #8
 1636 0046 1BB2     		sxth	r3, r3
 1637 0048 DBB2     		uxtb	r3, r3
 1638 004a 1800     		movs	r0, r3
 1639 004c FFF7FEFF 		bl	writeData
 567:RA8875.c      ****   
 568:RA8875.c      ****   /* Set Y */
 569:RA8875.c      ****   writeCommand(0x93);
 1640              		.loc 1 569 0
 1641 0050 9320     		movs	r0, #147
 1642 0052 FFF7FEFF 		bl	writeCommand
 570:RA8875.c      ****   writeData(y0); 
 1643              		.loc 1 570 0
 1644 0056 3B1D     		adds	r3, r7, #4
 1645 0058 1B88     		ldrh	r3, [r3]
 1646 005a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 40


 1647 005c 1800     		movs	r0, r3
 1648 005e FFF7FEFF 		bl	writeData
 571:RA8875.c      ****   writeCommand(0x94);
 1649              		.loc 1 571 0
 1650 0062 9420     		movs	r0, #148
 1651 0064 FFF7FEFF 		bl	writeCommand
 572:RA8875.c      ****   writeData(y0 >> 8);
 1652              		.loc 1 572 0
 1653 0068 3B1D     		adds	r3, r7, #4
 1654 006a 0022     		movs	r2, #0
 1655 006c 9B5E     		ldrsh	r3, [r3, r2]
 1656 006e 1B12     		asrs	r3, r3, #8
 1657 0070 1BB2     		sxth	r3, r3
 1658 0072 DBB2     		uxtb	r3, r3
 1659 0074 1800     		movs	r0, r3
 1660 0076 FFF7FEFF 		bl	writeData
 573:RA8875.c      ****   
 574:RA8875.c      ****   /* Set X1 */
 575:RA8875.c      ****   writeCommand(0x95);
 1661              		.loc 1 575 0
 1662 007a 9520     		movs	r0, #149
 1663 007c FFF7FEFF 		bl	writeCommand
 576:RA8875.c      ****   writeData(x1);
 1664              		.loc 1 576 0
 1665 0080 BB1C     		adds	r3, r7, #2
 1666 0082 1B88     		ldrh	r3, [r3]
 1667 0084 DBB2     		uxtb	r3, r3
 1668 0086 1800     		movs	r0, r3
 1669 0088 FFF7FEFF 		bl	writeData
 577:RA8875.c      ****   writeCommand(0x96);
 1670              		.loc 1 577 0
 1671 008c 9620     		movs	r0, #150
 1672 008e FFF7FEFF 		bl	writeCommand
 578:RA8875.c      ****   writeData((x1) >> 8);
 1673              		.loc 1 578 0
 1674 0092 BB1C     		adds	r3, r7, #2
 1675 0094 0022     		movs	r2, #0
 1676 0096 9B5E     		ldrsh	r3, [r3, r2]
 1677 0098 1B12     		asrs	r3, r3, #8
 1678 009a 1BB2     		sxth	r3, r3
 1679 009c DBB2     		uxtb	r3, r3
 1680 009e 1800     		movs	r0, r3
 1681 00a0 FFF7FEFF 		bl	writeData
 579:RA8875.c      ****   
 580:RA8875.c      ****   /* Set Y1 */
 581:RA8875.c      ****   writeCommand(0x97);
 1682              		.loc 1 581 0
 1683 00a4 9720     		movs	r0, #151
 1684 00a6 FFF7FEFF 		bl	writeCommand
 582:RA8875.c      ****   writeData(y1); 
 1685              		.loc 1 582 0
 1686 00aa 3B00     		movs	r3, r7
 1687 00ac 1B88     		ldrh	r3, [r3]
 1688 00ae DBB2     		uxtb	r3, r3
 1689 00b0 1800     		movs	r0, r3
 1690 00b2 FFF7FEFF 		bl	writeData
 583:RA8875.c      ****   writeCommand(0x98);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 41


 1691              		.loc 1 583 0
 1692 00b6 9820     		movs	r0, #152
 1693 00b8 FFF7FEFF 		bl	writeCommand
 584:RA8875.c      ****   writeData((y1) >> 8);
 1694              		.loc 1 584 0
 1695 00bc 3B00     		movs	r3, r7
 1696 00be 0022     		movs	r2, #0
 1697 00c0 9B5E     		ldrsh	r3, [r3, r2]
 1698 00c2 1B12     		asrs	r3, r3, #8
 1699 00c4 1BB2     		sxth	r3, r3
 1700 00c6 DBB2     		uxtb	r3, r3
 1701 00c8 1800     		movs	r0, r3
 1702 00ca FFF7FEFF 		bl	writeData
 585:RA8875.c      ****   
 586:RA8875.c      ****   /* Set Color */
 587:RA8875.c      ****   writeCommand(0x63);
 1703              		.loc 1 587 0
 1704 00ce 6320     		movs	r0, #99
 1705 00d0 FFF7FEFF 		bl	writeCommand
 588:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 1706              		.loc 1 588 0
 1707 00d4 1823     		movs	r3, #24
 1708 00d6 FB18     		adds	r3, r7, r3
 1709 00d8 1B88     		ldrh	r3, [r3]
 1710 00da DB0A     		lsrs	r3, r3, #11
 1711 00dc 9BB2     		uxth	r3, r3
 1712 00de DBB2     		uxtb	r3, r3
 1713 00e0 1800     		movs	r0, r3
 1714 00e2 FFF7FEFF 		bl	writeData
 589:RA8875.c      ****   writeCommand(0x64);
 1715              		.loc 1 589 0
 1716 00e6 6420     		movs	r0, #100
 1717 00e8 FFF7FEFF 		bl	writeCommand
 590:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 1718              		.loc 1 590 0
 1719 00ec 1823     		movs	r3, #24
 1720 00ee FB18     		adds	r3, r7, r3
 1721 00f0 1B88     		ldrh	r3, [r3]
 1722 00f2 5B11     		asrs	r3, r3, #5
 1723 00f4 DBB2     		uxtb	r3, r3
 1724 00f6 3F22     		movs	r2, #63
 1725 00f8 1340     		ands	r3, r2
 1726 00fa DBB2     		uxtb	r3, r3
 1727 00fc 1800     		movs	r0, r3
 1728 00fe FFF7FEFF 		bl	writeData
 591:RA8875.c      ****   writeCommand(0x65);
 1729              		.loc 1 591 0
 1730 0102 6520     		movs	r0, #101
 1731 0104 FFF7FEFF 		bl	writeCommand
 592:RA8875.c      ****   writeData((color & 0x001f));
 1732              		.loc 1 592 0
 1733 0108 1823     		movs	r3, #24
 1734 010a FB18     		adds	r3, r7, r3
 1735 010c 1B88     		ldrh	r3, [r3]
 1736 010e DBB2     		uxtb	r3, r3
 1737 0110 1F22     		movs	r2, #31
 1738 0112 1340     		ands	r3, r2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 42


 1739 0114 DBB2     		uxtb	r3, r3
 1740 0116 1800     		movs	r0, r3
 1741 0118 FFF7FEFF 		bl	writeData
 593:RA8875.c      **** 
 594:RA8875.c      ****   /* Draw! */
 595:RA8875.c      ****   writeCommand(RA8875_DCR);
 1742              		.loc 1 595 0
 1743 011c 9020     		movs	r0, #144
 1744 011e FFF7FEFF 		bl	writeCommand
 596:RA8875.c      ****   writeData(0x80);
 1745              		.loc 1 596 0
 1746 0122 8020     		movs	r0, #128
 1747 0124 FFF7FEFF 		bl	writeData
 597:RA8875.c      ****   
 598:RA8875.c      ****   /* Wait for the command to finish */
 599:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 1748              		.loc 1 599 0
 1749 0128 8021     		movs	r1, #128
 1750 012a 9020     		movs	r0, #144
 1751 012c FFF7FEFF 		bl	waitPoll
 600:RA8875.c      **** }
 1752              		.loc 1 600 0
 1753 0130 C046     		nop
 1754 0132 BD46     		mov	sp, r7
 1755 0134 02B0     		add	sp, sp, #8
 1756              		@ sp needed
 1757 0136 B0BD     		pop	{r4, r5, r7, pc}
 1758              		.cfi_endproc
 1759              	.LFE53:
 1760              		.size	drawLine, .-drawLine
 1761              		.section	.text.drawFastVLine,"ax",%progbits
 1762              		.align	2
 1763              		.global	drawFastVLine
 1764              		.code	16
 1765              		.thumb_func
 1766              		.type	drawFastVLine, %function
 1767              	drawFastVLine:
 1768              	.LFB54:
 601:RA8875.c      **** 
 602:RA8875.c      **** /**************************************************************************/
 603:RA8875.c      **** /*!
 604:RA8875.c      **** 
 605:RA8875.c      **** */
 606:RA8875.c      **** /**************************************************************************/
 607:RA8875.c      **** void drawFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color)
 608:RA8875.c      **** {
 1769              		.loc 1 608 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 8
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773 0000 B0B5     		push	{r4, r5, r7, lr}
 1774              		.cfi_def_cfa_offset 16
 1775              		.cfi_offset 4, -16
 1776              		.cfi_offset 5, -12
 1777              		.cfi_offset 7, -8
 1778              		.cfi_offset 14, -4
 1779 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 43


 1780              		.cfi_def_cfa_offset 32
 1781 0004 02AF     		add	r7, sp, #8
 1782              		.cfi_def_cfa 7, 24
 1783 0006 0500     		movs	r5, r0
 1784 0008 0C00     		movs	r4, r1
 1785 000a 1000     		movs	r0, r2
 1786 000c 1900     		movs	r1, r3
 1787 000e BB1D     		adds	r3, r7, #6
 1788 0010 2A1C     		adds	r2, r5, #0
 1789 0012 1A80     		strh	r2, [r3]
 1790 0014 3B1D     		adds	r3, r7, #4
 1791 0016 221C     		adds	r2, r4, #0
 1792 0018 1A80     		strh	r2, [r3]
 1793 001a BB1C     		adds	r3, r7, #2
 1794 001c 021C     		adds	r2, r0, #0
 1795 001e 1A80     		strh	r2, [r3]
 1796 0020 3B00     		movs	r3, r7
 1797 0022 0A1C     		adds	r2, r1, #0
 1798 0024 1A80     		strh	r2, [r3]
 609:RA8875.c      ****   drawLine(x, y, x, y+h, color);
 1799              		.loc 1 609 0
 1800 0026 3B1D     		adds	r3, r7, #4
 1801 0028 1A88     		ldrh	r2, [r3]
 1802 002a BB1C     		adds	r3, r7, #2
 1803 002c 1B88     		ldrh	r3, [r3]
 1804 002e D318     		adds	r3, r2, r3
 1805 0030 9BB2     		uxth	r3, r3
 1806 0032 1CB2     		sxth	r4, r3
 1807 0034 BB1D     		adds	r3, r7, #6
 1808 0036 0022     		movs	r2, #0
 1809 0038 9A5E     		ldrsh	r2, [r3, r2]
 1810 003a 3B1D     		adds	r3, r7, #4
 1811 003c 0021     		movs	r1, #0
 1812 003e 595E     		ldrsh	r1, [r3, r1]
 1813 0040 BB1D     		adds	r3, r7, #6
 1814 0042 0020     		movs	r0, #0
 1815 0044 185E     		ldrsh	r0, [r3, r0]
 1816 0046 3B00     		movs	r3, r7
 1817 0048 1B88     		ldrh	r3, [r3]
 1818 004a 0093     		str	r3, [sp]
 1819 004c 2300     		movs	r3, r4
 1820 004e FFF7FEFF 		bl	drawLine
 610:RA8875.c      **** }
 1821              		.loc 1 610 0
 1822 0052 C046     		nop
 1823 0054 BD46     		mov	sp, r7
 1824 0056 02B0     		add	sp, sp, #8
 1825              		@ sp needed
 1826 0058 B0BD     		pop	{r4, r5, r7, pc}
 1827              		.cfi_endproc
 1828              	.LFE54:
 1829              		.size	drawFastVLine, .-drawFastVLine
 1830 005a C046     		.section	.text.drawFastHLine,"ax",%progbits
 1831              		.align	2
 1832              		.global	drawFastHLine
 1833              		.code	16
 1834              		.thumb_func
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 44


 1835              		.type	drawFastHLine, %function
 1836              	drawFastHLine:
 1837              	.LFB55:
 611:RA8875.c      **** 
 612:RA8875.c      **** /**************************************************************************/
 613:RA8875.c      **** /*!
 614:RA8875.c      **** 
 615:RA8875.c      **** */
 616:RA8875.c      **** /**************************************************************************/
 617:RA8875.c      **** void drawFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color)
 618:RA8875.c      **** {
 1838              		.loc 1 618 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 8
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842 0000 B0B5     		push	{r4, r5, r7, lr}
 1843              		.cfi_def_cfa_offset 16
 1844              		.cfi_offset 4, -16
 1845              		.cfi_offset 5, -12
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 84B0     		sub	sp, sp, #16
 1849              		.cfi_def_cfa_offset 32
 1850 0004 02AF     		add	r7, sp, #8
 1851              		.cfi_def_cfa 7, 24
 1852 0006 0500     		movs	r5, r0
 1853 0008 0C00     		movs	r4, r1
 1854 000a 1000     		movs	r0, r2
 1855 000c 1900     		movs	r1, r3
 1856 000e BB1D     		adds	r3, r7, #6
 1857 0010 2A1C     		adds	r2, r5, #0
 1858 0012 1A80     		strh	r2, [r3]
 1859 0014 3B1D     		adds	r3, r7, #4
 1860 0016 221C     		adds	r2, r4, #0
 1861 0018 1A80     		strh	r2, [r3]
 1862 001a BB1C     		adds	r3, r7, #2
 1863 001c 021C     		adds	r2, r0, #0
 1864 001e 1A80     		strh	r2, [r3]
 1865 0020 3B00     		movs	r3, r7
 1866 0022 0A1C     		adds	r2, r1, #0
 1867 0024 1A80     		strh	r2, [r3]
 619:RA8875.c      ****   drawLine(x, y, x+w, y, color);
 1868              		.loc 1 619 0
 1869 0026 BB1D     		adds	r3, r7, #6
 1870 0028 1A88     		ldrh	r2, [r3]
 1871 002a BB1C     		adds	r3, r7, #2
 1872 002c 1B88     		ldrh	r3, [r3]
 1873 002e D318     		adds	r3, r2, r3
 1874 0030 9BB2     		uxth	r3, r3
 1875 0032 1AB2     		sxth	r2, r3
 1876 0034 3B1D     		adds	r3, r7, #4
 1877 0036 0024     		movs	r4, #0
 1878 0038 1C5F     		ldrsh	r4, [r3, r4]
 1879 003a 3B1D     		adds	r3, r7, #4
 1880 003c 0021     		movs	r1, #0
 1881 003e 595E     		ldrsh	r1, [r3, r1]
 1882 0040 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 45


 1883 0042 0020     		movs	r0, #0
 1884 0044 185E     		ldrsh	r0, [r3, r0]
 1885 0046 3B00     		movs	r3, r7
 1886 0048 1B88     		ldrh	r3, [r3]
 1887 004a 0093     		str	r3, [sp]
 1888 004c 2300     		movs	r3, r4
 1889 004e FFF7FEFF 		bl	drawLine
 620:RA8875.c      **** }
 1890              		.loc 1 620 0
 1891 0052 C046     		nop
 1892 0054 BD46     		mov	sp, r7
 1893 0056 02B0     		add	sp, sp, #8
 1894              		@ sp needed
 1895 0058 B0BD     		pop	{r4, r5, r7, pc}
 1896              		.cfi_endproc
 1897              	.LFE55:
 1898              		.size	drawFastHLine, .-drawFastHLine
 1899 005a C046     		.section	.text.drawRect,"ax",%progbits
 1900              		.align	2
 1901              		.global	drawRect
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	drawRect, %function
 1905              	drawRect:
 1906              	.LFB56:
 621:RA8875.c      **** 
 622:RA8875.c      **** /**************************************************************************/
 623:RA8875.c      **** /*!
 624:RA8875.c      ****       Draws a HW accelerated rectangle on the display
 625:RA8875.c      **** 
 626:RA8875.c      ****       @args x[in]     The 0-based x location of the top-right corner
 627:RA8875.c      ****       @args y[in]     The 0-based y location of the top-right corner
 628:RA8875.c      ****       @args w[in]     The rectangle width
 629:RA8875.c      ****       @args h[in]     The rectangle height
 630:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 631:RA8875.c      **** */
 632:RA8875.c      **** /**************************************************************************/
 633:RA8875.c      **** void drawRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
 634:RA8875.c      **** {
 1907              		.loc 1 634 0
 1908              		.cfi_startproc
 1909              		@ args = 4, pretend = 0, frame = 8
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 B0B5     		push	{r4, r5, r7, lr}
 1912              		.cfi_def_cfa_offset 16
 1913              		.cfi_offset 4, -16
 1914              		.cfi_offset 5, -12
 1915              		.cfi_offset 7, -8
 1916              		.cfi_offset 14, -4
 1917 0002 84B0     		sub	sp, sp, #16
 1918              		.cfi_def_cfa_offset 32
 1919 0004 02AF     		add	r7, sp, #8
 1920              		.cfi_def_cfa 7, 24
 1921 0006 0500     		movs	r5, r0
 1922 0008 0C00     		movs	r4, r1
 1923 000a 1000     		movs	r0, r2
 1924 000c 1900     		movs	r1, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 46


 1925 000e BB1D     		adds	r3, r7, #6
 1926 0010 2A1C     		adds	r2, r5, #0
 1927 0012 1A80     		strh	r2, [r3]
 1928 0014 3B1D     		adds	r3, r7, #4
 1929 0016 221C     		adds	r2, r4, #0
 1930 0018 1A80     		strh	r2, [r3]
 1931 001a BB1C     		adds	r3, r7, #2
 1932 001c 021C     		adds	r2, r0, #0
 1933 001e 1A80     		strh	r2, [r3]
 1934 0020 3B00     		movs	r3, r7
 1935 0022 0A1C     		adds	r2, r1, #0
 1936 0024 1A80     		strh	r2, [r3]
 635:RA8875.c      ****   rectHelper(x, y, x+w, y+h, color, false);
 1937              		.loc 1 635 0
 1938 0026 BB1D     		adds	r3, r7, #6
 1939 0028 1A88     		ldrh	r2, [r3]
 1940 002a BB1C     		adds	r3, r7, #2
 1941 002c 1B88     		ldrh	r3, [r3]
 1942 002e D318     		adds	r3, r2, r3
 1943 0030 9BB2     		uxth	r3, r3
 1944 0032 1CB2     		sxth	r4, r3
 1945 0034 3B1D     		adds	r3, r7, #4
 1946 0036 1A88     		ldrh	r2, [r3]
 1947 0038 3B00     		movs	r3, r7
 1948 003a 1B88     		ldrh	r3, [r3]
 1949 003c D318     		adds	r3, r2, r3
 1950 003e 9BB2     		uxth	r3, r3
 1951 0040 1AB2     		sxth	r2, r3
 1952 0042 3B1D     		adds	r3, r7, #4
 1953 0044 0021     		movs	r1, #0
 1954 0046 595E     		ldrsh	r1, [r3, r1]
 1955 0048 BB1D     		adds	r3, r7, #6
 1956 004a 0020     		movs	r0, #0
 1957 004c 185E     		ldrsh	r0, [r3, r0]
 1958 004e 0023     		movs	r3, #0
 1959 0050 0193     		str	r3, [sp, #4]
 1960 0052 1823     		movs	r3, #24
 1961 0054 FB18     		adds	r3, r7, r3
 1962 0056 1B88     		ldrh	r3, [r3]
 1963 0058 0093     		str	r3, [sp]
 1964 005a 1300     		movs	r3, r2
 1965 005c 2200     		movs	r2, r4
 1966 005e FFF7FEFF 		bl	rectHelper
 636:RA8875.c      **** }
 1967              		.loc 1 636 0
 1968 0062 C046     		nop
 1969 0064 BD46     		mov	sp, r7
 1970 0066 02B0     		add	sp, sp, #8
 1971              		@ sp needed
 1972 0068 B0BD     		pop	{r4, r5, r7, pc}
 1973              		.cfi_endproc
 1974              	.LFE56:
 1975              		.size	drawRect, .-drawRect
 1976 006a C046     		.section	.text.fillRect,"ax",%progbits
 1977              		.align	2
 1978              		.global	fillRect
 1979              		.code	16
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 47


 1980              		.thumb_func
 1981              		.type	fillRect, %function
 1982              	fillRect:
 1983              	.LFB57:
 637:RA8875.c      **** 
 638:RA8875.c      **** /**************************************************************************/
 639:RA8875.c      **** /*!
 640:RA8875.c      ****       Draws a HW accelerated filled rectangle on the display
 641:RA8875.c      **** 
 642:RA8875.c      ****       @args x[in]     The 0-based x location of the top-right corner
 643:RA8875.c      ****       @args y[in]     The 0-based y location of the top-right corner
 644:RA8875.c      ****       @args w[in]     The rectangle width
 645:RA8875.c      ****       @args h[in]     The rectangle height
 646:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 647:RA8875.c      **** */
 648:RA8875.c      **** /**************************************************************************/
 649:RA8875.c      **** void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
 650:RA8875.c      **** {
 1984              		.loc 1 650 0
 1985              		.cfi_startproc
 1986              		@ args = 4, pretend = 0, frame = 8
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988 0000 B0B5     		push	{r4, r5, r7, lr}
 1989              		.cfi_def_cfa_offset 16
 1990              		.cfi_offset 4, -16
 1991              		.cfi_offset 5, -12
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 84B0     		sub	sp, sp, #16
 1995              		.cfi_def_cfa_offset 32
 1996 0004 02AF     		add	r7, sp, #8
 1997              		.cfi_def_cfa 7, 24
 1998 0006 0500     		movs	r5, r0
 1999 0008 0C00     		movs	r4, r1
 2000 000a 1000     		movs	r0, r2
 2001 000c 1900     		movs	r1, r3
 2002 000e BB1D     		adds	r3, r7, #6
 2003 0010 2A1C     		adds	r2, r5, #0
 2004 0012 1A80     		strh	r2, [r3]
 2005 0014 3B1D     		adds	r3, r7, #4
 2006 0016 221C     		adds	r2, r4, #0
 2007 0018 1A80     		strh	r2, [r3]
 2008 001a BB1C     		adds	r3, r7, #2
 2009 001c 021C     		adds	r2, r0, #0
 2010 001e 1A80     		strh	r2, [r3]
 2011 0020 3B00     		movs	r3, r7
 2012 0022 0A1C     		adds	r2, r1, #0
 2013 0024 1A80     		strh	r2, [r3]
 651:RA8875.c      ****   rectHelper(x, y, x+w, y+h, color, true);
 2014              		.loc 1 651 0
 2015 0026 BB1D     		adds	r3, r7, #6
 2016 0028 1A88     		ldrh	r2, [r3]
 2017 002a BB1C     		adds	r3, r7, #2
 2018 002c 1B88     		ldrh	r3, [r3]
 2019 002e D318     		adds	r3, r2, r3
 2020 0030 9BB2     		uxth	r3, r3
 2021 0032 1CB2     		sxth	r4, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 48


 2022 0034 3B1D     		adds	r3, r7, #4
 2023 0036 1A88     		ldrh	r2, [r3]
 2024 0038 3B00     		movs	r3, r7
 2025 003a 1B88     		ldrh	r3, [r3]
 2026 003c D318     		adds	r3, r2, r3
 2027 003e 9BB2     		uxth	r3, r3
 2028 0040 1AB2     		sxth	r2, r3
 2029 0042 3B1D     		adds	r3, r7, #4
 2030 0044 0021     		movs	r1, #0
 2031 0046 595E     		ldrsh	r1, [r3, r1]
 2032 0048 BB1D     		adds	r3, r7, #6
 2033 004a 0020     		movs	r0, #0
 2034 004c 185E     		ldrsh	r0, [r3, r0]
 2035 004e 0123     		movs	r3, #1
 2036 0050 0193     		str	r3, [sp, #4]
 2037 0052 1823     		movs	r3, #24
 2038 0054 FB18     		adds	r3, r7, r3
 2039 0056 1B88     		ldrh	r3, [r3]
 2040 0058 0093     		str	r3, [sp]
 2041 005a 1300     		movs	r3, r2
 2042 005c 2200     		movs	r2, r4
 2043 005e FFF7FEFF 		bl	rectHelper
 652:RA8875.c      **** }
 2044              		.loc 1 652 0
 2045 0062 C046     		nop
 2046 0064 BD46     		mov	sp, r7
 2047 0066 02B0     		add	sp, sp, #8
 2048              		@ sp needed
 2049 0068 B0BD     		pop	{r4, r5, r7, pc}
 2050              		.cfi_endproc
 2051              	.LFE57:
 2052              		.size	fillRect, .-fillRect
 2053 006a C046     		.section	.text.fillScreen,"ax",%progbits
 2054              		.align	2
 2055              		.global	fillScreen
 2056              		.code	16
 2057              		.thumb_func
 2058              		.type	fillScreen, %function
 2059              	fillScreen:
 2060              	.LFB58:
 653:RA8875.c      **** 
 654:RA8875.c      **** /**************************************************************************/
 655:RA8875.c      **** /*!
 656:RA8875.c      ****       Fills the screen with the spefied RGB565 color
 657:RA8875.c      **** 
 658:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 659:RA8875.c      **** */
 660:RA8875.c      **** /**************************************************************************/
 661:RA8875.c      **** void fillScreen(uint16_t color)
 662:RA8875.c      **** {  
 2061              		.loc 1 662 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065 0000 80B5     		push	{r7, lr}
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 7, -8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 49


 2068              		.cfi_offset 14, -4
 2069 0002 84B0     		sub	sp, sp, #16
 2070              		.cfi_def_cfa_offset 24
 2071 0004 02AF     		add	r7, sp, #8
 2072              		.cfi_def_cfa 7, 16
 2073 0006 0200     		movs	r2, r0
 2074 0008 BB1D     		adds	r3, r7, #6
 2075 000a 1A80     		strh	r2, [r3]
 663:RA8875.c      ****   rectHelper(0, 0, _width-1, _height-1, color, true);
 2076              		.loc 1 663 0
 2077 000c 0B4B     		ldr	r3, .L62
 2078 000e 1B88     		ldrh	r3, [r3]
 2079 0010 013B     		subs	r3, r3, #1
 2080 0012 9BB2     		uxth	r3, r3
 2081 0014 1AB2     		sxth	r2, r3
 2082 0016 0A4B     		ldr	r3, .L62+4
 2083 0018 1B88     		ldrh	r3, [r3]
 2084 001a 013B     		subs	r3, r3, #1
 2085 001c 9BB2     		uxth	r3, r3
 2086 001e 19B2     		sxth	r1, r3
 2087 0020 0123     		movs	r3, #1
 2088 0022 0193     		str	r3, [sp, #4]
 2089 0024 BB1D     		adds	r3, r7, #6
 2090 0026 1B88     		ldrh	r3, [r3]
 2091 0028 0093     		str	r3, [sp]
 2092 002a 0B00     		movs	r3, r1
 2093 002c 0021     		movs	r1, #0
 2094 002e 0020     		movs	r0, #0
 2095 0030 FFF7FEFF 		bl	rectHelper
 664:RA8875.c      **** }
 2096              		.loc 1 664 0
 2097 0034 C046     		nop
 2098 0036 BD46     		mov	sp, r7
 2099 0038 02B0     		add	sp, sp, #8
 2100              		@ sp needed
 2101 003a 80BD     		pop	{r7, pc}
 2102              	.L63:
 2103              		.align	2
 2104              	.L62:
 2105 003c 00000000 		.word	_width
 2106 0040 00000000 		.word	_height
 2107              		.cfi_endproc
 2108              	.LFE58:
 2109              		.size	fillScreen, .-fillScreen
 2110              		.section	.text.drawCircle,"ax",%progbits
 2111              		.align	2
 2112              		.global	drawCircle
 2113              		.code	16
 2114              		.thumb_func
 2115              		.type	drawCircle, %function
 2116              	drawCircle:
 2117              	.LFB59:
 665:RA8875.c      **** 
 666:RA8875.c      **** /**************************************************************************/
 667:RA8875.c      **** /*!
 668:RA8875.c      ****       Draws a HW accelerated circle on the display
 669:RA8875.c      **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 50


 670:RA8875.c      ****       @args x[in]     The 0-based x location of the center of the circle
 671:RA8875.c      ****       @args y[in]     The 0-based y location of the center of the circle
 672:RA8875.c      ****       @args w[in]     The circle's radius
 673:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 674:RA8875.c      **** */
 675:RA8875.c      **** /**************************************************************************/
 676:RA8875.c      **** void drawCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color)
 677:RA8875.c      **** {
 2118              		.loc 1 677 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 8
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122 0000 B0B5     		push	{r4, r5, r7, lr}
 2123              		.cfi_def_cfa_offset 16
 2124              		.cfi_offset 4, -16
 2125              		.cfi_offset 5, -12
 2126              		.cfi_offset 7, -8
 2127              		.cfi_offset 14, -4
 2128 0002 84B0     		sub	sp, sp, #16
 2129              		.cfi_def_cfa_offset 32
 2130 0004 02AF     		add	r7, sp, #8
 2131              		.cfi_def_cfa 7, 24
 2132 0006 0500     		movs	r5, r0
 2133 0008 0C00     		movs	r4, r1
 2134 000a 1000     		movs	r0, r2
 2135 000c 1900     		movs	r1, r3
 2136 000e BB1D     		adds	r3, r7, #6
 2137 0010 2A1C     		adds	r2, r5, #0
 2138 0012 1A80     		strh	r2, [r3]
 2139 0014 3B1D     		adds	r3, r7, #4
 2140 0016 221C     		adds	r2, r4, #0
 2141 0018 1A80     		strh	r2, [r3]
 2142 001a BB1C     		adds	r3, r7, #2
 2143 001c 021C     		adds	r2, r0, #0
 2144 001e 1A80     		strh	r2, [r3]
 2145 0020 3B00     		movs	r3, r7
 2146 0022 0A1C     		adds	r2, r1, #0
 2147 0024 1A80     		strh	r2, [r3]
 678:RA8875.c      ****   circleHelper(x0, y0, r, color, false);
 2148              		.loc 1 678 0
 2149 0026 3B00     		movs	r3, r7
 2150 0028 1C88     		ldrh	r4, [r3]
 2151 002a BB1C     		adds	r3, r7, #2
 2152 002c 0022     		movs	r2, #0
 2153 002e 9A5E     		ldrsh	r2, [r3, r2]
 2154 0030 3B1D     		adds	r3, r7, #4
 2155 0032 0021     		movs	r1, #0
 2156 0034 595E     		ldrsh	r1, [r3, r1]
 2157 0036 BB1D     		adds	r3, r7, #6
 2158 0038 0020     		movs	r0, #0
 2159 003a 185E     		ldrsh	r0, [r3, r0]
 2160 003c 0023     		movs	r3, #0
 2161 003e 0093     		str	r3, [sp]
 2162 0040 2300     		movs	r3, r4
 2163 0042 FFF7FEFF 		bl	circleHelper
 679:RA8875.c      **** }
 2164              		.loc 1 679 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 51


 2165 0046 C046     		nop
 2166 0048 BD46     		mov	sp, r7
 2167 004a 02B0     		add	sp, sp, #8
 2168              		@ sp needed
 2169 004c B0BD     		pop	{r4, r5, r7, pc}
 2170              		.cfi_endproc
 2171              	.LFE59:
 2172              		.size	drawCircle, .-drawCircle
 2173 004e C046     		.section	.text.fillCircle,"ax",%progbits
 2174              		.align	2
 2175              		.global	fillCircle
 2176              		.code	16
 2177              		.thumb_func
 2178              		.type	fillCircle, %function
 2179              	fillCircle:
 2180              	.LFB60:
 680:RA8875.c      **** 
 681:RA8875.c      **** /**************************************************************************/
 682:RA8875.c      **** /*!
 683:RA8875.c      ****       Draws a HW accelerated filled circle on the display
 684:RA8875.c      **** 
 685:RA8875.c      ****       @args x[in]     The 0-based x location of the center of the circle
 686:RA8875.c      ****       @args y[in]     The 0-based y location of the center of the circle
 687:RA8875.c      ****       @args w[in]     The circle's radius
 688:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 689:RA8875.c      **** */
 690:RA8875.c      **** /**************************************************************************/
 691:RA8875.c      **** void fillCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color)
 692:RA8875.c      **** {
 2181              		.loc 1 692 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 8
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0000 B0B5     		push	{r4, r5, r7, lr}
 2186              		.cfi_def_cfa_offset 16
 2187              		.cfi_offset 4, -16
 2188              		.cfi_offset 5, -12
 2189              		.cfi_offset 7, -8
 2190              		.cfi_offset 14, -4
 2191 0002 84B0     		sub	sp, sp, #16
 2192              		.cfi_def_cfa_offset 32
 2193 0004 02AF     		add	r7, sp, #8
 2194              		.cfi_def_cfa 7, 24
 2195 0006 0500     		movs	r5, r0
 2196 0008 0C00     		movs	r4, r1
 2197 000a 1000     		movs	r0, r2
 2198 000c 1900     		movs	r1, r3
 2199 000e BB1D     		adds	r3, r7, #6
 2200 0010 2A1C     		adds	r2, r5, #0
 2201 0012 1A80     		strh	r2, [r3]
 2202 0014 3B1D     		adds	r3, r7, #4
 2203 0016 221C     		adds	r2, r4, #0
 2204 0018 1A80     		strh	r2, [r3]
 2205 001a BB1C     		adds	r3, r7, #2
 2206 001c 021C     		adds	r2, r0, #0
 2207 001e 1A80     		strh	r2, [r3]
 2208 0020 3B00     		movs	r3, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 52


 2209 0022 0A1C     		adds	r2, r1, #0
 2210 0024 1A80     		strh	r2, [r3]
 693:RA8875.c      ****   circleHelper(x0, y0, r, color, true);
 2211              		.loc 1 693 0
 2212 0026 3B00     		movs	r3, r7
 2213 0028 1C88     		ldrh	r4, [r3]
 2214 002a BB1C     		adds	r3, r7, #2
 2215 002c 0022     		movs	r2, #0
 2216 002e 9A5E     		ldrsh	r2, [r3, r2]
 2217 0030 3B1D     		adds	r3, r7, #4
 2218 0032 0021     		movs	r1, #0
 2219 0034 595E     		ldrsh	r1, [r3, r1]
 2220 0036 BB1D     		adds	r3, r7, #6
 2221 0038 0020     		movs	r0, #0
 2222 003a 185E     		ldrsh	r0, [r3, r0]
 2223 003c 0123     		movs	r3, #1
 2224 003e 0093     		str	r3, [sp]
 2225 0040 2300     		movs	r3, r4
 2226 0042 FFF7FEFF 		bl	circleHelper
 694:RA8875.c      **** }
 2227              		.loc 1 694 0
 2228 0046 C046     		nop
 2229 0048 BD46     		mov	sp, r7
 2230 004a 02B0     		add	sp, sp, #8
 2231              		@ sp needed
 2232 004c B0BD     		pop	{r4, r5, r7, pc}
 2233              		.cfi_endproc
 2234              	.LFE60:
 2235              		.size	fillCircle, .-fillCircle
 2236 004e C046     		.section	.text.drawTriangle,"ax",%progbits
 2237              		.align	2
 2238              		.global	drawTriangle
 2239              		.code	16
 2240              		.thumb_func
 2241              		.type	drawTriangle, %function
 2242              	drawTriangle:
 2243              	.LFB61:
 695:RA8875.c      **** 
 696:RA8875.c      **** /**************************************************************************/
 697:RA8875.c      **** /*!
 698:RA8875.c      ****       Draws a HW accelerated triangle on the display
 699:RA8875.c      **** 
 700:RA8875.c      ****       @args x0[in]    The 0-based x location of point 0 on the triangle
 701:RA8875.c      ****       @args y0[in]    The 0-based y location of point 0 on the triangle
 702:RA8875.c      ****       @args x1[in]    The 0-based x location of point 1 on the triangle
 703:RA8875.c      ****       @args y1[in]    The 0-based y location of point 1 on the triangle
 704:RA8875.c      ****       @args x2[in]    The 0-based x location of point 2 on the triangle
 705:RA8875.c      ****       @args y2[in]    The 0-based y location of point 2 on the triangle
 706:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 707:RA8875.c      **** */
 708:RA8875.c      **** /**************************************************************************/
 709:RA8875.c      **** void drawTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t 
 710:RA8875.c      **** {
 2244              		.loc 1 710 0
 2245              		.cfi_startproc
 2246              		@ args = 12, pretend = 0, frame = 8
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 53


 2248 0000 B0B5     		push	{r4, r5, r7, lr}
 2249              		.cfi_def_cfa_offset 16
 2250              		.cfi_offset 4, -16
 2251              		.cfi_offset 5, -12
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 86B0     		sub	sp, sp, #24
 2255              		.cfi_def_cfa_offset 40
 2256 0004 04AF     		add	r7, sp, #16
 2257              		.cfi_def_cfa 7, 24
 2258 0006 0500     		movs	r5, r0
 2259 0008 0C00     		movs	r4, r1
 2260 000a 1000     		movs	r0, r2
 2261 000c 1900     		movs	r1, r3
 2262 000e BB1D     		adds	r3, r7, #6
 2263 0010 2A1C     		adds	r2, r5, #0
 2264 0012 1A80     		strh	r2, [r3]
 2265 0014 3B1D     		adds	r3, r7, #4
 2266 0016 221C     		adds	r2, r4, #0
 2267 0018 1A80     		strh	r2, [r3]
 2268 001a BB1C     		adds	r3, r7, #2
 2269 001c 021C     		adds	r2, r0, #0
 2270 001e 1A80     		strh	r2, [r3]
 2271 0020 3B00     		movs	r3, r7
 2272 0022 0A1C     		adds	r2, r1, #0
 2273 0024 1A80     		strh	r2, [r3]
 711:RA8875.c      ****   triangleHelper(x0, y0, x1, y1, x2, y2, color, false);
 2274              		.loc 1 711 0
 2275 0026 3B00     		movs	r3, r7
 2276 0028 0024     		movs	r4, #0
 2277 002a 1C5F     		ldrsh	r4, [r3, r4]
 2278 002c BB1C     		adds	r3, r7, #2
 2279 002e 0022     		movs	r2, #0
 2280 0030 9A5E     		ldrsh	r2, [r3, r2]
 2281 0032 3B1D     		adds	r3, r7, #4
 2282 0034 0021     		movs	r1, #0
 2283 0036 595E     		ldrsh	r1, [r3, r1]
 2284 0038 BB1D     		adds	r3, r7, #6
 2285 003a 0020     		movs	r0, #0
 2286 003c 185E     		ldrsh	r0, [r3, r0]
 2287 003e 0023     		movs	r3, #0
 2288 0040 0393     		str	r3, [sp, #12]
 2289 0042 2023     		movs	r3, #32
 2290 0044 FB18     		adds	r3, r7, r3
 2291 0046 1B88     		ldrh	r3, [r3]
 2292 0048 0293     		str	r3, [sp, #8]
 2293 004a 1C23     		movs	r3, #28
 2294 004c FB18     		adds	r3, r7, r3
 2295 004e 0025     		movs	r5, #0
 2296 0050 5B5F     		ldrsh	r3, [r3, r5]
 2297 0052 0193     		str	r3, [sp, #4]
 2298 0054 1823     		movs	r3, #24
 2299 0056 FB18     		adds	r3, r7, r3
 2300 0058 0025     		movs	r5, #0
 2301 005a 5B5F     		ldrsh	r3, [r3, r5]
 2302 005c 0093     		str	r3, [sp]
 2303 005e 2300     		movs	r3, r4
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 54


 2304 0060 FFF7FEFF 		bl	triangleHelper
 712:RA8875.c      **** }
 2305              		.loc 1 712 0
 2306 0064 C046     		nop
 2307 0066 BD46     		mov	sp, r7
 2308 0068 02B0     		add	sp, sp, #8
 2309              		@ sp needed
 2310 006a B0BD     		pop	{r4, r5, r7, pc}
 2311              		.cfi_endproc
 2312              	.LFE61:
 2313              		.size	drawTriangle, .-drawTriangle
 2314              		.section	.text.fillTriangle,"ax",%progbits
 2315              		.align	2
 2316              		.global	fillTriangle
 2317              		.code	16
 2318              		.thumb_func
 2319              		.type	fillTriangle, %function
 2320              	fillTriangle:
 2321              	.LFB62:
 713:RA8875.c      **** 
 714:RA8875.c      **** /**************************************************************************/
 715:RA8875.c      **** /*!
 716:RA8875.c      ****       Draws a HW accelerated filled triangle on the display
 717:RA8875.c      **** 
 718:RA8875.c      ****       @args x0[in]    The 0-based x location of point 0 on the triangle
 719:RA8875.c      ****       @args y0[in]    The 0-based y location of point 0 on the triangle
 720:RA8875.c      ****       @args x1[in]    The 0-based x location of point 1 on the triangle
 721:RA8875.c      ****       @args y1[in]    The 0-based y location of point 1 on the triangle
 722:RA8875.c      ****       @args x2[in]    The 0-based x location of point 2 on the triangle
 723:RA8875.c      ****       @args y2[in]    The 0-based y location of point 2 on the triangle
 724:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 725:RA8875.c      **** */
 726:RA8875.c      **** /**************************************************************************/
 727:RA8875.c      **** void fillTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t 
 728:RA8875.c      **** {
 2322              		.loc 1 728 0
 2323              		.cfi_startproc
 2324              		@ args = 12, pretend = 0, frame = 8
 2325              		@ frame_needed = 1, uses_anonymous_args = 0
 2326 0000 B0B5     		push	{r4, r5, r7, lr}
 2327              		.cfi_def_cfa_offset 16
 2328              		.cfi_offset 4, -16
 2329              		.cfi_offset 5, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
 2332 0002 86B0     		sub	sp, sp, #24
 2333              		.cfi_def_cfa_offset 40
 2334 0004 04AF     		add	r7, sp, #16
 2335              		.cfi_def_cfa 7, 24
 2336 0006 0500     		movs	r5, r0
 2337 0008 0C00     		movs	r4, r1
 2338 000a 1000     		movs	r0, r2
 2339 000c 1900     		movs	r1, r3
 2340 000e BB1D     		adds	r3, r7, #6
 2341 0010 2A1C     		adds	r2, r5, #0
 2342 0012 1A80     		strh	r2, [r3]
 2343 0014 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 55


 2344 0016 221C     		adds	r2, r4, #0
 2345 0018 1A80     		strh	r2, [r3]
 2346 001a BB1C     		adds	r3, r7, #2
 2347 001c 021C     		adds	r2, r0, #0
 2348 001e 1A80     		strh	r2, [r3]
 2349 0020 3B00     		movs	r3, r7
 2350 0022 0A1C     		adds	r2, r1, #0
 2351 0024 1A80     		strh	r2, [r3]
 729:RA8875.c      ****   triangleHelper(x0, y0, x1, y1, x2, y2, color, true);
 2352              		.loc 1 729 0
 2353 0026 3B00     		movs	r3, r7
 2354 0028 0024     		movs	r4, #0
 2355 002a 1C5F     		ldrsh	r4, [r3, r4]
 2356 002c BB1C     		adds	r3, r7, #2
 2357 002e 0022     		movs	r2, #0
 2358 0030 9A5E     		ldrsh	r2, [r3, r2]
 2359 0032 3B1D     		adds	r3, r7, #4
 2360 0034 0021     		movs	r1, #0
 2361 0036 595E     		ldrsh	r1, [r3, r1]
 2362 0038 BB1D     		adds	r3, r7, #6
 2363 003a 0020     		movs	r0, #0
 2364 003c 185E     		ldrsh	r0, [r3, r0]
 2365 003e 0123     		movs	r3, #1
 2366 0040 0393     		str	r3, [sp, #12]
 2367 0042 2023     		movs	r3, #32
 2368 0044 FB18     		adds	r3, r7, r3
 2369 0046 1B88     		ldrh	r3, [r3]
 2370 0048 0293     		str	r3, [sp, #8]
 2371 004a 1C23     		movs	r3, #28
 2372 004c FB18     		adds	r3, r7, r3
 2373 004e 0025     		movs	r5, #0
 2374 0050 5B5F     		ldrsh	r3, [r3, r5]
 2375 0052 0193     		str	r3, [sp, #4]
 2376 0054 1823     		movs	r3, #24
 2377 0056 FB18     		adds	r3, r7, r3
 2378 0058 0025     		movs	r5, #0
 2379 005a 5B5F     		ldrsh	r3, [r3, r5]
 2380 005c 0093     		str	r3, [sp]
 2381 005e 2300     		movs	r3, r4
 2382 0060 FFF7FEFF 		bl	triangleHelper
 730:RA8875.c      **** }
 2383              		.loc 1 730 0
 2384 0064 C046     		nop
 2385 0066 BD46     		mov	sp, r7
 2386 0068 02B0     		add	sp, sp, #8
 2387              		@ sp needed
 2388 006a B0BD     		pop	{r4, r5, r7, pc}
 2389              		.cfi_endproc
 2390              	.LFE62:
 2391              		.size	fillTriangle, .-fillTriangle
 2392              		.section	.text.drawEllipse,"ax",%progbits
 2393              		.align	2
 2394              		.global	drawEllipse
 2395              		.code	16
 2396              		.thumb_func
 2397              		.type	drawEllipse, %function
 2398              	drawEllipse:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 56


 2399              	.LFB63:
 731:RA8875.c      **** 
 732:RA8875.c      **** /**************************************************************************/
 733:RA8875.c      **** /*!
 734:RA8875.c      ****       Draws a HW accelerated ellipse on the display
 735:RA8875.c      **** 
 736:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 737:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 738:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 739:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 740:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 741:RA8875.c      **** */
 742:RA8875.c      **** /**************************************************************************/
 743:RA8875.c      **** void drawEllipse(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t co
 744:RA8875.c      **** {
 2400              		.loc 1 744 0
 2401              		.cfi_startproc
 2402              		@ args = 4, pretend = 0, frame = 8
 2403              		@ frame_needed = 1, uses_anonymous_args = 0
 2404 0000 B0B5     		push	{r4, r5, r7, lr}
 2405              		.cfi_def_cfa_offset 16
 2406              		.cfi_offset 4, -16
 2407              		.cfi_offset 5, -12
 2408              		.cfi_offset 7, -8
 2409              		.cfi_offset 14, -4
 2410 0002 84B0     		sub	sp, sp, #16
 2411              		.cfi_def_cfa_offset 32
 2412 0004 02AF     		add	r7, sp, #8
 2413              		.cfi_def_cfa 7, 24
 2414 0006 0500     		movs	r5, r0
 2415 0008 0C00     		movs	r4, r1
 2416 000a 1000     		movs	r0, r2
 2417 000c 1900     		movs	r1, r3
 2418 000e BB1D     		adds	r3, r7, #6
 2419 0010 2A1C     		adds	r2, r5, #0
 2420 0012 1A80     		strh	r2, [r3]
 2421 0014 3B1D     		adds	r3, r7, #4
 2422 0016 221C     		adds	r2, r4, #0
 2423 0018 1A80     		strh	r2, [r3]
 2424 001a BB1C     		adds	r3, r7, #2
 2425 001c 021C     		adds	r2, r0, #0
 2426 001e 1A80     		strh	r2, [r3]
 2427 0020 3B00     		movs	r3, r7
 2428 0022 0A1C     		adds	r2, r1, #0
 2429 0024 1A80     		strh	r2, [r3]
 745:RA8875.c      ****   ellipseHelper(xCenter, yCenter, longAxis, shortAxis, color, false);
 2430              		.loc 1 745 0
 2431 0026 3B00     		movs	r3, r7
 2432 0028 0024     		movs	r4, #0
 2433 002a 1C5F     		ldrsh	r4, [r3, r4]
 2434 002c BB1C     		adds	r3, r7, #2
 2435 002e 0022     		movs	r2, #0
 2436 0030 9A5E     		ldrsh	r2, [r3, r2]
 2437 0032 3B1D     		adds	r3, r7, #4
 2438 0034 0021     		movs	r1, #0
 2439 0036 595E     		ldrsh	r1, [r3, r1]
 2440 0038 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 57


 2441 003a 0020     		movs	r0, #0
 2442 003c 185E     		ldrsh	r0, [r3, r0]
 2443 003e 0023     		movs	r3, #0
 2444 0040 0193     		str	r3, [sp, #4]
 2445 0042 1823     		movs	r3, #24
 2446 0044 FB18     		adds	r3, r7, r3
 2447 0046 1B88     		ldrh	r3, [r3]
 2448 0048 0093     		str	r3, [sp]
 2449 004a 2300     		movs	r3, r4
 2450 004c FFF7FEFF 		bl	ellipseHelper
 746:RA8875.c      **** }
 2451              		.loc 1 746 0
 2452 0050 C046     		nop
 2453 0052 BD46     		mov	sp, r7
 2454 0054 02B0     		add	sp, sp, #8
 2455              		@ sp needed
 2456 0056 B0BD     		pop	{r4, r5, r7, pc}
 2457              		.cfi_endproc
 2458              	.LFE63:
 2459              		.size	drawEllipse, .-drawEllipse
 2460              		.section	.text.fillEllipse,"ax",%progbits
 2461              		.align	2
 2462              		.global	fillEllipse
 2463              		.code	16
 2464              		.thumb_func
 2465              		.type	fillEllipse, %function
 2466              	fillEllipse:
 2467              	.LFB64:
 747:RA8875.c      **** 
 748:RA8875.c      **** /**************************************************************************/
 749:RA8875.c      **** /*!
 750:RA8875.c      ****       Draws a HW accelerated filled ellipse on the display
 751:RA8875.c      **** 
 752:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 753:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 754:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 755:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 756:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 757:RA8875.c      **** */
 758:RA8875.c      **** /**************************************************************************/
 759:RA8875.c      **** void fillEllipse(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t co
 760:RA8875.c      **** {
 2468              		.loc 1 760 0
 2469              		.cfi_startproc
 2470              		@ args = 4, pretend = 0, frame = 8
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472 0000 B0B5     		push	{r4, r5, r7, lr}
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 84B0     		sub	sp, sp, #16
 2479              		.cfi_def_cfa_offset 32
 2480 0004 02AF     		add	r7, sp, #8
 2481              		.cfi_def_cfa 7, 24
 2482 0006 0500     		movs	r5, r0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 58


 2483 0008 0C00     		movs	r4, r1
 2484 000a 1000     		movs	r0, r2
 2485 000c 1900     		movs	r1, r3
 2486 000e BB1D     		adds	r3, r7, #6
 2487 0010 2A1C     		adds	r2, r5, #0
 2488 0012 1A80     		strh	r2, [r3]
 2489 0014 3B1D     		adds	r3, r7, #4
 2490 0016 221C     		adds	r2, r4, #0
 2491 0018 1A80     		strh	r2, [r3]
 2492 001a BB1C     		adds	r3, r7, #2
 2493 001c 021C     		adds	r2, r0, #0
 2494 001e 1A80     		strh	r2, [r3]
 2495 0020 3B00     		movs	r3, r7
 2496 0022 0A1C     		adds	r2, r1, #0
 2497 0024 1A80     		strh	r2, [r3]
 761:RA8875.c      ****   ellipseHelper(xCenter, yCenter, longAxis, shortAxis, color, true);
 2498              		.loc 1 761 0
 2499 0026 3B00     		movs	r3, r7
 2500 0028 0024     		movs	r4, #0
 2501 002a 1C5F     		ldrsh	r4, [r3, r4]
 2502 002c BB1C     		adds	r3, r7, #2
 2503 002e 0022     		movs	r2, #0
 2504 0030 9A5E     		ldrsh	r2, [r3, r2]
 2505 0032 3B1D     		adds	r3, r7, #4
 2506 0034 0021     		movs	r1, #0
 2507 0036 595E     		ldrsh	r1, [r3, r1]
 2508 0038 BB1D     		adds	r3, r7, #6
 2509 003a 0020     		movs	r0, #0
 2510 003c 185E     		ldrsh	r0, [r3, r0]
 2511 003e 0123     		movs	r3, #1
 2512 0040 0193     		str	r3, [sp, #4]
 2513 0042 1823     		movs	r3, #24
 2514 0044 FB18     		adds	r3, r7, r3
 2515 0046 1B88     		ldrh	r3, [r3]
 2516 0048 0093     		str	r3, [sp]
 2517 004a 2300     		movs	r3, r4
 2518 004c FFF7FEFF 		bl	ellipseHelper
 762:RA8875.c      **** }
 2519              		.loc 1 762 0
 2520 0050 C046     		nop
 2521 0052 BD46     		mov	sp, r7
 2522 0054 02B0     		add	sp, sp, #8
 2523              		@ sp needed
 2524 0056 B0BD     		pop	{r4, r5, r7, pc}
 2525              		.cfi_endproc
 2526              	.LFE64:
 2527              		.size	fillEllipse, .-fillEllipse
 2528              		.section	.text.drawCurve,"ax",%progbits
 2529              		.align	2
 2530              		.global	drawCurve
 2531              		.code	16
 2532              		.thumb_func
 2533              		.type	drawCurve, %function
 2534              	drawCurve:
 2535              	.LFB65:
 763:RA8875.c      **** 
 764:RA8875.c      **** /**************************************************************************/
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 59


 765:RA8875.c      **** /*!
 766:RA8875.c      ****       Draws a HW accelerated curve on the display
 767:RA8875.c      **** 
 768:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 769:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 770:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 771:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 772:RA8875.c      ****       @args curvePart[in] The corner to draw, where in clock-wise motion:
 773:RA8875.c      ****                             0 = 180-270°
 774:RA8875.c      ****                             1 = 270-0°
 775:RA8875.c      ****                             2 = 0-90°
 776:RA8875.c      ****                             3 = 90-180°
 777:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 778:RA8875.c      **** */
 779:RA8875.c      **** /**************************************************************************/
 780:RA8875.c      **** void drawCurve(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t curve
 781:RA8875.c      **** {
 2536              		.loc 1 781 0
 2537              		.cfi_startproc
 2538              		@ args = 8, pretend = 0, frame = 8
 2539              		@ frame_needed = 1, uses_anonymous_args = 0
 2540 0000 B0B5     		push	{r4, r5, r7, lr}
 2541              		.cfi_def_cfa_offset 16
 2542              		.cfi_offset 4, -16
 2543              		.cfi_offset 5, -12
 2544              		.cfi_offset 7, -8
 2545              		.cfi_offset 14, -4
 2546 0002 86B0     		sub	sp, sp, #24
 2547              		.cfi_def_cfa_offset 40
 2548 0004 04AF     		add	r7, sp, #16
 2549              		.cfi_def_cfa 7, 24
 2550 0006 0500     		movs	r5, r0
 2551 0008 0C00     		movs	r4, r1
 2552 000a 1000     		movs	r0, r2
 2553 000c 1900     		movs	r1, r3
 2554 000e BB1D     		adds	r3, r7, #6
 2555 0010 2A1C     		adds	r2, r5, #0
 2556 0012 1A80     		strh	r2, [r3]
 2557 0014 3B1D     		adds	r3, r7, #4
 2558 0016 221C     		adds	r2, r4, #0
 2559 0018 1A80     		strh	r2, [r3]
 2560 001a BB1C     		adds	r3, r7, #2
 2561 001c 021C     		adds	r2, r0, #0
 2562 001e 1A80     		strh	r2, [r3]
 2563 0020 3B00     		movs	r3, r7
 2564 0022 0A1C     		adds	r2, r1, #0
 2565 0024 1A80     		strh	r2, [r3]
 782:RA8875.c      ****   curveHelper(xCenter, yCenter, longAxis, shortAxis, curvePart, color, false);
 2566              		.loc 1 782 0
 2567 0026 3B00     		movs	r3, r7
 2568 0028 0024     		movs	r4, #0
 2569 002a 1C5F     		ldrsh	r4, [r3, r4]
 2570 002c BB1C     		adds	r3, r7, #2
 2571 002e 0022     		movs	r2, #0
 2572 0030 9A5E     		ldrsh	r2, [r3, r2]
 2573 0032 3B1D     		adds	r3, r7, #4
 2574 0034 0021     		movs	r1, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 60


 2575 0036 595E     		ldrsh	r1, [r3, r1]
 2576 0038 BB1D     		adds	r3, r7, #6
 2577 003a 0020     		movs	r0, #0
 2578 003c 185E     		ldrsh	r0, [r3, r0]
 2579 003e 0023     		movs	r3, #0
 2580 0040 0293     		str	r3, [sp, #8]
 2581 0042 1C23     		movs	r3, #28
 2582 0044 FB18     		adds	r3, r7, r3
 2583 0046 1B88     		ldrh	r3, [r3]
 2584 0048 0193     		str	r3, [sp, #4]
 2585 004a 1823     		movs	r3, #24
 2586 004c FB18     		adds	r3, r7, r3
 2587 004e 1B78     		ldrb	r3, [r3]
 2588 0050 0093     		str	r3, [sp]
 2589 0052 2300     		movs	r3, r4
 2590 0054 FFF7FEFF 		bl	curveHelper
 783:RA8875.c      **** }
 2591              		.loc 1 783 0
 2592 0058 C046     		nop
 2593 005a BD46     		mov	sp, r7
 2594 005c 02B0     		add	sp, sp, #8
 2595              		@ sp needed
 2596 005e B0BD     		pop	{r4, r5, r7, pc}
 2597              		.cfi_endproc
 2598              	.LFE65:
 2599              		.size	drawCurve, .-drawCurve
 2600              		.section	.text.fillCurve,"ax",%progbits
 2601              		.align	2
 2602              		.global	fillCurve
 2603              		.code	16
 2604              		.thumb_func
 2605              		.type	fillCurve, %function
 2606              	fillCurve:
 2607              	.LFB66:
 784:RA8875.c      **** 
 785:RA8875.c      **** /**************************************************************************/
 786:RA8875.c      **** /*!
 787:RA8875.c      ****       Draws a HW accelerated filled curve on the display
 788:RA8875.c      **** 
 789:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 790:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 791:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 792:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 793:RA8875.c      ****       @args curvePart[in] The corner to draw, where in clock-wise motion:
 794:RA8875.c      ****                             0 = 180-270°
 795:RA8875.c      ****                             1 = 270-0°
 796:RA8875.c      ****                             2 = 0-90°
 797:RA8875.c      ****                             3 = 90-180°
 798:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 799:RA8875.c      **** */
 800:RA8875.c      **** /**************************************************************************/
 801:RA8875.c      **** void fillCurve(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t curve
 802:RA8875.c      **** {
 2608              		.loc 1 802 0
 2609              		.cfi_startproc
 2610              		@ args = 8, pretend = 0, frame = 8
 2611              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 61


 2612 0000 B0B5     		push	{r4, r5, r7, lr}
 2613              		.cfi_def_cfa_offset 16
 2614              		.cfi_offset 4, -16
 2615              		.cfi_offset 5, -12
 2616              		.cfi_offset 7, -8
 2617              		.cfi_offset 14, -4
 2618 0002 86B0     		sub	sp, sp, #24
 2619              		.cfi_def_cfa_offset 40
 2620 0004 04AF     		add	r7, sp, #16
 2621              		.cfi_def_cfa 7, 24
 2622 0006 0500     		movs	r5, r0
 2623 0008 0C00     		movs	r4, r1
 2624 000a 1000     		movs	r0, r2
 2625 000c 1900     		movs	r1, r3
 2626 000e BB1D     		adds	r3, r7, #6
 2627 0010 2A1C     		adds	r2, r5, #0
 2628 0012 1A80     		strh	r2, [r3]
 2629 0014 3B1D     		adds	r3, r7, #4
 2630 0016 221C     		adds	r2, r4, #0
 2631 0018 1A80     		strh	r2, [r3]
 2632 001a BB1C     		adds	r3, r7, #2
 2633 001c 021C     		adds	r2, r0, #0
 2634 001e 1A80     		strh	r2, [r3]
 2635 0020 3B00     		movs	r3, r7
 2636 0022 0A1C     		adds	r2, r1, #0
 2637 0024 1A80     		strh	r2, [r3]
 803:RA8875.c      ****   curveHelper(xCenter, yCenter, longAxis, shortAxis, curvePart, color, true);
 2638              		.loc 1 803 0
 2639 0026 3B00     		movs	r3, r7
 2640 0028 0024     		movs	r4, #0
 2641 002a 1C5F     		ldrsh	r4, [r3, r4]
 2642 002c BB1C     		adds	r3, r7, #2
 2643 002e 0022     		movs	r2, #0
 2644 0030 9A5E     		ldrsh	r2, [r3, r2]
 2645 0032 3B1D     		adds	r3, r7, #4
 2646 0034 0021     		movs	r1, #0
 2647 0036 595E     		ldrsh	r1, [r3, r1]
 2648 0038 BB1D     		adds	r3, r7, #6
 2649 003a 0020     		movs	r0, #0
 2650 003c 185E     		ldrsh	r0, [r3, r0]
 2651 003e 0123     		movs	r3, #1
 2652 0040 0293     		str	r3, [sp, #8]
 2653 0042 1C23     		movs	r3, #28
 2654 0044 FB18     		adds	r3, r7, r3
 2655 0046 1B88     		ldrh	r3, [r3]
 2656 0048 0193     		str	r3, [sp, #4]
 2657 004a 1823     		movs	r3, #24
 2658 004c FB18     		adds	r3, r7, r3
 2659 004e 1B78     		ldrb	r3, [r3]
 2660 0050 0093     		str	r3, [sp]
 2661 0052 2300     		movs	r3, r4
 2662 0054 FFF7FEFF 		bl	curveHelper
 804:RA8875.c      **** }
 2663              		.loc 1 804 0
 2664 0058 C046     		nop
 2665 005a BD46     		mov	sp, r7
 2666 005c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 62


 2667              		@ sp needed
 2668 005e B0BD     		pop	{r4, r5, r7, pc}
 2669              		.cfi_endproc
 2670              	.LFE66:
 2671              		.size	fillCurve, .-fillCurve
 2672              		.section	.text.circleHelper,"ax",%progbits
 2673              		.align	2
 2674              		.global	circleHelper
 2675              		.code	16
 2676              		.thumb_func
 2677              		.type	circleHelper, %function
 2678              	circleHelper:
 2679              	.LFB67:
 805:RA8875.c      **** 
 806:RA8875.c      **** /**************************************************************************/
 807:RA8875.c      **** /*!
 808:RA8875.c      ****       Helper function for higher level circle drawing code
 809:RA8875.c      **** */
 810:RA8875.c      **** /**************************************************************************/
 811:RA8875.c      **** void circleHelper(int16_t x0, int16_t y0, int16_t r, uint16_t color, bool filled)
 812:RA8875.c      **** {
 2680              		.loc 1 812 0
 2681              		.cfi_startproc
 2682              		@ args = 4, pretend = 0, frame = 8
 2683              		@ frame_needed = 1, uses_anonymous_args = 0
 2684 0000 B0B5     		push	{r4, r5, r7, lr}
 2685              		.cfi_def_cfa_offset 16
 2686              		.cfi_offset 4, -16
 2687              		.cfi_offset 5, -12
 2688              		.cfi_offset 7, -8
 2689              		.cfi_offset 14, -4
 2690 0002 82B0     		sub	sp, sp, #8
 2691              		.cfi_def_cfa_offset 24
 2692 0004 00AF     		add	r7, sp, #0
 2693              		.cfi_def_cfa_register 7
 2694 0006 0500     		movs	r5, r0
 2695 0008 0C00     		movs	r4, r1
 2696 000a 1000     		movs	r0, r2
 2697 000c 1900     		movs	r1, r3
 2698 000e BB1D     		adds	r3, r7, #6
 2699 0010 2A1C     		adds	r2, r5, #0
 2700 0012 1A80     		strh	r2, [r3]
 2701 0014 3B1D     		adds	r3, r7, #4
 2702 0016 221C     		adds	r2, r4, #0
 2703 0018 1A80     		strh	r2, [r3]
 2704 001a BB1C     		adds	r3, r7, #2
 2705 001c 021C     		adds	r2, r0, #0
 2706 001e 1A80     		strh	r2, [r3]
 2707 0020 3B00     		movs	r3, r7
 2708 0022 0A1C     		adds	r2, r1, #0
 2709 0024 1A80     		strh	r2, [r3]
 813:RA8875.c      ****   /* Set X */
 814:RA8875.c      ****   writeCommand(0x99);
 2710              		.loc 1 814 0
 2711 0026 9920     		movs	r0, #153
 2712 0028 FFF7FEFF 		bl	writeCommand
 815:RA8875.c      ****   writeData(x0);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 63


 2713              		.loc 1 815 0
 2714 002c BB1D     		adds	r3, r7, #6
 2715 002e 1B88     		ldrh	r3, [r3]
 2716 0030 DBB2     		uxtb	r3, r3
 2717 0032 1800     		movs	r0, r3
 2718 0034 FFF7FEFF 		bl	writeData
 816:RA8875.c      ****   writeCommand(0x9a);
 2719              		.loc 1 816 0
 2720 0038 9A20     		movs	r0, #154
 2721 003a FFF7FEFF 		bl	writeCommand
 817:RA8875.c      ****   writeData(x0 >> 8);
 2722              		.loc 1 817 0
 2723 003e BB1D     		adds	r3, r7, #6
 2724 0040 0022     		movs	r2, #0
 2725 0042 9B5E     		ldrsh	r3, [r3, r2]
 2726 0044 1B12     		asrs	r3, r3, #8
 2727 0046 1BB2     		sxth	r3, r3
 2728 0048 DBB2     		uxtb	r3, r3
 2729 004a 1800     		movs	r0, r3
 2730 004c FFF7FEFF 		bl	writeData
 818:RA8875.c      ****   
 819:RA8875.c      ****   /* Set Y */
 820:RA8875.c      ****   writeCommand(0x9b);
 2731              		.loc 1 820 0
 2732 0050 9B20     		movs	r0, #155
 2733 0052 FFF7FEFF 		bl	writeCommand
 821:RA8875.c      ****   writeData(y0); 
 2734              		.loc 1 821 0
 2735 0056 3B1D     		adds	r3, r7, #4
 2736 0058 1B88     		ldrh	r3, [r3]
 2737 005a DBB2     		uxtb	r3, r3
 2738 005c 1800     		movs	r0, r3
 2739 005e FFF7FEFF 		bl	writeData
 822:RA8875.c      ****   writeCommand(0x9c);	   
 2740              		.loc 1 822 0
 2741 0062 9C20     		movs	r0, #156
 2742 0064 FFF7FEFF 		bl	writeCommand
 823:RA8875.c      ****   writeData(y0 >> 8);
 2743              		.loc 1 823 0
 2744 0068 3B1D     		adds	r3, r7, #4
 2745 006a 0022     		movs	r2, #0
 2746 006c 9B5E     		ldrsh	r3, [r3, r2]
 2747 006e 1B12     		asrs	r3, r3, #8
 2748 0070 1BB2     		sxth	r3, r3
 2749 0072 DBB2     		uxtb	r3, r3
 2750 0074 1800     		movs	r0, r3
 2751 0076 FFF7FEFF 		bl	writeData
 824:RA8875.c      ****   
 825:RA8875.c      ****   /* Set Radius */
 826:RA8875.c      ****   writeCommand(0x9d);
 2752              		.loc 1 826 0
 2753 007a 9D20     		movs	r0, #157
 2754 007c FFF7FEFF 		bl	writeCommand
 827:RA8875.c      ****   writeData(r);  
 2755              		.loc 1 827 0
 2756 0080 BB1C     		adds	r3, r7, #2
 2757 0082 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 64


 2758 0084 DBB2     		uxtb	r3, r3
 2759 0086 1800     		movs	r0, r3
 2760 0088 FFF7FEFF 		bl	writeData
 828:RA8875.c      ****   
 829:RA8875.c      ****   /* Set Color */
 830:RA8875.c      ****   writeCommand(0x63);
 2761              		.loc 1 830 0
 2762 008c 6320     		movs	r0, #99
 2763 008e FFF7FEFF 		bl	writeCommand
 831:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 2764              		.loc 1 831 0
 2765 0092 3B00     		movs	r3, r7
 2766 0094 1B88     		ldrh	r3, [r3]
 2767 0096 DB0A     		lsrs	r3, r3, #11
 2768 0098 9BB2     		uxth	r3, r3
 2769 009a DBB2     		uxtb	r3, r3
 2770 009c 1800     		movs	r0, r3
 2771 009e FFF7FEFF 		bl	writeData
 832:RA8875.c      ****   writeCommand(0x64);
 2772              		.loc 1 832 0
 2773 00a2 6420     		movs	r0, #100
 2774 00a4 FFF7FEFF 		bl	writeCommand
 833:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 2775              		.loc 1 833 0
 2776 00a8 3B00     		movs	r3, r7
 2777 00aa 1B88     		ldrh	r3, [r3]
 2778 00ac 5B11     		asrs	r3, r3, #5
 2779 00ae DBB2     		uxtb	r3, r3
 2780 00b0 3F22     		movs	r2, #63
 2781 00b2 1340     		ands	r3, r2
 2782 00b4 DBB2     		uxtb	r3, r3
 2783 00b6 1800     		movs	r0, r3
 2784 00b8 FFF7FEFF 		bl	writeData
 834:RA8875.c      ****   writeCommand(0x65);
 2785              		.loc 1 834 0
 2786 00bc 6520     		movs	r0, #101
 2787 00be FFF7FEFF 		bl	writeCommand
 835:RA8875.c      ****   writeData((color & 0x001f));
 2788              		.loc 1 835 0
 2789 00c2 3B00     		movs	r3, r7
 2790 00c4 1B88     		ldrh	r3, [r3]
 2791 00c6 DBB2     		uxtb	r3, r3
 2792 00c8 1F22     		movs	r2, #31
 2793 00ca 1340     		ands	r3, r2
 2794 00cc DBB2     		uxtb	r3, r3
 2795 00ce 1800     		movs	r0, r3
 2796 00d0 FFF7FEFF 		bl	writeData
 836:RA8875.c      ****   
 837:RA8875.c      ****   /* Draw! */
 838:RA8875.c      ****   writeCommand(RA8875_DCR);
 2797              		.loc 1 838 0
 2798 00d4 9020     		movs	r0, #144
 2799 00d6 FFF7FEFF 		bl	writeCommand
 839:RA8875.c      ****   if (filled)
 2800              		.loc 1 839 0
 2801 00da 1823     		movs	r3, #24
 2802 00dc FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 65


 2803 00de 1B78     		ldrb	r3, [r3]
 2804 00e0 002B     		cmp	r3, #0
 2805 00e2 03D0     		beq	.L73
 840:RA8875.c      ****   {
 841:RA8875.c      ****     writeData(RA8875_DCR_CIRCLE_START | RA8875_DCR_FILL);
 2806              		.loc 1 841 0
 2807 00e4 6020     		movs	r0, #96
 2808 00e6 FFF7FEFF 		bl	writeData
 2809 00ea 02E0     		b	.L74
 2810              	.L73:
 842:RA8875.c      ****   }
 843:RA8875.c      ****   else
 844:RA8875.c      ****   {
 845:RA8875.c      ****     writeData(RA8875_DCR_CIRCLE_START | RA8875_DCR_NOFILL);
 2811              		.loc 1 845 0
 2812 00ec 4020     		movs	r0, #64
 2813 00ee FFF7FEFF 		bl	writeData
 2814              	.L74:
 846:RA8875.c      ****   }
 847:RA8875.c      ****   
 848:RA8875.c      ****   /* Wait for the command to finish */
 849:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_CIRCLE_STATUS);
 2815              		.loc 1 849 0
 2816 00f2 4021     		movs	r1, #64
 2817 00f4 9020     		movs	r0, #144
 2818 00f6 FFF7FEFF 		bl	waitPoll
 850:RA8875.c      **** }
 2819              		.loc 1 850 0
 2820 00fa C046     		nop
 2821 00fc BD46     		mov	sp, r7
 2822 00fe 02B0     		add	sp, sp, #8
 2823              		@ sp needed
 2824 0100 B0BD     		pop	{r4, r5, r7, pc}
 2825              		.cfi_endproc
 2826              	.LFE67:
 2827              		.size	circleHelper, .-circleHelper
 2828 0102 C046     		.section	.text.rectHelper,"ax",%progbits
 2829              		.align	2
 2830              		.global	rectHelper
 2831              		.code	16
 2832              		.thumb_func
 2833              		.type	rectHelper, %function
 2834              	rectHelper:
 2835              	.LFB68:
 851:RA8875.c      **** 
 852:RA8875.c      **** /**************************************************************************/
 853:RA8875.c      **** /*!
 854:RA8875.c      ****       Helper function for higher level rectangle drawing code
 855:RA8875.c      **** */
 856:RA8875.c      **** /**************************************************************************/
 857:RA8875.c      **** void rectHelper(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color, bool filled)
 858:RA8875.c      **** {
 2836              		.loc 1 858 0
 2837              		.cfi_startproc
 2838              		@ args = 8, pretend = 0, frame = 8
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 66


 2841              		.cfi_def_cfa_offset 16
 2842              		.cfi_offset 4, -16
 2843              		.cfi_offset 5, -12
 2844              		.cfi_offset 7, -8
 2845              		.cfi_offset 14, -4
 2846 0002 82B0     		sub	sp, sp, #8
 2847              		.cfi_def_cfa_offset 24
 2848 0004 00AF     		add	r7, sp, #0
 2849              		.cfi_def_cfa_register 7
 2850 0006 0500     		movs	r5, r0
 2851 0008 0C00     		movs	r4, r1
 2852 000a 1000     		movs	r0, r2
 2853 000c 1900     		movs	r1, r3
 2854 000e BB1D     		adds	r3, r7, #6
 2855 0010 2A1C     		adds	r2, r5, #0
 2856 0012 1A80     		strh	r2, [r3]
 2857 0014 3B1D     		adds	r3, r7, #4
 2858 0016 221C     		adds	r2, r4, #0
 2859 0018 1A80     		strh	r2, [r3]
 2860 001a BB1C     		adds	r3, r7, #2
 2861 001c 021C     		adds	r2, r0, #0
 2862 001e 1A80     		strh	r2, [r3]
 2863 0020 3B00     		movs	r3, r7
 2864 0022 0A1C     		adds	r2, r1, #0
 2865 0024 1A80     		strh	r2, [r3]
 859:RA8875.c      ****   /* Set X */
 860:RA8875.c      ****   writeCommand(0x91);
 2866              		.loc 1 860 0
 2867 0026 9120     		movs	r0, #145
 2868 0028 FFF7FEFF 		bl	writeCommand
 861:RA8875.c      ****   writeData(x);
 2869              		.loc 1 861 0
 2870 002c BB1D     		adds	r3, r7, #6
 2871 002e 1B88     		ldrh	r3, [r3]
 2872 0030 DBB2     		uxtb	r3, r3
 2873 0032 1800     		movs	r0, r3
 2874 0034 FFF7FEFF 		bl	writeData
 862:RA8875.c      ****   writeCommand(0x92);
 2875              		.loc 1 862 0
 2876 0038 9220     		movs	r0, #146
 2877 003a FFF7FEFF 		bl	writeCommand
 863:RA8875.c      ****   writeData(x >> 8);
 2878              		.loc 1 863 0
 2879 003e BB1D     		adds	r3, r7, #6
 2880 0040 0022     		movs	r2, #0
 2881 0042 9B5E     		ldrsh	r3, [r3, r2]
 2882 0044 1B12     		asrs	r3, r3, #8
 2883 0046 1BB2     		sxth	r3, r3
 2884 0048 DBB2     		uxtb	r3, r3
 2885 004a 1800     		movs	r0, r3
 2886 004c FFF7FEFF 		bl	writeData
 864:RA8875.c      ****   
 865:RA8875.c      ****   /* Set Y */
 866:RA8875.c      ****   writeCommand(0x93);
 2887              		.loc 1 866 0
 2888 0050 9320     		movs	r0, #147
 2889 0052 FFF7FEFF 		bl	writeCommand
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 67


 867:RA8875.c      ****   writeData(y); 
 2890              		.loc 1 867 0
 2891 0056 3B1D     		adds	r3, r7, #4
 2892 0058 1B88     		ldrh	r3, [r3]
 2893 005a DBB2     		uxtb	r3, r3
 2894 005c 1800     		movs	r0, r3
 2895 005e FFF7FEFF 		bl	writeData
 868:RA8875.c      ****   writeCommand(0x94);	   
 2896              		.loc 1 868 0
 2897 0062 9420     		movs	r0, #148
 2898 0064 FFF7FEFF 		bl	writeCommand
 869:RA8875.c      ****   writeData(y >> 8);
 2899              		.loc 1 869 0
 2900 0068 3B1D     		adds	r3, r7, #4
 2901 006a 0022     		movs	r2, #0
 2902 006c 9B5E     		ldrsh	r3, [r3, r2]
 2903 006e 1B12     		asrs	r3, r3, #8
 2904 0070 1BB2     		sxth	r3, r3
 2905 0072 DBB2     		uxtb	r3, r3
 2906 0074 1800     		movs	r0, r3
 2907 0076 FFF7FEFF 		bl	writeData
 870:RA8875.c      ****   
 871:RA8875.c      ****   /* Set X1 */
 872:RA8875.c      ****   writeCommand(0x95);
 2908              		.loc 1 872 0
 2909 007a 9520     		movs	r0, #149
 2910 007c FFF7FEFF 		bl	writeCommand
 873:RA8875.c      ****   writeData(w);
 2911              		.loc 1 873 0
 2912 0080 BB1C     		adds	r3, r7, #2
 2913 0082 1B88     		ldrh	r3, [r3]
 2914 0084 DBB2     		uxtb	r3, r3
 2915 0086 1800     		movs	r0, r3
 2916 0088 FFF7FEFF 		bl	writeData
 874:RA8875.c      ****   writeCommand(0x96);
 2917              		.loc 1 874 0
 2918 008c 9620     		movs	r0, #150
 2919 008e FFF7FEFF 		bl	writeCommand
 875:RA8875.c      ****   writeData((w) >> 8);
 2920              		.loc 1 875 0
 2921 0092 BB1C     		adds	r3, r7, #2
 2922 0094 0022     		movs	r2, #0
 2923 0096 9B5E     		ldrsh	r3, [r3, r2]
 2924 0098 1B12     		asrs	r3, r3, #8
 2925 009a 1BB2     		sxth	r3, r3
 2926 009c DBB2     		uxtb	r3, r3
 2927 009e 1800     		movs	r0, r3
 2928 00a0 FFF7FEFF 		bl	writeData
 876:RA8875.c      ****   
 877:RA8875.c      ****   /* Set Y1 */
 878:RA8875.c      ****   writeCommand(0x97);
 2929              		.loc 1 878 0
 2930 00a4 9720     		movs	r0, #151
 2931 00a6 FFF7FEFF 		bl	writeCommand
 879:RA8875.c      ****   writeData(h); 
 2932              		.loc 1 879 0
 2933 00aa 3B00     		movs	r3, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 68


 2934 00ac 1B88     		ldrh	r3, [r3]
 2935 00ae DBB2     		uxtb	r3, r3
 2936 00b0 1800     		movs	r0, r3
 2937 00b2 FFF7FEFF 		bl	writeData
 880:RA8875.c      ****   writeCommand(0x98);
 2938              		.loc 1 880 0
 2939 00b6 9820     		movs	r0, #152
 2940 00b8 FFF7FEFF 		bl	writeCommand
 881:RA8875.c      ****   writeData((h) >> 8);
 2941              		.loc 1 881 0
 2942 00bc 3B00     		movs	r3, r7
 2943 00be 0022     		movs	r2, #0
 2944 00c0 9B5E     		ldrsh	r3, [r3, r2]
 2945 00c2 1B12     		asrs	r3, r3, #8
 2946 00c4 1BB2     		sxth	r3, r3
 2947 00c6 DBB2     		uxtb	r3, r3
 2948 00c8 1800     		movs	r0, r3
 2949 00ca FFF7FEFF 		bl	writeData
 882:RA8875.c      **** 
 883:RA8875.c      ****   /* Set Color */
 884:RA8875.c      ****   writeCommand(0x63);
 2950              		.loc 1 884 0
 2951 00ce 6320     		movs	r0, #99
 2952 00d0 FFF7FEFF 		bl	writeCommand
 885:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 2953              		.loc 1 885 0
 2954 00d4 1823     		movs	r3, #24
 2955 00d6 FB18     		adds	r3, r7, r3
 2956 00d8 1B88     		ldrh	r3, [r3]
 2957 00da DB0A     		lsrs	r3, r3, #11
 2958 00dc 9BB2     		uxth	r3, r3
 2959 00de DBB2     		uxtb	r3, r3
 2960 00e0 1800     		movs	r0, r3
 2961 00e2 FFF7FEFF 		bl	writeData
 886:RA8875.c      ****   writeCommand(0x64);
 2962              		.loc 1 886 0
 2963 00e6 6420     		movs	r0, #100
 2964 00e8 FFF7FEFF 		bl	writeCommand
 887:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 2965              		.loc 1 887 0
 2966 00ec 1823     		movs	r3, #24
 2967 00ee FB18     		adds	r3, r7, r3
 2968 00f0 1B88     		ldrh	r3, [r3]
 2969 00f2 5B11     		asrs	r3, r3, #5
 2970 00f4 DBB2     		uxtb	r3, r3
 2971 00f6 3F22     		movs	r2, #63
 2972 00f8 1340     		ands	r3, r2
 2973 00fa DBB2     		uxtb	r3, r3
 2974 00fc 1800     		movs	r0, r3
 2975 00fe FFF7FEFF 		bl	writeData
 888:RA8875.c      ****   writeCommand(0x65);
 2976              		.loc 1 888 0
 2977 0102 6520     		movs	r0, #101
 2978 0104 FFF7FEFF 		bl	writeCommand
 889:RA8875.c      ****   writeData((color & 0x001f));
 2979              		.loc 1 889 0
 2980 0108 1823     		movs	r3, #24
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 69


 2981 010a FB18     		adds	r3, r7, r3
 2982 010c 1B88     		ldrh	r3, [r3]
 2983 010e DBB2     		uxtb	r3, r3
 2984 0110 1F22     		movs	r2, #31
 2985 0112 1340     		ands	r3, r2
 2986 0114 DBB2     		uxtb	r3, r3
 2987 0116 1800     		movs	r0, r3
 2988 0118 FFF7FEFF 		bl	writeData
 890:RA8875.c      **** 
 891:RA8875.c      ****   /* Draw! */
 892:RA8875.c      ****   writeCommand(RA8875_DCR);
 2989              		.loc 1 892 0
 2990 011c 9020     		movs	r0, #144
 2991 011e FFF7FEFF 		bl	writeCommand
 893:RA8875.c      ****   if (filled)
 2992              		.loc 1 893 0
 2993 0122 1C23     		movs	r3, #28
 2994 0124 FB18     		adds	r3, r7, r3
 2995 0126 1B78     		ldrb	r3, [r3]
 2996 0128 002B     		cmp	r3, #0
 2997 012a 03D0     		beq	.L76
 894:RA8875.c      ****   {
 895:RA8875.c      ****     writeData(0xB0);
 2998              		.loc 1 895 0
 2999 012c B020     		movs	r0, #176
 3000 012e FFF7FEFF 		bl	writeData
 3001 0132 02E0     		b	.L77
 3002              	.L76:
 896:RA8875.c      ****   }
 897:RA8875.c      ****   else
 898:RA8875.c      ****   {
 899:RA8875.c      ****     writeData(0x90);
 3003              		.loc 1 899 0
 3004 0134 9020     		movs	r0, #144
 3005 0136 FFF7FEFF 		bl	writeData
 3006              	.L77:
 900:RA8875.c      ****   }
 901:RA8875.c      ****   
 902:RA8875.c      ****   /* Wait for the command to finish */
 903:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 3007              		.loc 1 903 0
 3008 013a 8021     		movs	r1, #128
 3009 013c 9020     		movs	r0, #144
 3010 013e FFF7FEFF 		bl	waitPoll
 904:RA8875.c      **** 
 905:RA8875.c      **** }
 3011              		.loc 1 905 0
 3012 0142 C046     		nop
 3013 0144 BD46     		mov	sp, r7
 3014 0146 02B0     		add	sp, sp, #8
 3015              		@ sp needed
 3016 0148 B0BD     		pop	{r4, r5, r7, pc}
 3017              		.cfi_endproc
 3018              	.LFE68:
 3019              		.size	rectHelper, .-rectHelper
 3020 014a C046     		.section	.text.triangleHelper,"ax",%progbits
 3021              		.align	2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 70


 3022              		.global	triangleHelper
 3023              		.code	16
 3024              		.thumb_func
 3025              		.type	triangleHelper, %function
 3026              	triangleHelper:
 3027              	.LFB69:
 906:RA8875.c      **** 
 907:RA8875.c      **** /**************************************************************************/
 908:RA8875.c      **** /*!
 909:RA8875.c      ****       Helper function for higher level triangle drawing code
 910:RA8875.c      **** */
 911:RA8875.c      **** /**************************************************************************/
 912:RA8875.c      **** void triangleHelper(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_
 913:RA8875.c      **** {
 3028              		.loc 1 913 0
 3029              		.cfi_startproc
 3030              		@ args = 16, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0000 B0B5     		push	{r4, r5, r7, lr}
 3033              		.cfi_def_cfa_offset 16
 3034              		.cfi_offset 4, -16
 3035              		.cfi_offset 5, -12
 3036              		.cfi_offset 7, -8
 3037              		.cfi_offset 14, -4
 3038 0002 82B0     		sub	sp, sp, #8
 3039              		.cfi_def_cfa_offset 24
 3040 0004 00AF     		add	r7, sp, #0
 3041              		.cfi_def_cfa_register 7
 3042 0006 0500     		movs	r5, r0
 3043 0008 0C00     		movs	r4, r1
 3044 000a 1000     		movs	r0, r2
 3045 000c 1900     		movs	r1, r3
 3046 000e BB1D     		adds	r3, r7, #6
 3047 0010 2A1C     		adds	r2, r5, #0
 3048 0012 1A80     		strh	r2, [r3]
 3049 0014 3B1D     		adds	r3, r7, #4
 3050 0016 221C     		adds	r2, r4, #0
 3051 0018 1A80     		strh	r2, [r3]
 3052 001a BB1C     		adds	r3, r7, #2
 3053 001c 021C     		adds	r2, r0, #0
 3054 001e 1A80     		strh	r2, [r3]
 3055 0020 3B00     		movs	r3, r7
 3056 0022 0A1C     		adds	r2, r1, #0
 3057 0024 1A80     		strh	r2, [r3]
 914:RA8875.c      ****   /* Set Point 0 */
 915:RA8875.c      ****   writeCommand(0x91);
 3058              		.loc 1 915 0
 3059 0026 9120     		movs	r0, #145
 3060 0028 FFF7FEFF 		bl	writeCommand
 916:RA8875.c      ****   writeData(x0);
 3061              		.loc 1 916 0
 3062 002c BB1D     		adds	r3, r7, #6
 3063 002e 1B88     		ldrh	r3, [r3]
 3064 0030 DBB2     		uxtb	r3, r3
 3065 0032 1800     		movs	r0, r3
 3066 0034 FFF7FEFF 		bl	writeData
 917:RA8875.c      ****   writeCommand(0x92);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 71


 3067              		.loc 1 917 0
 3068 0038 9220     		movs	r0, #146
 3069 003a FFF7FEFF 		bl	writeCommand
 918:RA8875.c      ****   writeData(x0 >> 8);
 3070              		.loc 1 918 0
 3071 003e BB1D     		adds	r3, r7, #6
 3072 0040 0022     		movs	r2, #0
 3073 0042 9B5E     		ldrsh	r3, [r3, r2]
 3074 0044 1B12     		asrs	r3, r3, #8
 3075 0046 1BB2     		sxth	r3, r3
 3076 0048 DBB2     		uxtb	r3, r3
 3077 004a 1800     		movs	r0, r3
 3078 004c FFF7FEFF 		bl	writeData
 919:RA8875.c      ****   writeCommand(0x93);
 3079              		.loc 1 919 0
 3080 0050 9320     		movs	r0, #147
 3081 0052 FFF7FEFF 		bl	writeCommand
 920:RA8875.c      ****   writeData(y0); 
 3082              		.loc 1 920 0
 3083 0056 3B1D     		adds	r3, r7, #4
 3084 0058 1B88     		ldrh	r3, [r3]
 3085 005a DBB2     		uxtb	r3, r3
 3086 005c 1800     		movs	r0, r3
 3087 005e FFF7FEFF 		bl	writeData
 921:RA8875.c      ****   writeCommand(0x94);
 3088              		.loc 1 921 0
 3089 0062 9420     		movs	r0, #148
 3090 0064 FFF7FEFF 		bl	writeCommand
 922:RA8875.c      ****   writeData(y0 >> 8);
 3091              		.loc 1 922 0
 3092 0068 3B1D     		adds	r3, r7, #4
 3093 006a 0022     		movs	r2, #0
 3094 006c 9B5E     		ldrsh	r3, [r3, r2]
 3095 006e 1B12     		asrs	r3, r3, #8
 3096 0070 1BB2     		sxth	r3, r3
 3097 0072 DBB2     		uxtb	r3, r3
 3098 0074 1800     		movs	r0, r3
 3099 0076 FFF7FEFF 		bl	writeData
 923:RA8875.c      **** 
 924:RA8875.c      ****   /* Set Point 1 */
 925:RA8875.c      ****   writeCommand(0x95);
 3100              		.loc 1 925 0
 3101 007a 9520     		movs	r0, #149
 3102 007c FFF7FEFF 		bl	writeCommand
 926:RA8875.c      ****   writeData(x1);
 3103              		.loc 1 926 0
 3104 0080 BB1C     		adds	r3, r7, #2
 3105 0082 1B88     		ldrh	r3, [r3]
 3106 0084 DBB2     		uxtb	r3, r3
 3107 0086 1800     		movs	r0, r3
 3108 0088 FFF7FEFF 		bl	writeData
 927:RA8875.c      ****   writeCommand(0x96);
 3109              		.loc 1 927 0
 3110 008c 9620     		movs	r0, #150
 3111 008e FFF7FEFF 		bl	writeCommand
 928:RA8875.c      ****   writeData(x1 >> 8);
 3112              		.loc 1 928 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 72


 3113 0092 BB1C     		adds	r3, r7, #2
 3114 0094 0022     		movs	r2, #0
 3115 0096 9B5E     		ldrsh	r3, [r3, r2]
 3116 0098 1B12     		asrs	r3, r3, #8
 3117 009a 1BB2     		sxth	r3, r3
 3118 009c DBB2     		uxtb	r3, r3
 3119 009e 1800     		movs	r0, r3
 3120 00a0 FFF7FEFF 		bl	writeData
 929:RA8875.c      ****   writeCommand(0x97);
 3121              		.loc 1 929 0
 3122 00a4 9720     		movs	r0, #151
 3123 00a6 FFF7FEFF 		bl	writeCommand
 930:RA8875.c      ****   writeData(y1); 
 3124              		.loc 1 930 0
 3125 00aa 3B00     		movs	r3, r7
 3126 00ac 1B88     		ldrh	r3, [r3]
 3127 00ae DBB2     		uxtb	r3, r3
 3128 00b0 1800     		movs	r0, r3
 3129 00b2 FFF7FEFF 		bl	writeData
 931:RA8875.c      ****   writeCommand(0x98);
 3130              		.loc 1 931 0
 3131 00b6 9820     		movs	r0, #152
 3132 00b8 FFF7FEFF 		bl	writeCommand
 932:RA8875.c      ****   writeData(y1 >> 8);
 3133              		.loc 1 932 0
 3134 00bc 3B00     		movs	r3, r7
 3135 00be 0022     		movs	r2, #0
 3136 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3137 00c2 1B12     		asrs	r3, r3, #8
 3138 00c4 1BB2     		sxth	r3, r3
 3139 00c6 DBB2     		uxtb	r3, r3
 3140 00c8 1800     		movs	r0, r3
 3141 00ca FFF7FEFF 		bl	writeData
 933:RA8875.c      **** 
 934:RA8875.c      ****   /* Set Point 2 */
 935:RA8875.c      ****   writeCommand(0xA9);
 3142              		.loc 1 935 0
 3143 00ce A920     		movs	r0, #169
 3144 00d0 FFF7FEFF 		bl	writeCommand
 936:RA8875.c      ****   writeData(x2);
 3145              		.loc 1 936 0
 3146 00d4 1823     		movs	r3, #24
 3147 00d6 FB18     		adds	r3, r7, r3
 3148 00d8 1B88     		ldrh	r3, [r3]
 3149 00da DBB2     		uxtb	r3, r3
 3150 00dc 1800     		movs	r0, r3
 3151 00de FFF7FEFF 		bl	writeData
 937:RA8875.c      ****   writeCommand(0xAA);
 3152              		.loc 1 937 0
 3153 00e2 AA20     		movs	r0, #170
 3154 00e4 FFF7FEFF 		bl	writeCommand
 938:RA8875.c      ****   writeData(x2 >> 8);
 3155              		.loc 1 938 0
 3156 00e8 1823     		movs	r3, #24
 3157 00ea FB18     		adds	r3, r7, r3
 3158 00ec 0022     		movs	r2, #0
 3159 00ee 9B5E     		ldrsh	r3, [r3, r2]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 73


 3160 00f0 1B12     		asrs	r3, r3, #8
 3161 00f2 1BB2     		sxth	r3, r3
 3162 00f4 DBB2     		uxtb	r3, r3
 3163 00f6 1800     		movs	r0, r3
 3164 00f8 FFF7FEFF 		bl	writeData
 939:RA8875.c      ****   writeCommand(0xAB);
 3165              		.loc 1 939 0
 3166 00fc AB20     		movs	r0, #171
 3167 00fe FFF7FEFF 		bl	writeCommand
 940:RA8875.c      ****   writeData(y2); 
 3168              		.loc 1 940 0
 3169 0102 1C23     		movs	r3, #28
 3170 0104 FB18     		adds	r3, r7, r3
 3171 0106 1B88     		ldrh	r3, [r3]
 3172 0108 DBB2     		uxtb	r3, r3
 3173 010a 1800     		movs	r0, r3
 3174 010c FFF7FEFF 		bl	writeData
 941:RA8875.c      ****   writeCommand(0xAC);
 3175              		.loc 1 941 0
 3176 0110 AC20     		movs	r0, #172
 3177 0112 FFF7FEFF 		bl	writeCommand
 942:RA8875.c      ****   writeData(y2 >> 8);
 3178              		.loc 1 942 0
 3179 0116 1C23     		movs	r3, #28
 3180 0118 FB18     		adds	r3, r7, r3
 3181 011a 0022     		movs	r2, #0
 3182 011c 9B5E     		ldrsh	r3, [r3, r2]
 3183 011e 1B12     		asrs	r3, r3, #8
 3184 0120 1BB2     		sxth	r3, r3
 3185 0122 DBB2     		uxtb	r3, r3
 3186 0124 1800     		movs	r0, r3
 3187 0126 FFF7FEFF 		bl	writeData
 943:RA8875.c      ****   
 944:RA8875.c      ****   /* Set Color */
 945:RA8875.c      ****   writeCommand(0x63);
 3188              		.loc 1 945 0
 3189 012a 6320     		movs	r0, #99
 3190 012c FFF7FEFF 		bl	writeCommand
 946:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3191              		.loc 1 946 0
 3192 0130 2023     		movs	r3, #32
 3193 0132 FB18     		adds	r3, r7, r3
 3194 0134 1B88     		ldrh	r3, [r3]
 3195 0136 DB0A     		lsrs	r3, r3, #11
 3196 0138 9BB2     		uxth	r3, r3
 3197 013a DBB2     		uxtb	r3, r3
 3198 013c 1800     		movs	r0, r3
 3199 013e FFF7FEFF 		bl	writeData
 947:RA8875.c      ****   writeCommand(0x64);
 3200              		.loc 1 947 0
 3201 0142 6420     		movs	r0, #100
 3202 0144 FFF7FEFF 		bl	writeCommand
 948:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3203              		.loc 1 948 0
 3204 0148 2023     		movs	r3, #32
 3205 014a FB18     		adds	r3, r7, r3
 3206 014c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 74


 3207 014e 5B11     		asrs	r3, r3, #5
 3208 0150 DBB2     		uxtb	r3, r3
 3209 0152 3F22     		movs	r2, #63
 3210 0154 1340     		ands	r3, r2
 3211 0156 DBB2     		uxtb	r3, r3
 3212 0158 1800     		movs	r0, r3
 3213 015a FFF7FEFF 		bl	writeData
 949:RA8875.c      ****   writeCommand(0x65);
 3214              		.loc 1 949 0
 3215 015e 6520     		movs	r0, #101
 3216 0160 FFF7FEFF 		bl	writeCommand
 950:RA8875.c      ****   writeData((color & 0x001f));
 3217              		.loc 1 950 0
 3218 0164 2023     		movs	r3, #32
 3219 0166 FB18     		adds	r3, r7, r3
 3220 0168 1B88     		ldrh	r3, [r3]
 3221 016a DBB2     		uxtb	r3, r3
 3222 016c 1F22     		movs	r2, #31
 3223 016e 1340     		ands	r3, r2
 3224 0170 DBB2     		uxtb	r3, r3
 3225 0172 1800     		movs	r0, r3
 3226 0174 FFF7FEFF 		bl	writeData
 951:RA8875.c      ****   
 952:RA8875.c      ****   /* Draw! */
 953:RA8875.c      ****   writeCommand(RA8875_DCR);
 3227              		.loc 1 953 0
 3228 0178 9020     		movs	r0, #144
 3229 017a FFF7FEFF 		bl	writeCommand
 954:RA8875.c      ****   if (filled)
 3230              		.loc 1 954 0
 3231 017e 2423     		movs	r3, #36
 3232 0180 FB18     		adds	r3, r7, r3
 3233 0182 1B78     		ldrb	r3, [r3]
 3234 0184 002B     		cmp	r3, #0
 3235 0186 03D0     		beq	.L79
 955:RA8875.c      ****   {
 956:RA8875.c      ****     writeData(0xA1);
 3236              		.loc 1 956 0
 3237 0188 A120     		movs	r0, #161
 3238 018a FFF7FEFF 		bl	writeData
 3239 018e 02E0     		b	.L80
 3240              	.L79:
 957:RA8875.c      ****   }
 958:RA8875.c      ****   else
 959:RA8875.c      ****   {
 960:RA8875.c      ****     writeData(0x81);
 3241              		.loc 1 960 0
 3242 0190 8120     		movs	r0, #129
 3243 0192 FFF7FEFF 		bl	writeData
 3244              	.L80:
 961:RA8875.c      ****   }
 962:RA8875.c      ****   
 963:RA8875.c      ****   /* Wait for the command to finish */
 964:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 3245              		.loc 1 964 0
 3246 0196 8021     		movs	r1, #128
 3247 0198 9020     		movs	r0, #144
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 75


 3248 019a FFF7FEFF 		bl	waitPoll
 965:RA8875.c      **** }
 3249              		.loc 1 965 0
 3250 019e C046     		nop
 3251 01a0 BD46     		mov	sp, r7
 3252 01a2 02B0     		add	sp, sp, #8
 3253              		@ sp needed
 3254 01a4 B0BD     		pop	{r4, r5, r7, pc}
 3255              		.cfi_endproc
 3256              	.LFE69:
 3257              		.size	triangleHelper, .-triangleHelper
 3258 01a6 C046     		.section	.text.ellipseHelper,"ax",%progbits
 3259              		.align	2
 3260              		.global	ellipseHelper
 3261              		.code	16
 3262              		.thumb_func
 3263              		.type	ellipseHelper, %function
 3264              	ellipseHelper:
 3265              	.LFB70:
 966:RA8875.c      **** 
 967:RA8875.c      **** /**************************************************************************/
 968:RA8875.c      **** /*!
 969:RA8875.c      ****       Helper function for higher level ellipse drawing code
 970:RA8875.c      **** */
 971:RA8875.c      **** /**************************************************************************/
 972:RA8875.c      **** void ellipseHelper(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t 
 973:RA8875.c      **** {
 3266              		.loc 1 973 0
 3267              		.cfi_startproc
 3268              		@ args = 8, pretend = 0, frame = 8
 3269              		@ frame_needed = 1, uses_anonymous_args = 0
 3270 0000 B0B5     		push	{r4, r5, r7, lr}
 3271              		.cfi_def_cfa_offset 16
 3272              		.cfi_offset 4, -16
 3273              		.cfi_offset 5, -12
 3274              		.cfi_offset 7, -8
 3275              		.cfi_offset 14, -4
 3276 0002 82B0     		sub	sp, sp, #8
 3277              		.cfi_def_cfa_offset 24
 3278 0004 00AF     		add	r7, sp, #0
 3279              		.cfi_def_cfa_register 7
 3280 0006 0500     		movs	r5, r0
 3281 0008 0C00     		movs	r4, r1
 3282 000a 1000     		movs	r0, r2
 3283 000c 1900     		movs	r1, r3
 3284 000e BB1D     		adds	r3, r7, #6
 3285 0010 2A1C     		adds	r2, r5, #0
 3286 0012 1A80     		strh	r2, [r3]
 3287 0014 3B1D     		adds	r3, r7, #4
 3288 0016 221C     		adds	r2, r4, #0
 3289 0018 1A80     		strh	r2, [r3]
 3290 001a BB1C     		adds	r3, r7, #2
 3291 001c 021C     		adds	r2, r0, #0
 3292 001e 1A80     		strh	r2, [r3]
 3293 0020 3B00     		movs	r3, r7
 3294 0022 0A1C     		adds	r2, r1, #0
 3295 0024 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 76


 974:RA8875.c      ****   /* Set Center Point */
 975:RA8875.c      ****   writeCommand(0xA5);
 3296              		.loc 1 975 0
 3297 0026 A520     		movs	r0, #165
 3298 0028 FFF7FEFF 		bl	writeCommand
 976:RA8875.c      ****   writeData(xCenter);
 3299              		.loc 1 976 0
 3300 002c BB1D     		adds	r3, r7, #6
 3301 002e 1B88     		ldrh	r3, [r3]
 3302 0030 DBB2     		uxtb	r3, r3
 3303 0032 1800     		movs	r0, r3
 3304 0034 FFF7FEFF 		bl	writeData
 977:RA8875.c      ****   writeCommand(0xA6);
 3305              		.loc 1 977 0
 3306 0038 A620     		movs	r0, #166
 3307 003a FFF7FEFF 		bl	writeCommand
 978:RA8875.c      ****   writeData(xCenter >> 8);
 3308              		.loc 1 978 0
 3309 003e BB1D     		adds	r3, r7, #6
 3310 0040 0022     		movs	r2, #0
 3311 0042 9B5E     		ldrsh	r3, [r3, r2]
 3312 0044 1B12     		asrs	r3, r3, #8
 3313 0046 1BB2     		sxth	r3, r3
 3314 0048 DBB2     		uxtb	r3, r3
 3315 004a 1800     		movs	r0, r3
 3316 004c FFF7FEFF 		bl	writeData
 979:RA8875.c      ****   writeCommand(0xA7);
 3317              		.loc 1 979 0
 3318 0050 A720     		movs	r0, #167
 3319 0052 FFF7FEFF 		bl	writeCommand
 980:RA8875.c      ****   writeData(yCenter); 
 3320              		.loc 1 980 0
 3321 0056 3B1D     		adds	r3, r7, #4
 3322 0058 1B88     		ldrh	r3, [r3]
 3323 005a DBB2     		uxtb	r3, r3
 3324 005c 1800     		movs	r0, r3
 3325 005e FFF7FEFF 		bl	writeData
 981:RA8875.c      ****   writeCommand(0xA8);
 3326              		.loc 1 981 0
 3327 0062 A820     		movs	r0, #168
 3328 0064 FFF7FEFF 		bl	writeCommand
 982:RA8875.c      ****   writeData(yCenter >> 8);
 3329              		.loc 1 982 0
 3330 0068 3B1D     		adds	r3, r7, #4
 3331 006a 0022     		movs	r2, #0
 3332 006c 9B5E     		ldrsh	r3, [r3, r2]
 3333 006e 1B12     		asrs	r3, r3, #8
 3334 0070 1BB2     		sxth	r3, r3
 3335 0072 DBB2     		uxtb	r3, r3
 3336 0074 1800     		movs	r0, r3
 3337 0076 FFF7FEFF 		bl	writeData
 983:RA8875.c      **** 
 984:RA8875.c      ****   /* Set Long and Short Axis */
 985:RA8875.c      ****   writeCommand(0xA1);
 3338              		.loc 1 985 0
 3339 007a A120     		movs	r0, #161
 3340 007c FFF7FEFF 		bl	writeCommand
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 77


 986:RA8875.c      ****   writeData(longAxis);
 3341              		.loc 1 986 0
 3342 0080 BB1C     		adds	r3, r7, #2
 3343 0082 1B88     		ldrh	r3, [r3]
 3344 0084 DBB2     		uxtb	r3, r3
 3345 0086 1800     		movs	r0, r3
 3346 0088 FFF7FEFF 		bl	writeData
 987:RA8875.c      ****   writeCommand(0xA2);
 3347              		.loc 1 987 0
 3348 008c A220     		movs	r0, #162
 3349 008e FFF7FEFF 		bl	writeCommand
 988:RA8875.c      ****   writeData(longAxis >> 8);
 3350              		.loc 1 988 0
 3351 0092 BB1C     		adds	r3, r7, #2
 3352 0094 0022     		movs	r2, #0
 3353 0096 9B5E     		ldrsh	r3, [r3, r2]
 3354 0098 1B12     		asrs	r3, r3, #8
 3355 009a 1BB2     		sxth	r3, r3
 3356 009c DBB2     		uxtb	r3, r3
 3357 009e 1800     		movs	r0, r3
 3358 00a0 FFF7FEFF 		bl	writeData
 989:RA8875.c      ****   writeCommand(0xA3);
 3359              		.loc 1 989 0
 3360 00a4 A320     		movs	r0, #163
 3361 00a6 FFF7FEFF 		bl	writeCommand
 990:RA8875.c      ****   writeData(shortAxis); 
 3362              		.loc 1 990 0
 3363 00aa 3B00     		movs	r3, r7
 3364 00ac 1B88     		ldrh	r3, [r3]
 3365 00ae DBB2     		uxtb	r3, r3
 3366 00b0 1800     		movs	r0, r3
 3367 00b2 FFF7FEFF 		bl	writeData
 991:RA8875.c      ****   writeCommand(0xA4);
 3368              		.loc 1 991 0
 3369 00b6 A420     		movs	r0, #164
 3370 00b8 FFF7FEFF 		bl	writeCommand
 992:RA8875.c      ****   writeData(shortAxis >> 8);
 3371              		.loc 1 992 0
 3372 00bc 3B00     		movs	r3, r7
 3373 00be 0022     		movs	r2, #0
 3374 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3375 00c2 1B12     		asrs	r3, r3, #8
 3376 00c4 1BB2     		sxth	r3, r3
 3377 00c6 DBB2     		uxtb	r3, r3
 3378 00c8 1800     		movs	r0, r3
 3379 00ca FFF7FEFF 		bl	writeData
 993:RA8875.c      ****   
 994:RA8875.c      ****   /* Set Color */
 995:RA8875.c      ****   writeCommand(0x63);
 3380              		.loc 1 995 0
 3381 00ce 6320     		movs	r0, #99
 3382 00d0 FFF7FEFF 		bl	writeCommand
 996:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3383              		.loc 1 996 0
 3384 00d4 1823     		movs	r3, #24
 3385 00d6 FB18     		adds	r3, r7, r3
 3386 00d8 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 78


 3387 00da DB0A     		lsrs	r3, r3, #11
 3388 00dc 9BB2     		uxth	r3, r3
 3389 00de DBB2     		uxtb	r3, r3
 3390 00e0 1800     		movs	r0, r3
 3391 00e2 FFF7FEFF 		bl	writeData
 997:RA8875.c      ****   writeCommand(0x64);
 3392              		.loc 1 997 0
 3393 00e6 6420     		movs	r0, #100
 3394 00e8 FFF7FEFF 		bl	writeCommand
 998:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3395              		.loc 1 998 0
 3396 00ec 1823     		movs	r3, #24
 3397 00ee FB18     		adds	r3, r7, r3
 3398 00f0 1B88     		ldrh	r3, [r3]
 3399 00f2 5B11     		asrs	r3, r3, #5
 3400 00f4 DBB2     		uxtb	r3, r3
 3401 00f6 3F22     		movs	r2, #63
 3402 00f8 1340     		ands	r3, r2
 3403 00fa DBB2     		uxtb	r3, r3
 3404 00fc 1800     		movs	r0, r3
 3405 00fe FFF7FEFF 		bl	writeData
 999:RA8875.c      ****   writeCommand(0x65);
 3406              		.loc 1 999 0
 3407 0102 6520     		movs	r0, #101
 3408 0104 FFF7FEFF 		bl	writeCommand
1000:RA8875.c      ****   writeData((color & 0x001f));
 3409              		.loc 1 1000 0
 3410 0108 1823     		movs	r3, #24
 3411 010a FB18     		adds	r3, r7, r3
 3412 010c 1B88     		ldrh	r3, [r3]
 3413 010e DBB2     		uxtb	r3, r3
 3414 0110 1F22     		movs	r2, #31
 3415 0112 1340     		ands	r3, r2
 3416 0114 DBB2     		uxtb	r3, r3
 3417 0116 1800     		movs	r0, r3
 3418 0118 FFF7FEFF 		bl	writeData
1001:RA8875.c      ****   
1002:RA8875.c      ****   /* Draw! */
1003:RA8875.c      ****   writeCommand(0xA0);
 3419              		.loc 1 1003 0
 3420 011c A020     		movs	r0, #160
 3421 011e FFF7FEFF 		bl	writeCommand
1004:RA8875.c      ****   if (filled)
 3422              		.loc 1 1004 0
 3423 0122 1C23     		movs	r3, #28
 3424 0124 FB18     		adds	r3, r7, r3
 3425 0126 1B78     		ldrb	r3, [r3]
 3426 0128 002B     		cmp	r3, #0
 3427 012a 03D0     		beq	.L82
1005:RA8875.c      ****   {
1006:RA8875.c      ****     writeData(0xC0);
 3428              		.loc 1 1006 0
 3429 012c C020     		movs	r0, #192
 3430 012e FFF7FEFF 		bl	writeData
 3431 0132 02E0     		b	.L83
 3432              	.L82:
1007:RA8875.c      ****   }
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 79


1008:RA8875.c      ****   else
1009:RA8875.c      ****   {
1010:RA8875.c      ****     writeData(0x80);
 3433              		.loc 1 1010 0
 3434 0134 8020     		movs	r0, #128
 3435 0136 FFF7FEFF 		bl	writeData
 3436              	.L83:
1011:RA8875.c      ****   }
1012:RA8875.c      ****   
1013:RA8875.c      ****   /* Wait for the command to finish */
1014:RA8875.c      ****   waitPoll(RA8875_ELLIPSE, RA8875_ELLIPSE_STATUS);
 3437              		.loc 1 1014 0
 3438 013a 8021     		movs	r1, #128
 3439 013c A020     		movs	r0, #160
 3440 013e FFF7FEFF 		bl	waitPoll
1015:RA8875.c      **** }
 3441              		.loc 1 1015 0
 3442 0142 C046     		nop
 3443 0144 BD46     		mov	sp, r7
 3444 0146 02B0     		add	sp, sp, #8
 3445              		@ sp needed
 3446 0148 B0BD     		pop	{r4, r5, r7, pc}
 3447              		.cfi_endproc
 3448              	.LFE70:
 3449              		.size	ellipseHelper, .-ellipseHelper
 3450 014a C046     		.section	.text.curveHelper,"ax",%progbits
 3451              		.align	2
 3452              		.global	curveHelper
 3453              		.code	16
 3454              		.thumb_func
 3455              		.type	curveHelper, %function
 3456              	curveHelper:
 3457              	.LFB71:
1016:RA8875.c      **** 
1017:RA8875.c      **** /**************************************************************************/
1018:RA8875.c      **** /*!
1019:RA8875.c      ****       Helper function for higher level curve drawing code
1020:RA8875.c      **** */
1021:RA8875.c      **** /**************************************************************************/
1022:RA8875.c      **** void curveHelper(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t cur
1023:RA8875.c      **** {
 3458              		.loc 1 1023 0
 3459              		.cfi_startproc
 3460              		@ args = 12, pretend = 0, frame = 8
 3461              		@ frame_needed = 1, uses_anonymous_args = 0
 3462 0000 B0B5     		push	{r4, r5, r7, lr}
 3463              		.cfi_def_cfa_offset 16
 3464              		.cfi_offset 4, -16
 3465              		.cfi_offset 5, -12
 3466              		.cfi_offset 7, -8
 3467              		.cfi_offset 14, -4
 3468 0002 82B0     		sub	sp, sp, #8
 3469              		.cfi_def_cfa_offset 24
 3470 0004 00AF     		add	r7, sp, #0
 3471              		.cfi_def_cfa_register 7
 3472 0006 0500     		movs	r5, r0
 3473 0008 0C00     		movs	r4, r1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 80


 3474 000a 1000     		movs	r0, r2
 3475 000c 1900     		movs	r1, r3
 3476 000e BB1D     		adds	r3, r7, #6
 3477 0010 2A1C     		adds	r2, r5, #0
 3478 0012 1A80     		strh	r2, [r3]
 3479 0014 3B1D     		adds	r3, r7, #4
 3480 0016 221C     		adds	r2, r4, #0
 3481 0018 1A80     		strh	r2, [r3]
 3482 001a BB1C     		adds	r3, r7, #2
 3483 001c 021C     		adds	r2, r0, #0
 3484 001e 1A80     		strh	r2, [r3]
 3485 0020 3B00     		movs	r3, r7
 3486 0022 0A1C     		adds	r2, r1, #0
 3487 0024 1A80     		strh	r2, [r3]
1024:RA8875.c      ****   /* Set Center Point */
1025:RA8875.c      ****   writeCommand(0xA5);
 3488              		.loc 1 1025 0
 3489 0026 A520     		movs	r0, #165
 3490 0028 FFF7FEFF 		bl	writeCommand
1026:RA8875.c      ****   writeData(xCenter);
 3491              		.loc 1 1026 0
 3492 002c BB1D     		adds	r3, r7, #6
 3493 002e 1B88     		ldrh	r3, [r3]
 3494 0030 DBB2     		uxtb	r3, r3
 3495 0032 1800     		movs	r0, r3
 3496 0034 FFF7FEFF 		bl	writeData
1027:RA8875.c      ****   writeCommand(0xA6);
 3497              		.loc 1 1027 0
 3498 0038 A620     		movs	r0, #166
 3499 003a FFF7FEFF 		bl	writeCommand
1028:RA8875.c      ****   writeData(xCenter >> 8);
 3500              		.loc 1 1028 0
 3501 003e BB1D     		adds	r3, r7, #6
 3502 0040 0022     		movs	r2, #0
 3503 0042 9B5E     		ldrsh	r3, [r3, r2]
 3504 0044 1B12     		asrs	r3, r3, #8
 3505 0046 1BB2     		sxth	r3, r3
 3506 0048 DBB2     		uxtb	r3, r3
 3507 004a 1800     		movs	r0, r3
 3508 004c FFF7FEFF 		bl	writeData
1029:RA8875.c      ****   writeCommand(0xA7);
 3509              		.loc 1 1029 0
 3510 0050 A720     		movs	r0, #167
 3511 0052 FFF7FEFF 		bl	writeCommand
1030:RA8875.c      ****   writeData(yCenter); 
 3512              		.loc 1 1030 0
 3513 0056 3B1D     		adds	r3, r7, #4
 3514 0058 1B88     		ldrh	r3, [r3]
 3515 005a DBB2     		uxtb	r3, r3
 3516 005c 1800     		movs	r0, r3
 3517 005e FFF7FEFF 		bl	writeData
1031:RA8875.c      ****   writeCommand(0xA8);
 3518              		.loc 1 1031 0
 3519 0062 A820     		movs	r0, #168
 3520 0064 FFF7FEFF 		bl	writeCommand
1032:RA8875.c      ****   writeData(yCenter >> 8);
 3521              		.loc 1 1032 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 81


 3522 0068 3B1D     		adds	r3, r7, #4
 3523 006a 0022     		movs	r2, #0
 3524 006c 9B5E     		ldrsh	r3, [r3, r2]
 3525 006e 1B12     		asrs	r3, r3, #8
 3526 0070 1BB2     		sxth	r3, r3
 3527 0072 DBB2     		uxtb	r3, r3
 3528 0074 1800     		movs	r0, r3
 3529 0076 FFF7FEFF 		bl	writeData
1033:RA8875.c      **** 
1034:RA8875.c      ****   /* Set Long and Short Axis */
1035:RA8875.c      ****   writeCommand(0xA1);
 3530              		.loc 1 1035 0
 3531 007a A120     		movs	r0, #161
 3532 007c FFF7FEFF 		bl	writeCommand
1036:RA8875.c      ****   writeData(longAxis);
 3533              		.loc 1 1036 0
 3534 0080 BB1C     		adds	r3, r7, #2
 3535 0082 1B88     		ldrh	r3, [r3]
 3536 0084 DBB2     		uxtb	r3, r3
 3537 0086 1800     		movs	r0, r3
 3538 0088 FFF7FEFF 		bl	writeData
1037:RA8875.c      ****   writeCommand(0xA2);
 3539              		.loc 1 1037 0
 3540 008c A220     		movs	r0, #162
 3541 008e FFF7FEFF 		bl	writeCommand
1038:RA8875.c      ****   writeData(longAxis >> 8);
 3542              		.loc 1 1038 0
 3543 0092 BB1C     		adds	r3, r7, #2
 3544 0094 0022     		movs	r2, #0
 3545 0096 9B5E     		ldrsh	r3, [r3, r2]
 3546 0098 1B12     		asrs	r3, r3, #8
 3547 009a 1BB2     		sxth	r3, r3
 3548 009c DBB2     		uxtb	r3, r3
 3549 009e 1800     		movs	r0, r3
 3550 00a0 FFF7FEFF 		bl	writeData
1039:RA8875.c      ****   writeCommand(0xA3);
 3551              		.loc 1 1039 0
 3552 00a4 A320     		movs	r0, #163
 3553 00a6 FFF7FEFF 		bl	writeCommand
1040:RA8875.c      ****   writeData(shortAxis); 
 3554              		.loc 1 1040 0
 3555 00aa 3B00     		movs	r3, r7
 3556 00ac 1B88     		ldrh	r3, [r3]
 3557 00ae DBB2     		uxtb	r3, r3
 3558 00b0 1800     		movs	r0, r3
 3559 00b2 FFF7FEFF 		bl	writeData
1041:RA8875.c      ****   writeCommand(0xA4);
 3560              		.loc 1 1041 0
 3561 00b6 A420     		movs	r0, #164
 3562 00b8 FFF7FEFF 		bl	writeCommand
1042:RA8875.c      ****   writeData(shortAxis >> 8);
 3563              		.loc 1 1042 0
 3564 00bc 3B00     		movs	r3, r7
 3565 00be 0022     		movs	r2, #0
 3566 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3567 00c2 1B12     		asrs	r3, r3, #8
 3568 00c4 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 82


 3569 00c6 DBB2     		uxtb	r3, r3
 3570 00c8 1800     		movs	r0, r3
 3571 00ca FFF7FEFF 		bl	writeData
1043:RA8875.c      ****   
1044:RA8875.c      ****   /* Set Color */
1045:RA8875.c      ****   writeCommand(0x63);
 3572              		.loc 1 1045 0
 3573 00ce 6320     		movs	r0, #99
 3574 00d0 FFF7FEFF 		bl	writeCommand
1046:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3575              		.loc 1 1046 0
 3576 00d4 1C23     		movs	r3, #28
 3577 00d6 FB18     		adds	r3, r7, r3
 3578 00d8 1B88     		ldrh	r3, [r3]
 3579 00da DB0A     		lsrs	r3, r3, #11
 3580 00dc 9BB2     		uxth	r3, r3
 3581 00de DBB2     		uxtb	r3, r3
 3582 00e0 1800     		movs	r0, r3
 3583 00e2 FFF7FEFF 		bl	writeData
1047:RA8875.c      ****   writeCommand(0x64);
 3584              		.loc 1 1047 0
 3585 00e6 6420     		movs	r0, #100
 3586 00e8 FFF7FEFF 		bl	writeCommand
1048:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3587              		.loc 1 1048 0
 3588 00ec 1C23     		movs	r3, #28
 3589 00ee FB18     		adds	r3, r7, r3
 3590 00f0 1B88     		ldrh	r3, [r3]
 3591 00f2 5B11     		asrs	r3, r3, #5
 3592 00f4 DBB2     		uxtb	r3, r3
 3593 00f6 3F22     		movs	r2, #63
 3594 00f8 1340     		ands	r3, r2
 3595 00fa DBB2     		uxtb	r3, r3
 3596 00fc 1800     		movs	r0, r3
 3597 00fe FFF7FEFF 		bl	writeData
1049:RA8875.c      ****   writeCommand(0x65);
 3598              		.loc 1 1049 0
 3599 0102 6520     		movs	r0, #101
 3600 0104 FFF7FEFF 		bl	writeCommand
1050:RA8875.c      ****   writeData((color & 0x001f));
 3601              		.loc 1 1050 0
 3602 0108 1C23     		movs	r3, #28
 3603 010a FB18     		adds	r3, r7, r3
 3604 010c 1B88     		ldrh	r3, [r3]
 3605 010e DBB2     		uxtb	r3, r3
 3606 0110 1F22     		movs	r2, #31
 3607 0112 1340     		ands	r3, r2
 3608 0114 DBB2     		uxtb	r3, r3
 3609 0116 1800     		movs	r0, r3
 3610 0118 FFF7FEFF 		bl	writeData
1051:RA8875.c      **** 
1052:RA8875.c      ****   /* Draw! */
1053:RA8875.c      ****   writeCommand(0xA0);
 3611              		.loc 1 1053 0
 3612 011c A020     		movs	r0, #160
 3613 011e FFF7FEFF 		bl	writeCommand
1054:RA8875.c      ****   if (filled)
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 83


 3614              		.loc 1 1054 0
 3615 0122 2023     		movs	r3, #32
 3616 0124 FB18     		adds	r3, r7, r3
 3617 0126 1B78     		ldrb	r3, [r3]
 3618 0128 002B     		cmp	r3, #0
 3619 012a 0FD0     		beq	.L85
1055:RA8875.c      ****   {
1056:RA8875.c      ****     writeData(0xD0 | (curvePart & 0x03));
 3620              		.loc 1 1056 0
 3621 012c 1823     		movs	r3, #24
 3622 012e FB18     		adds	r3, r7, r3
 3623 0130 1B78     		ldrb	r3, [r3]
 3624 0132 5BB2     		sxtb	r3, r3
 3625 0134 0322     		movs	r2, #3
 3626 0136 1340     		ands	r3, r2
 3627 0138 5BB2     		sxtb	r3, r3
 3628 013a 3022     		movs	r2, #48
 3629 013c 5242     		rsbs	r2, r2, #0
 3630 013e 1343     		orrs	r3, r2
 3631 0140 5BB2     		sxtb	r3, r3
 3632 0142 DBB2     		uxtb	r3, r3
 3633 0144 1800     		movs	r0, r3
 3634 0146 FFF7FEFF 		bl	writeData
 3635 014a 0EE0     		b	.L86
 3636              	.L85:
1057:RA8875.c      ****   }
1058:RA8875.c      ****   else
1059:RA8875.c      ****   {
1060:RA8875.c      ****     writeData(0x90 | (curvePart & 0x03));
 3637              		.loc 1 1060 0
 3638 014c 1823     		movs	r3, #24
 3639 014e FB18     		adds	r3, r7, r3
 3640 0150 1B78     		ldrb	r3, [r3]
 3641 0152 5BB2     		sxtb	r3, r3
 3642 0154 0322     		movs	r2, #3
 3643 0156 1340     		ands	r3, r2
 3644 0158 5BB2     		sxtb	r3, r3
 3645 015a 7022     		movs	r2, #112
 3646 015c 5242     		rsbs	r2, r2, #0
 3647 015e 1343     		orrs	r3, r2
 3648 0160 5BB2     		sxtb	r3, r3
 3649 0162 DBB2     		uxtb	r3, r3
 3650 0164 1800     		movs	r0, r3
 3651 0166 FFF7FEFF 		bl	writeData
 3652              	.L86:
1061:RA8875.c      ****   }
1062:RA8875.c      ****   
1063:RA8875.c      ****   /* Wait for the command to finish */
1064:RA8875.c      ****   waitPoll(RA8875_ELLIPSE, RA8875_ELLIPSE_STATUS);
 3653              		.loc 1 1064 0
 3654 016a 8021     		movs	r1, #128
 3655 016c A020     		movs	r0, #160
 3656 016e FFF7FEFF 		bl	waitPoll
1065:RA8875.c      **** }
 3657              		.loc 1 1065 0
 3658 0172 C046     		nop
 3659 0174 BD46     		mov	sp, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 84


 3660 0176 02B0     		add	sp, sp, #8
 3661              		@ sp needed
 3662 0178 B0BD     		pop	{r4, r5, r7, pc}
 3663              		.cfi_endproc
 3664              	.LFE71:
 3665              		.size	curveHelper, .-curveHelper
 3666 017a C046     		.section	.text.GPIOX,"ax",%progbits
 3667              		.align	2
 3668              		.global	GPIOX
 3669              		.code	16
 3670              		.thumb_func
 3671              		.type	GPIOX, %function
 3672              	GPIOX:
 3673              	.LFB72:
1066:RA8875.c      **** 
1067:RA8875.c      **** /************************* Mid Level ***********************************/
1068:RA8875.c      **** 
1069:RA8875.c      **** /**************************************************************************/
1070:RA8875.c      **** /*!
1071:RA8875.c      **** 
1072:RA8875.c      **** */
1073:RA8875.c      **** /**************************************************************************/
1074:RA8875.c      **** void GPIOX(boolean on) {
 3674              		.loc 1 1074 0
 3675              		.cfi_startproc
 3676              		@ args = 0, pretend = 0, frame = 8
 3677              		@ frame_needed = 1, uses_anonymous_args = 0
 3678 0000 80B5     		push	{r7, lr}
 3679              		.cfi_def_cfa_offset 8
 3680              		.cfi_offset 7, -8
 3681              		.cfi_offset 14, -4
 3682 0002 82B0     		sub	sp, sp, #8
 3683              		.cfi_def_cfa_offset 16
 3684 0004 00AF     		add	r7, sp, #0
 3685              		.cfi_def_cfa_register 7
 3686 0006 0200     		movs	r2, r0
 3687 0008 FB1D     		adds	r3, r7, #7
 3688 000a 1A70     		strb	r2, [r3]
1075:RA8875.c      **** //  uint8 x;
1076:RA8875.c      ****     
1077:RA8875.c      ****   if (on) {
 3689              		.loc 1 1077 0
 3690 000c FB1D     		adds	r3, r7, #7
 3691 000e 1B78     		ldrb	r3, [r3]
 3692 0010 002B     		cmp	r3, #0
 3693 0012 04D0     		beq	.L88
1078:RA8875.c      **** //    x = readReg(RA8875_GPIOX);
1079:RA8875.c      ****     writeReg(RA8875_GPIOX, 1);
 3694              		.loc 1 1079 0
 3695 0014 0121     		movs	r1, #1
 3696 0016 C720     		movs	r0, #199
 3697 0018 FFF7FEFF 		bl	writeReg
1080:RA8875.c      **** //    CyDelay(5);
1081:RA8875.c      **** //    x = readReg(RA8875_GPIOX);
1082:RA8875.c      ****     }
1083:RA8875.c      ****   else 
1084:RA8875.c      ****     writeReg(RA8875_GPIOX, 0);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 85


1085:RA8875.c      **** }
 3698              		.loc 1 1085 0
 3699 001c 03E0     		b	.L90
 3700              	.L88:
1084:RA8875.c      **** }
 3701              		.loc 1 1084 0
 3702 001e 0021     		movs	r1, #0
 3703 0020 C720     		movs	r0, #199
 3704 0022 FFF7FEFF 		bl	writeReg
 3705              	.L90:
 3706              		.loc 1 1085 0
 3707 0026 C046     		nop
 3708 0028 BD46     		mov	sp, r7
 3709 002a 02B0     		add	sp, sp, #8
 3710              		@ sp needed
 3711 002c 80BD     		pop	{r7, pc}
 3712              		.cfi_endproc
 3713              	.LFE72:
 3714              		.size	GPIOX, .-GPIOX
 3715 002e C046     		.section	.text.PWM1out,"ax",%progbits
 3716              		.align	2
 3717              		.global	PWM1out
 3718              		.code	16
 3719              		.thumb_func
 3720              		.type	PWM1out, %function
 3721              	PWM1out:
 3722              	.LFB73:
1086:RA8875.c      **** 
1087:RA8875.c      **** /**************************************************************************/
1088:RA8875.c      **** /*!
1089:RA8875.c      **** 
1090:RA8875.c      **** */
1091:RA8875.c      **** /**************************************************************************/
1092:RA8875.c      **** void PWM1out(uint8_t p) {
 3723              		.loc 1 1092 0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 8
 3726              		@ frame_needed = 1, uses_anonymous_args = 0
 3727 0000 80B5     		push	{r7, lr}
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 7, -8
 3730              		.cfi_offset 14, -4
 3731 0002 82B0     		sub	sp, sp, #8
 3732              		.cfi_def_cfa_offset 16
 3733 0004 00AF     		add	r7, sp, #0
 3734              		.cfi_def_cfa_register 7
 3735 0006 0200     		movs	r2, r0
 3736 0008 FB1D     		adds	r3, r7, #7
 3737 000a 1A70     		strb	r2, [r3]
1093:RA8875.c      **** //    uint8 x;
1094:RA8875.c      **** //    readReg(RA8875_P1DCR);
1095:RA8875.c      ****   writeReg(RA8875_P1DCR, p);
 3738              		.loc 1 1095 0
 3739 000c FB1D     		adds	r3, r7, #7
 3740 000e 1B78     		ldrb	r3, [r3]
 3741 0010 1900     		movs	r1, r3
 3742 0012 8B20     		movs	r0, #139
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 86


 3743 0014 FFF7FEFF 		bl	writeReg
1096:RA8875.c      **** //    CyDelay(1000);
1097:RA8875.c      **** //    readReg(RA8875_P1DCR);
1098:RA8875.c      **** }
 3744              		.loc 1 1098 0
 3745 0018 C046     		nop
 3746 001a BD46     		mov	sp, r7
 3747 001c 02B0     		add	sp, sp, #8
 3748              		@ sp needed
 3749 001e 80BD     		pop	{r7, pc}
 3750              		.cfi_endproc
 3751              	.LFE73:
 3752              		.size	PWM1out, .-PWM1out
 3753              		.section	.text.PWM2out,"ax",%progbits
 3754              		.align	2
 3755              		.global	PWM2out
 3756              		.code	16
 3757              		.thumb_func
 3758              		.type	PWM2out, %function
 3759              	PWM2out:
 3760              	.LFB74:
1099:RA8875.c      **** 
1100:RA8875.c      **** /**************************************************************************/
1101:RA8875.c      **** /*!
1102:RA8875.c      **** 
1103:RA8875.c      **** */
1104:RA8875.c      **** /**************************************************************************/
1105:RA8875.c      **** void PWM2out(uint8_t p) {
 3761              		.loc 1 1105 0
 3762              		.cfi_startproc
 3763              		@ args = 0, pretend = 0, frame = 8
 3764              		@ frame_needed = 1, uses_anonymous_args = 0
 3765 0000 80B5     		push	{r7, lr}
 3766              		.cfi_def_cfa_offset 8
 3767              		.cfi_offset 7, -8
 3768              		.cfi_offset 14, -4
 3769 0002 82B0     		sub	sp, sp, #8
 3770              		.cfi_def_cfa_offset 16
 3771 0004 00AF     		add	r7, sp, #0
 3772              		.cfi_def_cfa_register 7
 3773 0006 0200     		movs	r2, r0
 3774 0008 FB1D     		adds	r3, r7, #7
 3775 000a 1A70     		strb	r2, [r3]
1106:RA8875.c      ****   writeReg(RA8875_P2DCR, p);
 3776              		.loc 1 1106 0
 3777 000c FB1D     		adds	r3, r7, #7
 3778 000e 1B78     		ldrb	r3, [r3]
 3779 0010 1900     		movs	r1, r3
 3780 0012 8D20     		movs	r0, #141
 3781 0014 FFF7FEFF 		bl	writeReg
1107:RA8875.c      **** }
 3782              		.loc 1 1107 0
 3783 0018 C046     		nop
 3784 001a BD46     		mov	sp, r7
 3785 001c 02B0     		add	sp, sp, #8
 3786              		@ sp needed
 3787 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 87


 3788              		.cfi_endproc
 3789              	.LFE74:
 3790              		.size	PWM2out, .-PWM2out
 3791              		.section	.text.PWM1config,"ax",%progbits
 3792              		.align	2
 3793              		.global	PWM1config
 3794              		.code	16
 3795              		.thumb_func
 3796              		.type	PWM1config, %function
 3797              	PWM1config:
 3798              	.LFB75:
1108:RA8875.c      **** 
1109:RA8875.c      **** /**************************************************************************/
1110:RA8875.c      **** /*!
1111:RA8875.c      **** 
1112:RA8875.c      **** */
1113:RA8875.c      **** /**************************************************************************/
1114:RA8875.c      **** void PWM1config(boolean on, uint8_t clock) {
 3799              		.loc 1 1114 0
 3800              		.cfi_startproc
 3801              		@ args = 0, pretend = 0, frame = 8
 3802              		@ frame_needed = 1, uses_anonymous_args = 0
 3803 0000 80B5     		push	{r7, lr}
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 7, -8
 3806              		.cfi_offset 14, -4
 3807 0002 82B0     		sub	sp, sp, #8
 3808              		.cfi_def_cfa_offset 16
 3809 0004 00AF     		add	r7, sp, #0
 3810              		.cfi_def_cfa_register 7
 3811 0006 0200     		movs	r2, r0
 3812 0008 FB1D     		adds	r3, r7, #7
 3813 000a 1A70     		strb	r2, [r3]
 3814 000c BB1D     		adds	r3, r7, #6
 3815 000e 0A1C     		adds	r2, r1, #0
 3816 0010 1A70     		strb	r2, [r3]
1115:RA8875.c      **** //    uint8 x;
1116:RA8875.c      ****   if (on) {
 3817              		.loc 1 1116 0
 3818 0012 FB1D     		adds	r3, r7, #7
 3819 0014 1B78     		ldrb	r3, [r3]
 3820 0016 002B     		cmp	r3, #0
 3821 0018 0FD0     		beq	.L94
1117:RA8875.c      **** //    x = readReg(RA8875_P1CR);
1118:RA8875.c      ****     writeReg(RA8875_P1CR, RA8875_P1CR_ENABLE | (clock & 0x0F));
 3822              		.loc 1 1118 0
 3823 001a BB1D     		adds	r3, r7, #6
 3824 001c 1B78     		ldrb	r3, [r3]
 3825 001e 5BB2     		sxtb	r3, r3
 3826 0020 0F22     		movs	r2, #15
 3827 0022 1340     		ands	r3, r2
 3828 0024 5BB2     		sxtb	r3, r3
 3829 0026 8022     		movs	r2, #128
 3830 0028 5242     		rsbs	r2, r2, #0
 3831 002a 1343     		orrs	r3, r2
 3832 002c 5BB2     		sxtb	r3, r3
 3833 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 88


 3834 0030 1900     		movs	r1, r3
 3835 0032 8A20     		movs	r0, #138
 3836 0034 FFF7FEFF 		bl	writeReg
1119:RA8875.c      ****     //writeReg(RA8875_P1CR, 0x40);
1120:RA8875.c      **** //    CyDelay(5);
1121:RA8875.c      **** //    x = readReg(RA8875_P1CR);
1122:RA8875.c      ****   } else {
1123:RA8875.c      ****     writeReg(RA8875_P1CR, RA8875_P1CR_DISABLE | (clock & 0x0F));
1124:RA8875.c      ****   }
1125:RA8875.c      **** }
 3837              		.loc 1 1125 0
 3838 0038 08E0     		b	.L96
 3839              	.L94:
1123:RA8875.c      ****   }
 3840              		.loc 1 1123 0
 3841 003a BB1D     		adds	r3, r7, #6
 3842 003c 1B78     		ldrb	r3, [r3]
 3843 003e 0F22     		movs	r2, #15
 3844 0040 1340     		ands	r3, r2
 3845 0042 DBB2     		uxtb	r3, r3
 3846 0044 1900     		movs	r1, r3
 3847 0046 8A20     		movs	r0, #138
 3848 0048 FFF7FEFF 		bl	writeReg
 3849              	.L96:
 3850              		.loc 1 1125 0
 3851 004c C046     		nop
 3852 004e BD46     		mov	sp, r7
 3853 0050 02B0     		add	sp, sp, #8
 3854              		@ sp needed
 3855 0052 80BD     		pop	{r7, pc}
 3856              		.cfi_endproc
 3857              	.LFE75:
 3858              		.size	PWM1config, .-PWM1config
 3859              		.section	.text.PWM2config,"ax",%progbits
 3860              		.align	2
 3861              		.global	PWM2config
 3862              		.code	16
 3863              		.thumb_func
 3864              		.type	PWM2config, %function
 3865              	PWM2config:
 3866              	.LFB76:
1126:RA8875.c      **** 
1127:RA8875.c      **** /**************************************************************************/
1128:RA8875.c      **** /*!
1129:RA8875.c      **** 
1130:RA8875.c      **** */
1131:RA8875.c      **** /**************************************************************************/
1132:RA8875.c      **** void PWM2config(boolean on, uint8_t clock) {
 3867              		.loc 1 1132 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 8
 3870              		@ frame_needed = 1, uses_anonymous_args = 0
 3871 0000 80B5     		push	{r7, lr}
 3872              		.cfi_def_cfa_offset 8
 3873              		.cfi_offset 7, -8
 3874              		.cfi_offset 14, -4
 3875 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 89


 3876              		.cfi_def_cfa_offset 16
 3877 0004 00AF     		add	r7, sp, #0
 3878              		.cfi_def_cfa_register 7
 3879 0006 0200     		movs	r2, r0
 3880 0008 FB1D     		adds	r3, r7, #7
 3881 000a 1A70     		strb	r2, [r3]
 3882 000c BB1D     		adds	r3, r7, #6
 3883 000e 0A1C     		adds	r2, r1, #0
 3884 0010 1A70     		strb	r2, [r3]
1133:RA8875.c      ****   if (on) {
 3885              		.loc 1 1133 0
 3886 0012 FB1D     		adds	r3, r7, #7
 3887 0014 1B78     		ldrb	r3, [r3]
 3888 0016 002B     		cmp	r3, #0
 3889 0018 0FD0     		beq	.L98
1134:RA8875.c      ****     writeReg(RA8875_P2CR, RA8875_P2CR_ENABLE | (clock & 0xF));
 3890              		.loc 1 1134 0
 3891 001a BB1D     		adds	r3, r7, #6
 3892 001c 1B78     		ldrb	r3, [r3]
 3893 001e 5BB2     		sxtb	r3, r3
 3894 0020 0F22     		movs	r2, #15
 3895 0022 1340     		ands	r3, r2
 3896 0024 5BB2     		sxtb	r3, r3
 3897 0026 8022     		movs	r2, #128
 3898 0028 5242     		rsbs	r2, r2, #0
 3899 002a 1343     		orrs	r3, r2
 3900 002c 5BB2     		sxtb	r3, r3
 3901 002e DBB2     		uxtb	r3, r3
 3902 0030 1900     		movs	r1, r3
 3903 0032 8C20     		movs	r0, #140
 3904 0034 FFF7FEFF 		bl	writeReg
1135:RA8875.c      ****   } else {
1136:RA8875.c      ****     writeReg(RA8875_P2CR, RA8875_P2CR_DISABLE | (clock & 0xF));
1137:RA8875.c      ****   }
1138:RA8875.c      **** }
 3905              		.loc 1 1138 0
 3906 0038 08E0     		b	.L100
 3907              	.L98:
1136:RA8875.c      ****   }
 3908              		.loc 1 1136 0
 3909 003a BB1D     		adds	r3, r7, #6
 3910 003c 1B78     		ldrb	r3, [r3]
 3911 003e 0F22     		movs	r2, #15
 3912 0040 1340     		ands	r3, r2
 3913 0042 DBB2     		uxtb	r3, r3
 3914 0044 1900     		movs	r1, r3
 3915 0046 8C20     		movs	r0, #140
 3916 0048 FFF7FEFF 		bl	writeReg
 3917              	.L100:
 3918              		.loc 1 1138 0
 3919 004c C046     		nop
 3920 004e BD46     		mov	sp, r7
 3921 0050 02B0     		add	sp, sp, #8
 3922              		@ sp needed
 3923 0052 80BD     		pop	{r7, pc}
 3924              		.cfi_endproc
 3925              	.LFE76:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 90


 3926              		.size	PWM2config, .-PWM2config
 3927              		.section	.text.touchEnable,"ax",%progbits
 3928              		.align	2
 3929              		.global	touchEnable
 3930              		.code	16
 3931              		.thumb_func
 3932              		.type	touchEnable, %function
 3933              	touchEnable:
 3934              	.LFB77:
1139:RA8875.c      **** 
1140:RA8875.c      **** /**************************************************************************/
1141:RA8875.c      **** /*!
1142:RA8875.c      ****       Enables or disables the on-chip touch screen controller
1143:RA8875.c      **** */
1144:RA8875.c      **** /**************************************************************************/
1145:RA8875.c      **** void touchEnable(boolean on) 
1146:RA8875.c      **** {
 3935              		.loc 1 1146 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 16
 3938              		@ frame_needed = 1, uses_anonymous_args = 0
 3939 0000 80B5     		push	{r7, lr}
 3940              		.cfi_def_cfa_offset 8
 3941              		.cfi_offset 7, -8
 3942              		.cfi_offset 14, -4
 3943 0002 84B0     		sub	sp, sp, #16
 3944              		.cfi_def_cfa_offset 24
 3945 0004 00AF     		add	r7, sp, #0
 3946              		.cfi_def_cfa_register 7
 3947 0006 0200     		movs	r2, r0
 3948 0008 FB1D     		adds	r3, r7, #7
 3949 000a 1A70     		strb	r2, [r3]
1147:RA8875.c      ****   uint8_t   adcClk = (uint8_t) RA8875_TPCR0_ADCCLK_DIV4;
 3950              		.loc 1 1147 0
 3951 000c 0F23     		movs	r3, #15
 3952 000e FB18     		adds	r3, r7, r3
 3953 0010 0222     		movs	r2, #2
 3954 0012 1A70     		strb	r2, [r3]
1148:RA8875.c      **** 
1149:RA8875.c      ****   if ( _size == RA8875_800x480 ) //match up touch size with LCD size
 3955              		.loc 1 1149 0
 3956 0014 1E4B     		ldr	r3, .L106
 3957 0016 1B78     		ldrb	r3, [r3]
 3958 0018 012B     		cmp	r3, #1
 3959 001a 03D1     		bne	.L102
1150:RA8875.c      ****     adcClk = (uint8_t) RA8875_TPCR0_ADCCLK_DIV16;
 3960              		.loc 1 1150 0
 3961 001c 0F23     		movs	r3, #15
 3962 001e FB18     		adds	r3, r7, r3
 3963 0020 0422     		movs	r2, #4
 3964 0022 1A70     		strb	r2, [r3]
 3965              	.L102:
1151:RA8875.c      **** 
1152:RA8875.c      ****   if (on)
 3966              		.loc 1 1152 0
 3967 0024 FB1D     		adds	r3, r7, #7
 3968 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 91


 3969 0028 002B     		cmp	r3, #0
 3970 002a 1BD0     		beq	.L103
1153:RA8875.c      ****   {
1154:RA8875.c      ****     /* Enable Touch Panel (Reg 0x70) */
1155:RA8875.c      ****     writeReg(RA8875_TPCR0, RA8875_TPCR0_ENABLE        |
 3971              		.loc 1 1155 0
 3972 002c 0F23     		movs	r3, #15
 3973 002e FB18     		adds	r3, r7, r3
 3974 0030 1B78     		ldrb	r3, [r3]
 3975 0032 4822     		movs	r2, #72
 3976 0034 5242     		rsbs	r2, r2, #0
 3977 0036 1343     		orrs	r3, r2
 3978 0038 DBB2     		uxtb	r3, r3
 3979 003a 1900     		movs	r1, r3
 3980 003c 7020     		movs	r0, #112
 3981 003e FFF7FEFF 		bl	writeReg
1156:RA8875.c      ****                            RA8875_TPCR0_WAIT_4096CLK  |
1157:RA8875.c      ****                            RA8875_TPCR0_WAKEENABLE   |
1158:RA8875.c      ****                            adcClk); // 10mhz max!
1159:RA8875.c      ****     /* Set Auto Mode      (Reg 0x71) */
1160:RA8875.c      ****     writeReg(RA8875_TPCR1, RA8875_TPCR1_AUTO    |
 3982              		.loc 1 1160 0
 3983 0042 0421     		movs	r1, #4
 3984 0044 7120     		movs	r0, #113
 3985 0046 FFF7FEFF 		bl	writeReg
1161:RA8875.c      ****                            // RA8875_TPCR1_VREFEXT |
1162:RA8875.c      ****                            RA8875_TPCR1_DEBOUNCE);
1163:RA8875.c      ****     /* Enable TP INT */
1164:RA8875.c      ****     writeReg(RA8875_INTC1, readReg(RA8875_INTC1) | RA8875_INTC1_TP);
 3986              		.loc 1 1164 0
 3987 004a F020     		movs	r0, #240
 3988 004c FFF7FEFF 		bl	readReg
 3989 0050 0300     		movs	r3, r0
 3990 0052 1A00     		movs	r2, r3
 3991 0054 0423     		movs	r3, #4
 3992 0056 1343     		orrs	r3, r2
 3993 0058 DBB2     		uxtb	r3, r3
 3994 005a 1900     		movs	r1, r3
 3995 005c F020     		movs	r0, #240
 3996 005e FFF7FEFF 		bl	writeReg
1165:RA8875.c      ****   }
1166:RA8875.c      ****   else
1167:RA8875.c      ****   {
1168:RA8875.c      ****     /* Disable TP INT */
1169:RA8875.c      ****     writeReg(RA8875_INTC1, readReg(RA8875_INTC1) & ~RA8875_INTC1_TP);
1170:RA8875.c      ****     /* Disable Touch Panel (Reg 0x70) */
1171:RA8875.c      ****     writeReg(RA8875_TPCR0, RA8875_TPCR0_DISABLE);
1172:RA8875.c      ****   }
1173:RA8875.c      **** }
 3997              		.loc 1 1173 0
 3998 0062 10E0     		b	.L105
 3999              	.L103:
1169:RA8875.c      ****     /* Disable Touch Panel (Reg 0x70) */
 4000              		.loc 1 1169 0
 4001 0064 F020     		movs	r0, #240
 4002 0066 FFF7FEFF 		bl	readReg
 4003 006a 0300     		movs	r3, r0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 92


 4004 006c 1A00     		movs	r2, r3
 4005 006e 0423     		movs	r3, #4
 4006 0070 9A43     		bics	r2, r3
 4007 0072 1300     		movs	r3, r2
 4008 0074 DBB2     		uxtb	r3, r3
 4009 0076 1900     		movs	r1, r3
 4010 0078 F020     		movs	r0, #240
 4011 007a FFF7FEFF 		bl	writeReg
1171:RA8875.c      ****   }
 4012              		.loc 1 1171 0
 4013 007e 0021     		movs	r1, #0
 4014 0080 7020     		movs	r0, #112
 4015 0082 FFF7FEFF 		bl	writeReg
 4016              	.L105:
 4017              		.loc 1 1173 0
 4018 0086 C046     		nop
 4019 0088 BD46     		mov	sp, r7
 4020 008a 04B0     		add	sp, sp, #16
 4021              		@ sp needed
 4022 008c 80BD     		pop	{r7, pc}
 4023              	.L107:
 4024 008e C046     		.align	2
 4025              	.L106:
 4026 0090 00000000 		.word	_size
 4027              		.cfi_endproc
 4028              	.LFE77:
 4029              		.size	touchEnable, .-touchEnable
 4030              		.section	.text.touched,"ax",%progbits
 4031              		.align	2
 4032              		.global	touched
 4033              		.code	16
 4034              		.thumb_func
 4035              		.type	touched, %function
 4036              	touched:
 4037              	.LFB78:
1174:RA8875.c      **** 
1175:RA8875.c      **** /**************************************************************************/
1176:RA8875.c      **** /*!
1177:RA8875.c      ****       Checks if a touch event has occured
1178:RA8875.c      ****       
1179:RA8875.c      ****       @returns  True is a touch event has occured (reading it via
1180:RA8875.c      ****                 touchRead() will clear the interrupt in memory)
1181:RA8875.c      **** */
1182:RA8875.c      **** /**************************************************************************/
1183:RA8875.c      **** boolean touched(void) 
1184:RA8875.c      **** {
 4038              		.loc 1 1184 0
 4039              		.cfi_startproc
 4040              		@ args = 0, pretend = 0, frame = 0
 4041              		@ frame_needed = 1, uses_anonymous_args = 0
 4042 0000 80B5     		push	{r7, lr}
 4043              		.cfi_def_cfa_offset 8
 4044              		.cfi_offset 7, -8
 4045              		.cfi_offset 14, -4
 4046 0002 00AF     		add	r7, sp, #0
 4047              		.cfi_def_cfa_register 7
1185:RA8875.c      ****   if (readReg(RA8875_INTC2) & RA8875_INTC2_TP) return true;
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 93


 4048              		.loc 1 1185 0
 4049 0004 F120     		movs	r0, #241
 4050 0006 FFF7FEFF 		bl	readReg
 4051 000a 0300     		movs	r3, r0
 4052 000c 1A00     		movs	r2, r3
 4053 000e 0423     		movs	r3, #4
 4054 0010 1340     		ands	r3, r2
 4055 0012 01D0     		beq	.L109
 4056              		.loc 1 1185 0 is_stmt 0 discriminator 1
 4057 0014 0123     		movs	r3, #1
 4058 0016 00E0     		b	.L110
 4059              	.L109:
1186:RA8875.c      ****   return false;
 4060              		.loc 1 1186 0 is_stmt 1
 4061 0018 0023     		movs	r3, #0
 4062              	.L110:
1187:RA8875.c      **** }
 4063              		.loc 1 1187 0
 4064 001a 1800     		movs	r0, r3
 4065 001c BD46     		mov	sp, r7
 4066              		@ sp needed
 4067 001e 80BD     		pop	{r7, pc}
 4068              		.cfi_endproc
 4069              	.LFE78:
 4070              		.size	touched, .-touched
 4071              		.section	.text.touchRead,"ax",%progbits
 4072              		.align	2
 4073              		.global	touchRead
 4074              		.code	16
 4075              		.thumb_func
 4076              		.type	touchRead, %function
 4077              	touchRead:
 4078              	.LFB79:
1188:RA8875.c      **** 
1189:RA8875.c      **** /**************************************************************************/
1190:RA8875.c      **** /*!
1191:RA8875.c      ****       Reads the last touch event
1192:RA8875.c      ****       
1193:RA8875.c      ****       @args x[out]  Pointer to the uint16_t field to assign the raw X value
1194:RA8875.c      ****       @args y[out]  Pointer to the uint16_t field to assign the raw Y value
1195:RA8875.c      ****       
1196:RA8875.c      ****       @note Calling this function will clear the touch panel interrupt on
1197:RA8875.c      ****             the RA8875, resetting the flag used by the 'touched' function
1198:RA8875.c      **** */
1199:RA8875.c      **** /**************************************************************************/
1200:RA8875.c      **** boolean touchRead(uint16_t *x, uint16_t *y) 
1201:RA8875.c      **** {
 4079              		.loc 1 1201 0
 4080              		.cfi_startproc
 4081              		@ args = 0, pretend = 0, frame = 16
 4082              		@ frame_needed = 1, uses_anonymous_args = 0
 4083 0000 90B5     		push	{r4, r7, lr}
 4084              		.cfi_def_cfa_offset 12
 4085              		.cfi_offset 4, -12
 4086              		.cfi_offset 7, -8
 4087              		.cfi_offset 14, -4
 4088 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 94


 4089              		.cfi_def_cfa_offset 32
 4090 0004 00AF     		add	r7, sp, #0
 4091              		.cfi_def_cfa_register 7
 4092 0006 7860     		str	r0, [r7, #4]
 4093 0008 3960     		str	r1, [r7]
1202:RA8875.c      ****   uint16_t tx, ty;
1203:RA8875.c      ****   uint8_t temp;
1204:RA8875.c      ****   
1205:RA8875.c      ****   tx = readReg(RA8875_TPXH);
 4094              		.loc 1 1205 0
 4095 000a 7220     		movs	r0, #114
 4096 000c FFF7FEFF 		bl	readReg
 4097 0010 0300     		movs	r3, r0
 4098 0012 1A00     		movs	r2, r3
 4099 0014 0E23     		movs	r3, #14
 4100 0016 FB18     		adds	r3, r7, r3
 4101 0018 1A80     		strh	r2, [r3]
1206:RA8875.c      ****   ty = readReg(RA8875_TPYH);
 4102              		.loc 1 1206 0
 4103 001a 7320     		movs	r0, #115
 4104 001c FFF7FEFF 		bl	readReg
 4105 0020 0300     		movs	r3, r0
 4106 0022 1A00     		movs	r2, r3
 4107 0024 0C23     		movs	r3, #12
 4108 0026 FB18     		adds	r3, r7, r3
 4109 0028 1A80     		strh	r2, [r3]
1207:RA8875.c      ****   temp = readReg(RA8875_TPXYL);
 4110              		.loc 1 1207 0
 4111 002a 0B23     		movs	r3, #11
 4112 002c FC18     		adds	r4, r7, r3
 4113 002e 7420     		movs	r0, #116
 4114 0030 FFF7FEFF 		bl	readReg
 4115 0034 0300     		movs	r3, r0
 4116 0036 2370     		strb	r3, [r4]
1208:RA8875.c      ****   tx <<= 2;
 4117              		.loc 1 1208 0
 4118 0038 0E23     		movs	r3, #14
 4119 003a FB18     		adds	r3, r7, r3
 4120 003c 0E22     		movs	r2, #14
 4121 003e BA18     		adds	r2, r7, r2
 4122 0040 1288     		ldrh	r2, [r2]
 4123 0042 9200     		lsls	r2, r2, #2
 4124 0044 1A80     		strh	r2, [r3]
1209:RA8875.c      ****   ty <<= 2;
 4125              		.loc 1 1209 0
 4126 0046 0C23     		movs	r3, #12
 4127 0048 FB18     		adds	r3, r7, r3
 4128 004a 0C22     		movs	r2, #12
 4129 004c BA18     		adds	r2, r7, r2
 4130 004e 1288     		ldrh	r2, [r2]
 4131 0050 9200     		lsls	r2, r2, #2
 4132 0052 1A80     		strh	r2, [r3]
1210:RA8875.c      ****   tx |= temp & 0x03;        // get the bottom x bits
 4133              		.loc 1 1210 0
 4134 0054 0B23     		movs	r3, #11
 4135 0056 FB18     		adds	r3, r7, r3
 4136 0058 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 95


 4137 005a 1BB2     		sxth	r3, r3
 4138 005c 0322     		movs	r2, #3
 4139 005e 1340     		ands	r3, r2
 4140 0060 1AB2     		sxth	r2, r3
 4141 0062 0E23     		movs	r3, #14
 4142 0064 FB18     		adds	r3, r7, r3
 4143 0066 0021     		movs	r1, #0
 4144 0068 5B5E     		ldrsh	r3, [r3, r1]
 4145 006a 1343     		orrs	r3, r2
 4146 006c 1AB2     		sxth	r2, r3
 4147 006e 0E23     		movs	r3, #14
 4148 0070 FB18     		adds	r3, r7, r3
 4149 0072 1A80     		strh	r2, [r3]
1211:RA8875.c      ****   ty |= (temp >> 2) & 0x03; // get the bottom y bits
 4150              		.loc 1 1211 0
 4151 0074 0B23     		movs	r3, #11
 4152 0076 FB18     		adds	r3, r7, r3
 4153 0078 1B78     		ldrb	r3, [r3]
 4154 007a 9B08     		lsrs	r3, r3, #2
 4155 007c DBB2     		uxtb	r3, r3
 4156 007e 1BB2     		sxth	r3, r3
 4157 0080 0322     		movs	r2, #3
 4158 0082 1340     		ands	r3, r2
 4159 0084 1AB2     		sxth	r2, r3
 4160 0086 0C23     		movs	r3, #12
 4161 0088 FB18     		adds	r3, r7, r3
 4162 008a 0021     		movs	r1, #0
 4163 008c 5B5E     		ldrsh	r3, [r3, r1]
 4164 008e 1343     		orrs	r3, r2
 4165 0090 1AB2     		sxth	r2, r3
 4166 0092 0C23     		movs	r3, #12
 4167 0094 FB18     		adds	r3, r7, r3
 4168 0096 1A80     		strh	r2, [r3]
1212:RA8875.c      **** 
1213:RA8875.c      ****   *x = tx;
 4169              		.loc 1 1213 0
 4170 0098 7B68     		ldr	r3, [r7, #4]
 4171 009a 0E22     		movs	r2, #14
 4172 009c BA18     		adds	r2, r7, r2
 4173 009e 1288     		ldrh	r2, [r2]
 4174 00a0 1A80     		strh	r2, [r3]
1214:RA8875.c      ****   *y = ty;
 4175              		.loc 1 1214 0
 4176 00a2 3B68     		ldr	r3, [r7]
 4177 00a4 0C22     		movs	r2, #12
 4178 00a6 BA18     		adds	r2, r7, r2
 4179 00a8 1288     		ldrh	r2, [r2]
 4180 00aa 1A80     		strh	r2, [r3]
1215:RA8875.c      **** 
1216:RA8875.c      ****   /* Clear TP INT Status */
1217:RA8875.c      ****   writeReg(RA8875_INTC2, RA8875_INTC2_TP);
 4181              		.loc 1 1217 0
 4182 00ac 0421     		movs	r1, #4
 4183 00ae F120     		movs	r0, #241
 4184 00b0 FFF7FEFF 		bl	writeReg
1218:RA8875.c      **** 
1219:RA8875.c      ****   return true;
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 96


 4185              		.loc 1 1219 0
 4186 00b4 0123     		movs	r3, #1
1220:RA8875.c      **** }
 4187              		.loc 1 1220 0
 4188 00b6 1800     		movs	r0, r3
 4189 00b8 BD46     		mov	sp, r7
 4190 00ba 05B0     		add	sp, sp, #20
 4191              		@ sp needed
 4192 00bc 90BD     		pop	{r4, r7, pc}
 4193              		.cfi_endproc
 4194              	.LFE79:
 4195              		.size	touchRead, .-touchRead
 4196 00be C046     		.section	.text.displayOn,"ax",%progbits
 4197              		.align	2
 4198              		.global	displayOn
 4199              		.code	16
 4200              		.thumb_func
 4201              		.type	displayOn, %function
 4202              	displayOn:
 4203              	.LFB80:
1221:RA8875.c      **** 
1222:RA8875.c      **** /**************************************************************************/
1223:RA8875.c      **** /*!
1224:RA8875.c      ****       Turns the display on or off
1225:RA8875.c      **** */
1226:RA8875.c      **** /**************************************************************************/
1227:RA8875.c      **** void displayOn(boolean on) 
1228:RA8875.c      **** {
 4204              		.loc 1 1228 0
 4205              		.cfi_startproc
 4206              		@ args = 0, pretend = 0, frame = 8
 4207              		@ frame_needed = 1, uses_anonymous_args = 0
 4208 0000 80B5     		push	{r7, lr}
 4209              		.cfi_def_cfa_offset 8
 4210              		.cfi_offset 7, -8
 4211              		.cfi_offset 14, -4
 4212 0002 82B0     		sub	sp, sp, #8
 4213              		.cfi_def_cfa_offset 16
 4214 0004 00AF     		add	r7, sp, #0
 4215              		.cfi_def_cfa_register 7
 4216 0006 0200     		movs	r2, r0
 4217 0008 FB1D     		adds	r3, r7, #7
 4218 000a 1A70     		strb	r2, [r3]
1229:RA8875.c      ****  if (on) { 
 4219              		.loc 1 1229 0
 4220 000c FB1D     		adds	r3, r7, #7
 4221 000e 1B78     		ldrb	r3, [r3]
 4222 0010 002B     		cmp	r3, #0
 4223 0012 04D0     		beq	.L114
1230:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_NORMAL | RA8875_PWRR_DISPON);
 4224              		.loc 1 1230 0
 4225 0014 8021     		movs	r1, #128
 4226 0016 0120     		movs	r0, #1
 4227 0018 FFF7FEFF 		bl	writeReg
1231:RA8875.c      **** }
1232:RA8875.c      ****  else
1233:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_NORMAL | RA8875_PWRR_DISPOFF);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 97


1234:RA8875.c      **** }
 4228              		.loc 1 1234 0
 4229 001c 03E0     		b	.L116
 4230              	.L114:
1233:RA8875.c      **** }
 4231              		.loc 1 1233 0
 4232 001e 0021     		movs	r1, #0
 4233 0020 0120     		movs	r0, #1
 4234 0022 FFF7FEFF 		bl	writeReg
 4235              	.L116:
 4236              		.loc 1 1234 0
 4237 0026 C046     		nop
 4238 0028 BD46     		mov	sp, r7
 4239 002a 02B0     		add	sp, sp, #8
 4240              		@ sp needed
 4241 002c 80BD     		pop	{r7, pc}
 4242              		.cfi_endproc
 4243              	.LFE80:
 4244              		.size	displayOn, .-displayOn
 4245 002e C046     		.section	.text.sleep,"ax",%progbits
 4246              		.align	2
 4247              		.global	sleep
 4248              		.code	16
 4249              		.thumb_func
 4250              		.type	sleep, %function
 4251              	sleep:
 4252              	.LFB81:
1235:RA8875.c      **** 
1236:RA8875.c      **** /**************************************************************************/
1237:RA8875.c      **** /*!
1238:RA8875.c      ****     Puts the display in sleep mode, or disables sleep mode if enabled
1239:RA8875.c      **** */
1240:RA8875.c      **** /**************************************************************************/
1241:RA8875.c      **** void sleep(boolean sleep) 
1242:RA8875.c      **** {
 4253              		.loc 1 1242 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 8
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 80B5     		push	{r7, lr}
 4258              		.cfi_def_cfa_offset 8
 4259              		.cfi_offset 7, -8
 4260              		.cfi_offset 14, -4
 4261 0002 82B0     		sub	sp, sp, #8
 4262              		.cfi_def_cfa_offset 16
 4263 0004 00AF     		add	r7, sp, #0
 4264              		.cfi_def_cfa_register 7
 4265 0006 0200     		movs	r2, r0
 4266 0008 FB1D     		adds	r3, r7, #7
 4267 000a 1A70     		strb	r2, [r3]
1243:RA8875.c      ****  if (sleep) 
 4268              		.loc 1 1243 0
 4269 000c FB1D     		adds	r3, r7, #7
 4270 000e 1B78     		ldrb	r3, [r3]
 4271 0010 002B     		cmp	r3, #0
 4272 0012 04D0     		beq	.L118
1244:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_DISPOFF | RA8875_PWRR_SLEEP);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 98


 4273              		.loc 1 1244 0
 4274 0014 0221     		movs	r1, #2
 4275 0016 0120     		movs	r0, #1
 4276 0018 FFF7FEFF 		bl	writeReg
1245:RA8875.c      ****  else
1246:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_DISPOFF);
1247:RA8875.c      **** }
 4277              		.loc 1 1247 0
 4278 001c 03E0     		b	.L120
 4279              	.L118:
1246:RA8875.c      **** }
 4280              		.loc 1 1246 0
 4281 001e 0021     		movs	r1, #0
 4282 0020 0120     		movs	r0, #1
 4283 0022 FFF7FEFF 		bl	writeReg
 4284              	.L120:
 4285              		.loc 1 1247 0
 4286 0026 C046     		nop
 4287 0028 BD46     		mov	sp, r7
 4288 002a 02B0     		add	sp, sp, #8
 4289              		@ sp needed
 4290 002c 80BD     		pop	{r7, pc}
 4291              		.cfi_endproc
 4292              	.LFE81:
 4293              		.size	sleep, .-sleep
 4294 002e C046     		.section	.text.writeReg,"ax",%progbits
 4295              		.align	2
 4296              		.global	writeReg
 4297              		.code	16
 4298              		.thumb_func
 4299              		.type	writeReg, %function
 4300              	writeReg:
 4301              	.LFB82:
1248:RA8875.c      **** 
1249:RA8875.c      **** /************************* Low Level ***********************************/
1250:RA8875.c      **** 
1251:RA8875.c      **** /**************************************************************************/
1252:RA8875.c      **** /*!
1253:RA8875.c      **** 
1254:RA8875.c      **** */
1255:RA8875.c      **** /**************************************************************************/
1256:RA8875.c      **** void  writeReg(uint8_t reg, uint8_t val) 
1257:RA8875.c      **** {
 4302              		.loc 1 1257 0
 4303              		.cfi_startproc
 4304              		@ args = 0, pretend = 0, frame = 8
 4305              		@ frame_needed = 1, uses_anonymous_args = 0
 4306 0000 80B5     		push	{r7, lr}
 4307              		.cfi_def_cfa_offset 8
 4308              		.cfi_offset 7, -8
 4309              		.cfi_offset 14, -4
 4310 0002 82B0     		sub	sp, sp, #8
 4311              		.cfi_def_cfa_offset 16
 4312 0004 00AF     		add	r7, sp, #0
 4313              		.cfi_def_cfa_register 7
 4314 0006 0200     		movs	r2, r0
 4315 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 99


 4316 000a 1A70     		strb	r2, [r3]
 4317 000c BB1D     		adds	r3, r7, #6
 4318 000e 0A1C     		adds	r2, r1, #0
 4319 0010 1A70     		strb	r2, [r3]
1258:RA8875.c      ****   writeCommand(reg);
 4320              		.loc 1 1258 0
 4321 0012 FB1D     		adds	r3, r7, #7
 4322 0014 1B78     		ldrb	r3, [r3]
 4323 0016 1800     		movs	r0, r3
 4324 0018 FFF7FEFF 		bl	writeCommand
1259:RA8875.c      ****   writeData(val);
 4325              		.loc 1 1259 0
 4326 001c BB1D     		adds	r3, r7, #6
 4327 001e 1B78     		ldrb	r3, [r3]
 4328 0020 1800     		movs	r0, r3
 4329 0022 FFF7FEFF 		bl	writeData
1260:RA8875.c      **** }
 4330              		.loc 1 1260 0
 4331 0026 C046     		nop
 4332 0028 BD46     		mov	sp, r7
 4333 002a 02B0     		add	sp, sp, #8
 4334              		@ sp needed
 4335 002c 80BD     		pop	{r7, pc}
 4336              		.cfi_endproc
 4337              	.LFE82:
 4338              		.size	writeReg, .-writeReg
 4339 002e C046     		.section	.text.readReg,"ax",%progbits
 4340              		.align	2
 4341              		.global	readReg
 4342              		.code	16
 4343              		.thumb_func
 4344              		.type	readReg, %function
 4345              	readReg:
 4346              	.LFB83:
1261:RA8875.c      **** 
1262:RA8875.c      **** /**************************************************************************/
1263:RA8875.c      **** /*!
1264:RA8875.c      **** 
1265:RA8875.c      **** */
1266:RA8875.c      **** /**************************************************************************/
1267:RA8875.c      **** uint8_t  readReg(uint8_t reg) 
1268:RA8875.c      **** {
 4347              		.loc 1 1268 0
 4348              		.cfi_startproc
 4349              		@ args = 0, pretend = 0, frame = 8
 4350              		@ frame_needed = 1, uses_anonymous_args = 0
 4351 0000 80B5     		push	{r7, lr}
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 7, -8
 4354              		.cfi_offset 14, -4
 4355 0002 82B0     		sub	sp, sp, #8
 4356              		.cfi_def_cfa_offset 16
 4357 0004 00AF     		add	r7, sp, #0
 4358              		.cfi_def_cfa_register 7
 4359 0006 0200     		movs	r2, r0
 4360 0008 FB1D     		adds	r3, r7, #7
 4361 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 100


1269:RA8875.c      ****   writeCommand(reg);
 4362              		.loc 1 1269 0
 4363 000c FB1D     		adds	r3, r7, #7
 4364 000e 1B78     		ldrb	r3, [r3]
 4365 0010 1800     		movs	r0, r3
 4366 0012 FFF7FEFF 		bl	writeCommand
1270:RA8875.c      ****   return readData();
 4367              		.loc 1 1270 0
 4368 0016 FFF7FEFF 		bl	readData
 4369 001a 0300     		movs	r3, r0
1271:RA8875.c      **** }
 4370              		.loc 1 1271 0
 4371 001c 1800     		movs	r0, r3
 4372 001e BD46     		mov	sp, r7
 4373 0020 02B0     		add	sp, sp, #8
 4374              		@ sp needed
 4375 0022 80BD     		pop	{r7, pc}
 4376              		.cfi_endproc
 4377              	.LFE83:
 4378              		.size	readReg, .-readReg
 4379              		.section	.text.writeData,"ax",%progbits
 4380              		.align	2
 4381              		.global	writeData
 4382              		.code	16
 4383              		.thumb_func
 4384              		.type	writeData, %function
 4385              	writeData:
 4386              	.LFB84:
1272:RA8875.c      **** 
1273:RA8875.c      **** /**************************************************************************/
1274:RA8875.c      **** /*!
1275:RA8875.c      **** 
1276:RA8875.c      **** */
1277:RA8875.c      **** /**************************************************************************/
1278:RA8875.c      **** void  writeData(uint8_t d) 
1279:RA8875.c      **** {
 4387              		.loc 1 1279 0
 4388              		.cfi_startproc
 4389              		@ args = 0, pretend = 0, frame = 8
 4390              		@ frame_needed = 1, uses_anonymous_args = 0
 4391 0000 80B5     		push	{r7, lr}
 4392              		.cfi_def_cfa_offset 8
 4393              		.cfi_offset 7, -8
 4394              		.cfi_offset 14, -4
 4395 0002 82B0     		sub	sp, sp, #8
 4396              		.cfi_def_cfa_offset 16
 4397 0004 00AF     		add	r7, sp, #0
 4398              		.cfi_def_cfa_register 7
 4399 0006 0200     		movs	r2, r0
 4400 0008 FB1D     		adds	r3, r7, #7
 4401 000a 1A70     		strb	r2, [r3]
1280:RA8875.c      ****     LCDSPI_Start();
 4402              		.loc 1 1280 0
 4403 000c FFF7FEFF 		bl	LCDSPI_Start
1281:RA8875.c      ****     CyDelay(1); // testing
 4404              		.loc 1 1281 0
 4405 0010 0120     		movs	r0, #1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 101


 4406 0012 FFF7FEFF 		bl	CyDelay
1282:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 4407              		.loc 1 1282 0
 4408 0016 0020     		movs	r0, #0
 4409 0018 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1283:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(d);
 4410              		.loc 1 1283 0
 4411 001c FB1D     		adds	r3, r7, #7
 4412 001e 1B78     		ldrb	r3, [r3]
 4413 0020 1800     		movs	r0, r3
 4414 0022 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1284:RA8875.c      ****     CyDelay(1); // testing
 4415              		.loc 1 1284 0
 4416 0026 0120     		movs	r0, #1
 4417 0028 FFF7FEFF 		bl	CyDelay
1285:RA8875.c      ****     LCDSPI_Stop();
 4418              		.loc 1 1285 0
 4419 002c FFF7FEFF 		bl	LCDSPI_Stop
1286:RA8875.c      **** }
 4420              		.loc 1 1286 0
 4421 0030 C046     		nop
 4422 0032 BD46     		mov	sp, r7
 4423 0034 02B0     		add	sp, sp, #8
 4424              		@ sp needed
 4425 0036 80BD     		pop	{r7, pc}
 4426              		.cfi_endproc
 4427              	.LFE84:
 4428              		.size	writeData, .-writeData
 4429              		.section	.text.readData,"ax",%progbits
 4430              		.align	2
 4431              		.global	readData
 4432              		.code	16
 4433              		.thumb_func
 4434              		.type	readData, %function
 4435              	readData:
 4436              	.LFB85:
1287:RA8875.c      **** 
1288:RA8875.c      **** /**************************************************************************/
1289:RA8875.c      **** /*!
1290:RA8875.c      **** 
1291:RA8875.c      **** */
1292:RA8875.c      **** /**************************************************************************/
1293:RA8875.c      **** uint8_t  readData(void) 
1294:RA8875.c      **** {
 4437              		.loc 1 1294 0
 4438              		.cfi_startproc
 4439              		@ args = 0, pretend = 0, frame = 8
 4440              		@ frame_needed = 1, uses_anonymous_args = 0
 4441 0000 80B5     		push	{r7, lr}
 4442              		.cfi_def_cfa_offset 8
 4443              		.cfi_offset 7, -8
 4444              		.cfi_offset 14, -4
 4445 0002 82B0     		sub	sp, sp, #8
 4446              		.cfi_def_cfa_offset 16
 4447 0004 00AF     		add	r7, sp, #0
 4448              		.cfi_def_cfa_register 7
1295:RA8875.c      ****     uint8_t x = 0u;
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 102


 4449              		.loc 1 1295 0
 4450 0006 FB1D     		adds	r3, r7, #7
 4451 0008 0022     		movs	r2, #0
 4452 000a 1A70     		strb	r2, [r3]
1296:RA8875.c      ****     uint8_t y = 0u;
 4453              		.loc 1 1296 0
 4454 000c BB1D     		adds	r3, r7, #6
 4455 000e 0022     		movs	r2, #0
 4456 0010 1A70     		strb	r2, [r3]
1297:RA8875.c      ****    
1298:RA8875.c      **** //  digitalWrite(_cs, LOW);
1299:RA8875.c      **** //    spi_begin();
1300:RA8875.c      ****     LCDSPI_Start();
 4457              		.loc 1 1300 0
 4458 0012 FFF7FEFF 		bl	LCDSPI_Start
1301:RA8875.c      ****     CyDelay(1);
 4459              		.loc 1 1301 0
 4460 0016 0120     		movs	r0, #1
 4461 0018 FFF7FEFF 		bl	CyDelay
1302:RA8875.c      ****     
1303:RA8875.c      **** //  SPI.transfer(RA8875_DATAREAD);
1304:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAREAD);
 4462              		.loc 1 1304 0
 4463 001c 4020     		movs	r0, #64
 4464 001e FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1305:RA8875.c      **** //    LCDSPI_SpiUartClearRxBuffer();  // testing
1306:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(0);
 4465              		.loc 1 1306 0
 4466 0022 0020     		movs	r0, #0
 4467 0024 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1307:RA8875.c      **** //  uint8_t x = SPI.transfer(0x0);
1308:RA8875.c      ****     
1309:RA8875.c      **** //    y = LCDSPI_SpiUartGetRxBufferSize();
1310:RA8875.c      ****     x = LCDSPI_SpiUartReadRxData() & 0x000F; // ISSUE HERE
 4468              		.loc 1 1310 0
 4469 0028 FFF7FEFF 		bl	LCDSPI_SpiUartReadRxData
 4470 002c 0300     		movs	r3, r0
 4471 002e DAB2     		uxtb	r2, r3
 4472 0030 FB1D     		adds	r3, r7, #7
 4473 0032 0F21     		movs	r1, #15
 4474 0034 0A40     		ands	r2, r1
 4475 0036 1A70     		strb	r2, [r3]
1311:RA8875.c      ****     //x = LCDSPI_SpiUartReadRxData();
1312:RA8875.c      ****     
1313:RA8875.c      **** //    spi_end();
1314:RA8875.c      **** //  digitalWrite(_cs, HIGH);
1315:RA8875.c      ****     CyDelay(1);
 4476              		.loc 1 1315 0
 4477 0038 0120     		movs	r0, #1
 4478 003a FFF7FEFF 		bl	CyDelay
1316:RA8875.c      ****     LCDSPI_Stop();
 4479              		.loc 1 1316 0
 4480 003e FFF7FEFF 		bl	LCDSPI_Stop
1317:RA8875.c      ****     
1318:RA8875.c      ****     // testing
1319:RA8875.c      **** //    LCDSPI_Start();
1320:RA8875.c      **** //    CyDelay(1);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 103


1321:RA8875.c      **** //    LCDSPI_SpiUartWriteTxData(x);
1322:RA8875.c      **** //    LCDSPI_SpiUartWriteTxData(y);
1323:RA8875.c      **** //    CyDelay(1);
1324:RA8875.c      **** //    LCDSPI_Stop();   
1325:RA8875.c      ****     
1326:RA8875.c      ****     return x;
 4481              		.loc 1 1326 0
 4482 0042 FB1D     		adds	r3, r7, #7
 4483 0044 1B78     		ldrb	r3, [r3]
1327:RA8875.c      **** }
 4484              		.loc 1 1327 0
 4485 0046 1800     		movs	r0, r3
 4486 0048 BD46     		mov	sp, r7
 4487 004a 02B0     		add	sp, sp, #8
 4488              		@ sp needed
 4489 004c 80BD     		pop	{r7, pc}
 4490              		.cfi_endproc
 4491              	.LFE85:
 4492              		.size	readData, .-readData
 4493 004e C046     		.section	.text.writeCommand,"ax",%progbits
 4494              		.align	2
 4495              		.global	writeCommand
 4496              		.code	16
 4497              		.thumb_func
 4498              		.type	writeCommand, %function
 4499              	writeCommand:
 4500              	.LFB86:
1328:RA8875.c      **** 
1329:RA8875.c      **** /**************************************************************************/
1330:RA8875.c      **** /*!
1331:RA8875.c      **** 
1332:RA8875.c      **** */
1333:RA8875.c      **** /**************************************************************************/
1334:RA8875.c      **** void  writeCommand(uint8_t d) 
1335:RA8875.c      **** {
 4501              		.loc 1 1335 0
 4502              		.cfi_startproc
 4503              		@ args = 0, pretend = 0, frame = 8
 4504              		@ frame_needed = 1, uses_anonymous_args = 0
 4505 0000 80B5     		push	{r7, lr}
 4506              		.cfi_def_cfa_offset 8
 4507              		.cfi_offset 7, -8
 4508              		.cfi_offset 14, -4
 4509 0002 82B0     		sub	sp, sp, #8
 4510              		.cfi_def_cfa_offset 16
 4511 0004 00AF     		add	r7, sp, #0
 4512              		.cfi_def_cfa_register 7
 4513 0006 0200     		movs	r2, r0
 4514 0008 FB1D     		adds	r3, r7, #7
 4515 000a 1A70     		strb	r2, [r3]
1336:RA8875.c      ****     LCDSPI_Start(); 
 4516              		.loc 1 1336 0
 4517 000c FFF7FEFF 		bl	LCDSPI_Start
1337:RA8875.c      ****     CyDelay(1); // testing
 4518              		.loc 1 1337 0
 4519 0010 0120     		movs	r0, #1
 4520 0012 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 104


1338:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_CMDWRITE);
 4521              		.loc 1 1338 0
 4522 0016 8020     		movs	r0, #128
 4523 0018 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1339:RA8875.c      ****     
1340:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(d);
 4524              		.loc 1 1340 0
 4525 001c FB1D     		adds	r3, r7, #7
 4526 001e 1B78     		ldrb	r3, [r3]
 4527 0020 1800     		movs	r0, r3
 4528 0022 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1341:RA8875.c      ****     CyDelay(1); // testing
 4529              		.loc 1 1341 0
 4530 0026 0120     		movs	r0, #1
 4531 0028 FFF7FEFF 		bl	CyDelay
1342:RA8875.c      ****     LCDSPI_Stop();
 4532              		.loc 1 1342 0
 4533 002c FFF7FEFF 		bl	LCDSPI_Stop
1343:RA8875.c      **** }
 4534              		.loc 1 1343 0
 4535 0030 C046     		nop
 4536 0032 BD46     		mov	sp, r7
 4537 0034 02B0     		add	sp, sp, #8
 4538              		@ sp needed
 4539 0036 80BD     		pop	{r7, pc}
 4540              		.cfi_endproc
 4541              	.LFE86:
 4542              		.size	writeCommand, .-writeCommand
 4543              		.section	.text.readStatus,"ax",%progbits
 4544              		.align	2
 4545              		.global	readStatus
 4546              		.code	16
 4547              		.thumb_func
 4548              		.type	readStatus, %function
 4549              	readStatus:
 4550              	.LFB87:
1344:RA8875.c      **** 
1345:RA8875.c      **** /**************************************************************************/
1346:RA8875.c      **** /*!
1347:RA8875.c      **** 
1348:RA8875.c      **** */
1349:RA8875.c      **** /**************************************************************************/
1350:RA8875.c      **** uint8_t  readStatus(void) 
1351:RA8875.c      **** {
 4551              		.loc 1 1351 0
 4552              		.cfi_startproc
 4553              		@ args = 0, pretend = 0, frame = 8
 4554              		@ frame_needed = 1, uses_anonymous_args = 0
 4555 0000 80B5     		push	{r7, lr}
 4556              		.cfi_def_cfa_offset 8
 4557              		.cfi_offset 7, -8
 4558              		.cfi_offset 14, -4
 4559 0002 82B0     		sub	sp, sp, #8
 4560              		.cfi_def_cfa_offset 16
 4561 0004 00AF     		add	r7, sp, #0
 4562              		.cfi_def_cfa_register 7
1352:RA8875.c      **** //  digitalWrite(_cs, LOW);
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 105


1353:RA8875.c      **** //    spi_begin();
1354:RA8875.c      ****     LCDSPI_Start();
 4563              		.loc 1 1354 0
 4564 0006 FFF7FEFF 		bl	LCDSPI_Start
1355:RA8875.c      ****     CyDelay(1);
 4565              		.loc 1 1355 0
 4566 000a 0120     		movs	r0, #1
 4567 000c FFF7FEFF 		bl	CyDelay
1356:RA8875.c      **** //  SPI.transfer(RA8875_CMDREAD);
1357:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_CMDREAD);
 4568              		.loc 1 1357 0
 4569 0010 C020     		movs	r0, #192
 4570 0012 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1358:RA8875.c      **** //  uint8_t x = SPI.transfer(0x0);
1359:RA8875.c      ****     uint8_t x = LCDSPI_SpiUartReadRxData();
 4571              		.loc 1 1359 0
 4572 0016 FFF7FEFF 		bl	LCDSPI_SpiUartReadRxData
 4573 001a 0200     		movs	r2, r0
 4574 001c FB1D     		adds	r3, r7, #7
 4575 001e 1A70     		strb	r2, [r3]
1360:RA8875.c      **** //    spi_end();
1361:RA8875.c      **** //
1362:RA8875.c      **** //  digitalWrite(_cs, HIGH);
1363:RA8875.c      ****     CyDelay(1); // testing
 4576              		.loc 1 1363 0
 4577 0020 0120     		movs	r0, #1
 4578 0022 FFF7FEFF 		bl	CyDelay
1364:RA8875.c      ****     LCDSPI_Stop();
 4579              		.loc 1 1364 0
 4580 0026 FFF7FEFF 		bl	LCDSPI_Stop
1365:RA8875.c      ****     
1366:RA8875.c      ****     return x;
 4581              		.loc 1 1366 0
 4582 002a FB1D     		adds	r3, r7, #7
 4583 002c 1B78     		ldrb	r3, [r3]
1367:RA8875.c      **** }
 4584              		.loc 1 1367 0
 4585 002e 1800     		movs	r0, r3
 4586 0030 BD46     		mov	sp, r7
 4587 0032 02B0     		add	sp, sp, #8
 4588              		@ sp needed
 4589 0034 80BD     		pop	{r7, pc}
 4590              		.cfi_endproc
 4591              	.LFE87:
 4592              		.size	readStatus, .-readStatus
 4593 0036 C046     		.text
 4594              	.Letext0:
 4595              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 4596              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 4597              		.file 4 "Generated_Source\\PSoC4/BLE_1_Stack.h"
 4598              		.file 5 "Generated_Source\\PSoC4/BLE_1_eventHandler.h"
 4599              		.file 6 "RA8875.h"
 4600              		.section	.debug_info,"",%progbits
 4601              	.Ldebug_info0:
 4602 0000 3F110000 		.4byte	0x113f
 4603 0004 0400     		.2byte	0x4
 4604 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 106


 4605 000a 04       		.byte	0x4
 4606 000b 01       		.uleb128 0x1
 4607 000c 9D060000 		.4byte	.LASF188
 4608 0010 0C       		.byte	0xc
 4609 0011 8E0A0000 		.4byte	.LASF189
 4610 0015 F30C0000 		.4byte	.LASF190
 4611 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4612 001d 00000000 		.4byte	0
 4613 0021 00000000 		.4byte	.Ldebug_line0
 4614 0025 02       		.uleb128 0x2
 4615 0026 01       		.byte	0x1
 4616 0027 06       		.byte	0x6
 4617 0028 F9010000 		.4byte	.LASF0
 4618 002c 03       		.uleb128 0x3
 4619 002d 9E000000 		.4byte	.LASF2
 4620 0031 02       		.byte	0x2
 4621 0032 1D       		.byte	0x1d
 4622 0033 37000000 		.4byte	0x37
 4623 0037 02       		.uleb128 0x2
 4624 0038 01       		.byte	0x1
 4625 0039 08       		.byte	0x8
 4626 003a 8B090000 		.4byte	.LASF1
 4627 003e 03       		.uleb128 0x3
 4628 003f 53030000 		.4byte	.LASF3
 4629 0043 02       		.byte	0x2
 4630 0044 29       		.byte	0x29
 4631 0045 49000000 		.4byte	0x49
 4632 0049 02       		.uleb128 0x2
 4633 004a 02       		.byte	0x2
 4634 004b 05       		.byte	0x5
 4635 004c 010A0000 		.4byte	.LASF4
 4636 0050 03       		.uleb128 0x3
 4637 0051 8C0B0000 		.4byte	.LASF5
 4638 0055 02       		.byte	0x2
 4639 0056 2B       		.byte	0x2b
 4640 0057 5B000000 		.4byte	0x5b
 4641 005b 02       		.uleb128 0x2
 4642 005c 02       		.byte	0x2
 4643 005d 07       		.byte	0x7
 4644 005e 0F050000 		.4byte	.LASF6
 4645 0062 02       		.uleb128 0x2
 4646 0063 04       		.byte	0x4
 4647 0064 05       		.byte	0x5
 4648 0065 CB000000 		.4byte	.LASF7
 4649 0069 03       		.uleb128 0x3
 4650 006a 3C030000 		.4byte	.LASF8
 4651 006e 02       		.byte	0x2
 4652 006f 41       		.byte	0x41
 4653 0070 74000000 		.4byte	0x74
 4654 0074 02       		.uleb128 0x2
 4655 0075 04       		.byte	0x4
 4656 0076 07       		.byte	0x7
 4657 0077 60040000 		.4byte	.LASF9
 4658 007b 02       		.uleb128 0x2
 4659 007c 08       		.byte	0x8
 4660 007d 05       		.byte	0x5
 4661 007e EB010000 		.4byte	.LASF10
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 107


 4662 0082 02       		.uleb128 0x2
 4663 0083 08       		.byte	0x8
 4664 0084 07       		.byte	0x7
 4665 0085 D4000000 		.4byte	.LASF11
 4666 0089 04       		.uleb128 0x4
 4667 008a 04       		.byte	0x4
 4668 008b 05       		.byte	0x5
 4669 008c 696E7400 		.ascii	"int\000"
 4670 0090 02       		.uleb128 0x2
 4671 0091 04       		.byte	0x4
 4672 0092 07       		.byte	0x7
 4673 0093 F6030000 		.4byte	.LASF12
 4674 0097 03       		.uleb128 0x3
 4675 0098 BD0D0000 		.4byte	.LASF13
 4676 009c 03       		.byte	0x3
 4677 009d 18       		.byte	0x18
 4678 009e 2C000000 		.4byte	0x2c
 4679 00a2 03       		.uleb128 0x3
 4680 00a3 DA010000 		.4byte	.LASF14
 4681 00a7 03       		.byte	0x3
 4682 00a8 20       		.byte	0x20
 4683 00a9 3E000000 		.4byte	0x3e
 4684 00ad 03       		.uleb128 0x3
 4685 00ae D1020000 		.4byte	.LASF15
 4686 00b2 03       		.byte	0x3
 4687 00b3 24       		.byte	0x24
 4688 00b4 50000000 		.4byte	0x50
 4689 00b8 03       		.uleb128 0x3
 4690 00b9 B40E0000 		.4byte	.LASF16
 4691 00bd 03       		.byte	0x3
 4692 00be 30       		.byte	0x30
 4693 00bf 69000000 		.4byte	0x69
 4694 00c3 02       		.uleb128 0x2
 4695 00c4 04       		.byte	0x4
 4696 00c5 04       		.byte	0x4
 4697 00c6 49090000 		.4byte	.LASF17
 4698 00ca 02       		.uleb128 0x2
 4699 00cb 08       		.byte	0x8
 4700 00cc 04       		.byte	0x4
 4701 00cd E1020000 		.4byte	.LASF18
 4702 00d1 02       		.uleb128 0x2
 4703 00d2 01       		.byte	0x1
 4704 00d3 08       		.byte	0x8
 4705 00d4 430B0000 		.4byte	.LASF19
 4706 00d8 02       		.uleb128 0x2
 4707 00d9 08       		.byte	0x8
 4708 00da 04       		.byte	0x4
 4709 00db 370B0000 		.4byte	.LASF20
 4710 00df 02       		.uleb128 0x2
 4711 00e0 04       		.byte	0x4
 4712 00e1 07       		.byte	0x7
 4713 00e2 F00D0000 		.4byte	.LASF21
 4714 00e6 05       		.uleb128 0x5
 4715 00e7 04       		.byte	0x4
 4716 00e8 EC000000 		.4byte	0xec
 4717 00ec 06       		.uleb128 0x6
 4718 00ed D1000000 		.4byte	0xd1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 108


 4719 00f1 07       		.uleb128 0x7
 4720 00f2 01       		.byte	0x1
 4721 00f3 37000000 		.4byte	0x37
 4722 00f7 04       		.byte	0x4
 4723 00f8 4D01     		.2byte	0x14d
 4724 00fa AF020000 		.4byte	0x2af
 4725 00fe 08       		.uleb128 0x8
 4726 00ff 22050000 		.4byte	.LASF22
 4727 0103 00       		.byte	0
 4728 0104 08       		.uleb128 0x8
 4729 0105 05020000 		.4byte	.LASF23
 4730 0109 01       		.byte	0x1
 4731 010a 08       		.uleb128 0x8
 4732 010b B9000000 		.4byte	.LASF24
 4733 010f 02       		.byte	0x2
 4734 0110 08       		.uleb128 0x8
 4735 0111 240C0000 		.4byte	.LASF25
 4736 0115 03       		.byte	0x3
 4737 0116 08       		.uleb128 0x8
 4738 0117 F7000000 		.4byte	.LASF26
 4739 011b 04       		.byte	0x4
 4740 011c 08       		.uleb128 0x8
 4741 011d 74000000 		.4byte	.LASF27
 4742 0121 05       		.byte	0x5
 4743 0122 08       		.uleb128 0x8
 4744 0123 57050000 		.4byte	.LASF28
 4745 0127 06       		.byte	0x6
 4746 0128 08       		.uleb128 0x8
 4747 0129 72070000 		.4byte	.LASF29
 4748 012d 20       		.byte	0x20
 4749 012e 08       		.uleb128 0x8
 4750 012f 42020000 		.4byte	.LASF30
 4751 0133 21       		.byte	0x21
 4752 0134 08       		.uleb128 0x8
 4753 0135 8F050000 		.4byte	.LASF31
 4754 0139 22       		.byte	0x22
 4755 013a 08       		.uleb128 0x8
 4756 013b A0080000 		.4byte	.LASF32
 4757 013f 23       		.byte	0x23
 4758 0140 08       		.uleb128 0x8
 4759 0141 84080000 		.4byte	.LASF33
 4760 0145 24       		.byte	0x24
 4761 0146 08       		.uleb128 0x8
 4762 0147 F9070000 		.4byte	.LASF34
 4763 014b 25       		.byte	0x25
 4764 014c 08       		.uleb128 0x8
 4765 014d 99020000 		.4byte	.LASF35
 4766 0151 26       		.byte	0x26
 4767 0152 08       		.uleb128 0x8
 4768 0153 B3050000 		.4byte	.LASF36
 4769 0157 27       		.byte	0x27
 4770 0158 08       		.uleb128 0x8
 4771 0159 64010000 		.4byte	.LASF37
 4772 015d 28       		.byte	0x28
 4773 015e 08       		.uleb128 0x8
 4774 015f 710A0000 		.4byte	.LASF38
 4775 0163 29       		.byte	0x29
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 109


 4776 0164 08       		.uleb128 0x8
 4777 0165 2A000000 		.4byte	.LASF39
 4778 0169 2A       		.byte	0x2a
 4779 016a 08       		.uleb128 0x8
 4780 016b 18020000 		.4byte	.LASF40
 4781 016f 2B       		.byte	0x2b
 4782 0170 08       		.uleb128 0x8
 4783 0171 BD090000 		.4byte	.LASF41
 4784 0175 2C       		.byte	0x2c
 4785 0176 08       		.uleb128 0x8
 4786 0177 8E010000 		.4byte	.LASF42
 4787 017b 2D       		.byte	0x2d
 4788 017c 08       		.uleb128 0x8
 4789 017d 99090000 		.4byte	.LASF43
 4790 0181 2E       		.byte	0x2e
 4791 0182 08       		.uleb128 0x8
 4792 0183 3D0C0000 		.4byte	.LASF44
 4793 0187 2F       		.byte	0x2f
 4794 0188 08       		.uleb128 0x8
 4795 0189 4E080000 		.4byte	.LASF45
 4796 018d 30       		.byte	0x30
 4797 018e 08       		.uleb128 0x8
 4798 018f 720E0000 		.4byte	.LASF46
 4799 0193 31       		.byte	0x31
 4800 0194 08       		.uleb128 0x8
 4801 0195 2D080000 		.4byte	.LASF47
 4802 0199 32       		.byte	0x32
 4803 019a 08       		.uleb128 0x8
 4804 019b E50A0000 		.4byte	.LASF48
 4805 019f 33       		.byte	0x33
 4806 01a0 08       		.uleb128 0x8
 4807 01a1 72040000 		.4byte	.LASF49
 4808 01a5 34       		.byte	0x34
 4809 01a6 08       		.uleb128 0x8
 4810 01a7 81030000 		.4byte	.LASF50
 4811 01ab 35       		.byte	0x35
 4812 01ac 08       		.uleb128 0x8
 4813 01ad 1A060000 		.4byte	.LASF51
 4814 01b1 36       		.byte	0x36
 4815 01b2 08       		.uleb128 0x8
 4816 01b3 40060000 		.4byte	.LASF52
 4817 01b7 37       		.byte	0x37
 4818 01b8 08       		.uleb128 0x8
 4819 01b9 CB0A0000 		.4byte	.LASF53
 4820 01bd 40       		.byte	0x40
 4821 01be 08       		.uleb128 0x8
 4822 01bf A0070000 		.4byte	.LASF54
 4823 01c3 41       		.byte	0x41
 4824 01c4 08       		.uleb128 0x8
 4825 01c5 960E0000 		.4byte	.LASF55
 4826 01c9 42       		.byte	0x42
 4827 01ca 08       		.uleb128 0x8
 4828 01cb B00C0000 		.4byte	.LASF56
 4829 01cf 43       		.byte	0x43
 4830 01d0 08       		.uleb128 0x8
 4831 01d1 98040000 		.4byte	.LASF57
 4832 01d5 44       		.byte	0x44
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 110


 4833 01d6 08       		.uleb128 0x8
 4834 01d7 22090000 		.4byte	.LASF58
 4835 01db 45       		.byte	0x45
 4836 01dc 08       		.uleb128 0x8
 4837 01dd 22040000 		.4byte	.LASF59
 4838 01e1 46       		.byte	0x46
 4839 01e2 08       		.uleb128 0x8
 4840 01e3 39050000 		.4byte	.LASF60
 4841 01e7 47       		.byte	0x47
 4842 01e8 08       		.uleb128 0x8
 4843 01e9 740C0000 		.4byte	.LASF61
 4844 01ed 48       		.byte	0x48
 4845 01ee 08       		.uleb128 0x8
 4846 01ef 59020000 		.4byte	.LASF62
 4847 01f3 49       		.byte	0x49
 4848 01f4 08       		.uleb128 0x8
 4849 01f5 00000000 		.4byte	.LASF63
 4850 01f9 4A       		.byte	0x4a
 4851 01fa 08       		.uleb128 0x8
 4852 01fb 480B0000 		.4byte	.LASF64
 4853 01ff 4B       		.byte	0x4b
 4854 0200 08       		.uleb128 0x8
 4855 0201 00060000 		.4byte	.LASF65
 4856 0205 4C       		.byte	0x4c
 4857 0206 08       		.uleb128 0x8
 4858 0207 13080000 		.4byte	.LASF66
 4859 020b 4D       		.byte	0x4d
 4860 020c 08       		.uleb128 0x8
 4861 020d 75060000 		.4byte	.LASF67
 4862 0211 4E       		.byte	0x4e
 4863 0212 08       		.uleb128 0x8
 4864 0213 520A0000 		.4byte	.LASF68
 4865 0217 4F       		.byte	0x4f
 4866 0218 08       		.uleb128 0x8
 4867 0219 70050000 		.4byte	.LASF69
 4868 021d 50       		.byte	0x50
 4869 021e 08       		.uleb128 0x8
 4870 021f D10D0000 		.4byte	.LASF70
 4871 0223 51       		.byte	0x51
 4872 0224 08       		.uleb128 0x8
 4873 0225 C6080000 		.4byte	.LASF71
 4874 0229 52       		.byte	0x52
 4875 022a 08       		.uleb128 0x8
 4876 022b DF050000 		.4byte	.LASF72
 4877 022f 53       		.byte	0x53
 4878 0230 08       		.uleb128 0x8
 4879 0231 AA0A0000 		.4byte	.LASF73
 4880 0235 54       		.byte	0x54
 4881 0236 08       		.uleb128 0x8
 4882 0237 B6040000 		.4byte	.LASF74
 4883 023b 55       		.byte	0x55
 4884 023c 08       		.uleb128 0x8
 4885 023d D4030000 		.4byte	.LASF75
 4886 0241 56       		.byte	0x56
 4887 0242 08       		.uleb128 0x8
 4888 0243 970B0000 		.4byte	.LASF76
 4889 0247 57       		.byte	0x57
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 111


 4890 0248 08       		.uleb128 0x8
 4891 0249 B1030000 		.4byte	.LASF77
 4892 024d 58       		.byte	0x58
 4893 024e 08       		.uleb128 0x8
 4894 024f 3E010000 		.4byte	.LASF78
 4895 0253 70       		.byte	0x70
 4896 0254 08       		.uleb128 0x8
 4897 0255 4C0E0000 		.4byte	.LASF79
 4898 0259 71       		.byte	0x71
 4899 025a 08       		.uleb128 0x8
 4900 025b 3D070000 		.4byte	.LASF80
 4901 025f 72       		.byte	0x72
 4902 0260 08       		.uleb128 0x8
 4903 0261 BB070000 		.4byte	.LASF81
 4904 0265 73       		.byte	0x73
 4905 0266 08       		.uleb128 0x8
 4906 0267 04090000 		.4byte	.LASF82
 4907 026b 74       		.byte	0x74
 4908 026c 08       		.uleb128 0x8
 4909 026d 1E0E0000 		.4byte	.LASF83
 4910 0271 75       		.byte	0x75
 4911 0272 08       		.uleb128 0x8
 4912 0273 53000000 		.4byte	.LASF84
 4913 0277 76       		.byte	0x76
 4914 0278 08       		.uleb128 0x8
 4915 0279 F40B0000 		.4byte	.LASF85
 4916 027d 77       		.byte	0x77
 4917 027e 08       		.uleb128 0x8
 4918 027f C80B0000 		.4byte	.LASF86
 4919 0283 78       		.byte	0x78
 4920 0284 08       		.uleb128 0x8
 4921 0285 B7010000 		.4byte	.LASF87
 4922 0289 79       		.byte	0x79
 4923 028a 08       		.uleb128 0x8
 4924 028b 5D030000 		.4byte	.LASF88
 4925 028f 7A       		.byte	0x7a
 4926 0290 08       		.uleb128 0x8
 4927 0291 20010000 		.4byte	.LASF89
 4928 0295 FA       		.byte	0xfa
 4929 0296 08       		.uleb128 0x8
 4930 0297 03040000 		.4byte	.LASF90
 4931 029b FB       		.byte	0xfb
 4932 029c 08       		.uleb128 0x8
 4933 029d 1B0A0000 		.4byte	.LASF91
 4934 02a1 FC       		.byte	0xfc
 4935 02a2 08       		.uleb128 0x8
 4936 02a3 BD0E0000 		.4byte	.LASF92
 4937 02a7 FD       		.byte	0xfd
 4938 02a8 08       		.uleb128 0x8
 4939 02a9 2E030000 		.4byte	.LASF93
 4940 02ad FF       		.byte	0xff
 4941 02ae 00       		.byte	0
 4942 02af 07       		.uleb128 0x7
 4943 02b0 01       		.byte	0x1
 4944 02b1 37000000 		.4byte	0x37
 4945 02b5 05       		.byte	0x5
 4946 02b6 9308     		.2byte	0x893
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 112


 4947 02b8 DB020000 		.4byte	0x2db
 4948 02bc 08       		.uleb128 0x8
 4949 02bd 280B0000 		.4byte	.LASF94
 4950 02c1 00       		.byte	0
 4951 02c2 08       		.uleb128 0x8
 4952 02c3 6C090000 		.4byte	.LASF95
 4953 02c7 01       		.byte	0x1
 4954 02c8 08       		.uleb128 0x8
 4955 02c9 E7080000 		.4byte	.LASF96
 4956 02cd 02       		.byte	0x2
 4957 02ce 08       		.uleb128 0x8
 4958 02cf E8020000 		.4byte	.LASF97
 4959 02d3 02       		.byte	0x2
 4960 02d4 08       		.uleb128 0x8
 4961 02d5 0C0B0000 		.4byte	.LASF98
 4962 02d9 03       		.byte	0x3
 4963 02da 00       		.byte	0
 4964 02db 09       		.uleb128 0x9
 4965 02dc 9B0C0000 		.4byte	.LASF191
 4966 02e0 01       		.byte	0x1
 4967 02e1 37000000 		.4byte	0x37
 4968 02e5 06       		.byte	0x6
 4969 02e6 30       		.byte	0x30
 4970 02e7 F8020000 		.4byte	0x2f8
 4971 02eb 08       		.uleb128 0x8
 4972 02ec 670B0000 		.4byte	.LASF99
 4973 02f0 00       		.byte	0
 4974 02f1 08       		.uleb128 0x8
 4975 02f2 59070000 		.4byte	.LASF100
 4976 02f6 01       		.byte	0x1
 4977 02f7 00       		.byte	0
 4978 02f8 0A       		.uleb128 0xa
 4979 02f9 01       		.byte	0x1
 4980 02fa 37000000 		.4byte	0x37
 4981 02fe 06       		.byte	0x6
 4982 02ff 44       		.byte	0x44
 4983 0300 11030000 		.4byte	0x311
 4984 0304 08       		.uleb128 0x8
 4985 0305 150A0000 		.4byte	.LASF101
 4986 0309 00       		.byte	0
 4987 030a 08       		.uleb128 0x8
 4988 030b DE0E0000 		.4byte	.LASF102
 4989 030f 01       		.byte	0x1
 4990 0310 00       		.byte	0
 4991 0311 03       		.uleb128 0x3
 4992 0312 C00B0000 		.4byte	.LASF103
 4993 0316 06       		.byte	0x6
 4994 0317 47       		.byte	0x47
 4995 0318 F8020000 		.4byte	0x2f8
 4996 031c 03       		.uleb128 0x3
 4997 031d 3B060000 		.4byte	.LASF104
 4998 0321 06       		.byte	0x6
 4999 0322 47       		.byte	0x47
 5000 0323 F8020000 		.4byte	0x2f8
 5001 0327 0B       		.uleb128 0xb
 5002 0328 43040000 		.4byte	.LASF130
 5003 032c 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 113


 5004 032d 4E       		.byte	0x4e
 5005 032e 11030000 		.4byte	0x311
 5006 0332 00000000 		.4byte	.LFB35
 5007 0336 A0000000 		.4byte	.LFE35-.LFB35
 5008 033a 01       		.uleb128 0x1
 5009 033b 9C       		.byte	0x9c
 5010 033c 59030000 		.4byte	0x359
 5011 0340 0C       		.uleb128 0xc
 5012 0341 7300     		.ascii	"s\000"
 5013 0343 01       		.byte	0x1
 5014 0344 4E       		.byte	0x4e
 5015 0345 DB020000 		.4byte	0x2db
 5016 0349 02       		.uleb128 0x2
 5017 034a 91       		.byte	0x91
 5018 034b 67       		.sleb128 -25
 5019 034c 0D       		.uleb128 0xd
 5020 034d 7800     		.ascii	"x\000"
 5021 034f 01       		.byte	0x1
 5022 0350 4F       		.byte	0x4f
 5023 0351 97000000 		.4byte	0x97
 5024 0355 02       		.uleb128 0x2
 5025 0356 91       		.byte	0x91
 5026 0357 6F       		.sleb128 -17
 5027 0358 00       		.byte	0
 5028 0359 0E       		.uleb128 0xe
 5029 035a 8F020000 		.4byte	.LASF105
 5030 035e 01       		.byte	0x1
 5031 035f A3       		.byte	0xa3
 5032 0360 00000000 		.4byte	.LFB36
 5033 0364 22000000 		.4byte	.LFE36-.LFB36
 5034 0368 01       		.uleb128 0x1
 5035 0369 9C       		.byte	0x9c
 5036 036a 0E       		.uleb128 0xe
 5037 036b 07050000 		.4byte	.LASF106
 5038 036f 01       		.byte	0x1
 5039 0370 AF       		.byte	0xaf
 5040 0371 00000000 		.4byte	.LFB37
 5041 0375 50000000 		.4byte	.LFE37-.LFB37
 5042 0379 01       		.uleb128 0x1
 5043 037a 9C       		.byte	0x9c
 5044 037b 0F       		.uleb128 0xf
 5045 037c 470A0000 		.4byte	.LASF117
 5046 0380 01       		.byte	0x1
 5047 0381 C4       		.byte	0xc4
 5048 0382 00000000 		.4byte	.LFB38
 5049 0386 3C020000 		.4byte	.LFE38-.LFB38
 5050 038a 01       		.uleb128 0x1
 5051 038b 9C       		.byte	0x9c
 5052 038c 01040000 		.4byte	0x401
 5053 0390 10       		.uleb128 0x10
 5054 0391 7C090000 		.4byte	.LASF107
 5055 0395 01       		.byte	0x1
 5056 0396 C9       		.byte	0xc9
 5057 0397 97000000 		.4byte	0x97
 5058 039b 02       		.uleb128 0x2
 5059 039c 91       		.byte	0x91
 5060 039d 77       		.sleb128 -9
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 114


 5061 039e 10       		.uleb128 0x10
 5062 039f 5A090000 		.4byte	.LASF108
 5063 03a3 01       		.byte	0x1
 5064 03a4 CA       		.byte	0xca
 5065 03a5 97000000 		.4byte	0x97
 5066 03a9 02       		.uleb128 0x2
 5067 03aa 91       		.byte	0x91
 5068 03ab 76       		.sleb128 -10
 5069 03ac 10       		.uleb128 0x10
 5070 03ad 130C0000 		.4byte	.LASF109
 5071 03b1 01       		.byte	0x1
 5072 03b2 CB       		.byte	0xcb
 5073 03b3 97000000 		.4byte	0x97
 5074 03b7 02       		.uleb128 0x2
 5075 03b8 91       		.byte	0x91
 5076 03b9 75       		.sleb128 -11
 5077 03ba 10       		.uleb128 0x10
 5078 03bb 060E0000 		.4byte	.LASF110
 5079 03bf 01       		.byte	0x1
 5080 03c0 CC       		.byte	0xcc
 5081 03c1 97000000 		.4byte	0x97
 5082 03c5 02       		.uleb128 0x2
 5083 03c6 91       		.byte	0x91
 5084 03c7 74       		.sleb128 -12
 5085 03c8 10       		.uleb128 0x10
 5086 03c9 660C0000 		.4byte	.LASF111
 5087 03cd 01       		.byte	0x1
 5088 03ce CD       		.byte	0xcd
 5089 03cf 97000000 		.4byte	0x97
 5090 03d3 02       		.uleb128 0x2
 5091 03d4 91       		.byte	0x91
 5092 03d5 73       		.sleb128 -13
 5093 03d6 10       		.uleb128 0x10
 5094 03d7 72020000 		.4byte	.LASF112
 5095 03db 01       		.byte	0x1
 5096 03dc CE       		.byte	0xce
 5097 03dd 97000000 		.4byte	0x97
 5098 03e1 02       		.uleb128 0x2
 5099 03e2 91       		.byte	0x91
 5100 03e3 72       		.sleb128 -14
 5101 03e4 10       		.uleb128 0x10
 5102 03e5 E9090000 		.4byte	.LASF113
 5103 03e9 01       		.byte	0x1
 5104 03ea CF       		.byte	0xcf
 5105 03eb AD000000 		.4byte	0xad
 5106 03ef 02       		.uleb128 0x2
 5107 03f0 91       		.byte	0x91
 5108 03f1 70       		.sleb128 -16
 5109 03f2 10       		.uleb128 0x10
 5110 03f3 EB000000 		.4byte	.LASF114
 5111 03f7 01       		.byte	0x1
 5112 03f8 D0       		.byte	0xd0
 5113 03f9 AD000000 		.4byte	0xad
 5114 03fd 02       		.uleb128 0x2
 5115 03fe 91       		.byte	0x91
 5116 03ff 6E       		.sleb128 -18
 5117 0400 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 115


 5118 0401 11       		.uleb128 0x11
 5119 0402 F7040000 		.4byte	.LASF115
 5120 0406 01       		.byte	0x1
 5121 0407 1801     		.2byte	0x118
 5122 0409 AD000000 		.4byte	0xad
 5123 040d 00000000 		.4byte	.LFB39
 5124 0411 14000000 		.4byte	.LFE39-.LFB39
 5125 0415 01       		.uleb128 0x1
 5126 0416 9C       		.byte	0x9c
 5127 0417 11       		.uleb128 0x11
 5128 0418 450E0000 		.4byte	.LASF116
 5129 041c 01       		.byte	0x1
 5130 041d 2101     		.2byte	0x121
 5131 041f AD000000 		.4byte	0xad
 5132 0423 00000000 		.4byte	.LFB40
 5133 0427 14000000 		.4byte	.LFE40-.LFB40
 5134 042b 01       		.uleb128 0x1
 5135 042c 9C       		.byte	0x9c
 5136 042d 12       		.uleb128 0x12
 5137 042e 7B080000 		.4byte	.LASF118
 5138 0432 01       		.byte	0x1
 5139 0433 2A01     		.2byte	0x12a
 5140 0435 00000000 		.4byte	.LFB41
 5141 0439 54000000 		.4byte	.LFE41-.LFB41
 5142 043d 01       		.uleb128 0x1
 5143 043e 9C       		.byte	0x9c
 5144 043f 53040000 		.4byte	0x453
 5145 0443 13       		.uleb128 0x13
 5146 0444 9E030000 		.4byte	.LASF119
 5147 0448 01       		.byte	0x1
 5148 0449 2E01     		.2byte	0x12e
 5149 044b 97000000 		.4byte	0x97
 5150 044f 02       		.uleb128 0x2
 5151 0450 91       		.byte	0x91
 5152 0451 6F       		.sleb128 -17
 5153 0452 00       		.byte	0
 5154 0453 12       		.uleb128 0x12
 5155 0454 90000000 		.4byte	.LASF120
 5156 0458 01       		.byte	0x1
 5157 0459 4201     		.2byte	0x142
 5158 045b 00000000 		.4byte	.LFB42
 5159 045f 6A000000 		.4byte	.LFE42-.LFB42
 5160 0463 01       		.uleb128 0x1
 5161 0464 9C       		.byte	0x9c
 5162 0465 84040000 		.4byte	0x484
 5163 0469 14       		.uleb128 0x14
 5164 046a 7800     		.ascii	"x\000"
 5165 046c 01       		.byte	0x1
 5166 046d 4201     		.2byte	0x142
 5167 046f AD000000 		.4byte	0xad
 5168 0473 02       		.uleb128 0x2
 5169 0474 91       		.byte	0x91
 5170 0475 76       		.sleb128 -10
 5171 0476 14       		.uleb128 0x14
 5172 0477 7900     		.ascii	"y\000"
 5173 0479 01       		.byte	0x1
 5174 047a 4201     		.2byte	0x142
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 116


 5175 047c AD000000 		.4byte	0xad
 5176 0480 02       		.uleb128 0x2
 5177 0481 91       		.byte	0x91
 5178 0482 74       		.sleb128 -12
 5179 0483 00       		.byte	0
 5180 0484 12       		.uleb128 0x12
 5181 0485 FA080000 		.4byte	.LASF121
 5182 0489 01       		.byte	0x1
 5183 048a 5701     		.2byte	0x157
 5184 048c 00000000 		.4byte	.LFB43
 5185 0490 D8000000 		.4byte	.LFE43-.LFB43
 5186 0494 01       		.uleb128 0x1
 5187 0495 9C       		.byte	0x9c
 5188 0496 C8040000 		.4byte	0x4c8
 5189 049a 15       		.uleb128 0x15
 5190 049b 93060000 		.4byte	.LASF122
 5191 049f 01       		.byte	0x1
 5192 04a0 5701     		.2byte	0x157
 5193 04a2 AD000000 		.4byte	0xad
 5194 04a6 02       		.uleb128 0x2
 5195 04a7 91       		.byte	0x91
 5196 04a8 66       		.sleb128 -26
 5197 04a9 15       		.uleb128 0x15
 5198 04aa D9070000 		.4byte	.LASF123
 5199 04ae 01       		.byte	0x1
 5200 04af 5701     		.2byte	0x157
 5201 04b1 AD000000 		.4byte	0xad
 5202 04b5 02       		.uleb128 0x2
 5203 04b6 91       		.byte	0x91
 5204 04b7 64       		.sleb128 -28
 5205 04b8 13       		.uleb128 0x13
 5206 04b9 9E030000 		.4byte	.LASF119
 5207 04bd 01       		.byte	0x1
 5208 04be 6B01     		.2byte	0x16b
 5209 04c0 97000000 		.4byte	0x97
 5210 04c4 02       		.uleb128 0x2
 5211 04c5 91       		.byte	0x91
 5212 04c6 6F       		.sleb128 -17
 5213 04c7 00       		.byte	0
 5214 04c8 12       		.uleb128 0x12
 5215 04c9 E30C0000 		.4byte	.LASF124
 5216 04cd 01       		.byte	0x1
 5217 04ce 7701     		.2byte	0x177
 5218 04d0 00000000 		.4byte	.LFB44
 5219 04d4 8A000000 		.4byte	.LFE44-.LFB44
 5220 04d8 01       		.uleb128 0x1
 5221 04d9 9C       		.byte	0x9c
 5222 04da FD040000 		.4byte	0x4fd
 5223 04de 15       		.uleb128 0x15
 5224 04df 93060000 		.4byte	.LASF122
 5225 04e3 01       		.byte	0x1
 5226 04e4 7701     		.2byte	0x177
 5227 04e6 AD000000 		.4byte	0xad
 5228 04ea 02       		.uleb128 0x2
 5229 04eb 91       		.byte	0x91
 5230 04ec 66       		.sleb128 -26
 5231 04ed 13       		.uleb128 0x13
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 117


 5232 04ee 9E030000 		.4byte	.LASF119
 5233 04f2 01       		.byte	0x1
 5234 04f3 8301     		.2byte	0x183
 5235 04f5 97000000 		.4byte	0x97
 5236 04f9 02       		.uleb128 0x2
 5237 04fa 91       		.byte	0x91
 5238 04fb 6F       		.sleb128 -17
 5239 04fc 00       		.byte	0
 5240 04fd 12       		.uleb128 0x12
 5241 04fe C50D0000 		.4byte	.LASF125
 5242 0502 01       		.byte	0x1
 5243 0503 9401     		.2byte	0x194
 5244 0505 00000000 		.4byte	.LFB45
 5245 0509 88000000 		.4byte	.LFE45-.LFB45
 5246 050d 01       		.uleb128 0x1
 5247 050e 9C       		.byte	0x9c
 5248 050f 32050000 		.4byte	0x532
 5249 0513 15       		.uleb128 0x15
 5250 0514 1E000000 		.4byte	.LASF126
 5251 0518 01       		.byte	0x1
 5252 0519 9401     		.2byte	0x194
 5253 051b 97000000 		.4byte	0x97
 5254 051f 02       		.uleb128 0x2
 5255 0520 91       		.byte	0x91
 5256 0521 67       		.sleb128 -25
 5257 0522 13       		.uleb128 0x13
 5258 0523 9E030000 		.4byte	.LASF119
 5259 0527 01       		.byte	0x1
 5260 0528 9A01     		.2byte	0x19a
 5261 052a 97000000 		.4byte	0x97
 5262 052e 02       		.uleb128 0x2
 5263 052f 91       		.byte	0x91
 5264 0530 6F       		.sleb128 -17
 5265 0531 00       		.byte	0
 5266 0532 12       		.uleb128 0x12
 5267 0533 16010000 		.4byte	.LASF127
 5268 0537 01       		.byte	0x1
 5269 0538 AB01     		.2byte	0x1ab
 5270 053a 00000000 		.4byte	.LFB46
 5271 053e 7C000000 		.4byte	.LFE46-.LFB46
 5272 0542 01       		.uleb128 0x1
 5273 0543 9C       		.byte	0x9c
 5274 0544 7E050000 		.4byte	0x57e
 5275 0548 15       		.uleb128 0x15
 5276 0549 FF020000 		.4byte	.LASF128
 5277 054d 01       		.byte	0x1
 5278 054e AB01     		.2byte	0x1ab
 5279 0550 E6000000 		.4byte	0xe6
 5280 0554 02       		.uleb128 0x2
 5281 0555 91       		.byte	0x91
 5282 0556 6C       		.sleb128 -20
 5283 0557 14       		.uleb128 0x14
 5284 0558 6C656E00 		.ascii	"len\000"
 5285 055c 01       		.byte	0x1
 5286 055d AB01     		.2byte	0x1ab
 5287 055f AD000000 		.4byte	0xad
 5288 0563 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 118


 5289 0564 91       		.byte	0x91
 5290 0565 6A       		.sleb128 -22
 5291 0566 16       		.uleb128 0x16
 5292 0567 2A000000 		.4byte	.LBB2
 5293 056b 46000000 		.4byte	.LBE2-.LBB2
 5294 056f 17       		.uleb128 0x17
 5295 0570 6900     		.ascii	"i\000"
 5296 0572 01       		.byte	0x1
 5297 0573 AF01     		.2byte	0x1af
 5298 0575 AD000000 		.4byte	0xad
 5299 0579 02       		.uleb128 0x2
 5300 057a 91       		.byte	0x91
 5301 057b 76       		.sleb128 -10
 5302 057c 00       		.byte	0
 5303 057d 00       		.byte	0
 5304 057e 12       		.uleb128 0x12
 5305 057f D2050000 		.4byte	.LASF129
 5306 0583 01       		.byte	0x1
 5307 0584 C301     		.2byte	0x1c3
 5308 0586 00000000 		.4byte	.LFB47
 5309 058a 34000000 		.4byte	.LFE47-.LFB47
 5310 058e 01       		.uleb128 0x1
 5311 058f 9C       		.byte	0x9c
 5312 0590 A4050000 		.4byte	0x5a4
 5313 0594 13       		.uleb128 0x13
 5314 0595 9E030000 		.4byte	.LASF119
 5315 0599 01       		.byte	0x1
 5316 059a C501     		.2byte	0x1c5
 5317 059c 97000000 		.4byte	0x97
 5318 05a0 02       		.uleb128 0x2
 5319 05a1 91       		.byte	0x91
 5320 05a2 6F       		.sleb128 -17
 5321 05a3 00       		.byte	0
 5322 05a4 18       		.uleb128 0x18
 5323 05a5 E2010000 		.4byte	.LASF131
 5324 05a9 01       		.byte	0x1
 5325 05aa CF01     		.2byte	0x1cf
 5326 05ac 11030000 		.4byte	0x311
 5327 05b0 00000000 		.4byte	.LFB48
 5328 05b4 40000000 		.4byte	.LFE48-.LFB48
 5329 05b8 01       		.uleb128 0x1
 5330 05b9 9C       		.byte	0x9c
 5331 05ba F6050000 		.4byte	0x5f6
 5332 05be 15       		.uleb128 0x15
 5333 05bf C9020000 		.4byte	.LASF132
 5334 05c3 01       		.byte	0x1
 5335 05c4 CF01     		.2byte	0x1cf
 5336 05c6 97000000 		.4byte	0x97
 5337 05ca 02       		.uleb128 0x2
 5338 05cb 91       		.byte	0x91
 5339 05cc 67       		.sleb128 -25
 5340 05cd 15       		.uleb128 0x15
 5341 05ce 150E0000 		.4byte	.LASF133
 5342 05d2 01       		.byte	0x1
 5343 05d3 CF01     		.2byte	0x1cf
 5344 05d5 97000000 		.4byte	0x97
 5345 05d9 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 119


 5346 05da 91       		.byte	0x91
 5347 05db 66       		.sleb128 -26
 5348 05dc 16       		.uleb128 0x16
 5349 05dd 12000000 		.4byte	.LBB3
 5350 05e1 26000000 		.4byte	.LBE3-.LBB3
 5351 05e5 13       		.uleb128 0x13
 5352 05e6 9E030000 		.4byte	.LASF119
 5353 05ea 01       		.byte	0x1
 5354 05eb D301     		.2byte	0x1d3
 5355 05ed 97000000 		.4byte	0x97
 5356 05f1 02       		.uleb128 0x2
 5357 05f2 91       		.byte	0x91
 5358 05f3 6F       		.sleb128 -17
 5359 05f4 00       		.byte	0
 5360 05f5 00       		.byte	0
 5361 05f6 12       		.uleb128 0x12
 5362 05f7 24000000 		.4byte	.LASF134
 5363 05fb 01       		.byte	0x1
 5364 05fc E301     		.2byte	0x1e3
 5365 05fe 00000000 		.4byte	.LFB49
 5366 0602 5A000000 		.4byte	.LFE49-.LFB49
 5367 0606 01       		.uleb128 0x1
 5368 0607 9C       		.byte	0x9c
 5369 0608 27060000 		.4byte	0x627
 5370 060c 14       		.uleb128 0x14
 5371 060d 7800     		.ascii	"x\000"
 5372 060f 01       		.byte	0x1
 5373 0610 E301     		.2byte	0x1e3
 5374 0612 AD000000 		.4byte	0xad
 5375 0616 02       		.uleb128 0x2
 5376 0617 91       		.byte	0x91
 5377 0618 76       		.sleb128 -10
 5378 0619 14       		.uleb128 0x14
 5379 061a 7900     		.ascii	"y\000"
 5380 061c 01       		.byte	0x1
 5381 061d E301     		.2byte	0x1e3
 5382 061f AD000000 		.4byte	0xad
 5383 0623 02       		.uleb128 0x2
 5384 0624 91       		.byte	0x91
 5385 0625 74       		.sleb128 -12
 5386 0626 00       		.byte	0
 5387 0627 12       		.uleb128 0x12
 5388 0628 9F0A0000 		.4byte	.LASF135
 5389 062c 01       		.byte	0x1
 5390 062d F201     		.2byte	0x1f2
 5391 062f 00000000 		.4byte	.LFB50
 5392 0633 48000000 		.4byte	.LFE50-.LFB50
 5393 0637 01       		.uleb128 0x1
 5394 0638 9C       		.byte	0x9c
 5395 0639 5A060000 		.4byte	0x65a
 5396 063d 14       		.uleb128 0x14
 5397 063e 6E756D00 		.ascii	"num\000"
 5398 0642 01       		.byte	0x1
 5399 0643 F201     		.2byte	0x1f2
 5400 0645 B8000000 		.4byte	0xb8
 5401 0649 02       		.uleb128 0x2
 5402 064a 91       		.byte	0x91
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 120


 5403 064b 74       		.sleb128 -12
 5404 064c 14       		.uleb128 0x14
 5405 064d 7000     		.ascii	"p\000"
 5406 064f 01       		.byte	0x1
 5407 0650 F201     		.2byte	0x1f2
 5408 0652 AD000000 		.4byte	0xad
 5409 0656 02       		.uleb128 0x2
 5410 0657 91       		.byte	0x91
 5411 0658 72       		.sleb128 -14
 5412 0659 00       		.byte	0
 5413 065a 19       		.uleb128 0x19
 5414 065b FD040000 		.4byte	.LASF136
 5415 065f 01       		.byte	0x1
 5416 0660 0402     		.2byte	0x204
 5417 0662 00000000 		.4byte	.LFB51
 5418 0666 1C000000 		.4byte	.LFE51-.LFB51
 5419 066a 01       		.uleb128 0x1
 5420 066b 9C       		.byte	0x9c
 5421 066c 12       		.uleb128 0x12
 5422 066d AA0D0000 		.4byte	.LASF137
 5423 0671 01       		.byte	0x1
 5424 0672 1302     		.2byte	0x213
 5425 0674 00000000 		.4byte	.LFB52
 5426 0678 96000000 		.4byte	.LFE52-.LFB52
 5427 067c 01       		.uleb128 0x1
 5428 067d 9C       		.byte	0x9c
 5429 067e AC060000 		.4byte	0x6ac
 5430 0682 14       		.uleb128 0x14
 5431 0683 7800     		.ascii	"x\000"
 5432 0685 01       		.byte	0x1
 5433 0686 1302     		.2byte	0x213
 5434 0688 A2000000 		.4byte	0xa2
 5435 068c 02       		.uleb128 0x2
 5436 068d 91       		.byte	0x91
 5437 068e 6E       		.sleb128 -18
 5438 068f 14       		.uleb128 0x14
 5439 0690 7900     		.ascii	"y\000"
 5440 0692 01       		.byte	0x1
 5441 0693 1302     		.2byte	0x213
 5442 0695 A2000000 		.4byte	0xa2
 5443 0699 02       		.uleb128 0x2
 5444 069a 91       		.byte	0x91
 5445 069b 6C       		.sleb128 -20
 5446 069c 15       		.uleb128 0x15
 5447 069d 37070000 		.4byte	.LASF138
 5448 06a1 01       		.byte	0x1
 5449 06a2 1302     		.2byte	0x213
 5450 06a4 AD000000 		.4byte	0xad
 5451 06a8 02       		.uleb128 0x2
 5452 06a9 91       		.byte	0x91
 5453 06aa 6A       		.sleb128 -22
 5454 06ab 00       		.byte	0
 5455 06ac 12       		.uleb128 0x12
 5456 06ad 0D030000 		.4byte	.LASF139
 5457 06b1 01       		.byte	0x1
 5458 06b2 3002     		.2byte	0x230
 5459 06b4 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 121


 5460 06b8 38010000 		.4byte	.LFE53-.LFB53
 5461 06bc 01       		.uleb128 0x1
 5462 06bd 9C       		.byte	0x9c
 5463 06be 0A070000 		.4byte	0x70a
 5464 06c2 14       		.uleb128 0x14
 5465 06c3 783000   		.ascii	"x0\000"
 5466 06c6 01       		.byte	0x1
 5467 06c7 3002     		.2byte	0x230
 5468 06c9 A2000000 		.4byte	0xa2
 5469 06cd 02       		.uleb128 0x2
 5470 06ce 91       		.byte	0x91
 5471 06cf 6E       		.sleb128 -18
 5472 06d0 14       		.uleb128 0x14
 5473 06d1 793000   		.ascii	"y0\000"
 5474 06d4 01       		.byte	0x1
 5475 06d5 3002     		.2byte	0x230
 5476 06d7 A2000000 		.4byte	0xa2
 5477 06db 02       		.uleb128 0x2
 5478 06dc 91       		.byte	0x91
 5479 06dd 6C       		.sleb128 -20
 5480 06de 14       		.uleb128 0x14
 5481 06df 783100   		.ascii	"x1\000"
 5482 06e2 01       		.byte	0x1
 5483 06e3 3002     		.2byte	0x230
 5484 06e5 A2000000 		.4byte	0xa2
 5485 06e9 02       		.uleb128 0x2
 5486 06ea 91       		.byte	0x91
 5487 06eb 6A       		.sleb128 -22
 5488 06ec 14       		.uleb128 0x14
 5489 06ed 793100   		.ascii	"y1\000"
 5490 06f0 01       		.byte	0x1
 5491 06f1 3002     		.2byte	0x230
 5492 06f3 A2000000 		.4byte	0xa2
 5493 06f7 02       		.uleb128 0x2
 5494 06f8 91       		.byte	0x91
 5495 06f9 68       		.sleb128 -24
 5496 06fa 15       		.uleb128 0x15
 5497 06fb 37070000 		.4byte	.LASF138
 5498 06ff 01       		.byte	0x1
 5499 0700 3002     		.2byte	0x230
 5500 0702 AD000000 		.4byte	0xad
 5501 0706 02       		.uleb128 0x2
 5502 0707 91       		.byte	0x91
 5503 0708 00       		.sleb128 0
 5504 0709 00       		.byte	0
 5505 070a 12       		.uleb128 0x12
 5506 070b A3030000 		.4byte	.LASF140
 5507 070f 01       		.byte	0x1
 5508 0710 5F02     		.2byte	0x25f
 5509 0712 00000000 		.4byte	.LFB54
 5510 0716 5A000000 		.4byte	.LFE54-.LFB54
 5511 071a 01       		.uleb128 0x1
 5512 071b 9C       		.byte	0x9c
 5513 071c 57070000 		.4byte	0x757
 5514 0720 14       		.uleb128 0x14
 5515 0721 7800     		.ascii	"x\000"
 5516 0723 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 122


 5517 0724 5F02     		.2byte	0x25f
 5518 0726 A2000000 		.4byte	0xa2
 5519 072a 02       		.uleb128 0x2
 5520 072b 91       		.byte	0x91
 5521 072c 6E       		.sleb128 -18
 5522 072d 14       		.uleb128 0x14
 5523 072e 7900     		.ascii	"y\000"
 5524 0730 01       		.byte	0x1
 5525 0731 5F02     		.2byte	0x25f
 5526 0733 A2000000 		.4byte	0xa2
 5527 0737 02       		.uleb128 0x2
 5528 0738 91       		.byte	0x91
 5529 0739 6C       		.sleb128 -20
 5530 073a 14       		.uleb128 0x14
 5531 073b 6800     		.ascii	"h\000"
 5532 073d 01       		.byte	0x1
 5533 073e 5F02     		.2byte	0x25f
 5534 0740 A2000000 		.4byte	0xa2
 5535 0744 02       		.uleb128 0x2
 5536 0745 91       		.byte	0x91
 5537 0746 6A       		.sleb128 -22
 5538 0747 15       		.uleb128 0x15
 5539 0748 37070000 		.4byte	.LASF138
 5540 074c 01       		.byte	0x1
 5541 074d 5F02     		.2byte	0x25f
 5542 074f AD000000 		.4byte	0xad
 5543 0753 02       		.uleb128 0x2
 5544 0754 91       		.byte	0x91
 5545 0755 68       		.sleb128 -24
 5546 0756 00       		.byte	0
 5547 0757 12       		.uleb128 0x12
 5548 0758 EB070000 		.4byte	.LASF141
 5549 075c 01       		.byte	0x1
 5550 075d 6902     		.2byte	0x269
 5551 075f 00000000 		.4byte	.LFB55
 5552 0763 5A000000 		.4byte	.LFE55-.LFB55
 5553 0767 01       		.uleb128 0x1
 5554 0768 9C       		.byte	0x9c
 5555 0769 A4070000 		.4byte	0x7a4
 5556 076d 14       		.uleb128 0x14
 5557 076e 7800     		.ascii	"x\000"
 5558 0770 01       		.byte	0x1
 5559 0771 6902     		.2byte	0x269
 5560 0773 A2000000 		.4byte	0xa2
 5561 0777 02       		.uleb128 0x2
 5562 0778 91       		.byte	0x91
 5563 0779 6E       		.sleb128 -18
 5564 077a 14       		.uleb128 0x14
 5565 077b 7900     		.ascii	"y\000"
 5566 077d 01       		.byte	0x1
 5567 077e 6902     		.2byte	0x269
 5568 0780 A2000000 		.4byte	0xa2
 5569 0784 02       		.uleb128 0x2
 5570 0785 91       		.byte	0x91
 5571 0786 6C       		.sleb128 -20
 5572 0787 14       		.uleb128 0x14
 5573 0788 7700     		.ascii	"w\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 123


 5574 078a 01       		.byte	0x1
 5575 078b 6902     		.2byte	0x269
 5576 078d A2000000 		.4byte	0xa2
 5577 0791 02       		.uleb128 0x2
 5578 0792 91       		.byte	0x91
 5579 0793 6A       		.sleb128 -22
 5580 0794 15       		.uleb128 0x15
 5581 0795 37070000 		.4byte	.LASF138
 5582 0799 01       		.byte	0x1
 5583 079a 6902     		.2byte	0x269
 5584 079c AD000000 		.4byte	0xad
 5585 07a0 02       		.uleb128 0x2
 5586 07a1 91       		.byte	0x91
 5587 07a2 68       		.sleb128 -24
 5588 07a3 00       		.byte	0
 5589 07a4 12       		.uleb128 0x12
 5590 07a5 B40D0000 		.4byte	.LASF142
 5591 07a9 01       		.byte	0x1
 5592 07aa 7902     		.2byte	0x279
 5593 07ac 00000000 		.4byte	.LFB56
 5594 07b0 6A000000 		.4byte	.LFE56-.LFB56
 5595 07b4 01       		.uleb128 0x1
 5596 07b5 9C       		.byte	0x9c
 5597 07b6 FE070000 		.4byte	0x7fe
 5598 07ba 14       		.uleb128 0x14
 5599 07bb 7800     		.ascii	"x\000"
 5600 07bd 01       		.byte	0x1
 5601 07be 7902     		.2byte	0x279
 5602 07c0 A2000000 		.4byte	0xa2
 5603 07c4 02       		.uleb128 0x2
 5604 07c5 91       		.byte	0x91
 5605 07c6 6E       		.sleb128 -18
 5606 07c7 14       		.uleb128 0x14
 5607 07c8 7900     		.ascii	"y\000"
 5608 07ca 01       		.byte	0x1
 5609 07cb 7902     		.2byte	0x279
 5610 07cd A2000000 		.4byte	0xa2
 5611 07d1 02       		.uleb128 0x2
 5612 07d2 91       		.byte	0x91
 5613 07d3 6C       		.sleb128 -20
 5614 07d4 14       		.uleb128 0x14
 5615 07d5 7700     		.ascii	"w\000"
 5616 07d7 01       		.byte	0x1
 5617 07d8 7902     		.2byte	0x279
 5618 07da A2000000 		.4byte	0xa2
 5619 07de 02       		.uleb128 0x2
 5620 07df 91       		.byte	0x91
 5621 07e0 6A       		.sleb128 -22
 5622 07e1 14       		.uleb128 0x14
 5623 07e2 6800     		.ascii	"h\000"
 5624 07e4 01       		.byte	0x1
 5625 07e5 7902     		.2byte	0x279
 5626 07e7 A2000000 		.4byte	0xa2
 5627 07eb 02       		.uleb128 0x2
 5628 07ec 91       		.byte	0x91
 5629 07ed 68       		.sleb128 -24
 5630 07ee 15       		.uleb128 0x15
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 124


 5631 07ef 37070000 		.4byte	.LASF138
 5632 07f3 01       		.byte	0x1
 5633 07f4 7902     		.2byte	0x279
 5634 07f6 AD000000 		.4byte	0xad
 5635 07fa 02       		.uleb128 0x2
 5636 07fb 91       		.byte	0x91
 5637 07fc 00       		.sleb128 0
 5638 07fd 00       		.byte	0
 5639 07fe 12       		.uleb128 0x12
 5640 07ff D50E0000 		.4byte	.LASF143
 5641 0803 01       		.byte	0x1
 5642 0804 8902     		.2byte	0x289
 5643 0806 00000000 		.4byte	.LFB57
 5644 080a 6A000000 		.4byte	.LFE57-.LFB57
 5645 080e 01       		.uleb128 0x1
 5646 080f 9C       		.byte	0x9c
 5647 0810 58080000 		.4byte	0x858
 5648 0814 14       		.uleb128 0x14
 5649 0815 7800     		.ascii	"x\000"
 5650 0817 01       		.byte	0x1
 5651 0818 8902     		.2byte	0x289
 5652 081a A2000000 		.4byte	0xa2
 5653 081e 02       		.uleb128 0x2
 5654 081f 91       		.byte	0x91
 5655 0820 6E       		.sleb128 -18
 5656 0821 14       		.uleb128 0x14
 5657 0822 7900     		.ascii	"y\000"
 5658 0824 01       		.byte	0x1
 5659 0825 8902     		.2byte	0x289
 5660 0827 A2000000 		.4byte	0xa2
 5661 082b 02       		.uleb128 0x2
 5662 082c 91       		.byte	0x91
 5663 082d 6C       		.sleb128 -20
 5664 082e 14       		.uleb128 0x14
 5665 082f 7700     		.ascii	"w\000"
 5666 0831 01       		.byte	0x1
 5667 0832 8902     		.2byte	0x289
 5668 0834 A2000000 		.4byte	0xa2
 5669 0838 02       		.uleb128 0x2
 5670 0839 91       		.byte	0x91
 5671 083a 6A       		.sleb128 -22
 5672 083b 14       		.uleb128 0x14
 5673 083c 6800     		.ascii	"h\000"
 5674 083e 01       		.byte	0x1
 5675 083f 8902     		.2byte	0x289
 5676 0841 A2000000 		.4byte	0xa2
 5677 0845 02       		.uleb128 0x2
 5678 0846 91       		.byte	0x91
 5679 0847 68       		.sleb128 -24
 5680 0848 15       		.uleb128 0x15
 5681 0849 37070000 		.4byte	.LASF138
 5682 084d 01       		.byte	0x1
 5683 084e 8902     		.2byte	0x289
 5684 0850 AD000000 		.4byte	0xad
 5685 0854 02       		.uleb128 0x2
 5686 0855 91       		.byte	0x91
 5687 0856 00       		.sleb128 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 125


 5688 0857 00       		.byte	0
 5689 0858 12       		.uleb128 0x12
 5690 0859 2D0A0000 		.4byte	.LASF144
 5691 085d 01       		.byte	0x1
 5692 085e 9502     		.2byte	0x295
 5693 0860 00000000 		.4byte	.LFB58
 5694 0864 44000000 		.4byte	.LFE58-.LFB58
 5695 0868 01       		.uleb128 0x1
 5696 0869 9C       		.byte	0x9c
 5697 086a 7E080000 		.4byte	0x87e
 5698 086e 15       		.uleb128 0x15
 5699 086f 37070000 		.4byte	.LASF138
 5700 0873 01       		.byte	0x1
 5701 0874 9502     		.2byte	0x295
 5702 0876 AD000000 		.4byte	0xad
 5703 087a 02       		.uleb128 0x2
 5704 087b 91       		.byte	0x91
 5705 087c 76       		.sleb128 -10
 5706 087d 00       		.byte	0
 5707 087e 12       		.uleb128 0x12
 5708 087f 4F090000 		.4byte	.LASF145
 5709 0883 01       		.byte	0x1
 5710 0884 A402     		.2byte	0x2a4
 5711 0886 00000000 		.4byte	.LFB59
 5712 088a 4E000000 		.4byte	.LFE59-.LFB59
 5713 088e 01       		.uleb128 0x1
 5714 088f 9C       		.byte	0x9c
 5715 0890 CD080000 		.4byte	0x8cd
 5716 0894 14       		.uleb128 0x14
 5717 0895 783000   		.ascii	"x0\000"
 5718 0898 01       		.byte	0x1
 5719 0899 A402     		.2byte	0x2a4
 5720 089b A2000000 		.4byte	0xa2
 5721 089f 02       		.uleb128 0x2
 5722 08a0 91       		.byte	0x91
 5723 08a1 6E       		.sleb128 -18
 5724 08a2 14       		.uleb128 0x14
 5725 08a3 793000   		.ascii	"y0\000"
 5726 08a6 01       		.byte	0x1
 5727 08a7 A402     		.2byte	0x2a4
 5728 08a9 A2000000 		.4byte	0xa2
 5729 08ad 02       		.uleb128 0x2
 5730 08ae 91       		.byte	0x91
 5731 08af 6C       		.sleb128 -20
 5732 08b0 14       		.uleb128 0x14
 5733 08b1 7200     		.ascii	"r\000"
 5734 08b3 01       		.byte	0x1
 5735 08b4 A402     		.2byte	0x2a4
 5736 08b6 A2000000 		.4byte	0xa2
 5737 08ba 02       		.uleb128 0x2
 5738 08bb 91       		.byte	0x91
 5739 08bc 6A       		.sleb128 -22
 5740 08bd 15       		.uleb128 0x15
 5741 08be 37070000 		.4byte	.LASF138
 5742 08c2 01       		.byte	0x1
 5743 08c3 A402     		.2byte	0x2a4
 5744 08c5 AD000000 		.4byte	0xad
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 126


 5745 08c9 02       		.uleb128 0x2
 5746 08ca 91       		.byte	0x91
 5747 08cb 68       		.sleb128 -24
 5748 08cc 00       		.byte	0
 5749 08cd 12       		.uleb128 0x12
 5750 08ce 23030000 		.4byte	.LASF146
 5751 08d2 01       		.byte	0x1
 5752 08d3 B302     		.2byte	0x2b3
 5753 08d5 00000000 		.4byte	.LFB60
 5754 08d9 4E000000 		.4byte	.LFE60-.LFB60
 5755 08dd 01       		.uleb128 0x1
 5756 08de 9C       		.byte	0x9c
 5757 08df 1C090000 		.4byte	0x91c
 5758 08e3 14       		.uleb128 0x14
 5759 08e4 783000   		.ascii	"x0\000"
 5760 08e7 01       		.byte	0x1
 5761 08e8 B302     		.2byte	0x2b3
 5762 08ea A2000000 		.4byte	0xa2
 5763 08ee 02       		.uleb128 0x2
 5764 08ef 91       		.byte	0x91
 5765 08f0 6E       		.sleb128 -18
 5766 08f1 14       		.uleb128 0x14
 5767 08f2 793000   		.ascii	"y0\000"
 5768 08f5 01       		.byte	0x1
 5769 08f6 B302     		.2byte	0x2b3
 5770 08f8 A2000000 		.4byte	0xa2
 5771 08fc 02       		.uleb128 0x2
 5772 08fd 91       		.byte	0x91
 5773 08fe 6C       		.sleb128 -20
 5774 08ff 14       		.uleb128 0x14
 5775 0900 7200     		.ascii	"r\000"
 5776 0902 01       		.byte	0x1
 5777 0903 B302     		.2byte	0x2b3
 5778 0905 A2000000 		.4byte	0xa2
 5779 0909 02       		.uleb128 0x2
 5780 090a 91       		.byte	0x91
 5781 090b 6A       		.sleb128 -22
 5782 090c 15       		.uleb128 0x15
 5783 090d 37070000 		.4byte	.LASF138
 5784 0911 01       		.byte	0x1
 5785 0912 B302     		.2byte	0x2b3
 5786 0914 AD000000 		.4byte	0xad
 5787 0918 02       		.uleb128 0x2
 5788 0919 91       		.byte	0x91
 5789 091a 68       		.sleb128 -24
 5790 091b 00       		.byte	0
 5791 091c 12       		.uleb128 0x12
 5792 091d D60C0000 		.4byte	.LASF147
 5793 0921 01       		.byte	0x1
 5794 0922 C502     		.2byte	0x2c5
 5795 0924 00000000 		.4byte	.LFB61
 5796 0928 6C000000 		.4byte	.LFE61-.LFB61
 5797 092c 01       		.uleb128 0x1
 5798 092d 9C       		.byte	0x9c
 5799 092e 96090000 		.4byte	0x996
 5800 0932 14       		.uleb128 0x14
 5801 0933 783000   		.ascii	"x0\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 127


 5802 0936 01       		.byte	0x1
 5803 0937 C502     		.2byte	0x2c5
 5804 0939 A2000000 		.4byte	0xa2
 5805 093d 02       		.uleb128 0x2
 5806 093e 91       		.byte	0x91
 5807 093f 6E       		.sleb128 -18
 5808 0940 14       		.uleb128 0x14
 5809 0941 793000   		.ascii	"y0\000"
 5810 0944 01       		.byte	0x1
 5811 0945 C502     		.2byte	0x2c5
 5812 0947 A2000000 		.4byte	0xa2
 5813 094b 02       		.uleb128 0x2
 5814 094c 91       		.byte	0x91
 5815 094d 6C       		.sleb128 -20
 5816 094e 14       		.uleb128 0x14
 5817 094f 783100   		.ascii	"x1\000"
 5818 0952 01       		.byte	0x1
 5819 0953 C502     		.2byte	0x2c5
 5820 0955 A2000000 		.4byte	0xa2
 5821 0959 02       		.uleb128 0x2
 5822 095a 91       		.byte	0x91
 5823 095b 6A       		.sleb128 -22
 5824 095c 14       		.uleb128 0x14
 5825 095d 793100   		.ascii	"y1\000"
 5826 0960 01       		.byte	0x1
 5827 0961 C502     		.2byte	0x2c5
 5828 0963 A2000000 		.4byte	0xa2
 5829 0967 02       		.uleb128 0x2
 5830 0968 91       		.byte	0x91
 5831 0969 68       		.sleb128 -24
 5832 096a 14       		.uleb128 0x14
 5833 096b 783200   		.ascii	"x2\000"
 5834 096e 01       		.byte	0x1
 5835 096f C502     		.2byte	0x2c5
 5836 0971 A2000000 		.4byte	0xa2
 5837 0975 02       		.uleb128 0x2
 5838 0976 91       		.byte	0x91
 5839 0977 00       		.sleb128 0
 5840 0978 14       		.uleb128 0x14
 5841 0979 793200   		.ascii	"y2\000"
 5842 097c 01       		.byte	0x1
 5843 097d C502     		.2byte	0x2c5
 5844 097f A2000000 		.4byte	0xa2
 5845 0983 02       		.uleb128 0x2
 5846 0984 91       		.byte	0x91
 5847 0985 04       		.sleb128 4
 5848 0986 15       		.uleb128 0x15
 5849 0987 37070000 		.4byte	.LASF138
 5850 098b 01       		.byte	0x1
 5851 098c C502     		.2byte	0x2c5
 5852 098e AD000000 		.4byte	0xad
 5853 0992 02       		.uleb128 0x2
 5854 0993 91       		.byte	0x91
 5855 0994 08       		.sleb128 8
 5856 0995 00       		.byte	0
 5857 0996 12       		.uleb128 0x12
 5858 0997 16030000 		.4byte	.LASF148
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 128


 5859 099b 01       		.byte	0x1
 5860 099c D702     		.2byte	0x2d7
 5861 099e 00000000 		.4byte	.LFB62
 5862 09a2 6C000000 		.4byte	.LFE62-.LFB62
 5863 09a6 01       		.uleb128 0x1
 5864 09a7 9C       		.byte	0x9c
 5865 09a8 100A0000 		.4byte	0xa10
 5866 09ac 14       		.uleb128 0x14
 5867 09ad 783000   		.ascii	"x0\000"
 5868 09b0 01       		.byte	0x1
 5869 09b1 D702     		.2byte	0x2d7
 5870 09b3 A2000000 		.4byte	0xa2
 5871 09b7 02       		.uleb128 0x2
 5872 09b8 91       		.byte	0x91
 5873 09b9 6E       		.sleb128 -18
 5874 09ba 14       		.uleb128 0x14
 5875 09bb 793000   		.ascii	"y0\000"
 5876 09be 01       		.byte	0x1
 5877 09bf D702     		.2byte	0x2d7
 5878 09c1 A2000000 		.4byte	0xa2
 5879 09c5 02       		.uleb128 0x2
 5880 09c6 91       		.byte	0x91
 5881 09c7 6C       		.sleb128 -20
 5882 09c8 14       		.uleb128 0x14
 5883 09c9 783100   		.ascii	"x1\000"
 5884 09cc 01       		.byte	0x1
 5885 09cd D702     		.2byte	0x2d7
 5886 09cf A2000000 		.4byte	0xa2
 5887 09d3 02       		.uleb128 0x2
 5888 09d4 91       		.byte	0x91
 5889 09d5 6A       		.sleb128 -22
 5890 09d6 14       		.uleb128 0x14
 5891 09d7 793100   		.ascii	"y1\000"
 5892 09da 01       		.byte	0x1
 5893 09db D702     		.2byte	0x2d7
 5894 09dd A2000000 		.4byte	0xa2
 5895 09e1 02       		.uleb128 0x2
 5896 09e2 91       		.byte	0x91
 5897 09e3 68       		.sleb128 -24
 5898 09e4 14       		.uleb128 0x14
 5899 09e5 783200   		.ascii	"x2\000"
 5900 09e8 01       		.byte	0x1
 5901 09e9 D702     		.2byte	0x2d7
 5902 09eb A2000000 		.4byte	0xa2
 5903 09ef 02       		.uleb128 0x2
 5904 09f0 91       		.byte	0x91
 5905 09f1 00       		.sleb128 0
 5906 09f2 14       		.uleb128 0x14
 5907 09f3 793200   		.ascii	"y2\000"
 5908 09f6 01       		.byte	0x1
 5909 09f7 D702     		.2byte	0x2d7
 5910 09f9 A2000000 		.4byte	0xa2
 5911 09fd 02       		.uleb128 0x2
 5912 09fe 91       		.byte	0x91
 5913 09ff 04       		.sleb128 4
 5914 0a00 15       		.uleb128 0x15
 5915 0a01 37070000 		.4byte	.LASF138
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 129


 5916 0a05 01       		.byte	0x1
 5917 0a06 D702     		.2byte	0x2d7
 5918 0a08 AD000000 		.4byte	0xad
 5919 0a0c 02       		.uleb128 0x2
 5920 0a0d 91       		.byte	0x91
 5921 0a0e 08       		.sleb128 8
 5922 0a0f 00       		.byte	0
 5923 0a10 12       		.uleb128 0x12
 5924 0a11 2B070000 		.4byte	.LASF149
 5925 0a15 01       		.byte	0x1
 5926 0a16 E702     		.2byte	0x2e7
 5927 0a18 00000000 		.4byte	.LFB63
 5928 0a1c 58000000 		.4byte	.LFE63-.LFB63
 5929 0a20 01       		.uleb128 0x1
 5930 0a21 9C       		.byte	0x9c
 5931 0a22 720A0000 		.4byte	0xa72
 5932 0a26 15       		.uleb128 0x15
 5933 0a27 86010000 		.4byte	.LASF150
 5934 0a2b 01       		.byte	0x1
 5935 0a2c E702     		.2byte	0x2e7
 5936 0a2e A2000000 		.4byte	0xa2
 5937 0a32 02       		.uleb128 0x2
 5938 0a33 91       		.byte	0x91
 5939 0a34 6E       		.sleb128 -18
 5940 0a35 15       		.uleb128 0x15
 5941 0a36 83090000 		.4byte	.LASF151
 5942 0a3a 01       		.byte	0x1
 5943 0a3b E702     		.2byte	0x2e7
 5944 0a3d A2000000 		.4byte	0xa2
 5945 0a41 02       		.uleb128 0x2
 5946 0a42 91       		.byte	0x91
 5947 0a43 6C       		.sleb128 -20
 5948 0a44 15       		.uleb128 0x15
 5949 0a45 7B020000 		.4byte	.LASF152
 5950 0a49 01       		.byte	0x1
 5951 0a4a E702     		.2byte	0x2e7
 5952 0a4c A2000000 		.4byte	0xa2
 5953 0a50 02       		.uleb128 0x2
 5954 0a51 91       		.byte	0x91
 5955 0a52 6A       		.sleb128 -22
 5956 0a53 15       		.uleb128 0x15
 5957 0a54 F7090000 		.4byte	.LASF153
 5958 0a58 01       		.byte	0x1
 5959 0a59 E702     		.2byte	0x2e7
 5960 0a5b A2000000 		.4byte	0xa2
 5961 0a5f 02       		.uleb128 0x2
 5962 0a60 91       		.byte	0x91
 5963 0a61 68       		.sleb128 -24
 5964 0a62 15       		.uleb128 0x15
 5965 0a63 37070000 		.4byte	.LASF138
 5966 0a67 01       		.byte	0x1
 5967 0a68 E702     		.2byte	0x2e7
 5968 0a6a AD000000 		.4byte	0xad
 5969 0a6e 02       		.uleb128 0x2
 5970 0a6f 91       		.byte	0x91
 5971 0a70 00       		.sleb128 0
 5972 0a71 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 130


 5973 0a72 12       		.uleb128 0x12
 5974 0a73 47030000 		.4byte	.LASF154
 5975 0a77 01       		.byte	0x1
 5976 0a78 F702     		.2byte	0x2f7
 5977 0a7a 00000000 		.4byte	.LFB64
 5978 0a7e 58000000 		.4byte	.LFE64-.LFB64
 5979 0a82 01       		.uleb128 0x1
 5980 0a83 9C       		.byte	0x9c
 5981 0a84 D40A0000 		.4byte	0xad4
 5982 0a88 15       		.uleb128 0x15
 5983 0a89 86010000 		.4byte	.LASF150
 5984 0a8d 01       		.byte	0x1
 5985 0a8e F702     		.2byte	0x2f7
 5986 0a90 A2000000 		.4byte	0xa2
 5987 0a94 02       		.uleb128 0x2
 5988 0a95 91       		.byte	0x91
 5989 0a96 6E       		.sleb128 -18
 5990 0a97 15       		.uleb128 0x15
 5991 0a98 83090000 		.4byte	.LASF151
 5992 0a9c 01       		.byte	0x1
 5993 0a9d F702     		.2byte	0x2f7
 5994 0a9f A2000000 		.4byte	0xa2
 5995 0aa3 02       		.uleb128 0x2
 5996 0aa4 91       		.byte	0x91
 5997 0aa5 6C       		.sleb128 -20
 5998 0aa6 15       		.uleb128 0x15
 5999 0aa7 7B020000 		.4byte	.LASF152
 6000 0aab 01       		.byte	0x1
 6001 0aac F702     		.2byte	0x2f7
 6002 0aae A2000000 		.4byte	0xa2
 6003 0ab2 02       		.uleb128 0x2
 6004 0ab3 91       		.byte	0x91
 6005 0ab4 6A       		.sleb128 -22
 6006 0ab5 15       		.uleb128 0x15
 6007 0ab6 F7090000 		.4byte	.LASF153
 6008 0aba 01       		.byte	0x1
 6009 0abb F702     		.2byte	0x2f7
 6010 0abd A2000000 		.4byte	0xa2
 6011 0ac1 02       		.uleb128 0x2
 6012 0ac2 91       		.byte	0x91
 6013 0ac3 68       		.sleb128 -24
 6014 0ac4 15       		.uleb128 0x15
 6015 0ac5 37070000 		.4byte	.LASF138
 6016 0ac9 01       		.byte	0x1
 6017 0aca F702     		.2byte	0x2f7
 6018 0acc AD000000 		.4byte	0xad
 6019 0ad0 02       		.uleb128 0x2
 6020 0ad1 91       		.byte	0x91
 6021 0ad2 00       		.sleb128 0
 6022 0ad3 00       		.byte	0
 6023 0ad4 12       		.uleb128 0x12
 6024 0ad5 49040000 		.4byte	.LASF155
 6025 0ad9 01       		.byte	0x1
 6026 0ada 0C03     		.2byte	0x30c
 6027 0adc 00000000 		.4byte	.LFB65
 6028 0ae0 60000000 		.4byte	.LFE65-.LFB65
 6029 0ae4 01       		.uleb128 0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 131


 6030 0ae5 9C       		.byte	0x9c
 6031 0ae6 450B0000 		.4byte	0xb45
 6032 0aea 15       		.uleb128 0x15
 6033 0aeb 86010000 		.4byte	.LASF150
 6034 0aef 01       		.byte	0x1
 6035 0af0 0C03     		.2byte	0x30c
 6036 0af2 A2000000 		.4byte	0xa2
 6037 0af6 02       		.uleb128 0x2
 6038 0af7 91       		.byte	0x91
 6039 0af8 6E       		.sleb128 -18
 6040 0af9 15       		.uleb128 0x15
 6041 0afa 83090000 		.4byte	.LASF151
 6042 0afe 01       		.byte	0x1
 6043 0aff 0C03     		.2byte	0x30c
 6044 0b01 A2000000 		.4byte	0xa2
 6045 0b05 02       		.uleb128 0x2
 6046 0b06 91       		.byte	0x91
 6047 0b07 6C       		.sleb128 -20
 6048 0b08 15       		.uleb128 0x15
 6049 0b09 7B020000 		.4byte	.LASF152
 6050 0b0d 01       		.byte	0x1
 6051 0b0e 0C03     		.2byte	0x30c
 6052 0b10 A2000000 		.4byte	0xa2
 6053 0b14 02       		.uleb128 0x2
 6054 0b15 91       		.byte	0x91
 6055 0b16 6A       		.sleb128 -22
 6056 0b17 15       		.uleb128 0x15
 6057 0b18 F7090000 		.4byte	.LASF153
 6058 0b1c 01       		.byte	0x1
 6059 0b1d 0C03     		.2byte	0x30c
 6060 0b1f A2000000 		.4byte	0xa2
 6061 0b23 02       		.uleb128 0x2
 6062 0b24 91       		.byte	0x91
 6063 0b25 68       		.sleb128 -24
 6064 0b26 15       		.uleb128 0x15
 6065 0b27 DA040000 		.4byte	.LASF156
 6066 0b2b 01       		.byte	0x1
 6067 0b2c 0C03     		.2byte	0x30c
 6068 0b2e 97000000 		.4byte	0x97
 6069 0b32 02       		.uleb128 0x2
 6070 0b33 91       		.byte	0x91
 6071 0b34 00       		.sleb128 0
 6072 0b35 15       		.uleb128 0x15
 6073 0b36 37070000 		.4byte	.LASF138
 6074 0b3a 01       		.byte	0x1
 6075 0b3b 0C03     		.2byte	0x30c
 6076 0b3d AD000000 		.4byte	0xad
 6077 0b41 02       		.uleb128 0x2
 6078 0b42 91       		.byte	0x91
 6079 0b43 04       		.sleb128 4
 6080 0b44 00       		.byte	0
 6081 0b45 12       		.uleb128 0x12
 6082 0b46 96070000 		.4byte	.LASF157
 6083 0b4a 01       		.byte	0x1
 6084 0b4b 2103     		.2byte	0x321
 6085 0b4d 00000000 		.4byte	.LFB66
 6086 0b51 60000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 132


 6087 0b55 01       		.uleb128 0x1
 6088 0b56 9C       		.byte	0x9c
 6089 0b57 B60B0000 		.4byte	0xbb6
 6090 0b5b 15       		.uleb128 0x15
 6091 0b5c 86010000 		.4byte	.LASF150
 6092 0b60 01       		.byte	0x1
 6093 0b61 2103     		.2byte	0x321
 6094 0b63 A2000000 		.4byte	0xa2
 6095 0b67 02       		.uleb128 0x2
 6096 0b68 91       		.byte	0x91
 6097 0b69 6E       		.sleb128 -18
 6098 0b6a 15       		.uleb128 0x15
 6099 0b6b 83090000 		.4byte	.LASF151
 6100 0b6f 01       		.byte	0x1
 6101 0b70 2103     		.2byte	0x321
 6102 0b72 A2000000 		.4byte	0xa2
 6103 0b76 02       		.uleb128 0x2
 6104 0b77 91       		.byte	0x91
 6105 0b78 6C       		.sleb128 -20
 6106 0b79 15       		.uleb128 0x15
 6107 0b7a 7B020000 		.4byte	.LASF152
 6108 0b7e 01       		.byte	0x1
 6109 0b7f 2103     		.2byte	0x321
 6110 0b81 A2000000 		.4byte	0xa2
 6111 0b85 02       		.uleb128 0x2
 6112 0b86 91       		.byte	0x91
 6113 0b87 6A       		.sleb128 -22
 6114 0b88 15       		.uleb128 0x15
 6115 0b89 F7090000 		.4byte	.LASF153
 6116 0b8d 01       		.byte	0x1
 6117 0b8e 2103     		.2byte	0x321
 6118 0b90 A2000000 		.4byte	0xa2
 6119 0b94 02       		.uleb128 0x2
 6120 0b95 91       		.byte	0x91
 6121 0b96 68       		.sleb128 -24
 6122 0b97 15       		.uleb128 0x15
 6123 0b98 DA040000 		.4byte	.LASF156
 6124 0b9c 01       		.byte	0x1
 6125 0b9d 2103     		.2byte	0x321
 6126 0b9f 97000000 		.4byte	0x97
 6127 0ba3 02       		.uleb128 0x2
 6128 0ba4 91       		.byte	0x91
 6129 0ba5 00       		.sleb128 0
 6130 0ba6 15       		.uleb128 0x15
 6131 0ba7 37070000 		.4byte	.LASF138
 6132 0bab 01       		.byte	0x1
 6133 0bac 2103     		.2byte	0x321
 6134 0bae AD000000 		.4byte	0xad
 6135 0bb2 02       		.uleb128 0x2
 6136 0bb3 91       		.byte	0x91
 6137 0bb4 04       		.sleb128 4
 6138 0bb5 00       		.byte	0
 6139 0bb6 12       		.uleb128 0x12
 6140 0bb7 F90D0000 		.4byte	.LASF158
 6141 0bbb 01       		.byte	0x1
 6142 0bbc 2B03     		.2byte	0x32b
 6143 0bbe 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 133


 6144 0bc2 02010000 		.4byte	.LFE67-.LFB67
 6145 0bc6 01       		.uleb128 0x1
 6146 0bc7 9C       		.byte	0x9c
 6147 0bc8 140C0000 		.4byte	0xc14
 6148 0bcc 14       		.uleb128 0x14
 6149 0bcd 783000   		.ascii	"x0\000"
 6150 0bd0 01       		.byte	0x1
 6151 0bd1 2B03     		.2byte	0x32b
 6152 0bd3 A2000000 		.4byte	0xa2
 6153 0bd7 02       		.uleb128 0x2
 6154 0bd8 91       		.byte	0x91
 6155 0bd9 6E       		.sleb128 -18
 6156 0bda 14       		.uleb128 0x14
 6157 0bdb 793000   		.ascii	"y0\000"
 6158 0bde 01       		.byte	0x1
 6159 0bdf 2B03     		.2byte	0x32b
 6160 0be1 A2000000 		.4byte	0xa2
 6161 0be5 02       		.uleb128 0x2
 6162 0be6 91       		.byte	0x91
 6163 0be7 6C       		.sleb128 -20
 6164 0be8 14       		.uleb128 0x14
 6165 0be9 7200     		.ascii	"r\000"
 6166 0beb 01       		.byte	0x1
 6167 0bec 2B03     		.2byte	0x32b
 6168 0bee A2000000 		.4byte	0xa2
 6169 0bf2 02       		.uleb128 0x2
 6170 0bf3 91       		.byte	0x91
 6171 0bf4 6A       		.sleb128 -22
 6172 0bf5 15       		.uleb128 0x15
 6173 0bf6 37070000 		.4byte	.LASF138
 6174 0bfa 01       		.byte	0x1
 6175 0bfb 2B03     		.2byte	0x32b
 6176 0bfd AD000000 		.4byte	0xad
 6177 0c01 02       		.uleb128 0x2
 6178 0c02 91       		.byte	0x91
 6179 0c03 68       		.sleb128 -24
 6180 0c04 15       		.uleb128 0x15
 6181 0c05 DA020000 		.4byte	.LASF159
 6182 0c09 01       		.byte	0x1
 6183 0c0a 2B03     		.2byte	0x32b
 6184 0c0c 1C030000 		.4byte	0x31c
 6185 0c10 02       		.uleb128 0x2
 6186 0c11 91       		.byte	0x91
 6187 0c12 00       		.sleb128 0
 6188 0c13 00       		.byte	0
 6189 0c14 12       		.uleb128 0x12
 6190 0c15 AE000000 		.4byte	.LASF160
 6191 0c19 01       		.byte	0x1
 6192 0c1a 5903     		.2byte	0x359
 6193 0c1c 00000000 		.4byte	.LFB68
 6194 0c20 4A010000 		.4byte	.LFE68-.LFB68
 6195 0c24 01       		.uleb128 0x1
 6196 0c25 9C       		.byte	0x9c
 6197 0c26 7D0C0000 		.4byte	0xc7d
 6198 0c2a 14       		.uleb128 0x14
 6199 0c2b 7800     		.ascii	"x\000"
 6200 0c2d 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 134


 6201 0c2e 5903     		.2byte	0x359
 6202 0c30 A2000000 		.4byte	0xa2
 6203 0c34 02       		.uleb128 0x2
 6204 0c35 91       		.byte	0x91
 6205 0c36 6E       		.sleb128 -18
 6206 0c37 14       		.uleb128 0x14
 6207 0c38 7900     		.ascii	"y\000"
 6208 0c3a 01       		.byte	0x1
 6209 0c3b 5903     		.2byte	0x359
 6210 0c3d A2000000 		.4byte	0xa2
 6211 0c41 02       		.uleb128 0x2
 6212 0c42 91       		.byte	0x91
 6213 0c43 6C       		.sleb128 -20
 6214 0c44 14       		.uleb128 0x14
 6215 0c45 7700     		.ascii	"w\000"
 6216 0c47 01       		.byte	0x1
 6217 0c48 5903     		.2byte	0x359
 6218 0c4a A2000000 		.4byte	0xa2
 6219 0c4e 02       		.uleb128 0x2
 6220 0c4f 91       		.byte	0x91
 6221 0c50 6A       		.sleb128 -22
 6222 0c51 14       		.uleb128 0x14
 6223 0c52 6800     		.ascii	"h\000"
 6224 0c54 01       		.byte	0x1
 6225 0c55 5903     		.2byte	0x359
 6226 0c57 A2000000 		.4byte	0xa2
 6227 0c5b 02       		.uleb128 0x2
 6228 0c5c 91       		.byte	0x91
 6229 0c5d 68       		.sleb128 -24
 6230 0c5e 15       		.uleb128 0x15
 6231 0c5f 37070000 		.4byte	.LASF138
 6232 0c63 01       		.byte	0x1
 6233 0c64 5903     		.2byte	0x359
 6234 0c66 AD000000 		.4byte	0xad
 6235 0c6a 02       		.uleb128 0x2
 6236 0c6b 91       		.byte	0x91
 6237 0c6c 00       		.sleb128 0
 6238 0c6d 15       		.uleb128 0x15
 6239 0c6e DA020000 		.4byte	.LASF159
 6240 0c72 01       		.byte	0x1
 6241 0c73 5903     		.2byte	0x359
 6242 0c75 1C030000 		.4byte	0x31c
 6243 0c79 02       		.uleb128 0x2
 6244 0c7a 91       		.byte	0x91
 6245 0c7b 04       		.sleb128 4
 6246 0c7c 00       		.byte	0
 6247 0c7d 12       		.uleb128 0x12
 6248 0c7e 380A0000 		.4byte	.LASF161
 6249 0c82 01       		.byte	0x1
 6250 0c83 9003     		.2byte	0x390
 6251 0c85 00000000 		.4byte	.LFB69
 6252 0c89 A6010000 		.4byte	.LFE69-.LFB69
 6253 0c8d 01       		.uleb128 0x1
 6254 0c8e 9C       		.byte	0x9c
 6255 0c8f 060D0000 		.4byte	0xd06
 6256 0c93 14       		.uleb128 0x14
 6257 0c94 783000   		.ascii	"x0\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 135


 6258 0c97 01       		.byte	0x1
 6259 0c98 9003     		.2byte	0x390
 6260 0c9a A2000000 		.4byte	0xa2
 6261 0c9e 02       		.uleb128 0x2
 6262 0c9f 91       		.byte	0x91
 6263 0ca0 6E       		.sleb128 -18
 6264 0ca1 14       		.uleb128 0x14
 6265 0ca2 793000   		.ascii	"y0\000"
 6266 0ca5 01       		.byte	0x1
 6267 0ca6 9003     		.2byte	0x390
 6268 0ca8 A2000000 		.4byte	0xa2
 6269 0cac 02       		.uleb128 0x2
 6270 0cad 91       		.byte	0x91
 6271 0cae 6C       		.sleb128 -20
 6272 0caf 14       		.uleb128 0x14
 6273 0cb0 783100   		.ascii	"x1\000"
 6274 0cb3 01       		.byte	0x1
 6275 0cb4 9003     		.2byte	0x390
 6276 0cb6 A2000000 		.4byte	0xa2
 6277 0cba 02       		.uleb128 0x2
 6278 0cbb 91       		.byte	0x91
 6279 0cbc 6A       		.sleb128 -22
 6280 0cbd 14       		.uleb128 0x14
 6281 0cbe 793100   		.ascii	"y1\000"
 6282 0cc1 01       		.byte	0x1
 6283 0cc2 9003     		.2byte	0x390
 6284 0cc4 A2000000 		.4byte	0xa2
 6285 0cc8 02       		.uleb128 0x2
 6286 0cc9 91       		.byte	0x91
 6287 0cca 68       		.sleb128 -24
 6288 0ccb 14       		.uleb128 0x14
 6289 0ccc 783200   		.ascii	"x2\000"
 6290 0ccf 01       		.byte	0x1
 6291 0cd0 9003     		.2byte	0x390
 6292 0cd2 A2000000 		.4byte	0xa2
 6293 0cd6 02       		.uleb128 0x2
 6294 0cd7 91       		.byte	0x91
 6295 0cd8 00       		.sleb128 0
 6296 0cd9 14       		.uleb128 0x14
 6297 0cda 793200   		.ascii	"y2\000"
 6298 0cdd 01       		.byte	0x1
 6299 0cde 9003     		.2byte	0x390
 6300 0ce0 A2000000 		.4byte	0xa2
 6301 0ce4 02       		.uleb128 0x2
 6302 0ce5 91       		.byte	0x91
 6303 0ce6 04       		.sleb128 4
 6304 0ce7 15       		.uleb128 0x15
 6305 0ce8 37070000 		.4byte	.LASF138
 6306 0cec 01       		.byte	0x1
 6307 0ced 9003     		.2byte	0x390
 6308 0cef AD000000 		.4byte	0xad
 6309 0cf3 02       		.uleb128 0x2
 6310 0cf4 91       		.byte	0x91
 6311 0cf5 08       		.sleb128 8
 6312 0cf6 15       		.uleb128 0x15
 6313 0cf7 DA020000 		.4byte	.LASF159
 6314 0cfb 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 136


 6315 0cfc 9003     		.2byte	0x390
 6316 0cfe 1C030000 		.4byte	0x31c
 6317 0d02 02       		.uleb128 0x2
 6318 0d03 91       		.byte	0x91
 6319 0d04 0C       		.sleb128 12
 6320 0d05 00       		.byte	0
 6321 0d06 12       		.uleb128 0x12
 6322 0d07 8A040000 		.4byte	.LASF162
 6323 0d0b 01       		.byte	0x1
 6324 0d0c CC03     		.2byte	0x3cc
 6325 0d0e 00000000 		.4byte	.LFB70
 6326 0d12 4A010000 		.4byte	.LFE70-.LFB70
 6327 0d16 01       		.uleb128 0x1
 6328 0d17 9C       		.byte	0x9c
 6329 0d18 770D0000 		.4byte	0xd77
 6330 0d1c 15       		.uleb128 0x15
 6331 0d1d 86010000 		.4byte	.LASF150
 6332 0d21 01       		.byte	0x1
 6333 0d22 CC03     		.2byte	0x3cc
 6334 0d24 A2000000 		.4byte	0xa2
 6335 0d28 02       		.uleb128 0x2
 6336 0d29 91       		.byte	0x91
 6337 0d2a 6E       		.sleb128 -18
 6338 0d2b 15       		.uleb128 0x15
 6339 0d2c 83090000 		.4byte	.LASF151
 6340 0d30 01       		.byte	0x1
 6341 0d31 CC03     		.2byte	0x3cc
 6342 0d33 A2000000 		.4byte	0xa2
 6343 0d37 02       		.uleb128 0x2
 6344 0d38 91       		.byte	0x91
 6345 0d39 6C       		.sleb128 -20
 6346 0d3a 15       		.uleb128 0x15
 6347 0d3b 7B020000 		.4byte	.LASF152
 6348 0d3f 01       		.byte	0x1
 6349 0d40 CC03     		.2byte	0x3cc
 6350 0d42 A2000000 		.4byte	0xa2
 6351 0d46 02       		.uleb128 0x2
 6352 0d47 91       		.byte	0x91
 6353 0d48 6A       		.sleb128 -22
 6354 0d49 15       		.uleb128 0x15
 6355 0d4a F7090000 		.4byte	.LASF153
 6356 0d4e 01       		.byte	0x1
 6357 0d4f CC03     		.2byte	0x3cc
 6358 0d51 A2000000 		.4byte	0xa2
 6359 0d55 02       		.uleb128 0x2
 6360 0d56 91       		.byte	0x91
 6361 0d57 68       		.sleb128 -24
 6362 0d58 15       		.uleb128 0x15
 6363 0d59 37070000 		.4byte	.LASF138
 6364 0d5d 01       		.byte	0x1
 6365 0d5e CC03     		.2byte	0x3cc
 6366 0d60 AD000000 		.4byte	0xad
 6367 0d64 02       		.uleb128 0x2
 6368 0d65 91       		.byte	0x91
 6369 0d66 00       		.sleb128 0
 6370 0d67 15       		.uleb128 0x15
 6371 0d68 DA020000 		.4byte	.LASF159
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 137


 6372 0d6c 01       		.byte	0x1
 6373 0d6d CC03     		.2byte	0x3cc
 6374 0d6f 1C030000 		.4byte	0x31c
 6375 0d73 02       		.uleb128 0x2
 6376 0d74 91       		.byte	0x91
 6377 0d75 04       		.sleb128 4
 6378 0d76 00       		.byte	0
 6379 0d77 12       		.uleb128 0x12
 6380 0d78 EB040000 		.4byte	.LASF163
 6381 0d7c 01       		.byte	0x1
 6382 0d7d FE03     		.2byte	0x3fe
 6383 0d7f 00000000 		.4byte	.LFB71
 6384 0d83 7A010000 		.4byte	.LFE71-.LFB71
 6385 0d87 01       		.uleb128 0x1
 6386 0d88 9C       		.byte	0x9c
 6387 0d89 F70D0000 		.4byte	0xdf7
 6388 0d8d 15       		.uleb128 0x15
 6389 0d8e 86010000 		.4byte	.LASF150
 6390 0d92 01       		.byte	0x1
 6391 0d93 FE03     		.2byte	0x3fe
 6392 0d95 A2000000 		.4byte	0xa2
 6393 0d99 02       		.uleb128 0x2
 6394 0d9a 91       		.byte	0x91
 6395 0d9b 6E       		.sleb128 -18
 6396 0d9c 15       		.uleb128 0x15
 6397 0d9d 83090000 		.4byte	.LASF151
 6398 0da1 01       		.byte	0x1
 6399 0da2 FE03     		.2byte	0x3fe
 6400 0da4 A2000000 		.4byte	0xa2
 6401 0da8 02       		.uleb128 0x2
 6402 0da9 91       		.byte	0x91
 6403 0daa 6C       		.sleb128 -20
 6404 0dab 15       		.uleb128 0x15
 6405 0dac 7B020000 		.4byte	.LASF152
 6406 0db0 01       		.byte	0x1
 6407 0db1 FE03     		.2byte	0x3fe
 6408 0db3 A2000000 		.4byte	0xa2
 6409 0db7 02       		.uleb128 0x2
 6410 0db8 91       		.byte	0x91
 6411 0db9 6A       		.sleb128 -22
 6412 0dba 15       		.uleb128 0x15
 6413 0dbb F7090000 		.4byte	.LASF153
 6414 0dbf 01       		.byte	0x1
 6415 0dc0 FE03     		.2byte	0x3fe
 6416 0dc2 A2000000 		.4byte	0xa2
 6417 0dc6 02       		.uleb128 0x2
 6418 0dc7 91       		.byte	0x91
 6419 0dc8 68       		.sleb128 -24
 6420 0dc9 15       		.uleb128 0x15
 6421 0dca DA040000 		.4byte	.LASF156
 6422 0dce 01       		.byte	0x1
 6423 0dcf FE03     		.2byte	0x3fe
 6424 0dd1 97000000 		.4byte	0x97
 6425 0dd5 02       		.uleb128 0x2
 6426 0dd6 91       		.byte	0x91
 6427 0dd7 00       		.sleb128 0
 6428 0dd8 15       		.uleb128 0x15
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 138


 6429 0dd9 37070000 		.4byte	.LASF138
 6430 0ddd 01       		.byte	0x1
 6431 0dde FE03     		.2byte	0x3fe
 6432 0de0 AD000000 		.4byte	0xad
 6433 0de4 02       		.uleb128 0x2
 6434 0de5 91       		.byte	0x91
 6435 0de6 04       		.sleb128 4
 6436 0de7 15       		.uleb128 0x15
 6437 0de8 DA020000 		.4byte	.LASF159
 6438 0dec 01       		.byte	0x1
 6439 0ded FE03     		.2byte	0x3fe
 6440 0def 1C030000 		.4byte	0x31c
 6441 0df3 02       		.uleb128 0x2
 6442 0df4 91       		.byte	0x91
 6443 0df5 08       		.sleb128 8
 6444 0df6 00       		.byte	0
 6445 0df7 12       		.uleb128 0x12
 6446 0df8 66090000 		.4byte	.LASF164
 6447 0dfc 01       		.byte	0x1
 6448 0dfd 3204     		.2byte	0x432
 6449 0dff 00000000 		.4byte	.LFB72
 6450 0e03 2E000000 		.4byte	.LFE72-.LFB72
 6451 0e07 01       		.uleb128 0x1
 6452 0e08 9C       		.byte	0x9c
 6453 0e09 1C0E0000 		.4byte	0xe1c
 6454 0e0d 14       		.uleb128 0x14
 6455 0e0e 6F6E00   		.ascii	"on\000"
 6456 0e11 01       		.byte	0x1
 6457 0e12 3204     		.2byte	0x432
 6458 0e14 11030000 		.4byte	0x311
 6459 0e18 02       		.uleb128 0x2
 6460 0e19 91       		.byte	0x91
 6461 0e1a 77       		.sleb128 -9
 6462 0e1b 00       		.byte	0
 6463 0e1c 12       		.uleb128 0x12
 6464 0e1d 1C0C0000 		.4byte	.LASF165
 6465 0e21 01       		.byte	0x1
 6466 0e22 4404     		.2byte	0x444
 6467 0e24 00000000 		.4byte	.LFB73
 6468 0e28 20000000 		.4byte	.LFE73-.LFB73
 6469 0e2c 01       		.uleb128 0x1
 6470 0e2d 9C       		.byte	0x9c
 6471 0e2e 400E0000 		.4byte	0xe40
 6472 0e32 14       		.uleb128 0x14
 6473 0e33 7000     		.ascii	"p\000"
 6474 0e35 01       		.byte	0x1
 6475 0e36 4404     		.2byte	0x444
 6476 0e38 97000000 		.4byte	0x97
 6477 0e3c 02       		.uleb128 0x2
 6478 0e3d 91       		.byte	0x91
 6479 0e3e 77       		.sleb128 -9
 6480 0e3f 00       		.byte	0
 6481 0e40 12       		.uleb128 0x12
 6482 0e41 970A0000 		.4byte	.LASF166
 6483 0e45 01       		.byte	0x1
 6484 0e46 5104     		.2byte	0x451
 6485 0e48 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 139


 6486 0e4c 20000000 		.4byte	.LFE74-.LFB74
 6487 0e50 01       		.uleb128 0x1
 6488 0e51 9C       		.byte	0x9c
 6489 0e52 640E0000 		.4byte	0xe64
 6490 0e56 14       		.uleb128 0x14
 6491 0e57 7000     		.ascii	"p\000"
 6492 0e59 01       		.byte	0x1
 6493 0e5a 5104     		.2byte	0x451
 6494 0e5c 97000000 		.4byte	0x97
 6495 0e60 02       		.uleb128 0x2
 6496 0e61 91       		.byte	0x91
 6497 0e62 77       		.sleb128 -9
 6498 0e63 00       		.byte	0
 6499 0e64 12       		.uleb128 0x12
 6500 0e65 84020000 		.4byte	.LASF167
 6501 0e69 01       		.byte	0x1
 6502 0e6a 5A04     		.2byte	0x45a
 6503 0e6c 00000000 		.4byte	.LFB75
 6504 0e70 54000000 		.4byte	.LFE75-.LFB75
 6505 0e74 01       		.uleb128 0x1
 6506 0e75 9C       		.byte	0x9c
 6507 0e76 980E0000 		.4byte	0xe98
 6508 0e7a 14       		.uleb128 0x14
 6509 0e7b 6F6E00   		.ascii	"on\000"
 6510 0e7e 01       		.byte	0x1
 6511 0e7f 5A04     		.2byte	0x45a
 6512 0e81 11030000 		.4byte	0x311
 6513 0e85 02       		.uleb128 0x2
 6514 0e86 91       		.byte	0x91
 6515 0e87 77       		.sleb128 -9
 6516 0e88 15       		.uleb128 0x15
 6517 0e89 3F0E0000 		.4byte	.LASF168
 6518 0e8d 01       		.byte	0x1
 6519 0e8e 5A04     		.2byte	0x45a
 6520 0e90 97000000 		.4byte	0x97
 6521 0e94 02       		.uleb128 0x2
 6522 0e95 91       		.byte	0x91
 6523 0e96 76       		.sleb128 -10
 6524 0e97 00       		.byte	0
 6525 0e98 12       		.uleb128 0x12
 6526 0e99 1D0B0000 		.4byte	.LASF169
 6527 0e9d 01       		.byte	0x1
 6528 0e9e 6C04     		.2byte	0x46c
 6529 0ea0 00000000 		.4byte	.LFB76
 6530 0ea4 54000000 		.4byte	.LFE76-.LFB76
 6531 0ea8 01       		.uleb128 0x1
 6532 0ea9 9C       		.byte	0x9c
 6533 0eaa CC0E0000 		.4byte	0xecc
 6534 0eae 14       		.uleb128 0x14
 6535 0eaf 6F6E00   		.ascii	"on\000"
 6536 0eb2 01       		.byte	0x1
 6537 0eb3 6C04     		.2byte	0x46c
 6538 0eb5 11030000 		.4byte	0x311
 6539 0eb9 02       		.uleb128 0x2
 6540 0eba 91       		.byte	0x91
 6541 0ebb 77       		.sleb128 -9
 6542 0ebc 15       		.uleb128 0x15
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 140


 6543 0ebd 3F0E0000 		.4byte	.LASF168
 6544 0ec1 01       		.byte	0x1
 6545 0ec2 6C04     		.2byte	0x46c
 6546 0ec4 97000000 		.4byte	0x97
 6547 0ec8 02       		.uleb128 0x2
 6548 0ec9 91       		.byte	0x91
 6549 0eca 76       		.sleb128 -10
 6550 0ecb 00       		.byte	0
 6551 0ecc 12       		.uleb128 0x12
 6552 0ecd 6F080000 		.4byte	.LASF170
 6553 0ed1 01       		.byte	0x1
 6554 0ed2 7904     		.2byte	0x479
 6555 0ed4 00000000 		.4byte	.LFB77
 6556 0ed8 94000000 		.4byte	.LFE77-.LFB77
 6557 0edc 01       		.uleb128 0x1
 6558 0edd 9C       		.byte	0x9c
 6559 0ede 000F0000 		.4byte	0xf00
 6560 0ee2 14       		.uleb128 0x14
 6561 0ee3 6F6E00   		.ascii	"on\000"
 6562 0ee6 01       		.byte	0x1
 6563 0ee7 7904     		.2byte	0x479
 6564 0ee9 11030000 		.4byte	0x311
 6565 0eed 02       		.uleb128 0x2
 6566 0eee 91       		.byte	0x91
 6567 0eef 6F       		.sleb128 -17
 6568 0ef0 13       		.uleb128 0x13
 6569 0ef1 06030000 		.4byte	.LASF171
 6570 0ef5 01       		.byte	0x1
 6571 0ef6 7B04     		.2byte	0x47b
 6572 0ef8 97000000 		.4byte	0x97
 6573 0efc 02       		.uleb128 0x2
 6574 0efd 91       		.byte	0x91
 6575 0efe 77       		.sleb128 -9
 6576 0eff 00       		.byte	0
 6577 0f00 1A       		.uleb128 0x1a
 6578 0f01 E1090000 		.4byte	.LASF172
 6579 0f05 01       		.byte	0x1
 6580 0f06 9F04     		.2byte	0x49f
 6581 0f08 11030000 		.4byte	0x311
 6582 0f0c 00000000 		.4byte	.LFB78
 6583 0f10 20000000 		.4byte	.LFE78-.LFB78
 6584 0f14 01       		.uleb128 0x1
 6585 0f15 9C       		.byte	0x9c
 6586 0f16 18       		.uleb128 0x18
 6587 0f17 0B0A0000 		.4byte	.LASF173
 6588 0f1b 01       		.byte	0x1
 6589 0f1c B004     		.2byte	0x4b0
 6590 0f1e 11030000 		.4byte	0x311
 6591 0f22 00000000 		.4byte	.LFB79
 6592 0f26 BE000000 		.4byte	.LFE79-.LFB79
 6593 0f2a 01       		.uleb128 0x1
 6594 0f2b 9C       		.byte	0x9c
 6595 0f2c 760F0000 		.4byte	0xf76
 6596 0f30 14       		.uleb128 0x14
 6597 0f31 7800     		.ascii	"x\000"
 6598 0f33 01       		.byte	0x1
 6599 0f34 B004     		.2byte	0x4b0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 141


 6600 0f36 760F0000 		.4byte	0xf76
 6601 0f3a 02       		.uleb128 0x2
 6602 0f3b 91       		.byte	0x91
 6603 0f3c 64       		.sleb128 -28
 6604 0f3d 14       		.uleb128 0x14
 6605 0f3e 7900     		.ascii	"y\000"
 6606 0f40 01       		.byte	0x1
 6607 0f41 B004     		.2byte	0x4b0
 6608 0f43 760F0000 		.4byte	0xf76
 6609 0f47 02       		.uleb128 0x2
 6610 0f48 91       		.byte	0x91
 6611 0f49 60       		.sleb128 -32
 6612 0f4a 17       		.uleb128 0x17
 6613 0f4b 747800   		.ascii	"tx\000"
 6614 0f4e 01       		.byte	0x1
 6615 0f4f B204     		.2byte	0x4b2
 6616 0f51 AD000000 		.4byte	0xad
 6617 0f55 02       		.uleb128 0x2
 6618 0f56 91       		.byte	0x91
 6619 0f57 6E       		.sleb128 -18
 6620 0f58 17       		.uleb128 0x17
 6621 0f59 747900   		.ascii	"ty\000"
 6622 0f5c 01       		.byte	0x1
 6623 0f5d B204     		.2byte	0x4b2
 6624 0f5f AD000000 		.4byte	0xad
 6625 0f63 02       		.uleb128 0x2
 6626 0f64 91       		.byte	0x91
 6627 0f65 6C       		.sleb128 -20
 6628 0f66 13       		.uleb128 0x13
 6629 0f67 9E030000 		.4byte	.LASF119
 6630 0f6b 01       		.byte	0x1
 6631 0f6c B304     		.2byte	0x4b3
 6632 0f6e 97000000 		.4byte	0x97
 6633 0f72 02       		.uleb128 0x2
 6634 0f73 91       		.byte	0x91
 6635 0f74 6B       		.sleb128 -21
 6636 0f75 00       		.byte	0
 6637 0f76 05       		.uleb128 0x5
 6638 0f77 04       		.byte	0x4
 6639 0f78 AD000000 		.4byte	0xad
 6640 0f7c 12       		.uleb128 0x12
 6641 0f7d 68070000 		.4byte	.LASF174
 6642 0f81 01       		.byte	0x1
 6643 0f82 CB04     		.2byte	0x4cb
 6644 0f84 00000000 		.4byte	.LFB80
 6645 0f88 2E000000 		.4byte	.LFE80-.LFB80
 6646 0f8c 01       		.uleb128 0x1
 6647 0f8d 9C       		.byte	0x9c
 6648 0f8e A10F0000 		.4byte	0xfa1
 6649 0f92 14       		.uleb128 0x14
 6650 0f93 6F6E00   		.ascii	"on\000"
 6651 0f96 01       		.byte	0x1
 6652 0f97 CB04     		.2byte	0x4cb
 6653 0f99 11030000 		.4byte	0x311
 6654 0f9d 02       		.uleb128 0x2
 6655 0f9e 91       		.byte	0x91
 6656 0f9f 77       		.sleb128 -9
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 142


 6657 0fa0 00       		.byte	0
 6658 0fa1 12       		.uleb128 0x12
 6659 0fa2 A8000000 		.4byte	.LASF175
 6660 0fa6 01       		.byte	0x1
 6661 0fa7 D904     		.2byte	0x4d9
 6662 0fa9 00000000 		.4byte	.LFB81
 6663 0fad 2E000000 		.4byte	.LFE81-.LFB81
 6664 0fb1 01       		.uleb128 0x1
 6665 0fb2 9C       		.byte	0x9c
 6666 0fb3 C70F0000 		.4byte	0xfc7
 6667 0fb7 15       		.uleb128 0x15
 6668 0fb8 A8000000 		.4byte	.LASF175
 6669 0fbc 01       		.byte	0x1
 6670 0fbd D904     		.2byte	0x4d9
 6671 0fbf 11030000 		.4byte	0x311
 6672 0fc3 02       		.uleb128 0x2
 6673 0fc4 91       		.byte	0x91
 6674 0fc5 77       		.sleb128 -9
 6675 0fc6 00       		.byte	0
 6676 0fc7 12       		.uleb128 0x12
 6677 0fc8 A70C0000 		.4byte	.LASF176
 6678 0fcc 01       		.byte	0x1
 6679 0fcd E804     		.2byte	0x4e8
 6680 0fcf 00000000 		.4byte	.LFB82
 6681 0fd3 2E000000 		.4byte	.LFE82-.LFB82
 6682 0fd7 01       		.uleb128 0x1
 6683 0fd8 9C       		.byte	0x9c
 6684 0fd9 FC0F0000 		.4byte	0xffc
 6685 0fdd 14       		.uleb128 0x14
 6686 0fde 72656700 		.ascii	"reg\000"
 6687 0fe2 01       		.byte	0x1
 6688 0fe3 E804     		.2byte	0x4e8
 6689 0fe5 97000000 		.4byte	0x97
 6690 0fe9 02       		.uleb128 0x2
 6691 0fea 91       		.byte	0x91
 6692 0feb 77       		.sleb128 -9
 6693 0fec 14       		.uleb128 0x14
 6694 0fed 76616C00 		.ascii	"val\000"
 6695 0ff1 01       		.byte	0x1
 6696 0ff2 E804     		.2byte	0x4e8
 6697 0ff4 97000000 		.4byte	0x97
 6698 0ff8 02       		.uleb128 0x2
 6699 0ff9 91       		.byte	0x91
 6700 0ffa 76       		.sleb128 -10
 6701 0ffb 00       		.byte	0
 6702 0ffc 18       		.uleb128 0x18
 6703 0ffd C1020000 		.4byte	.LASF177
 6704 1001 01       		.byte	0x1
 6705 1002 F304     		.2byte	0x4f3
 6706 1004 97000000 		.4byte	0x97
 6707 1008 00000000 		.4byte	.LFB83
 6708 100c 24000000 		.4byte	.LFE83-.LFB83
 6709 1010 01       		.uleb128 0x1
 6710 1011 9C       		.byte	0x9c
 6711 1012 26100000 		.4byte	0x1026
 6712 1016 14       		.uleb128 0x14
 6713 1017 72656700 		.ascii	"reg\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 143


 6714 101b 01       		.byte	0x1
 6715 101c F304     		.2byte	0x4f3
 6716 101e 97000000 		.4byte	0x97
 6717 1022 02       		.uleb128 0x2
 6718 1023 91       		.byte	0x91
 6719 1024 77       		.sleb128 -9
 6720 1025 00       		.byte	0
 6721 1026 12       		.uleb128 0x12
 6722 1027 E1070000 		.4byte	.LASF178
 6723 102b 01       		.byte	0x1
 6724 102c FE04     		.2byte	0x4fe
 6725 102e 00000000 		.4byte	.LFB84
 6726 1032 38000000 		.4byte	.LFE84-.LFB84
 6727 1036 01       		.uleb128 0x1
 6728 1037 9C       		.byte	0x9c
 6729 1038 4A100000 		.4byte	0x104a
 6730 103c 14       		.uleb128 0x14
 6731 103d 6400     		.ascii	"d\000"
 6732 103f 01       		.byte	0x1
 6733 1040 FE04     		.2byte	0x4fe
 6734 1042 97000000 		.4byte	0x97
 6735 1046 02       		.uleb128 0x2
 6736 1047 91       		.byte	0x91
 6737 1048 77       		.sleb128 -9
 6738 1049 00       		.byte	0
 6739 104a 18       		.uleb128 0x18
 6740 104b EB0B0000 		.4byte	.LASF179
 6741 104f 01       		.byte	0x1
 6742 1050 0D05     		.2byte	0x50d
 6743 1052 97000000 		.4byte	0x97
 6744 1056 00000000 		.4byte	.LFB85
 6745 105a 4E000000 		.4byte	.LFE85-.LFB85
 6746 105e 01       		.uleb128 0x1
 6747 105f 9C       		.byte	0x9c
 6748 1060 7F100000 		.4byte	0x107f
 6749 1064 17       		.uleb128 0x17
 6750 1065 7800     		.ascii	"x\000"
 6751 1067 01       		.byte	0x1
 6752 1068 0F05     		.2byte	0x50f
 6753 106a 97000000 		.4byte	0x97
 6754 106e 02       		.uleb128 0x2
 6755 106f 91       		.byte	0x91
 6756 1070 77       		.sleb128 -9
 6757 1071 17       		.uleb128 0x17
 6758 1072 7900     		.ascii	"y\000"
 6759 1074 01       		.byte	0x1
 6760 1075 1005     		.2byte	0x510
 6761 1077 97000000 		.4byte	0x97
 6762 107b 02       		.uleb128 0x2
 6763 107c 91       		.byte	0x91
 6764 107d 76       		.sleb128 -10
 6765 107e 00       		.byte	0
 6766 107f 12       		.uleb128 0x12
 6767 1080 53040000 		.4byte	.LASF180
 6768 1084 01       		.byte	0x1
 6769 1085 3605     		.2byte	0x536
 6770 1087 00000000 		.4byte	.LFB86
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 144


 6771 108b 38000000 		.4byte	.LFE86-.LFB86
 6772 108f 01       		.uleb128 0x1
 6773 1090 9C       		.byte	0x9c
 6774 1091 A3100000 		.4byte	0x10a3
 6775 1095 14       		.uleb128 0x14
 6776 1096 6400     		.ascii	"d\000"
 6777 1098 01       		.byte	0x1
 6778 1099 3605     		.2byte	0x536
 6779 109b 97000000 		.4byte	0x97
 6780 109f 02       		.uleb128 0x2
 6781 10a0 91       		.byte	0x91
 6782 10a1 77       		.sleb128 -9
 6783 10a2 00       		.byte	0
 6784 10a3 18       		.uleb128 0x18
 6785 10a4 810B0000 		.4byte	.LASF181
 6786 10a8 01       		.byte	0x1
 6787 10a9 4605     		.2byte	0x546
 6788 10ab 97000000 		.4byte	0x97
 6789 10af 00000000 		.4byte	.LFB87
 6790 10b3 36000000 		.4byte	.LFE87-.LFB87
 6791 10b7 01       		.uleb128 0x1
 6792 10b8 9C       		.byte	0x9c
 6793 10b9 CB100000 		.4byte	0x10cb
 6794 10bd 17       		.uleb128 0x17
 6795 10be 7800     		.ascii	"x\000"
 6796 10c0 01       		.byte	0x1
 6797 10c1 4F05     		.2byte	0x54f
 6798 10c3 97000000 		.4byte	0x97
 6799 10c7 02       		.uleb128 0x2
 6800 10c8 91       		.byte	0x91
 6801 10c9 77       		.sleb128 -9
 6802 10ca 00       		.byte	0
 6803 10cb 1B       		.uleb128 0x1b
 6804 10cc 5F637300 		.ascii	"_cs\000"
 6805 10d0 06       		.byte	0x6
 6806 10d1 9F       		.byte	0x9f
 6807 10d2 97000000 		.4byte	0x97
 6808 10d6 05       		.uleb128 0x5
 6809 10d7 03       		.byte	0x3
 6810 10d8 00000000 		.4byte	_cs
 6811 10dc 1C       		.uleb128 0x1c
 6812 10dd 760B0000 		.4byte	.LASF182
 6813 10e1 06       		.byte	0x6
 6814 10e2 9F       		.byte	0x9f
 6815 10e3 97000000 		.4byte	0x97
 6816 10e7 05       		.uleb128 0x5
 6817 10e8 03       		.byte	0x3
 6818 10e9 00000000 		.4byte	_rst
 6819 10ed 1C       		.uleb128 0x1c
 6820 10ee E4040000 		.4byte	.LASF183
 6821 10f2 06       		.byte	0x6
 6822 10f3 A0       		.byte	0xa0
 6823 10f4 AD000000 		.4byte	0xad
 6824 10f8 05       		.uleb128 0x5
 6825 10f9 03       		.byte	0x3
 6826 10fa 00000000 		.4byte	_width
 6827 10fe 1C       		.uleb128 0x1c
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 145


 6828 10ff CE0C0000 		.4byte	.LASF184
 6829 1103 06       		.byte	0x6
 6830 1104 A0       		.byte	0xa0
 6831 1105 AD000000 		.4byte	0xad
 6832 1109 05       		.uleb128 0x5
 6833 110a 03       		.byte	0x3
 6834 110b 00000000 		.4byte	_height
 6835 110f 1C       		.uleb128 0x1c
 6836 1110 37020000 		.4byte	.LASF185
 6837 1114 06       		.byte	0x6
 6838 1115 A1       		.byte	0xa1
 6839 1116 97000000 		.4byte	0x97
 6840 111a 05       		.uleb128 0x5
 6841 111b 03       		.byte	0x3
 6842 111c 00000000 		.4byte	_textScale
 6843 1120 1C       		.uleb128 0x1c
 6844 1121 7B0B0000 		.4byte	.LASF186
 6845 1125 06       		.byte	0x6
 6846 1126 A2       		.byte	0xa2
 6847 1127 DB020000 		.4byte	0x2db
 6848 112b 05       		.uleb128 0x5
 6849 112c 03       		.byte	0x3
 6850 112d 00000000 		.4byte	_size
 6851 1131 1C       		.uleb128 0x1c
 6852 1132 0C010000 		.4byte	.LASF187
 6853 1136 01       		.byte	0x1
 6854 1137 22       		.byte	0x22
 6855 1138 B8000000 		.4byte	0xb8
 6856 113c 05       		.uleb128 0x5
 6857 113d 03       		.byte	0x3
 6858 113e 00000000 		.4byte	spi_speed
 6859 1142 00       		.byte	0
 6860              		.section	.debug_abbrev,"",%progbits
 6861              	.Ldebug_abbrev0:
 6862 0000 01       		.uleb128 0x1
 6863 0001 11       		.uleb128 0x11
 6864 0002 01       		.byte	0x1
 6865 0003 25       		.uleb128 0x25
 6866 0004 0E       		.uleb128 0xe
 6867 0005 13       		.uleb128 0x13
 6868 0006 0B       		.uleb128 0xb
 6869 0007 03       		.uleb128 0x3
 6870 0008 0E       		.uleb128 0xe
 6871 0009 1B       		.uleb128 0x1b
 6872 000a 0E       		.uleb128 0xe
 6873 000b 55       		.uleb128 0x55
 6874 000c 17       		.uleb128 0x17
 6875 000d 11       		.uleb128 0x11
 6876 000e 01       		.uleb128 0x1
 6877 000f 10       		.uleb128 0x10
 6878 0010 17       		.uleb128 0x17
 6879 0011 00       		.byte	0
 6880 0012 00       		.byte	0
 6881 0013 02       		.uleb128 0x2
 6882 0014 24       		.uleb128 0x24
 6883 0015 00       		.byte	0
 6884 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 146


 6885 0017 0B       		.uleb128 0xb
 6886 0018 3E       		.uleb128 0x3e
 6887 0019 0B       		.uleb128 0xb
 6888 001a 03       		.uleb128 0x3
 6889 001b 0E       		.uleb128 0xe
 6890 001c 00       		.byte	0
 6891 001d 00       		.byte	0
 6892 001e 03       		.uleb128 0x3
 6893 001f 16       		.uleb128 0x16
 6894 0020 00       		.byte	0
 6895 0021 03       		.uleb128 0x3
 6896 0022 0E       		.uleb128 0xe
 6897 0023 3A       		.uleb128 0x3a
 6898 0024 0B       		.uleb128 0xb
 6899 0025 3B       		.uleb128 0x3b
 6900 0026 0B       		.uleb128 0xb
 6901 0027 49       		.uleb128 0x49
 6902 0028 13       		.uleb128 0x13
 6903 0029 00       		.byte	0
 6904 002a 00       		.byte	0
 6905 002b 04       		.uleb128 0x4
 6906 002c 24       		.uleb128 0x24
 6907 002d 00       		.byte	0
 6908 002e 0B       		.uleb128 0xb
 6909 002f 0B       		.uleb128 0xb
 6910 0030 3E       		.uleb128 0x3e
 6911 0031 0B       		.uleb128 0xb
 6912 0032 03       		.uleb128 0x3
 6913 0033 08       		.uleb128 0x8
 6914 0034 00       		.byte	0
 6915 0035 00       		.byte	0
 6916 0036 05       		.uleb128 0x5
 6917 0037 0F       		.uleb128 0xf
 6918 0038 00       		.byte	0
 6919 0039 0B       		.uleb128 0xb
 6920 003a 0B       		.uleb128 0xb
 6921 003b 49       		.uleb128 0x49
 6922 003c 13       		.uleb128 0x13
 6923 003d 00       		.byte	0
 6924 003e 00       		.byte	0
 6925 003f 06       		.uleb128 0x6
 6926 0040 26       		.uleb128 0x26
 6927 0041 00       		.byte	0
 6928 0042 49       		.uleb128 0x49
 6929 0043 13       		.uleb128 0x13
 6930 0044 00       		.byte	0
 6931 0045 00       		.byte	0
 6932 0046 07       		.uleb128 0x7
 6933 0047 04       		.uleb128 0x4
 6934 0048 01       		.byte	0x1
 6935 0049 0B       		.uleb128 0xb
 6936 004a 0B       		.uleb128 0xb
 6937 004b 49       		.uleb128 0x49
 6938 004c 13       		.uleb128 0x13
 6939 004d 3A       		.uleb128 0x3a
 6940 004e 0B       		.uleb128 0xb
 6941 004f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 147


 6942 0050 05       		.uleb128 0x5
 6943 0051 01       		.uleb128 0x1
 6944 0052 13       		.uleb128 0x13
 6945 0053 00       		.byte	0
 6946 0054 00       		.byte	0
 6947 0055 08       		.uleb128 0x8
 6948 0056 28       		.uleb128 0x28
 6949 0057 00       		.byte	0
 6950 0058 03       		.uleb128 0x3
 6951 0059 0E       		.uleb128 0xe
 6952 005a 1C       		.uleb128 0x1c
 6953 005b 0B       		.uleb128 0xb
 6954 005c 00       		.byte	0
 6955 005d 00       		.byte	0
 6956 005e 09       		.uleb128 0x9
 6957 005f 04       		.uleb128 0x4
 6958 0060 01       		.byte	0x1
 6959 0061 03       		.uleb128 0x3
 6960 0062 0E       		.uleb128 0xe
 6961 0063 0B       		.uleb128 0xb
 6962 0064 0B       		.uleb128 0xb
 6963 0065 49       		.uleb128 0x49
 6964 0066 13       		.uleb128 0x13
 6965 0067 3A       		.uleb128 0x3a
 6966 0068 0B       		.uleb128 0xb
 6967 0069 3B       		.uleb128 0x3b
 6968 006a 0B       		.uleb128 0xb
 6969 006b 01       		.uleb128 0x1
 6970 006c 13       		.uleb128 0x13
 6971 006d 00       		.byte	0
 6972 006e 00       		.byte	0
 6973 006f 0A       		.uleb128 0xa
 6974 0070 04       		.uleb128 0x4
 6975 0071 01       		.byte	0x1
 6976 0072 0B       		.uleb128 0xb
 6977 0073 0B       		.uleb128 0xb
 6978 0074 49       		.uleb128 0x49
 6979 0075 13       		.uleb128 0x13
 6980 0076 3A       		.uleb128 0x3a
 6981 0077 0B       		.uleb128 0xb
 6982 0078 3B       		.uleb128 0x3b
 6983 0079 0B       		.uleb128 0xb
 6984 007a 01       		.uleb128 0x1
 6985 007b 13       		.uleb128 0x13
 6986 007c 00       		.byte	0
 6987 007d 00       		.byte	0
 6988 007e 0B       		.uleb128 0xb
 6989 007f 2E       		.uleb128 0x2e
 6990 0080 01       		.byte	0x1
 6991 0081 3F       		.uleb128 0x3f
 6992 0082 19       		.uleb128 0x19
 6993 0083 03       		.uleb128 0x3
 6994 0084 0E       		.uleb128 0xe
 6995 0085 3A       		.uleb128 0x3a
 6996 0086 0B       		.uleb128 0xb
 6997 0087 3B       		.uleb128 0x3b
 6998 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 148


 6999 0089 27       		.uleb128 0x27
 7000 008a 19       		.uleb128 0x19
 7001 008b 49       		.uleb128 0x49
 7002 008c 13       		.uleb128 0x13
 7003 008d 11       		.uleb128 0x11
 7004 008e 01       		.uleb128 0x1
 7005 008f 12       		.uleb128 0x12
 7006 0090 06       		.uleb128 0x6
 7007 0091 40       		.uleb128 0x40
 7008 0092 18       		.uleb128 0x18
 7009 0093 9642     		.uleb128 0x2116
 7010 0095 19       		.uleb128 0x19
 7011 0096 01       		.uleb128 0x1
 7012 0097 13       		.uleb128 0x13
 7013 0098 00       		.byte	0
 7014 0099 00       		.byte	0
 7015 009a 0C       		.uleb128 0xc
 7016 009b 05       		.uleb128 0x5
 7017 009c 00       		.byte	0
 7018 009d 03       		.uleb128 0x3
 7019 009e 08       		.uleb128 0x8
 7020 009f 3A       		.uleb128 0x3a
 7021 00a0 0B       		.uleb128 0xb
 7022 00a1 3B       		.uleb128 0x3b
 7023 00a2 0B       		.uleb128 0xb
 7024 00a3 49       		.uleb128 0x49
 7025 00a4 13       		.uleb128 0x13
 7026 00a5 02       		.uleb128 0x2
 7027 00a6 18       		.uleb128 0x18
 7028 00a7 00       		.byte	0
 7029 00a8 00       		.byte	0
 7030 00a9 0D       		.uleb128 0xd
 7031 00aa 34       		.uleb128 0x34
 7032 00ab 00       		.byte	0
 7033 00ac 03       		.uleb128 0x3
 7034 00ad 08       		.uleb128 0x8
 7035 00ae 3A       		.uleb128 0x3a
 7036 00af 0B       		.uleb128 0xb
 7037 00b0 3B       		.uleb128 0x3b
 7038 00b1 0B       		.uleb128 0xb
 7039 00b2 49       		.uleb128 0x49
 7040 00b3 13       		.uleb128 0x13
 7041 00b4 02       		.uleb128 0x2
 7042 00b5 18       		.uleb128 0x18
 7043 00b6 00       		.byte	0
 7044 00b7 00       		.byte	0
 7045 00b8 0E       		.uleb128 0xe
 7046 00b9 2E       		.uleb128 0x2e
 7047 00ba 00       		.byte	0
 7048 00bb 3F       		.uleb128 0x3f
 7049 00bc 19       		.uleb128 0x19
 7050 00bd 03       		.uleb128 0x3
 7051 00be 0E       		.uleb128 0xe
 7052 00bf 3A       		.uleb128 0x3a
 7053 00c0 0B       		.uleb128 0xb
 7054 00c1 3B       		.uleb128 0x3b
 7055 00c2 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 149


 7056 00c3 27       		.uleb128 0x27
 7057 00c4 19       		.uleb128 0x19
 7058 00c5 11       		.uleb128 0x11
 7059 00c6 01       		.uleb128 0x1
 7060 00c7 12       		.uleb128 0x12
 7061 00c8 06       		.uleb128 0x6
 7062 00c9 40       		.uleb128 0x40
 7063 00ca 18       		.uleb128 0x18
 7064 00cb 9642     		.uleb128 0x2116
 7065 00cd 19       		.uleb128 0x19
 7066 00ce 00       		.byte	0
 7067 00cf 00       		.byte	0
 7068 00d0 0F       		.uleb128 0xf
 7069 00d1 2E       		.uleb128 0x2e
 7070 00d2 01       		.byte	0x1
 7071 00d3 3F       		.uleb128 0x3f
 7072 00d4 19       		.uleb128 0x19
 7073 00d5 03       		.uleb128 0x3
 7074 00d6 0E       		.uleb128 0xe
 7075 00d7 3A       		.uleb128 0x3a
 7076 00d8 0B       		.uleb128 0xb
 7077 00d9 3B       		.uleb128 0x3b
 7078 00da 0B       		.uleb128 0xb
 7079 00db 27       		.uleb128 0x27
 7080 00dc 19       		.uleb128 0x19
 7081 00dd 11       		.uleb128 0x11
 7082 00de 01       		.uleb128 0x1
 7083 00df 12       		.uleb128 0x12
 7084 00e0 06       		.uleb128 0x6
 7085 00e1 40       		.uleb128 0x40
 7086 00e2 18       		.uleb128 0x18
 7087 00e3 9642     		.uleb128 0x2116
 7088 00e5 19       		.uleb128 0x19
 7089 00e6 01       		.uleb128 0x1
 7090 00e7 13       		.uleb128 0x13
 7091 00e8 00       		.byte	0
 7092 00e9 00       		.byte	0
 7093 00ea 10       		.uleb128 0x10
 7094 00eb 34       		.uleb128 0x34
 7095 00ec 00       		.byte	0
 7096 00ed 03       		.uleb128 0x3
 7097 00ee 0E       		.uleb128 0xe
 7098 00ef 3A       		.uleb128 0x3a
 7099 00f0 0B       		.uleb128 0xb
 7100 00f1 3B       		.uleb128 0x3b
 7101 00f2 0B       		.uleb128 0xb
 7102 00f3 49       		.uleb128 0x49
 7103 00f4 13       		.uleb128 0x13
 7104 00f5 02       		.uleb128 0x2
 7105 00f6 18       		.uleb128 0x18
 7106 00f7 00       		.byte	0
 7107 00f8 00       		.byte	0
 7108 00f9 11       		.uleb128 0x11
 7109 00fa 2E       		.uleb128 0x2e
 7110 00fb 00       		.byte	0
 7111 00fc 3F       		.uleb128 0x3f
 7112 00fd 19       		.uleb128 0x19
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 150


 7113 00fe 03       		.uleb128 0x3
 7114 00ff 0E       		.uleb128 0xe
 7115 0100 3A       		.uleb128 0x3a
 7116 0101 0B       		.uleb128 0xb
 7117 0102 3B       		.uleb128 0x3b
 7118 0103 05       		.uleb128 0x5
 7119 0104 27       		.uleb128 0x27
 7120 0105 19       		.uleb128 0x19
 7121 0106 49       		.uleb128 0x49
 7122 0107 13       		.uleb128 0x13
 7123 0108 11       		.uleb128 0x11
 7124 0109 01       		.uleb128 0x1
 7125 010a 12       		.uleb128 0x12
 7126 010b 06       		.uleb128 0x6
 7127 010c 40       		.uleb128 0x40
 7128 010d 18       		.uleb128 0x18
 7129 010e 9742     		.uleb128 0x2117
 7130 0110 19       		.uleb128 0x19
 7131 0111 00       		.byte	0
 7132 0112 00       		.byte	0
 7133 0113 12       		.uleb128 0x12
 7134 0114 2E       		.uleb128 0x2e
 7135 0115 01       		.byte	0x1
 7136 0116 3F       		.uleb128 0x3f
 7137 0117 19       		.uleb128 0x19
 7138 0118 03       		.uleb128 0x3
 7139 0119 0E       		.uleb128 0xe
 7140 011a 3A       		.uleb128 0x3a
 7141 011b 0B       		.uleb128 0xb
 7142 011c 3B       		.uleb128 0x3b
 7143 011d 05       		.uleb128 0x5
 7144 011e 27       		.uleb128 0x27
 7145 011f 19       		.uleb128 0x19
 7146 0120 11       		.uleb128 0x11
 7147 0121 01       		.uleb128 0x1
 7148 0122 12       		.uleb128 0x12
 7149 0123 06       		.uleb128 0x6
 7150 0124 40       		.uleb128 0x40
 7151 0125 18       		.uleb128 0x18
 7152 0126 9642     		.uleb128 0x2116
 7153 0128 19       		.uleb128 0x19
 7154 0129 01       		.uleb128 0x1
 7155 012a 13       		.uleb128 0x13
 7156 012b 00       		.byte	0
 7157 012c 00       		.byte	0
 7158 012d 13       		.uleb128 0x13
 7159 012e 34       		.uleb128 0x34
 7160 012f 00       		.byte	0
 7161 0130 03       		.uleb128 0x3
 7162 0131 0E       		.uleb128 0xe
 7163 0132 3A       		.uleb128 0x3a
 7164 0133 0B       		.uleb128 0xb
 7165 0134 3B       		.uleb128 0x3b
 7166 0135 05       		.uleb128 0x5
 7167 0136 49       		.uleb128 0x49
 7168 0137 13       		.uleb128 0x13
 7169 0138 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 151


 7170 0139 18       		.uleb128 0x18
 7171 013a 00       		.byte	0
 7172 013b 00       		.byte	0
 7173 013c 14       		.uleb128 0x14
 7174 013d 05       		.uleb128 0x5
 7175 013e 00       		.byte	0
 7176 013f 03       		.uleb128 0x3
 7177 0140 08       		.uleb128 0x8
 7178 0141 3A       		.uleb128 0x3a
 7179 0142 0B       		.uleb128 0xb
 7180 0143 3B       		.uleb128 0x3b
 7181 0144 05       		.uleb128 0x5
 7182 0145 49       		.uleb128 0x49
 7183 0146 13       		.uleb128 0x13
 7184 0147 02       		.uleb128 0x2
 7185 0148 18       		.uleb128 0x18
 7186 0149 00       		.byte	0
 7187 014a 00       		.byte	0
 7188 014b 15       		.uleb128 0x15
 7189 014c 05       		.uleb128 0x5
 7190 014d 00       		.byte	0
 7191 014e 03       		.uleb128 0x3
 7192 014f 0E       		.uleb128 0xe
 7193 0150 3A       		.uleb128 0x3a
 7194 0151 0B       		.uleb128 0xb
 7195 0152 3B       		.uleb128 0x3b
 7196 0153 05       		.uleb128 0x5
 7197 0154 49       		.uleb128 0x49
 7198 0155 13       		.uleb128 0x13
 7199 0156 02       		.uleb128 0x2
 7200 0157 18       		.uleb128 0x18
 7201 0158 00       		.byte	0
 7202 0159 00       		.byte	0
 7203 015a 16       		.uleb128 0x16
 7204 015b 0B       		.uleb128 0xb
 7205 015c 01       		.byte	0x1
 7206 015d 11       		.uleb128 0x11
 7207 015e 01       		.uleb128 0x1
 7208 015f 12       		.uleb128 0x12
 7209 0160 06       		.uleb128 0x6
 7210 0161 00       		.byte	0
 7211 0162 00       		.byte	0
 7212 0163 17       		.uleb128 0x17
 7213 0164 34       		.uleb128 0x34
 7214 0165 00       		.byte	0
 7215 0166 03       		.uleb128 0x3
 7216 0167 08       		.uleb128 0x8
 7217 0168 3A       		.uleb128 0x3a
 7218 0169 0B       		.uleb128 0xb
 7219 016a 3B       		.uleb128 0x3b
 7220 016b 05       		.uleb128 0x5
 7221 016c 49       		.uleb128 0x49
 7222 016d 13       		.uleb128 0x13
 7223 016e 02       		.uleb128 0x2
 7224 016f 18       		.uleb128 0x18
 7225 0170 00       		.byte	0
 7226 0171 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 152


 7227 0172 18       		.uleb128 0x18
 7228 0173 2E       		.uleb128 0x2e
 7229 0174 01       		.byte	0x1
 7230 0175 3F       		.uleb128 0x3f
 7231 0176 19       		.uleb128 0x19
 7232 0177 03       		.uleb128 0x3
 7233 0178 0E       		.uleb128 0xe
 7234 0179 3A       		.uleb128 0x3a
 7235 017a 0B       		.uleb128 0xb
 7236 017b 3B       		.uleb128 0x3b
 7237 017c 05       		.uleb128 0x5
 7238 017d 27       		.uleb128 0x27
 7239 017e 19       		.uleb128 0x19
 7240 017f 49       		.uleb128 0x49
 7241 0180 13       		.uleb128 0x13
 7242 0181 11       		.uleb128 0x11
 7243 0182 01       		.uleb128 0x1
 7244 0183 12       		.uleb128 0x12
 7245 0184 06       		.uleb128 0x6
 7246 0185 40       		.uleb128 0x40
 7247 0186 18       		.uleb128 0x18
 7248 0187 9642     		.uleb128 0x2116
 7249 0189 19       		.uleb128 0x19
 7250 018a 01       		.uleb128 0x1
 7251 018b 13       		.uleb128 0x13
 7252 018c 00       		.byte	0
 7253 018d 00       		.byte	0
 7254 018e 19       		.uleb128 0x19
 7255 018f 2E       		.uleb128 0x2e
 7256 0190 00       		.byte	0
 7257 0191 3F       		.uleb128 0x3f
 7258 0192 19       		.uleb128 0x19
 7259 0193 03       		.uleb128 0x3
 7260 0194 0E       		.uleb128 0xe
 7261 0195 3A       		.uleb128 0x3a
 7262 0196 0B       		.uleb128 0xb
 7263 0197 3B       		.uleb128 0x3b
 7264 0198 05       		.uleb128 0x5
 7265 0199 27       		.uleb128 0x27
 7266 019a 19       		.uleb128 0x19
 7267 019b 11       		.uleb128 0x11
 7268 019c 01       		.uleb128 0x1
 7269 019d 12       		.uleb128 0x12
 7270 019e 06       		.uleb128 0x6
 7271 019f 40       		.uleb128 0x40
 7272 01a0 18       		.uleb128 0x18
 7273 01a1 9642     		.uleb128 0x2116
 7274 01a3 19       		.uleb128 0x19
 7275 01a4 00       		.byte	0
 7276 01a5 00       		.byte	0
 7277 01a6 1A       		.uleb128 0x1a
 7278 01a7 2E       		.uleb128 0x2e
 7279 01a8 00       		.byte	0
 7280 01a9 3F       		.uleb128 0x3f
 7281 01aa 19       		.uleb128 0x19
 7282 01ab 03       		.uleb128 0x3
 7283 01ac 0E       		.uleb128 0xe
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 153


 7284 01ad 3A       		.uleb128 0x3a
 7285 01ae 0B       		.uleb128 0xb
 7286 01af 3B       		.uleb128 0x3b
 7287 01b0 05       		.uleb128 0x5
 7288 01b1 27       		.uleb128 0x27
 7289 01b2 19       		.uleb128 0x19
 7290 01b3 49       		.uleb128 0x49
 7291 01b4 13       		.uleb128 0x13
 7292 01b5 11       		.uleb128 0x11
 7293 01b6 01       		.uleb128 0x1
 7294 01b7 12       		.uleb128 0x12
 7295 01b8 06       		.uleb128 0x6
 7296 01b9 40       		.uleb128 0x40
 7297 01ba 18       		.uleb128 0x18
 7298 01bb 9642     		.uleb128 0x2116
 7299 01bd 19       		.uleb128 0x19
 7300 01be 00       		.byte	0
 7301 01bf 00       		.byte	0
 7302 01c0 1B       		.uleb128 0x1b
 7303 01c1 34       		.uleb128 0x34
 7304 01c2 00       		.byte	0
 7305 01c3 03       		.uleb128 0x3
 7306 01c4 08       		.uleb128 0x8
 7307 01c5 3A       		.uleb128 0x3a
 7308 01c6 0B       		.uleb128 0xb
 7309 01c7 3B       		.uleb128 0x3b
 7310 01c8 0B       		.uleb128 0xb
 7311 01c9 49       		.uleb128 0x49
 7312 01ca 13       		.uleb128 0x13
 7313 01cb 3F       		.uleb128 0x3f
 7314 01cc 19       		.uleb128 0x19
 7315 01cd 02       		.uleb128 0x2
 7316 01ce 18       		.uleb128 0x18
 7317 01cf 00       		.byte	0
 7318 01d0 00       		.byte	0
 7319 01d1 1C       		.uleb128 0x1c
 7320 01d2 34       		.uleb128 0x34
 7321 01d3 00       		.byte	0
 7322 01d4 03       		.uleb128 0x3
 7323 01d5 0E       		.uleb128 0xe
 7324 01d6 3A       		.uleb128 0x3a
 7325 01d7 0B       		.uleb128 0xb
 7326 01d8 3B       		.uleb128 0x3b
 7327 01d9 0B       		.uleb128 0xb
 7328 01da 49       		.uleb128 0x49
 7329 01db 13       		.uleb128 0x13
 7330 01dc 3F       		.uleb128 0x3f
 7331 01dd 19       		.uleb128 0x19
 7332 01de 02       		.uleb128 0x2
 7333 01df 18       		.uleb128 0x18
 7334 01e0 00       		.byte	0
 7335 01e1 00       		.byte	0
 7336 01e2 00       		.byte	0
 7337              		.section	.debug_aranges,"",%progbits
 7338 0000 BC010000 		.4byte	0x1bc
 7339 0004 0200     		.2byte	0x2
 7340 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 154


 7341 000a 04       		.byte	0x4
 7342 000b 00       		.byte	0
 7343 000c 0000     		.2byte	0
 7344 000e 0000     		.2byte	0
 7345 0010 00000000 		.4byte	.LFB35
 7346 0014 A0000000 		.4byte	.LFE35-.LFB35
 7347 0018 00000000 		.4byte	.LFB36
 7348 001c 22000000 		.4byte	.LFE36-.LFB36
 7349 0020 00000000 		.4byte	.LFB37
 7350 0024 50000000 		.4byte	.LFE37-.LFB37
 7351 0028 00000000 		.4byte	.LFB38
 7352 002c 3C020000 		.4byte	.LFE38-.LFB38
 7353 0030 00000000 		.4byte	.LFB39
 7354 0034 14000000 		.4byte	.LFE39-.LFB39
 7355 0038 00000000 		.4byte	.LFB40
 7356 003c 14000000 		.4byte	.LFE40-.LFB40
 7357 0040 00000000 		.4byte	.LFB41
 7358 0044 54000000 		.4byte	.LFE41-.LFB41
 7359 0048 00000000 		.4byte	.LFB42
 7360 004c 6A000000 		.4byte	.LFE42-.LFB42
 7361 0050 00000000 		.4byte	.LFB43
 7362 0054 D8000000 		.4byte	.LFE43-.LFB43
 7363 0058 00000000 		.4byte	.LFB44
 7364 005c 8A000000 		.4byte	.LFE44-.LFB44
 7365 0060 00000000 		.4byte	.LFB45
 7366 0064 88000000 		.4byte	.LFE45-.LFB45
 7367 0068 00000000 		.4byte	.LFB46
 7368 006c 7C000000 		.4byte	.LFE46-.LFB46
 7369 0070 00000000 		.4byte	.LFB47
 7370 0074 34000000 		.4byte	.LFE47-.LFB47
 7371 0078 00000000 		.4byte	.LFB48
 7372 007c 40000000 		.4byte	.LFE48-.LFB48
 7373 0080 00000000 		.4byte	.LFB49
 7374 0084 5A000000 		.4byte	.LFE49-.LFB49
 7375 0088 00000000 		.4byte	.LFB50
 7376 008c 48000000 		.4byte	.LFE50-.LFB50
 7377 0090 00000000 		.4byte	.LFB51
 7378 0094 1C000000 		.4byte	.LFE51-.LFB51
 7379 0098 00000000 		.4byte	.LFB52
 7380 009c 96000000 		.4byte	.LFE52-.LFB52
 7381 00a0 00000000 		.4byte	.LFB53
 7382 00a4 38010000 		.4byte	.LFE53-.LFB53
 7383 00a8 00000000 		.4byte	.LFB54
 7384 00ac 5A000000 		.4byte	.LFE54-.LFB54
 7385 00b0 00000000 		.4byte	.LFB55
 7386 00b4 5A000000 		.4byte	.LFE55-.LFB55
 7387 00b8 00000000 		.4byte	.LFB56
 7388 00bc 6A000000 		.4byte	.LFE56-.LFB56
 7389 00c0 00000000 		.4byte	.LFB57
 7390 00c4 6A000000 		.4byte	.LFE57-.LFB57
 7391 00c8 00000000 		.4byte	.LFB58
 7392 00cc 44000000 		.4byte	.LFE58-.LFB58
 7393 00d0 00000000 		.4byte	.LFB59
 7394 00d4 4E000000 		.4byte	.LFE59-.LFB59
 7395 00d8 00000000 		.4byte	.LFB60
 7396 00dc 4E000000 		.4byte	.LFE60-.LFB60
 7397 00e0 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 155


 7398 00e4 6C000000 		.4byte	.LFE61-.LFB61
 7399 00e8 00000000 		.4byte	.LFB62
 7400 00ec 6C000000 		.4byte	.LFE62-.LFB62
 7401 00f0 00000000 		.4byte	.LFB63
 7402 00f4 58000000 		.4byte	.LFE63-.LFB63
 7403 00f8 00000000 		.4byte	.LFB64
 7404 00fc 58000000 		.4byte	.LFE64-.LFB64
 7405 0100 00000000 		.4byte	.LFB65
 7406 0104 60000000 		.4byte	.LFE65-.LFB65
 7407 0108 00000000 		.4byte	.LFB66
 7408 010c 60000000 		.4byte	.LFE66-.LFB66
 7409 0110 00000000 		.4byte	.LFB67
 7410 0114 02010000 		.4byte	.LFE67-.LFB67
 7411 0118 00000000 		.4byte	.LFB68
 7412 011c 4A010000 		.4byte	.LFE68-.LFB68
 7413 0120 00000000 		.4byte	.LFB69
 7414 0124 A6010000 		.4byte	.LFE69-.LFB69
 7415 0128 00000000 		.4byte	.LFB70
 7416 012c 4A010000 		.4byte	.LFE70-.LFB70
 7417 0130 00000000 		.4byte	.LFB71
 7418 0134 7A010000 		.4byte	.LFE71-.LFB71
 7419 0138 00000000 		.4byte	.LFB72
 7420 013c 2E000000 		.4byte	.LFE72-.LFB72
 7421 0140 00000000 		.4byte	.LFB73
 7422 0144 20000000 		.4byte	.LFE73-.LFB73
 7423 0148 00000000 		.4byte	.LFB74
 7424 014c 20000000 		.4byte	.LFE74-.LFB74
 7425 0150 00000000 		.4byte	.LFB75
 7426 0154 54000000 		.4byte	.LFE75-.LFB75
 7427 0158 00000000 		.4byte	.LFB76
 7428 015c 54000000 		.4byte	.LFE76-.LFB76
 7429 0160 00000000 		.4byte	.LFB77
 7430 0164 94000000 		.4byte	.LFE77-.LFB77
 7431 0168 00000000 		.4byte	.LFB78
 7432 016c 20000000 		.4byte	.LFE78-.LFB78
 7433 0170 00000000 		.4byte	.LFB79
 7434 0174 BE000000 		.4byte	.LFE79-.LFB79
 7435 0178 00000000 		.4byte	.LFB80
 7436 017c 2E000000 		.4byte	.LFE80-.LFB80
 7437 0180 00000000 		.4byte	.LFB81
 7438 0184 2E000000 		.4byte	.LFE81-.LFB81
 7439 0188 00000000 		.4byte	.LFB82
 7440 018c 2E000000 		.4byte	.LFE82-.LFB82
 7441 0190 00000000 		.4byte	.LFB83
 7442 0194 24000000 		.4byte	.LFE83-.LFB83
 7443 0198 00000000 		.4byte	.LFB84
 7444 019c 38000000 		.4byte	.LFE84-.LFB84
 7445 01a0 00000000 		.4byte	.LFB85
 7446 01a4 4E000000 		.4byte	.LFE85-.LFB85
 7447 01a8 00000000 		.4byte	.LFB86
 7448 01ac 38000000 		.4byte	.LFE86-.LFB86
 7449 01b0 00000000 		.4byte	.LFB87
 7450 01b4 36000000 		.4byte	.LFE87-.LFB87
 7451 01b8 00000000 		.4byte	0
 7452 01bc 00000000 		.4byte	0
 7453              		.section	.debug_ranges,"",%progbits
 7454              	.Ldebug_ranges0:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 156


 7455 0000 00000000 		.4byte	.LFB35
 7456 0004 A0000000 		.4byte	.LFE35
 7457 0008 00000000 		.4byte	.LFB36
 7458 000c 22000000 		.4byte	.LFE36
 7459 0010 00000000 		.4byte	.LFB37
 7460 0014 50000000 		.4byte	.LFE37
 7461 0018 00000000 		.4byte	.LFB38
 7462 001c 3C020000 		.4byte	.LFE38
 7463 0020 00000000 		.4byte	.LFB39
 7464 0024 14000000 		.4byte	.LFE39
 7465 0028 00000000 		.4byte	.LFB40
 7466 002c 14000000 		.4byte	.LFE40
 7467 0030 00000000 		.4byte	.LFB41
 7468 0034 54000000 		.4byte	.LFE41
 7469 0038 00000000 		.4byte	.LFB42
 7470 003c 6A000000 		.4byte	.LFE42
 7471 0040 00000000 		.4byte	.LFB43
 7472 0044 D8000000 		.4byte	.LFE43
 7473 0048 00000000 		.4byte	.LFB44
 7474 004c 8A000000 		.4byte	.LFE44
 7475 0050 00000000 		.4byte	.LFB45
 7476 0054 88000000 		.4byte	.LFE45
 7477 0058 00000000 		.4byte	.LFB46
 7478 005c 7C000000 		.4byte	.LFE46
 7479 0060 00000000 		.4byte	.LFB47
 7480 0064 34000000 		.4byte	.LFE47
 7481 0068 00000000 		.4byte	.LFB48
 7482 006c 40000000 		.4byte	.LFE48
 7483 0070 00000000 		.4byte	.LFB49
 7484 0074 5A000000 		.4byte	.LFE49
 7485 0078 00000000 		.4byte	.LFB50
 7486 007c 48000000 		.4byte	.LFE50
 7487 0080 00000000 		.4byte	.LFB51
 7488 0084 1C000000 		.4byte	.LFE51
 7489 0088 00000000 		.4byte	.LFB52
 7490 008c 96000000 		.4byte	.LFE52
 7491 0090 00000000 		.4byte	.LFB53
 7492 0094 38010000 		.4byte	.LFE53
 7493 0098 00000000 		.4byte	.LFB54
 7494 009c 5A000000 		.4byte	.LFE54
 7495 00a0 00000000 		.4byte	.LFB55
 7496 00a4 5A000000 		.4byte	.LFE55
 7497 00a8 00000000 		.4byte	.LFB56
 7498 00ac 6A000000 		.4byte	.LFE56
 7499 00b0 00000000 		.4byte	.LFB57
 7500 00b4 6A000000 		.4byte	.LFE57
 7501 00b8 00000000 		.4byte	.LFB58
 7502 00bc 44000000 		.4byte	.LFE58
 7503 00c0 00000000 		.4byte	.LFB59
 7504 00c4 4E000000 		.4byte	.LFE59
 7505 00c8 00000000 		.4byte	.LFB60
 7506 00cc 4E000000 		.4byte	.LFE60
 7507 00d0 00000000 		.4byte	.LFB61
 7508 00d4 6C000000 		.4byte	.LFE61
 7509 00d8 00000000 		.4byte	.LFB62
 7510 00dc 6C000000 		.4byte	.LFE62
 7511 00e0 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 157


 7512 00e4 58000000 		.4byte	.LFE63
 7513 00e8 00000000 		.4byte	.LFB64
 7514 00ec 58000000 		.4byte	.LFE64
 7515 00f0 00000000 		.4byte	.LFB65
 7516 00f4 60000000 		.4byte	.LFE65
 7517 00f8 00000000 		.4byte	.LFB66
 7518 00fc 60000000 		.4byte	.LFE66
 7519 0100 00000000 		.4byte	.LFB67
 7520 0104 02010000 		.4byte	.LFE67
 7521 0108 00000000 		.4byte	.LFB68
 7522 010c 4A010000 		.4byte	.LFE68
 7523 0110 00000000 		.4byte	.LFB69
 7524 0114 A6010000 		.4byte	.LFE69
 7525 0118 00000000 		.4byte	.LFB70
 7526 011c 4A010000 		.4byte	.LFE70
 7527 0120 00000000 		.4byte	.LFB71
 7528 0124 7A010000 		.4byte	.LFE71
 7529 0128 00000000 		.4byte	.LFB72
 7530 012c 2E000000 		.4byte	.LFE72
 7531 0130 00000000 		.4byte	.LFB73
 7532 0134 20000000 		.4byte	.LFE73
 7533 0138 00000000 		.4byte	.LFB74
 7534 013c 20000000 		.4byte	.LFE74
 7535 0140 00000000 		.4byte	.LFB75
 7536 0144 54000000 		.4byte	.LFE75
 7537 0148 00000000 		.4byte	.LFB76
 7538 014c 54000000 		.4byte	.LFE76
 7539 0150 00000000 		.4byte	.LFB77
 7540 0154 94000000 		.4byte	.LFE77
 7541 0158 00000000 		.4byte	.LFB78
 7542 015c 20000000 		.4byte	.LFE78
 7543 0160 00000000 		.4byte	.LFB79
 7544 0164 BE000000 		.4byte	.LFE79
 7545 0168 00000000 		.4byte	.LFB80
 7546 016c 2E000000 		.4byte	.LFE80
 7547 0170 00000000 		.4byte	.LFB81
 7548 0174 2E000000 		.4byte	.LFE81
 7549 0178 00000000 		.4byte	.LFB82
 7550 017c 2E000000 		.4byte	.LFE82
 7551 0180 00000000 		.4byte	.LFB83
 7552 0184 24000000 		.4byte	.LFE83
 7553 0188 00000000 		.4byte	.LFB84
 7554 018c 38000000 		.4byte	.LFE84
 7555 0190 00000000 		.4byte	.LFB85
 7556 0194 4E000000 		.4byte	.LFE85
 7557 0198 00000000 		.4byte	.LFB86
 7558 019c 38000000 		.4byte	.LFE86
 7559 01a0 00000000 		.4byte	.LFB87
 7560 01a4 36000000 		.4byte	.LFE87
 7561 01a8 00000000 		.4byte	0
 7562 01ac 00000000 		.4byte	0
 7563              		.section	.debug_line,"",%progbits
 7564              	.Ldebug_line0:
 7565 0000 ED060000 		.section	.debug_str,"MS",%progbits,1
 7565      02006801 
 7565      00000201 
 7565      FB0E0D00 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 158


 7565      01010101 
 7566              	.LASF63:
 7567 0000 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BLOB_RSP\000"
 7567      455F4556 
 7567      545F4741 
 7567      5454435F 
 7567      52454144 
 7568              	.LASF126:
 7569 001e 7363616C 		.ascii	"scale\000"
 7569      6500
 7570              	.LASF134:
 7571 0024 73657458 		.ascii	"setXY\000"
 7571      5900
 7572              	.LASF39:
 7573 002a 4359424C 		.ascii	"CYBLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 7573      455F4556 
 7573      545F4741 
 7573      505F434F 
 7573      4E4E4543 
 7574              	.LASF84:
 7575 0053 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 7575      455F4556 
 7575      545F4C32 
 7575      4341505F 
 7575      43424643 
 7576              	.LASF27:
 7577 0074 4359424C 		.ascii	"CYBLE_EVT_STACK_BUSY_STATUS\000"
 7577      455F4556 
 7577      545F5354 
 7577      41434B5F 
 7577      42555359 
 7578              	.LASF120:
 7579 0090 74657874 		.ascii	"textSetCursor\000"
 7579      53657443 
 7579      7572736F 
 7579      7200
 7580              	.LASF2:
 7581 009e 5F5F7569 		.ascii	"__uint8_t\000"
 7581      6E74385F 
 7581      7400
 7582              	.LASF175:
 7583 00a8 736C6565 		.ascii	"sleep\000"
 7583      7000
 7584              	.LASF160:
 7585 00ae 72656374 		.ascii	"rectHelper\000"
 7585      48656C70 
 7585      657200
 7586              	.LASF24:
 7587 00b9 4359424C 		.ascii	"CYBLE_EVT_TIMEOUT\000"
 7587      455F4556 
 7587      545F5449 
 7587      4D454F55 
 7587      5400
 7588              	.LASF7:
 7589 00cb 6C6F6E67 		.ascii	"long int\000"
 7589      20696E74 
 7589      00
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 159


 7590              	.LASF11:
 7591 00d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 7591      206C6F6E 
 7591      6720756E 
 7591      7369676E 
 7591      65642069 
 7592              	.LASF114:
 7593 00eb 7673796E 		.ascii	"vsync_start\000"
 7593      635F7374 
 7593      61727400 
 7594              	.LASF26:
 7595 00f7 4359424C 		.ascii	"CYBLE_EVT_HCI_STATUS\000"
 7595      455F4556 
 7595      545F4843 
 7595      495F5354 
 7595      41545553 
 7596              	.LASF187:
 7597 010c 7370695F 		.ascii	"spi_speed\000"
 7597      73706565 
 7597      6400
 7598              	.LASF127:
 7599 0116 74657874 		.ascii	"textWrite\000"
 7599      57726974 
 7599      6500
 7600              	.LASF89:
 7601 0120 4359424C 		.ascii	"CYBLE_EVT_PENDING_FLASH_WRITE\000"
 7601      455F4556 
 7601      545F5045 
 7601      4E44494E 
 7601      475F464C 
 7602              	.LASF78:
 7603 013e 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 7603      455F4556 
 7603      545F4C32 
 7603      4341505F 
 7603      434F4E4E 
 7604              	.LASF37:
 7605 0164 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 7605      455F4556 
 7605      545F4741 
 7605      505F4445 
 7605      56494345 
 7606              	.LASF150:
 7607 0186 7843656E 		.ascii	"xCenter\000"
 7607      74657200 
 7608              	.LASF42:
 7609 018e 4359424C 		.ascii	"CYBLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 7609      455F4556 
 7609      545F4741 
 7609      505F4E55 
 7609      4D455249 
 7610              	.LASF87:
 7611 01b7 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 7611      455F4556 
 7611      545F4C32 
 7611      4341505F 
 7611      43424643 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 160


 7612              	.LASF14:
 7613 01da 696E7431 		.ascii	"int16_t\000"
 7613      365F7400 
 7614              	.LASF131:
 7615 01e2 77616974 		.ascii	"waitPoll\000"
 7615      506F6C6C 
 7615      00
 7616              	.LASF10:
 7617 01eb 6C6F6E67 		.ascii	"long long int\000"
 7617      206C6F6E 
 7617      6720696E 
 7617      7400
 7618              	.LASF0:
 7619 01f9 7369676E 		.ascii	"signed char\000"
 7619      65642063 
 7619      68617200 
 7620              	.LASF23:
 7621 0205 4359424C 		.ascii	"CYBLE_EVT_STACK_ON\000"
 7621      455F4556 
 7621      545F5354 
 7621      41434B5F 
 7621      4F4E00
 7622              	.LASF40:
 7623 0218 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_START_STOP\000"
 7623      455F4556 
 7623      545F4741 
 7623      50435F53 
 7623      43414E5F 
 7624              	.LASF185:
 7625 0237 5F746578 		.ascii	"_textScale\000"
 7625      74536361 
 7625      6C6500
 7626              	.LASF30:
 7627 0242 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ\000"
 7627      455F4556 
 7627      545F4741 
 7627      505F4155 
 7627      54485F52 
 7628              	.LASF62:
 7629 0259 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_RSP\000"
 7629      455F4556 
 7629      545F4741 
 7629      5454435F 
 7629      52454144 
 7630              	.LASF112:
 7631 0272 7673796E 		.ascii	"vsync_pw\000"
 7631      635F7077 
 7631      00
 7632              	.LASF152:
 7633 027b 6C6F6E67 		.ascii	"longAxis\000"
 7633      41786973 
 7633      00
 7634              	.LASF167:
 7635 0284 50574D31 		.ascii	"PWM1config\000"
 7635      636F6E66 
 7635      696700
 7636              	.LASF105:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 161


 7637 028f 736F6674 		.ascii	"softReset\000"
 7637      52657365 
 7637      7400
 7638              	.LASF35:
 7639 0299 4359424C 		.ascii	"CYBLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 7639      455F4556 
 7639      545F4741 
 7639      50505F41 
 7639      44564552 
 7640              	.LASF177:
 7641 02c1 72656164 		.ascii	"readReg\000"
 7641      52656700 
 7642              	.LASF132:
 7643 02c9 7265676E 		.ascii	"regname\000"
 7643      616D6500 
 7644              	.LASF15:
 7645 02d1 75696E74 		.ascii	"uint16_t\000"
 7645      31365F74 
 7645      00
 7646              	.LASF159:
 7647 02da 66696C6C 		.ascii	"filled\000"
 7647      656400
 7648              	.LASF18:
 7649 02e1 646F7562 		.ascii	"double\000"
 7649      6C6500
 7650              	.LASF97:
 7651 02e8 4359424C 		.ascii	"CYBLE_SRVI_CUSTOMS_END\000"
 7651      455F5352 
 7651      56495F43 
 7651      5553544F 
 7651      4D535F45 
 7652              	.LASF128:
 7653 02ff 62756666 		.ascii	"buffer\000"
 7653      657200
 7654              	.LASF171:
 7655 0306 61646343 		.ascii	"adcClk\000"
 7655      6C6B00
 7656              	.LASF139:
 7657 030d 64726177 		.ascii	"drawLine\000"
 7657      4C696E65 
 7657      00
 7658              	.LASF148:
 7659 0316 66696C6C 		.ascii	"fillTriangle\000"
 7659      54726961 
 7659      6E676C65 
 7659      00
 7660              	.LASF146:
 7661 0323 66696C6C 		.ascii	"fillCircle\000"
 7661      43697263 
 7661      6C6500
 7662              	.LASF93:
 7663 032e 4359424C 		.ascii	"CYBLE_EVT_MAX\000"
 7663      455F4556 
 7663      545F4D41 
 7663      5800
 7664              	.LASF8:
 7665 033c 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 162


 7665      6E743332 
 7665      5F7400
 7666              	.LASF154:
 7667 0347 66696C6C 		.ascii	"fillEllipse\000"
 7667      456C6C69 
 7667      70736500 
 7668              	.LASF3:
 7669 0353 5F5F696E 		.ascii	"__int16_t\000"
 7669      7431365F 
 7669      7400
 7670              	.LASF88:
 7671 035d 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 7671      455F4556 
 7671      545F4C32 
 7671      4341505F 
 7671      43424643 
 7672              	.LASF50:
 7673 0381 4359424C 		.ascii	"CYBLE_EVT_GAP_SCAN_REQ_RECVD\000"
 7673      455F4556 
 7673      545F4741 
 7673      505F5343 
 7673      414E5F52 
 7674              	.LASF119:
 7675 039e 74656D70 		.ascii	"temp\000"
 7675      00
 7676              	.LASF140:
 7677 03a3 64726177 		.ascii	"drawFastVLine\000"
 7677      46617374 
 7677      564C696E 
 7677      6500
 7678              	.LASF77:
 7679 03b1 4359424C 		.ascii	"CYBLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 7679      455F4556 
 7679      545F4741 
 7679      5454435F 
 7679      4C4F4E47 
 7680              	.LASF75:
 7681 03d4 4359424C 		.ascii	"CYBLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 7681      455F4556 
 7681      545F4741 
 7681      5454435F 
 7681      53544F50 
 7682              	.LASF12:
 7683 03f6 756E7369 		.ascii	"unsigned int\000"
 7683      676E6564 
 7683      20696E74 
 7683      00
 7684              	.LASF90:
 7685 0403 4359424C 		.ascii	"CYBLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 7685      455F4556 
 7685      545F4C45 
 7685      5F50494E 
 7685      475F4155 
 7686              	.LASF59:
 7687 0422 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 7687      455F4556 
 7687      545F4741 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 163


 7687      5454435F 
 7687      52454144 
 7688              	.LASF130:
 7689 0443 62656769 		.ascii	"begin\000"
 7689      6E00
 7690              	.LASF155:
 7691 0449 64726177 		.ascii	"drawCurve\000"
 7691      43757276 
 7691      6500
 7692              	.LASF180:
 7693 0453 77726974 		.ascii	"writeCommand\000"
 7693      65436F6D 
 7693      6D616E64 
 7693      00
 7694              	.LASF9:
 7695 0460 6C6F6E67 		.ascii	"long unsigned int\000"
 7695      20756E73 
 7695      69676E65 
 7695      6420696E 
 7695      7400
 7696              	.LASF49:
 7697 0472 4359424C 		.ascii	"CYBLE_EVT_GAP_CONN_ESTB\000"
 7697      455F4556 
 7697      545F4741 
 7697      505F434F 
 7697      4E4E5F45 
 7698              	.LASF162:
 7699 048a 656C6C69 		.ascii	"ellipseHelper\000"
 7699      70736548 
 7699      656C7065 
 7699      7200
 7700              	.LASF57:
 7701 0498 4359424C 		.ascii	"CYBLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 7701      455F4556 
 7701      545F4741 
 7701      5454435F 
 7701      5843484E 
 7702              	.LASF74:
 7703 04b6 4359424C 		.ascii	"CYBLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 7703      455F4556 
 7703      545F4741 
 7703      5454535F 
 7703      44415441 
 7704              	.LASF156:
 7705 04da 63757276 		.ascii	"curvePart\000"
 7705      65506172 
 7705      7400
 7706              	.LASF183:
 7707 04e4 5F776964 		.ascii	"_width\000"
 7707      746800
 7708              	.LASF163:
 7709 04eb 63757276 		.ascii	"curveHelper\000"
 7709      6548656C 
 7709      70657200 
 7710              	.LASF115:
 7711 04f7 77696474 		.ascii	"width\000"
 7711      6800
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 164


 7712              	.LASF136:
 7713 04fd 66696C6C 		.ascii	"fillRect1\000"
 7713      52656374 
 7713      3100
 7714              	.LASF106:
 7715 0507 504C4C69 		.ascii	"PLLinit\000"
 7715      6E697400 
 7716              	.LASF6:
 7717 050f 73686F72 		.ascii	"short unsigned int\000"
 7717      7420756E 
 7717      7369676E 
 7717      65642069 
 7717      6E7400
 7718              	.LASF22:
 7719 0522 4359424C 		.ascii	"CYBLE_EVT_HOST_INVALID\000"
 7719      455F4556 
 7719      545F484F 
 7719      53545F49 
 7719      4E56414C 
 7720              	.LASF60:
 7721 0539 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_INFO_RSP\000"
 7721      455F4556 
 7721      545F4741 
 7721      5454435F 
 7721      46494E44 
 7722              	.LASF28:
 7723 0557 4359424C 		.ascii	"CYBLE_EVT_MEMORY_REQUEST\000"
 7723      455F4556 
 7723      545F4D45 
 7723      4D4F5259 
 7723      5F524551 
 7724              	.LASF69:
 7725 0570 4359424C 		.ascii	"CYBLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 7725      455F4556 
 7725      545F4741 
 7725      5454535F 
 7725      45584543 
 7726              	.LASF31:
 7727 058f 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 7727      455F4556 
 7727      545F4741 
 7727      505F5041 
 7727      53534B45 
 7728              	.LASF36:
 7729 05b3 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_CONNECTED\000"
 7729      455F4556 
 7729      545F4741 
 7729      505F4445 
 7729      56494345 
 7730              	.LASF129:
 7731 05d2 67726170 		.ascii	"graphicsMode\000"
 7731      68696373 
 7731      4D6F6465 
 7731      00
 7732              	.LASF72:
 7733 05df 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 7733      455F4556 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 165


 7733      545F4741 
 7733      5454435F 
 7733      48414E44 
 7734              	.LASF65:
 7735 0600 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_REQ\000"
 7735      455F4556 
 7735      545F4741 
 7735      5454535F 
 7735      57524954 
 7736              	.LASF51:
 7737 061a 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ_REPLY_ERR\000"
 7737      455F4556 
 7737      545F4741 
 7737      505F4155 
 7737      54485F52 
 7738              	.LASF104:
 7739 063b 626F6F6C 		.ascii	"bool\000"
 7739      00
 7740              	.LASF52:
 7741 0640 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_LOC_P256_KEYS_GEN_AND_SET_COMPLET"
 7741      455F4556 
 7741      545F4741 
 7741      505F534D 
 7741      505F4C4F 
 7742 0673 4500     		.ascii	"E\000"
 7743              	.LASF67:
 7744 0675 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_CMD_REQ\000"
 7744      455F4556 
 7744      545F4741 
 7744      5454535F 
 7744      57524954 
 7745              	.LASF122:
 7746 0693 666F7265 		.ascii	"foreColor\000"
 7746      436F6C6F 
 7746      7200
 7747              	.LASF188:
 7748 069d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7748      43313120 
 7748      352E342E 
 7748      31203230 
 7748      31363036 
 7749 06d0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 7749      20726576 
 7749      6973696F 
 7749      6E203233 
 7749      37373135 
 7750 0703 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7750      66756E63 
 7750      74696F6E 
 7750      2D736563 
 7750      74696F6E 
 7751              	.LASF149:
 7752 072b 64726177 		.ascii	"drawEllipse\000"
 7752      456C6C69 
 7752      70736500 
 7753              	.LASF138:
 7754 0737 636F6C6F 		.ascii	"color\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 166


 7754      7200
 7755              	.LASF80:
 7756 073d 4359424C 		.ascii	"CYBLE_EVT_L2CAP_COMMAND_REJ\000"
 7756      455F4556 
 7756      545F4C32 
 7756      4341505F 
 7756      434F4D4D 
 7757              	.LASF100:
 7758 0759 52413838 		.ascii	"RA8875_800x480\000"
 7758      37355F38 
 7758      30307834 
 7758      383000
 7759              	.LASF174:
 7760 0768 64697370 		.ascii	"displayOn\000"
 7760      6C61794F 
 7760      6E00
 7761              	.LASF29:
 7762 0772 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 7762      455F4556 
 7762      545F4741 
 7762      50435F53 
 7762      43414E5F 
 7763              	.LASF157:
 7764 0796 66696C6C 		.ascii	"fillCurve\000"
 7764      43757276 
 7764      6500
 7765              	.LASF54:
 7766 07a0 4359424C 		.ascii	"CYBLE_EVT_GATT_CONNECT_IND\000"
 7766      455F4556 
 7766      545F4741 
 7766      54545F43 
 7766      4F4E4E45 
 7767              	.LASF81:
 7768 07bb 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_IND\000"
 7768      455F4556 
 7768      545F4C32 
 7768      4341505F 
 7768      43424643 
 7769              	.LASF123:
 7770 07d9 6267436F 		.ascii	"bgColor\000"
 7770      6C6F7200 
 7771              	.LASF178:
 7772 07e1 77726974 		.ascii	"writeData\000"
 7772      65446174 
 7772      6100
 7773              	.LASF141:
 7774 07eb 64726177 		.ascii	"drawFastHLine\000"
 7774      46617374 
 7774      484C696E 
 7774      6500
 7775              	.LASF34:
 7776 07f9 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_FAILED\000"
 7776      455F4556 
 7776      545F4741 
 7776      505F4155 
 7776      54485F46 
 7777              	.LASF66:
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 167


 7778 0813 4359424C 		.ascii	"CYBLE_EVT_GATTC_WRITE_RSP\000"
 7778      455F4556 
 7778      545F4741 
 7778      5454435F 
 7778      57524954 
 7779              	.LASF47:
 7780 082d 4359424C 		.ascii	"CYBLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 7780      455F4556 
 7780      545F4741 
 7780      50435F44 
 7780      49524543 
 7781              	.LASF45:
 7782 084e 4359424C 		.ascii	"CYBLE_EVT_GAP_DATA_LENGTH_CHANGE\000"
 7782      455F4556 
 7782      545F4741 
 7782      505F4441 
 7782      54415F4C 
 7783              	.LASF170:
 7784 086f 746F7563 		.ascii	"touchEnable\000"
 7784      68456E61 
 7784      626C6500 
 7785              	.LASF118:
 7786 087b 74657874 		.ascii	"textMode\000"
 7786      4D6F6465 
 7786      00
 7787              	.LASF33:
 7788 0884 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_COMPLETE\000"
 7788      455F4556 
 7788      545F4741 
 7788      505F4155 
 7788      54485F43 
 7789              	.LASF32:
 7790 08a0 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 7790      455F4556 
 7790      545F4741 
 7790      505F5041 
 7790      53534B45 
 7791              	.LASF71:
 7792 08c6 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 7792      455F4556 
 7792      545F4741 
 7792      5454435F 
 7792      48414E44 
 7793              	.LASF96:
 7794 08e7 4359424C 		.ascii	"CYBLE_SRVI_CUSTOMS\000"
 7794      455F5352 
 7794      56495F43 
 7794      5553544F 
 7794      4D5300
 7795              	.LASF121:
 7796 08fa 74657874 		.ascii	"textColor\000"
 7796      436F6C6F 
 7796      7200
 7797              	.LASF82:
 7798 0904 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 7798      455F4556 
 7798      545F4C32 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 168


 7798      4341505F 
 7798      43424643 
 7799              	.LASF58:
 7800 0922 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 7800      455F4556 
 7800      545F4741 
 7800      5454435F 
 7800      52454144 
 7801              	.LASF17:
 7802 0949 666C6F61 		.ascii	"float\000"
 7802      7400
 7803              	.LASF145:
 7804 094f 64726177 		.ascii	"drawCircle\000"
 7804      43697263 
 7804      6C6500
 7805              	.LASF108:
 7806 095a 6873796E 		.ascii	"hsync_start\000"
 7806      635F7374 
 7806      61727400 
 7807              	.LASF164:
 7808 0966 4750494F 		.ascii	"GPIOX\000"
 7808      5800
 7809              	.LASF95:
 7810 096c 4359424C 		.ascii	"CYBLE_SRVI_GATT\000"
 7810      455F5352 
 7810      56495F47 
 7810      41545400 
 7811              	.LASF107:
 7812 097c 70697863 		.ascii	"pixclk\000"
 7812      6C6B00
 7813              	.LASF151:
 7814 0983 7943656E 		.ascii	"yCenter\000"
 7814      74657200 
 7815              	.LASF1:
 7816 098b 756E7369 		.ascii	"unsigned char\000"
 7816      676E6564 
 7816      20636861 
 7816      7200
 7817              	.LASF43:
 7818 0999 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 7818      455F4556 
 7818      545F4741 
 7818      505F4B45 
 7818      59505245 
 7819              	.LASF41:
 7820 09bd 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 7820      455F4556 
 7820      545F4741 
 7820      505F4B45 
 7820      59494E46 
 7821              	.LASF172:
 7822 09e1 746F7563 		.ascii	"touched\000"
 7822      68656400 
 7823              	.LASF113:
 7824 09e9 7673796E 		.ascii	"vsync_nondisp\000"
 7824      635F6E6F 
 7824      6E646973 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 169


 7824      7000
 7825              	.LASF153:
 7826 09f7 73686F72 		.ascii	"shortAxis\000"
 7826      74417869 
 7826      7300
 7827              	.LASF4:
 7828 0a01 73686F72 		.ascii	"short int\000"
 7828      7420696E 
 7828      7400
 7829              	.LASF173:
 7830 0a0b 746F7563 		.ascii	"touchRead\000"
 7830      68526561 
 7830      6400
 7831              	.LASF101:
 7832 0a15 66616C73 		.ascii	"false\000"
 7832      6500
 7833              	.LASF91:
 7834 0a1b 4359424C 		.ascii	"CYBLE_EVT_HCI_PKT\000"
 7834      455F4556 
 7834      545F4843 
 7834      495F504B 
 7834      5400
 7835              	.LASF144:
 7836 0a2d 66696C6C 		.ascii	"fillScreen\000"
 7836      53637265 
 7836      656E00
 7837              	.LASF161:
 7838 0a38 74726961 		.ascii	"triangleHelper\000"
 7838      6E676C65 
 7838      48656C70 
 7838      657200
 7839              	.LASF117:
 7840 0a47 696E6974 		.ascii	"initialize\000"
 7840      69616C69 
 7840      7A6500
 7841              	.LASF68:
 7842 0a52 4359424C 		.ascii	"CYBLE_EVT_GATTS_PREP_WRITE_REQ\000"
 7842      455F4556 
 7842      545F4741 
 7842      5454535F 
 7842      50524550 
 7843              	.LASF38:
 7844 0a71 4359424C 		.ascii	"CYBLE_EVT_GAP_ENCRYPT_CHANGE\000"
 7844      455F4556 
 7844      545F4741 
 7844      505F454E 
 7844      43525950 
 7845              	.LASF189:
 7846 0a8e 52413838 		.ascii	"RA8875.c\000"
 7846      37352E63 
 7846      00
 7847              	.LASF166:
 7848 0a97 50574D32 		.ascii	"PWM2out\000"
 7848      6F757400 
 7849              	.LASF135:
 7850 0a9f 70757368 		.ascii	"pushPixels\000"
 7850      50697865 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 170


 7850      6C7300
 7851              	.LASF73:
 7852 0aaa 4359424C 		.ascii	"CYBLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 7852      455F4556 
 7852      545F4741 
 7852      5454535F 
 7852      48414E44 
 7853              	.LASF53:
 7854 0acb 4359424C 		.ascii	"CYBLE_EVT_GATTC_ERROR_RSP\000"
 7854      455F4556 
 7854      545F4741 
 7854      5454435F 
 7854      4552524F 
 7855              	.LASF48:
 7856 0ae5 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 7856      455F4556 
 7856      545F4741 
 7856      505F534D 
 7856      505F4E45 
 7857              	.LASF98:
 7858 0b0c 4359424C 		.ascii	"CYBLE_SRVI_COUNT\000"
 7858      455F5352 
 7858      56495F43 
 7858      4F554E54 
 7858      00
 7859              	.LASF169:
 7860 0b1d 50574D32 		.ascii	"PWM2config\000"
 7860      636F6E66 
 7860      696700
 7861              	.LASF94:
 7862 0b28 4359424C 		.ascii	"CYBLE_SRVI_GAP\000"
 7862      455F5352 
 7862      56495F47 
 7862      415000
 7863              	.LASF20:
 7864 0b37 6C6F6E67 		.ascii	"long double\000"
 7864      20646F75 
 7864      626C6500 
 7865              	.LASF19:
 7866 0b43 63686172 		.ascii	"char\000"
 7866      00
 7867              	.LASF64:
 7868 0b48 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_MULTI_RSP\000"
 7868      455F4556 
 7868      545F4741 
 7868      5454435F 
 7868      52454144 
 7869              	.LASF99:
 7870 0b67 52413838 		.ascii	"RA8875_480x272\000"
 7870      37355F34 
 7870      38307832 
 7870      373200
 7871              	.LASF182:
 7872 0b76 5F727374 		.ascii	"_rst\000"
 7872      00
 7873              	.LASF186:
 7874 0b7b 5F73697A 		.ascii	"_size\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 171


 7874      6500
 7875              	.LASF181:
 7876 0b81 72656164 		.ascii	"readStatus\000"
 7876      53746174 
 7876      757300
 7877              	.LASF5:
 7878 0b8c 5F5F7569 		.ascii	"__uint16_t\000"
 7878      6E743136 
 7878      5F7400
 7879              	.LASF76:
 7880 0b97 4359424C 		.ascii	"CYBLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 7880      455F4556 
 7880      545F4741 
 7880      5454535F 
 7880      52454144 
 7881              	.LASF103:
 7882 0bc0 626F6F6C 		.ascii	"boolean\000"
 7882      65616E00 
 7883              	.LASF86:
 7884 0bc8 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 7884      455F4556 
 7884      545F4C32 
 7884      4341505F 
 7884      43424643 
 7885              	.LASF179:
 7886 0beb 72656164 		.ascii	"readData\000"
 7886      44617461 
 7886      00
 7887              	.LASF85:
 7888 0bf4 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_READ\000"
 7888      455F4556 
 7888      545F4C32 
 7888      4341505F 
 7888      43424643 
 7889              	.LASF109:
 7890 0c13 6873796E 		.ascii	"hsync_pw\000"
 7890      635F7077 
 7890      00
 7891              	.LASF165:
 7892 0c1c 50574D31 		.ascii	"PWM1out\000"
 7892      6F757400 
 7893              	.LASF25:
 7894 0c24 4359424C 		.ascii	"CYBLE_EVT_HARDWARE_ERROR\000"
 7894      455F4556 
 7894      545F4841 
 7894      52445741 
 7894      52455F45 
 7895              	.LASF44:
 7896 0c3d 4359424C 		.ascii	"CYBLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 7896      455F4556 
 7896      545F4741 
 7896      505F4F4F 
 7896      425F4745 
 7897              	.LASF111:
 7898 0c66 6873796E 		.ascii	"hsync_nondisp\000"
 7898      635F6E6F 
 7898      6E646973 
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 172


 7898      7000
 7899              	.LASF61:
 7900 0c74 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 7900      455F4556 
 7900      545F4741 
 7900      5454435F 
 7900      46494E44 
 7901              	.LASF191:
 7902 0c9b 52413838 		.ascii	"RA8875sizes\000"
 7902      37357369 
 7902      7A657300 
 7903              	.LASF176:
 7904 0ca7 77726974 		.ascii	"writeReg\000"
 7904      65526567 
 7904      00
 7905              	.LASF56:
 7906 0cb0 4359424C 		.ascii	"CYBLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 7906      455F4556 
 7906      545F4741 
 7906      5454535F 
 7906      58434E48 
 7907              	.LASF184:
 7908 0cce 5F686569 		.ascii	"_height\000"
 7908      67687400 
 7909              	.LASF147:
 7910 0cd6 64726177 		.ascii	"drawTriangle\000"
 7910      54726961 
 7910      6E676C65 
 7910      00
 7911              	.LASF124:
 7912 0ce3 74657874 		.ascii	"textTransparent\000"
 7912      5472616E 
 7912      73706172 
 7912      656E7400 
 7913              	.LASF190:
 7914 0cf3 433A5C55 		.ascii	"C:\\Users\\megan\\Google Drive\\College\\S10 - Fall"
 7914      73657273 
 7914      5C6D6567 
 7914      616E5C47 
 7914      6F6F676C 
 7915 0d21 20323031 		.ascii	" 2017\\ECEN 4350 - Embedded uC Design\\Github\\ECEN"
 7915      375C4543 
 7915      454E2034 
 7915      33353020 
 7915      2D20456D 
 7916 0d51 34333530 		.ascii	"4350-EmbeddedMicrocontrollerDesign\\BinMonitorPart1"
 7916      2D456D62 
 7916      65646465 
 7916      644D6963 
 7916      726F636F 
 7917 0d83 5C42696E 		.ascii	"\\BinMonitorPart1\\BinMonitorPart1.cydsn\000"
 7917      4D6F6E69 
 7917      746F7250 
 7917      61727431 
 7917      5C42696E 
 7918              	.LASF137:
 7919 0daa 64726177 		.ascii	"drawPixel\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 173


 7919      50697865 
 7919      6C00
 7920              	.LASF142:
 7921 0db4 64726177 		.ascii	"drawRect\000"
 7921      52656374 
 7921      00
 7922              	.LASF13:
 7923 0dbd 75696E74 		.ascii	"uint8_t\000"
 7923      385F7400 
 7924              	.LASF125:
 7925 0dc5 74657874 		.ascii	"textEnlarge\000"
 7925      456E6C61 
 7925      72676500 
 7926              	.LASF70:
 7927 0dd1 4359424C 		.ascii	"CYBLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 7927      455F4556 
 7927      545F4741 
 7927      5454435F 
 7927      45584543 
 7928              	.LASF21:
 7929 0df0 73697A65 		.ascii	"sizetype\000"
 7929      74797065 
 7929      00
 7930              	.LASF158:
 7931 0df9 63697263 		.ascii	"circleHelper\000"
 7931      6C654865 
 7931      6C706572 
 7931      00
 7932              	.LASF110:
 7933 0e06 6873796E 		.ascii	"hsync_finetune\000"
 7933      635F6669 
 7933      6E657475 
 7933      6E6500
 7934              	.LASF133:
 7935 0e15 77616974 		.ascii	"waitflag\000"
 7935      666C6167 
 7935      00
 7936              	.LASF83:
 7937 0e1e 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 7937      455F4556 
 7937      545F4C32 
 7937      4341505F 
 7937      43424643 
 7938              	.LASF168:
 7939 0e3f 636C6F63 		.ascii	"clock\000"
 7939      6B00
 7940              	.LASF116:
 7941 0e45 68656967 		.ascii	"height\000"
 7941      687400
 7942              	.LASF79:
 7943 0e4c 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 7943      455F4556 
 7943      545F4C32 
 7943      4341505F 
 7943      434F4E4E 
 7944              	.LASF46:
 7945 0e72 4359424C 		.ascii	"CYBLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\cctuOS8n.s 			page 174


 7945      455F4556 
 7945      545F4741 
 7945      505F454E 
 7945      48414E43 
 7946              	.LASF55:
 7947 0e96 4359424C 		.ascii	"CYBLE_EVT_GATT_DISCONNECT_IND\000"
 7947      455F4556 
 7947      545F4741 
 7947      54545F44 
 7947      4953434F 
 7948              	.LASF16:
 7949 0eb4 75696E74 		.ascii	"uint32_t\000"
 7949      33325F74 
 7949      00
 7950              	.LASF92:
 7951 0ebd 4359424C 		.ascii	"CYBLE_EVT_FLASH_CORRUPT\000"
 7951      455F4556 
 7951      545F464C 
 7951      4153485F 
 7951      434F5252 
 7952              	.LASF143:
 7953 0ed5 66696C6C 		.ascii	"fillRect\000"
 7953      52656374 
 7953      00
 7954              	.LASF102:
 7955 0ede 74727565 		.ascii	"true\000"
 7955      00
 7956              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
