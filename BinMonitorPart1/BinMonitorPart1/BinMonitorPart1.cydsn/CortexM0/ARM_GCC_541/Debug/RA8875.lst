ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RA8875.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	_cs,1,1
  20              		.comm	_rst,1,1
  21              		.comm	_width,2,2
  22              		.comm	_height,2,2
  23              		.comm	_textScale,1,1
  24              		.comm	_size,1,1
  25              		.global	spi_speed
  26              		.data
  27              		.align	2
  28              		.type	spi_speed, %object
  29              		.size	spi_speed, 4
  30              	spi_speed:
  31 0000 00093D00 		.word	4000000
  32              		.section	.text.begin,"ax",%progbits
  33              		.align	2
  34              		.global	begin
  35              		.code	16
  36              		.thumb_func
  37              		.type	begin, %function
  38              	begin:
  39              	.LFB35:
  40              		.file 1 "RA8875.c"
   1:RA8875.c      **** /**************************************************************************/
   2:RA8875.c      **** /*!
   3:RA8875.c      ****     @file     Adafruit_RA8875.cpp
   4:RA8875.c      ****     @author   Limor Friend/Ladyada, K.Townsend/KTOWN for Adafruit Industries
   5:RA8875.c      ****     @license  BSD license, all text above and below must be included in
   6:RA8875.c      ****               any redistribution
   7:RA8875.c      **** 
   8:RA8875.c      ****  This is the library for the Adafruit RA8875 Driver board for TFT displays
   9:RA8875.c      ****  ---------------> http://www.adafruit.com/products/1590
  10:RA8875.c      ****  The RA8875 is a TFT driver for up to 800x480 dotclock'd displays
  11:RA8875.c      ****  It is tested to work with displays in the Adafruit shop. Other displays
  12:RA8875.c      ****  may need timing adjustments and are not guanteed to work.
  13:RA8875.c      ****  
  14:RA8875.c      ****  Adafruit invests time and resources providing this open
  15:RA8875.c      ****  source code, please support Adafruit and open-source hardware
  16:RA8875.c      ****  by purchasing products from Adafruit!
  17:RA8875.c      ****  
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 2


  18:RA8875.c      ****  Written by Limor Fried/Ladyada for Adafruit Industries.
  19:RA8875.c      ****  BSD license, check license.txt for more information.
  20:RA8875.c      ****  All text above must be included in any redistribution.
  21:RA8875.c      **** 
  22:RA8875.c      ****     @section  HISTORY
  23:RA8875.c      ****     
  24:RA8875.c      ****     v1.0 - First release
  25:RA8875.c      **** */
  26:RA8875.c      **** /**************************************************************************/
  27:RA8875.c      **** 
  28:RA8875.c      **** #include <project.h>
  29:RA8875.c      **** #include "RA8875.h"
  30:RA8875.c      **** 
  31:RA8875.c      **** #if defined (ARDUINO_ARCH_ARC32)
  32:RA8875.c      ****   uint32_t spi_speed = 12000000;
  33:RA8875.c      **** #else
  34:RA8875.c      ****   uint32_t spi_speed = 4000000;
  35:RA8875.c      **** #endif
  36:RA8875.c      **** 
  37:RA8875.c      **** // If the SPI library has transaction support, these functions
  38:RA8875.c      **** // establish settings and protect from interference from other
  39:RA8875.c      **** // libraries.  Otherwise, they simply do nothing.
  40:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
  41:RA8875.c      ****     static inline void spi_begin(void) __attribute__((always_inline));
  42:RA8875.c      ****     static inline void spi_begin(void) {
  43:RA8875.c      ****         // max speed!
  44:RA8875.c      ****         SPI.beginTransaction(SPISettings(spi_speed, MSBFIRST, SPI_MODE0));
  45:RA8875.c      ****     }
  46:RA8875.c      ****     static inline void spi_end(void) __attribute__((always_inline));
  47:RA8875.c      ****     static inline void spi_end(void) {
  48:RA8875.c      ****         SPI.endTransaction();
  49:RA8875.c      ****     }
  50:RA8875.c      **** #else
  51:RA8875.c      ****     #define spi_begin()
  52:RA8875.c      ****     #define spi_end()
  53:RA8875.c      **** #endif
  54:RA8875.c      **** 
  55:RA8875.c      **** 
  56:RA8875.c      **** /**************************************************************************/
  57:RA8875.c      **** /*!
  58:RA8875.c      ****       Constructor for a new RA8875 instance
  59:RA8875.c      ****       
  60:RA8875.c      ****       @args CS[in]  Location of the SPI chip select pin
  61:RA8875.c      ****       @args RST[in] Location of the reset pin
  62:RA8875.c      **** */
  63:RA8875.c      **** /**************************************************************************/
  64:RA8875.c      **** //Adafruit_RA8875::Adafruit_RA8875(uint8_t CS, uint8_t RST) : Adafruit_GFX(800, 480) {
  65:RA8875.c      **** //  _cs = CS;
  66:RA8875.c      **** //  _rst = RST;
  67:RA8875.c      **** //}
  68:RA8875.c      **** 
  69:RA8875.c      **** /**************************************************************************/
  70:RA8875.c      **** /*!
  71:RA8875.c      ****       Initialises the LCD driver and any HW required by the display
  72:RA8875.c      ****       
  73:RA8875.c      ****       @args s[in] The display size, which can be either:
  74:RA8875.c      ****                   'RA8875_480x272' (4.3" displays) r
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 3


  75:RA8875.c      ****                   'RA8875_800x480' (5" and 7" displays)
  76:RA8875.c      **** */
  77:RA8875.c      **** /**************************************************************************/
  78:RA8875.c      **** boolean begin(enum RA8875sizes s) {
  41              		.loc 1 78 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 16
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 84B0     		sub	sp, sp, #16
  50              		.cfi_def_cfa_offset 24
  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 0200     		movs	r2, r0
  54 0008 FB1D     		adds	r3, r7, #7
  55 000a 1A70     		strb	r2, [r3]
  79:RA8875.c      ****   uint32_t x;
  80:RA8875.c      ****   uint32_t compare;  
  81:RA8875.c      ****     _size = s;
  56              		.loc 1 81 0
  57 000c 234B     		ldr	r3, .L6
  58 000e FA1D     		adds	r2, r7, #7
  59 0010 1278     		ldrb	r2, [r2]
  60 0012 1A70     		strb	r2, [r3]
  82:RA8875.c      **** 
  83:RA8875.c      ****   if (_size == RA8875_480x272) {
  61              		.loc 1 83 0
  62 0014 214B     		ldr	r3, .L6
  63 0016 1B78     		ldrb	r3, [r3]
  64 0018 002B     		cmp	r3, #0
  65 001a 08D1     		bne	.L2
  84:RA8875.c      ****     _width = 480;
  66              		.loc 1 84 0
  67 001c 204B     		ldr	r3, .L6+4
  68 001e F022     		movs	r2, #240
  69 0020 5200     		lsls	r2, r2, #1
  70 0022 1A80     		strh	r2, [r3]
  85:RA8875.c      ****     _height = 272;
  71              		.loc 1 85 0
  72 0024 1F4B     		ldr	r3, .L6+8
  73 0026 8822     		movs	r2, #136
  74 0028 5200     		lsls	r2, r2, #1
  75 002a 1A80     		strh	r2, [r3]
  76 002c 0EE0     		b	.L3
  77              	.L2:
  86:RA8875.c      ****   } 
  87:RA8875.c      ****   else if (_size == RA8875_800x480) {
  78              		.loc 1 87 0
  79 002e 1B4B     		ldr	r3, .L6
  80 0030 1B78     		ldrb	r3, [r3]
  81 0032 012B     		cmp	r3, #1
  82 0034 08D1     		bne	.L4
  88:RA8875.c      ****     _width = 800;
  83              		.loc 1 88 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 4


  84 0036 1A4B     		ldr	r3, .L6+4
  85 0038 C822     		movs	r2, #200
  86 003a 9200     		lsls	r2, r2, #2
  87 003c 1A80     		strh	r2, [r3]
  89:RA8875.c      ****     _height = 480;
  88              		.loc 1 89 0
  89 003e 194B     		ldr	r3, .L6+8
  90 0040 F022     		movs	r2, #240
  91 0042 5200     		lsls	r2, r2, #1
  92 0044 1A80     		strh	r2, [r3]
  93 0046 01E0     		b	.L3
  94              	.L4:
  90:RA8875.c      ****     //CyDelay(5000); //TESTING, REMOVE
  91:RA8875.c      ****   }
  92:RA8875.c      ****   else {
  93:RA8875.c      ****     return false;
  95              		.loc 1 93 0
  96 0048 0023     		movs	r3, #0
  97 004a 22E0     		b	.L5
  98              	.L3:
  94:RA8875.c      ****   }
  95:RA8875.c      **** 
  96:RA8875.c      ****  // pinMode(_cs, OUTPUT);
  97:RA8875.c      ****   //digitalWrite(_cs, HIGH);
  98:RA8875.c      ****     //LCDSPI_ss0_m_SetDriveMode(LCDSPI_ss0_m_DM_STRONG);
  99:RA8875.c      ****     //CyDelay(100);
 100:RA8875.c      ****     //LCDSPI_ss0_m_Write(0u);
 101:RA8875.c      ****     //CyDelay(100);
 102:RA8875.c      ****     LCDSPI_ss0_m_Write(1u);
  99              		.loc 1 102 0
 100 004c 0120     		movs	r0, #1
 101 004e FFF7FEFF 		bl	LCDSPI_ss0_m_Write
 103:RA8875.c      **** 
 104:RA8875.c      ****     //pinMode(_rst, OUTPUT);
 105:RA8875.c      ****   //digitalWrite(_rst, LOW);
 106:RA8875.c      ****     rst0_m_Write(0u);
 102              		.loc 1 106 0
 103 0052 0020     		movs	r0, #0
 104 0054 FFF7FEFF 		bl	rst0_m_Write
 107:RA8875.c      ****   CyDelay(100);
 105              		.loc 1 107 0
 106 0058 6420     		movs	r0, #100
 107 005a FFF7FEFF 		bl	CyDelay
 108:RA8875.c      ****   //digitalWrite(_rst, HIGH);
 109:RA8875.c      ****     rst0_m_Write(1u);
 108              		.loc 1 109 0
 109 005e 0120     		movs	r0, #1
 110 0060 FFF7FEFF 		bl	rst0_m_Write
 110:RA8875.c      ****   CyDelay(10);
 111              		.loc 1 110 0
 112 0064 0A20     		movs	r0, #10
 113 0066 FFF7FEFF 		bl	CyDelay
 111:RA8875.c      ****   
 112:RA8875.c      ****     //LCDSPI_Start();  // Need this?
 113:RA8875.c      ****     
 114:RA8875.c      ****     
 115:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 5


 116:RA8875.c      ****     #if defined (ARDUINO_ARCH_ARC32)
 117:RA8875.c      ****         spi_speed = 2000000;
 118:RA8875.c      ****     #else
 119:RA8875.c      ****         spi_speed = 125000;
 120:RA8875.c      ****     #endif
 121:RA8875.c      **** #else
 122:RA8875.c      ****     #ifdef __AVR__
 123:RA8875.c      ****         SPI.setClockDivider(SPI_CLOCK_DIV128);
 124:RA8875.c      ****         SPI.setDataMode(SPI_MODE0);
 125:RA8875.c      ****     #endif
 126:RA8875.c      **** #endif
 127:RA8875.c      **** 
 128:RA8875.c      ****     x = readReg(0);
 114              		.loc 1 128 0
 115 006a 0020     		movs	r0, #0
 116 006c FFF7FEFF 		bl	readReg
 117 0070 0300     		movs	r3, r0
 118 0072 FB60     		str	r3, [r7, #12]
 129:RA8875.c      **** //    compare = 0x75;
 130:RA8875.c      ****     writeReg(0,x);
 119              		.loc 1 130 0
 120 0074 FB68     		ldr	r3, [r7, #12]
 121 0076 DBB2     		uxtb	r3, r3
 122 0078 1900     		movs	r1, r3
 123 007a 0020     		movs	r0, #0
 124 007c FFF7FEFF 		bl	writeReg
 131:RA8875.c      ****     CyDelay(100);
 125              		.loc 1 131 0
 126 0080 6420     		movs	r0, #100
 127 0082 FFF7FEFF 		bl	CyDelay
 132:RA8875.c      **** //    writeReg(0,compare);
 133:RA8875.c      **** //    CyDelay(100);
 134:RA8875.c      **** //    Serial.print("x = 0x"); Serial.println(x,HEX);
 135:RA8875.c      ****     //if (x != compare) {
 136:RA8875.c      ****     //    return false;
 137:RA8875.c      ****     //}
 138:RA8875.c      ****     CyDelay(100);
 128              		.loc 1 138 0
 129 0086 6420     		movs	r0, #100
 130 0088 FFF7FEFF 		bl	CyDelay
 139:RA8875.c      ****   initialize();
 131              		.loc 1 139 0
 132 008c FFF7FEFF 		bl	initialize
 140:RA8875.c      **** 
 141:RA8875.c      **** #ifdef SPI_HAS_TRANSACTION
 142:RA8875.c      ****     #if defined (ARDUINO_ARCH_ARC32)
 143:RA8875.c      ****         spi_speed = 12000000L;
 144:RA8875.c      ****     #else
 145:RA8875.c      ****         spi_speed = 4000000L;
 146:RA8875.c      ****     #endif
 147:RA8875.c      **** #else
 148:RA8875.c      ****     #ifdef __AVR__
 149:RA8875.c      ****         SPI.setClockDivider(SPI_CLOCK_DIV4);
 150:RA8875.c      ****     #endif
 151:RA8875.c      **** #endif
 152:RA8875.c      ****     
 153:RA8875.c      ****   return true;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 6


 133              		.loc 1 153 0
 134 0090 0123     		movs	r3, #1
 135              	.L5:
 154:RA8875.c      **** }
 136              		.loc 1 154 0
 137 0092 1800     		movs	r0, r3
 138 0094 BD46     		mov	sp, r7
 139 0096 04B0     		add	sp, sp, #16
 140              		@ sp needed
 141 0098 80BD     		pop	{r7, pc}
 142              	.L7:
 143 009a C046     		.align	2
 144              	.L6:
 145 009c 00000000 		.word	_size
 146 00a0 00000000 		.word	_width
 147 00a4 00000000 		.word	_height
 148              		.cfi_endproc
 149              	.LFE35:
 150              		.size	begin, .-begin
 151              		.section	.text.softReset,"ax",%progbits
 152              		.align	2
 153              		.global	softReset
 154              		.code	16
 155              		.thumb_func
 156              		.type	softReset, %function
 157              	softReset:
 158              	.LFB36:
 155:RA8875.c      **** 
 156:RA8875.c      **** /************************* Initialization *********************************/
 157:RA8875.c      **** 
 158:RA8875.c      **** /**************************************************************************/
 159:RA8875.c      **** /*!
 160:RA8875.c      ****       Performs a SW-based reset of the RA8875
 161:RA8875.c      **** */
 162:RA8875.c      **** /**************************************************************************/
 163:RA8875.c      **** void softReset(void) {
 159              		.loc 1 163 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 164:RA8875.c      ****   writeCommand(RA8875_PWRR);
 169              		.loc 1 164 0
 170 0004 0120     		movs	r0, #1
 171 0006 FFF7FEFF 		bl	writeCommand
 165:RA8875.c      ****   writeData(RA8875_PWRR_SOFTRESET);
 172              		.loc 1 165 0
 173 000a 0120     		movs	r0, #1
 174 000c FFF7FEFF 		bl	writeData
 166:RA8875.c      ****   writeData(RA8875_PWRR_NORMAL);
 175              		.loc 1 166 0
 176 0010 0020     		movs	r0, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 7


 177 0012 FFF7FEFF 		bl	writeData
 167:RA8875.c      ****   CyDelay(1);
 178              		.loc 1 167 0
 179 0016 0120     		movs	r0, #1
 180 0018 FFF7FEFF 		bl	CyDelay
 168:RA8875.c      **** }
 181              		.loc 1 168 0
 182 001c C046     		nop
 183 001e BD46     		mov	sp, r7
 184              		@ sp needed
 185 0020 80BD     		pop	{r7, pc}
 186              		.cfi_endproc
 187              	.LFE36:
 188              		.size	softReset, .-softReset
 189 0022 C046     		.section	.text.PLLinit,"ax",%progbits
 190              		.align	2
 191              		.global	PLLinit
 192              		.code	16
 193              		.thumb_func
 194              		.type	PLLinit, %function
 195              	PLLinit:
 196              	.LFB37:
 169:RA8875.c      **** 
 170:RA8875.c      **** /**************************************************************************/
 171:RA8875.c      **** /*!
 172:RA8875.c      ****       Initialise the PLL
 173:RA8875.c      **** */
 174:RA8875.c      **** /**************************************************************************/
 175:RA8875.c      **** void PLLinit(void) {
 197              		.loc 1 175 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 176:RA8875.c      ****   if (_size == RA8875_480x272) {
 207              		.loc 1 176 0
 208 0004 114B     		ldr	r3, .L13
 209 0006 1B78     		ldrb	r3, [r3]
 210 0008 002B     		cmp	r3, #0
 211 000a 0ED1     		bne	.L10
 177:RA8875.c      ****     writeReg(RA8875_PLLC1, RA8875_PLLC1_PLLDIV1 + 10);
 212              		.loc 1 177 0
 213 000c 0A21     		movs	r1, #10
 214 000e 8820     		movs	r0, #136
 215 0010 FFF7FEFF 		bl	writeReg
 178:RA8875.c      ****     CyDelay(1);
 216              		.loc 1 178 0
 217 0014 0120     		movs	r0, #1
 218 0016 FFF7FEFF 		bl	CyDelay
 179:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 219              		.loc 1 179 0
 220 001a 0221     		movs	r1, #2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 8


 221 001c 8920     		movs	r0, #137
 222 001e FFF7FEFF 		bl	writeReg
 180:RA8875.c      ****     CyDelay(1);
 223              		.loc 1 180 0
 224 0022 0120     		movs	r0, #1
 225 0024 FFF7FEFF 		bl	CyDelay
 181:RA8875.c      ****   }
 182:RA8875.c      ****   else /* (_size == RA8875_800x480) */ {
 183:RA8875.c      ****     writeReg(RA8875_PLLC1, RA8875_PLLC1_PLLDIV1 + 10);
 184:RA8875.c      ****     //writeReg(RA8875_PLLC1, 0x0b);
 185:RA8875.c      ****     CyDelay(1);
 186:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 187:RA8875.c      ****     CyDelay(1);
 188:RA8875.c      ****   }
 189:RA8875.c      **** }
 226              		.loc 1 189 0
 227 0028 0DE0     		b	.L12
 228              	.L10:
 183:RA8875.c      ****     //writeReg(RA8875_PLLC1, 0x0b);
 229              		.loc 1 183 0
 230 002a 0A21     		movs	r1, #10
 231 002c 8820     		movs	r0, #136
 232 002e FFF7FEFF 		bl	writeReg
 185:RA8875.c      ****     writeReg(RA8875_PLLC2, RA8875_PLLC2_DIV4);
 233              		.loc 1 185 0
 234 0032 0120     		movs	r0, #1
 235 0034 FFF7FEFF 		bl	CyDelay
 186:RA8875.c      ****     CyDelay(1);
 236              		.loc 1 186 0
 237 0038 0221     		movs	r1, #2
 238 003a 8920     		movs	r0, #137
 239 003c FFF7FEFF 		bl	writeReg
 187:RA8875.c      ****   }
 240              		.loc 1 187 0
 241 0040 0120     		movs	r0, #1
 242 0042 FFF7FEFF 		bl	CyDelay
 243              	.L12:
 244              		.loc 1 189 0
 245 0046 C046     		nop
 246 0048 BD46     		mov	sp, r7
 247              		@ sp needed
 248 004a 80BD     		pop	{r7, pc}
 249              	.L14:
 250              		.align	2
 251              	.L13:
 252 004c 00000000 		.word	_size
 253              		.cfi_endproc
 254              	.LFE37:
 255              		.size	PLLinit, .-PLLinit
 256              		.section	.text.initialize,"ax",%progbits
 257              		.align	2
 258              		.global	initialize
 259              		.code	16
 260              		.thumb_func
 261              		.type	initialize, %function
 262              	initialize:
 263              	.LFB38:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 9


 190:RA8875.c      **** 
 191:RA8875.c      **** /**************************************************************************/
 192:RA8875.c      **** /*!
 193:RA8875.c      ****       Initialises the driver IC (clock setup, etc.)
 194:RA8875.c      **** */
 195:RA8875.c      **** /**************************************************************************/
 196:RA8875.c      **** void initialize(void) {
 264              		.loc 1 196 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 16
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 84B0     		sub	sp, sp, #16
 273              		.cfi_def_cfa_offset 24
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 197:RA8875.c      ****   PLLinit();
 276              		.loc 1 197 0
 277 0006 FFF7FEFF 		bl	PLLinit
 198:RA8875.c      ****   writeReg(RA8875_SYSR, RA8875_SYSR_16BPP | RA8875_SYSR_MCU8);
 278              		.loc 1 198 0
 279 000a 0C21     		movs	r1, #12
 280 000c 1020     		movs	r0, #16
 281 000e FFF7FEFF 		bl	writeReg
 199:RA8875.c      **** 
 200:RA8875.c      ****   /* Timing values */
 201:RA8875.c      ****   uint8_t pixclk;
 202:RA8875.c      ****   uint8_t hsync_start;
 203:RA8875.c      ****   uint8_t hsync_pw;
 204:RA8875.c      ****   uint8_t hsync_finetune;
 205:RA8875.c      ****   uint8_t hsync_nondisp;
 206:RA8875.c      ****   uint8_t vsync_pw; 
 207:RA8875.c      ****   uint16_t vsync_nondisp;
 208:RA8875.c      ****   uint16_t vsync_start;
 209:RA8875.c      **** 
 210:RA8875.c      ****   /* Set the correct values for the display being used */  
 211:RA8875.c      ****   if (_size == RA8875_480x272) 
 282              		.loc 1 211 0
 283 0012 874B     		ldr	r3, .L19
 284 0014 1B78     		ldrb	r3, [r3]
 285 0016 002B     		cmp	r3, #0
 286 0018 1FD1     		bne	.L16
 212:RA8875.c      ****   {
 213:RA8875.c      ****     pixclk          = RA8875_PCSR_PDATL | RA8875_PCSR_4CLK;
 287              		.loc 1 213 0
 288 001a 0F23     		movs	r3, #15
 289 001c FB18     		adds	r3, r7, r3
 290 001e 8222     		movs	r2, #130
 291 0020 1A70     		strb	r2, [r3]
 214:RA8875.c      ****     hsync_nondisp   = 10;
 292              		.loc 1 214 0
 293 0022 0B23     		movs	r3, #11
 294 0024 FB18     		adds	r3, r7, r3
 295 0026 0A22     		movs	r2, #10
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 10


 296 0028 1A70     		strb	r2, [r3]
 215:RA8875.c      ****     hsync_start     = 8;
 297              		.loc 1 215 0
 298 002a 0E23     		movs	r3, #14
 299 002c FB18     		adds	r3, r7, r3
 300 002e 0822     		movs	r2, #8
 301 0030 1A70     		strb	r2, [r3]
 216:RA8875.c      ****     hsync_pw        = 48;
 302              		.loc 1 216 0
 303 0032 0D23     		movs	r3, #13
 304 0034 FB18     		adds	r3, r7, r3
 305 0036 3022     		movs	r2, #48
 306 0038 1A70     		strb	r2, [r3]
 217:RA8875.c      ****     hsync_finetune  = 0;
 307              		.loc 1 217 0
 308 003a 0C23     		movs	r3, #12
 309 003c FB18     		adds	r3, r7, r3
 310 003e 0022     		movs	r2, #0
 311 0040 1A70     		strb	r2, [r3]
 218:RA8875.c      ****     vsync_nondisp   = 3;
 312              		.loc 1 218 0
 313 0042 0823     		movs	r3, #8
 314 0044 FB18     		adds	r3, r7, r3
 315 0046 0322     		movs	r2, #3
 316 0048 1A80     		strh	r2, [r3]
 219:RA8875.c      ****     vsync_start     = 8;
 317              		.loc 1 219 0
 318 004a BB1D     		adds	r3, r7, #6
 319 004c 0822     		movs	r2, #8
 320 004e 1A80     		strh	r2, [r3]
 220:RA8875.c      ****     vsync_pw        = 10;
 321              		.loc 1 220 0
 322 0050 0A23     		movs	r3, #10
 323 0052 FB18     		adds	r3, r7, r3
 324 0054 0A22     		movs	r2, #10
 325 0056 1A70     		strb	r2, [r3]
 326 0058 1EE0     		b	.L17
 327              	.L16:
 221:RA8875.c      ****   } 
 222:RA8875.c      ****   else // (_size == RA8875_800x480)
 223:RA8875.c      ****   {
 224:RA8875.c      ****     pixclk          = RA8875_PCSR_PDATL | RA8875_PCSR_2CLK;
 328              		.loc 1 224 0
 329 005a 0F23     		movs	r3, #15
 330 005c FB18     		adds	r3, r7, r3
 331 005e 8122     		movs	r2, #129
 332 0060 1A70     		strb	r2, [r3]
 225:RA8875.c      ****     hsync_nondisp   = 26;
 333              		.loc 1 225 0
 334 0062 0B23     		movs	r3, #11
 335 0064 FB18     		adds	r3, r7, r3
 336 0066 1A22     		movs	r2, #26
 337 0068 1A70     		strb	r2, [r3]
 226:RA8875.c      ****     hsync_start     = 32;
 338              		.loc 1 226 0
 339 006a 0E23     		movs	r3, #14
 340 006c FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 11


 341 006e 2022     		movs	r2, #32
 342 0070 1A70     		strb	r2, [r3]
 227:RA8875.c      ****     hsync_pw        = 96;
 343              		.loc 1 227 0
 344 0072 0D23     		movs	r3, #13
 345 0074 FB18     		adds	r3, r7, r3
 346 0076 6022     		movs	r2, #96
 347 0078 1A70     		strb	r2, [r3]
 228:RA8875.c      ****     hsync_finetune  = 0;
 348              		.loc 1 228 0
 349 007a 0C23     		movs	r3, #12
 350 007c FB18     		adds	r3, r7, r3
 351 007e 0022     		movs	r2, #0
 352 0080 1A70     		strb	r2, [r3]
 229:RA8875.c      ****     vsync_nondisp   = 32;
 353              		.loc 1 229 0
 354 0082 0823     		movs	r3, #8
 355 0084 FB18     		adds	r3, r7, r3
 356 0086 2022     		movs	r2, #32
 357 0088 1A80     		strh	r2, [r3]
 230:RA8875.c      ****     vsync_start     = 23;
 358              		.loc 1 230 0
 359 008a BB1D     		adds	r3, r7, #6
 360 008c 1722     		movs	r2, #23
 361 008e 1A80     		strh	r2, [r3]
 231:RA8875.c      ****     vsync_pw        = 2;
 362              		.loc 1 231 0
 363 0090 0A23     		movs	r3, #10
 364 0092 FB18     		adds	r3, r7, r3
 365 0094 0222     		movs	r2, #2
 366 0096 1A70     		strb	r2, [r3]
 367              	.L17:
 232:RA8875.c      ****   }
 233:RA8875.c      **** 
 234:RA8875.c      ****   writeReg(RA8875_PCSR, pixclk);
 368              		.loc 1 234 0
 369 0098 0F23     		movs	r3, #15
 370 009a FB18     		adds	r3, r7, r3
 371 009c 1B78     		ldrb	r3, [r3]
 372 009e 1900     		movs	r1, r3
 373 00a0 0420     		movs	r0, #4
 374 00a2 FFF7FEFF 		bl	writeReg
 235:RA8875.c      ****   CyDelay(1);
 375              		.loc 1 235 0
 376 00a6 0120     		movs	r0, #1
 377 00a8 FFF7FEFF 		bl	CyDelay
 236:RA8875.c      ****   
 237:RA8875.c      ****   /* Horizontal settings registers */
 238:RA8875.c      ****   writeReg(RA8875_HDWR, (_width / 8) - 1);                          // H width: (HDWR + 1) * 8 = 48
 378              		.loc 1 238 0
 379 00ac 614B     		ldr	r3, .L19+4
 380 00ae 1B88     		ldrh	r3, [r3]
 381 00b0 DB08     		lsrs	r3, r3, #3
 382 00b2 9BB2     		uxth	r3, r3
 383 00b4 DBB2     		uxtb	r3, r3
 384 00b6 013B     		subs	r3, r3, #1
 385 00b8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 12


 386 00ba 1900     		movs	r1, r3
 387 00bc 1420     		movs	r0, #20
 388 00be FFF7FEFF 		bl	writeReg
 239:RA8875.c      ****   writeReg(RA8875_HNDFTR, RA8875_HNDFTR_DE_HIGH + hsync_finetune);
 389              		.loc 1 239 0
 390 00c2 0C23     		movs	r3, #12
 391 00c4 FB18     		adds	r3, r7, r3
 392 00c6 1B78     		ldrb	r3, [r3]
 393 00c8 1900     		movs	r1, r3
 394 00ca 1520     		movs	r0, #21
 395 00cc FFF7FEFF 		bl	writeReg
 240:RA8875.c      ****   writeReg(RA8875_HNDR, (hsync_nondisp - hsync_finetune - 2)/8);    // H non-display: HNDR * 8 + HN
 396              		.loc 1 240 0
 397 00d0 0B23     		movs	r3, #11
 398 00d2 FB18     		adds	r3, r7, r3
 399 00d4 1A78     		ldrb	r2, [r3]
 400 00d6 0C23     		movs	r3, #12
 401 00d8 FB18     		adds	r3, r7, r3
 402 00da 1B78     		ldrb	r3, [r3]
 403 00dc D31A     		subs	r3, r2, r3
 404 00de 023B     		subs	r3, r3, #2
 405 00e0 002B     		cmp	r3, #0
 406 00e2 00DA     		bge	.L18
 407 00e4 0733     		adds	r3, r3, #7
 408              	.L18:
 409 00e6 DB10     		asrs	r3, r3, #3
 410 00e8 DBB2     		uxtb	r3, r3
 411 00ea 1900     		movs	r1, r3
 412 00ec 1620     		movs	r0, #22
 413 00ee FFF7FEFF 		bl	writeReg
 241:RA8875.c      ****   writeReg(RA8875_HSTR, hsync_start/8 - 1);                         // Hsync start: (HSTR + 1)*8 
 414              		.loc 1 241 0
 415 00f2 0E23     		movs	r3, #14
 416 00f4 FB18     		adds	r3, r7, r3
 417 00f6 1B78     		ldrb	r3, [r3]
 418 00f8 DB08     		lsrs	r3, r3, #3
 419 00fa DBB2     		uxtb	r3, r3
 420 00fc 013B     		subs	r3, r3, #1
 421 00fe DBB2     		uxtb	r3, r3
 422 0100 1900     		movs	r1, r3
 423 0102 1720     		movs	r0, #23
 424 0104 FFF7FEFF 		bl	writeReg
 242:RA8875.c      ****   writeReg(RA8875_HPWR, RA8875_HPWR_LOW + (hsync_pw/8 - 1));        // HSync pulse width = (HPWR+1)
 425              		.loc 1 242 0
 426 0108 0D23     		movs	r3, #13
 427 010a FB18     		adds	r3, r7, r3
 428 010c 1B78     		ldrb	r3, [r3]
 429 010e DB08     		lsrs	r3, r3, #3
 430 0110 DBB2     		uxtb	r3, r3
 431 0112 013B     		subs	r3, r3, #1
 432 0114 DBB2     		uxtb	r3, r3
 433 0116 1900     		movs	r1, r3
 434 0118 1820     		movs	r0, #24
 435 011a FFF7FEFF 		bl	writeReg
 243:RA8875.c      ****   
 244:RA8875.c      ****   /* Vertical settings registers */
 245:RA8875.c      ****   writeReg(RA8875_VDHR0, (uint16_t)(_height - 1) & 0xFF);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 13


 436              		.loc 1 245 0
 437 011e 464B     		ldr	r3, .L19+8
 438 0120 1B88     		ldrh	r3, [r3]
 439 0122 DBB2     		uxtb	r3, r3
 440 0124 013B     		subs	r3, r3, #1
 441 0126 DBB2     		uxtb	r3, r3
 442 0128 1900     		movs	r1, r3
 443 012a 1920     		movs	r0, #25
 444 012c FFF7FEFF 		bl	writeReg
 246:RA8875.c      ****   writeReg(RA8875_VDHR1, (uint16_t)(_height - 1) >> 8);
 445              		.loc 1 246 0
 446 0130 414B     		ldr	r3, .L19+8
 447 0132 1B88     		ldrh	r3, [r3]
 448 0134 013B     		subs	r3, r3, #1
 449 0136 9BB2     		uxth	r3, r3
 450 0138 1B0A     		lsrs	r3, r3, #8
 451 013a 9BB2     		uxth	r3, r3
 452 013c DBB2     		uxtb	r3, r3
 453 013e 1900     		movs	r1, r3
 454 0140 1A20     		movs	r0, #26
 455 0142 FFF7FEFF 		bl	writeReg
 247:RA8875.c      ****   writeReg(RA8875_VNDR0, vsync_nondisp-1);                          // V non-display period = VNDR 
 456              		.loc 1 247 0
 457 0146 0823     		movs	r3, #8
 458 0148 FB18     		adds	r3, r7, r3
 459 014a 1B88     		ldrh	r3, [r3]
 460 014c DBB2     		uxtb	r3, r3
 461 014e 013B     		subs	r3, r3, #1
 462 0150 DBB2     		uxtb	r3, r3
 463 0152 1900     		movs	r1, r3
 464 0154 1B20     		movs	r0, #27
 465 0156 FFF7FEFF 		bl	writeReg
 248:RA8875.c      ****   //writeReg(RA8875_VNDR0, 0x20);
 249:RA8875.c      ****   writeReg(RA8875_VNDR1, vsync_nondisp >> 8);
 466              		.loc 1 249 0
 467 015a 0823     		movs	r3, #8
 468 015c FB18     		adds	r3, r7, r3
 469 015e 1B88     		ldrh	r3, [r3]
 470 0160 1B0A     		lsrs	r3, r3, #8
 471 0162 9BB2     		uxth	r3, r3
 472 0164 DBB2     		uxtb	r3, r3
 473 0166 1900     		movs	r1, r3
 474 0168 1C20     		movs	r0, #28
 475 016a FFF7FEFF 		bl	writeReg
 250:RA8875.c      ****   writeReg(RA8875_VSTR0, vsync_start-1);                            // Vsync start position = VSTR 
 476              		.loc 1 250 0
 477 016e BB1D     		adds	r3, r7, #6
 478 0170 1B88     		ldrh	r3, [r3]
 479 0172 DBB2     		uxtb	r3, r3
 480 0174 013B     		subs	r3, r3, #1
 481 0176 DBB2     		uxtb	r3, r3
 482 0178 1900     		movs	r1, r3
 483 017a 1D20     		movs	r0, #29
 484 017c FFF7FEFF 		bl	writeReg
 251:RA8875.c      ****   writeReg(RA8875_VSTR1, vsync_start >> 8);
 485              		.loc 1 251 0
 486 0180 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 14


 487 0182 1B88     		ldrh	r3, [r3]
 488 0184 1B0A     		lsrs	r3, r3, #8
 489 0186 9BB2     		uxth	r3, r3
 490 0188 DBB2     		uxtb	r3, r3
 491 018a 1900     		movs	r1, r3
 492 018c 1E20     		movs	r0, #30
 493 018e FFF7FEFF 		bl	writeReg
 252:RA8875.c      ****   writeReg(RA8875_VPWR, RA8875_VPWR_LOW + vsync_pw - 1);            // Vsync pulse width = VPWR + 1
 494              		.loc 1 252 0
 495 0192 0A23     		movs	r3, #10
 496 0194 FB18     		adds	r3, r7, r3
 497 0196 1B78     		ldrb	r3, [r3]
 498 0198 013B     		subs	r3, r3, #1
 499 019a DBB2     		uxtb	r3, r3
 500 019c 1900     		movs	r1, r3
 501 019e 1F20     		movs	r0, #31
 502 01a0 FFF7FEFF 		bl	writeReg
 253:RA8875.c      ****   
 254:RA8875.c      ****   /* Set active window X */
 255:RA8875.c      ****   writeReg(RA8875_HSAW0, 0);                                        // horizontal start point
 503              		.loc 1 255 0
 504 01a4 0021     		movs	r1, #0
 505 01a6 3020     		movs	r0, #48
 506 01a8 FFF7FEFF 		bl	writeReg
 256:RA8875.c      ****   writeReg(RA8875_HSAW1, 0);
 507              		.loc 1 256 0
 508 01ac 0021     		movs	r1, #0
 509 01ae 3120     		movs	r0, #49
 510 01b0 FFF7FEFF 		bl	writeReg
 257:RA8875.c      ****   writeReg(RA8875_HEAW0, (uint16_t)(_width - 1) & 0xFF);            // horizontal end point
 511              		.loc 1 257 0
 512 01b4 1F4B     		ldr	r3, .L19+4
 513 01b6 1B88     		ldrh	r3, [r3]
 514 01b8 DBB2     		uxtb	r3, r3
 515 01ba 013B     		subs	r3, r3, #1
 516 01bc DBB2     		uxtb	r3, r3
 517 01be 1900     		movs	r1, r3
 518 01c0 3420     		movs	r0, #52
 519 01c2 FFF7FEFF 		bl	writeReg
 258:RA8875.c      ****   writeReg(RA8875_HEAW1, (uint16_t)(_width - 1) >> 8);
 520              		.loc 1 258 0
 521 01c6 1B4B     		ldr	r3, .L19+4
 522 01c8 1B88     		ldrh	r3, [r3]
 523 01ca 013B     		subs	r3, r3, #1
 524 01cc 9BB2     		uxth	r3, r3
 525 01ce 1B0A     		lsrs	r3, r3, #8
 526 01d0 9BB2     		uxth	r3, r3
 527 01d2 DBB2     		uxtb	r3, r3
 528 01d4 1900     		movs	r1, r3
 529 01d6 3520     		movs	r0, #53
 530 01d8 FFF7FEFF 		bl	writeReg
 259:RA8875.c      ****   
 260:RA8875.c      ****   /* Set active window Y */
 261:RA8875.c      ****   writeReg(RA8875_VSAW0, 0);                                        // vertical start point
 531              		.loc 1 261 0
 532 01dc 0021     		movs	r1, #0
 533 01de 3220     		movs	r0, #50
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 15


 534 01e0 FFF7FEFF 		bl	writeReg
 262:RA8875.c      ****   writeReg(RA8875_VSAW1, 0);  
 535              		.loc 1 262 0
 536 01e4 0021     		movs	r1, #0
 537 01e6 3320     		movs	r0, #51
 538 01e8 FFF7FEFF 		bl	writeReg
 263:RA8875.c      ****   writeReg(RA8875_VEAW0, (uint16_t)(_height - 1) & 0xFF);           // horizontal end point
 539              		.loc 1 263 0
 540 01ec 124B     		ldr	r3, .L19+8
 541 01ee 1B88     		ldrh	r3, [r3]
 542 01f0 DBB2     		uxtb	r3, r3
 543 01f2 013B     		subs	r3, r3, #1
 544 01f4 DBB2     		uxtb	r3, r3
 545 01f6 1900     		movs	r1, r3
 546 01f8 3620     		movs	r0, #54
 547 01fa FFF7FEFF 		bl	writeReg
 264:RA8875.c      ****   writeReg(RA8875_VEAW1, (uint16_t)(_height - 1) >> 8);
 548              		.loc 1 264 0
 549 01fe 0E4B     		ldr	r3, .L19+8
 550 0200 1B88     		ldrh	r3, [r3]
 551 0202 013B     		subs	r3, r3, #1
 552 0204 9BB2     		uxth	r3, r3
 553 0206 1B0A     		lsrs	r3, r3, #8
 554 0208 9BB2     		uxth	r3, r3
 555 020a DBB2     		uxtb	r3, r3
 556 020c 1900     		movs	r1, r3
 557 020e 3720     		movs	r0, #55
 558 0210 FFF7FEFF 		bl	writeReg
 265:RA8875.c      ****   
 266:RA8875.c      ****   /* ToDo: Setup touch panel? */
 267:RA8875.c      ****   
 268:RA8875.c      ****   /* Clear the entire window */
 269:RA8875.c      ****   writeReg(RA8875_MCLR, RA8875_MCLR_START | RA8875_MCLR_FULL);
 559              		.loc 1 269 0
 560 0214 8021     		movs	r1, #128
 561 0216 8E20     		movs	r0, #142
 562 0218 FFF7FEFF 		bl	writeReg
 270:RA8875.c      ****   CyDelay(500); 
 563              		.loc 1 270 0
 564 021c FA23     		movs	r3, #250
 565 021e 5B00     		lsls	r3, r3, #1
 566 0220 1800     		movs	r0, r3
 567 0222 FFF7FEFF 		bl	CyDelay
 271:RA8875.c      **** }
 568              		.loc 1 271 0
 569 0226 C046     		nop
 570 0228 BD46     		mov	sp, r7
 571 022a 04B0     		add	sp, sp, #16
 572              		@ sp needed
 573 022c 80BD     		pop	{r7, pc}
 574              	.L20:
 575 022e C046     		.align	2
 576              	.L19:
 577 0230 00000000 		.word	_size
 578 0234 00000000 		.word	_width
 579 0238 00000000 		.word	_height
 580              		.cfi_endproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 16


 581              	.LFE38:
 582              		.size	initialize, .-initialize
 583              		.section	.text.width,"ax",%progbits
 584              		.align	2
 585              		.global	width
 586              		.code	16
 587              		.thumb_func
 588              		.type	width, %function
 589              	width:
 590              	.LFB39:
 272:RA8875.c      **** 
 273:RA8875.c      **** /**************************************************************************/
 274:RA8875.c      **** /*!
 275:RA8875.c      ****       Returns the display width in pixels
 276:RA8875.c      ****       
 277:RA8875.c      ****       @returns  The 1-based display width in pixels
 278:RA8875.c      **** */
 279:RA8875.c      **** /**************************************************************************/
 280:RA8875.c      **** uint16_t width(void) { return _width; }
 591              		.loc 1 280 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595 0000 80B5     		push	{r7, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 7, -8
 598              		.cfi_offset 14, -4
 599 0002 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601              		.loc 1 280 0
 602 0004 024B     		ldr	r3, .L23
 603 0006 1B88     		ldrh	r3, [r3]
 604 0008 1800     		movs	r0, r3
 605 000a BD46     		mov	sp, r7
 606              		@ sp needed
 607 000c 80BD     		pop	{r7, pc}
 608              	.L24:
 609 000e C046     		.align	2
 610              	.L23:
 611 0010 00000000 		.word	_width
 612              		.cfi_endproc
 613              	.LFE39:
 614              		.size	width, .-width
 615              		.section	.text.height,"ax",%progbits
 616              		.align	2
 617              		.global	height
 618              		.code	16
 619              		.thumb_func
 620              		.type	height, %function
 621              	height:
 622              	.LFB40:
 281:RA8875.c      **** 
 282:RA8875.c      **** /**************************************************************************/
 283:RA8875.c      **** /*!
 284:RA8875.c      ****       Returns the display height in pixels
 285:RA8875.c      **** 
 286:RA8875.c      ****       @returns  The 1-based display height in pixels
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 17


 287:RA8875.c      **** */
 288:RA8875.c      **** /**************************************************************************/
 289:RA8875.c      **** uint16_t height(void) { return _height; }
 623              		.loc 1 289 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627 0000 80B5     		push	{r7, lr}
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633              		.loc 1 289 0
 634 0004 024B     		ldr	r3, .L27
 635 0006 1B88     		ldrh	r3, [r3]
 636 0008 1800     		movs	r0, r3
 637 000a BD46     		mov	sp, r7
 638              		@ sp needed
 639 000c 80BD     		pop	{r7, pc}
 640              	.L28:
 641 000e C046     		.align	2
 642              	.L27:
 643 0010 00000000 		.word	_height
 644              		.cfi_endproc
 645              	.LFE40:
 646              		.size	height, .-height
 647              		.section	.text.textMode,"ax",%progbits
 648              		.align	2
 649              		.global	textMode
 650              		.code	16
 651              		.thumb_func
 652              		.type	textMode, %function
 653              	textMode:
 654              	.LFB41:
 290:RA8875.c      **** 
 291:RA8875.c      **** /************************* Text Mode ***********************************/
 292:RA8875.c      **** 
 293:RA8875.c      **** /**************************************************************************/
 294:RA8875.c      **** /*!
 295:RA8875.c      ****       Sets the display in text mode (as opposed to graphics mode)
 296:RA8875.c      **** */
 297:RA8875.c      **** /**************************************************************************/
 298:RA8875.c      **** void textMode(void) 
 299:RA8875.c      **** {
 655              		.loc 1 299 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 82B0     		sub	sp, sp, #8
 664              		.cfi_def_cfa_offset 16
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 18


 300:RA8875.c      ****   /* Set text mode */
 301:RA8875.c      ****   writeCommand(RA8875_MWCR0);
 667              		.loc 1 301 0
 668 0006 4020     		movs	r0, #64
 669 0008 FFF7FEFF 		bl	writeCommand
 302:RA8875.c      ****   uint8_t temp = readData();
 670              		.loc 1 302 0
 671 000c FFF7FEFF 		bl	readData
 672 0010 0200     		movs	r2, r0
 673 0012 FB1D     		adds	r3, r7, #7
 674 0014 1A70     		strb	r2, [r3]
 303:RA8875.c      ****   temp |= RA8875_MWCR0_TXTMODE; // Set bit 7
 675              		.loc 1 303 0
 676 0016 FB1D     		adds	r3, r7, #7
 677 0018 FA1D     		adds	r2, r7, #7
 678 001a 1278     		ldrb	r2, [r2]
 679 001c 8021     		movs	r1, #128
 680 001e 4942     		rsbs	r1, r1, #0
 681 0020 0A43     		orrs	r2, r1
 682 0022 1A70     		strb	r2, [r3]
 304:RA8875.c      ****   writeData(temp);
 683              		.loc 1 304 0
 684 0024 FB1D     		adds	r3, r7, #7
 685 0026 1B78     		ldrb	r3, [r3]
 686 0028 1800     		movs	r0, r3
 687 002a FFF7FEFF 		bl	writeData
 305:RA8875.c      ****   
 306:RA8875.c      ****   /* Select the internal (ROM) font */
 307:RA8875.c      ****   writeCommand(0x21);
 688              		.loc 1 307 0
 689 002e 2120     		movs	r0, #33
 690 0030 FFF7FEFF 		bl	writeCommand
 308:RA8875.c      ****   temp = readData();
 691              		.loc 1 308 0
 692 0034 FFF7FEFF 		bl	readData
 693 0038 0200     		movs	r2, r0
 694 003a FB1D     		adds	r3, r7, #7
 695 003c 1A70     		strb	r2, [r3]
 309:RA8875.c      ****   temp &= ~((1<<7) | (1<<5)); // Clear bits 7 and 5
 696              		.loc 1 309 0
 697 003e FB1D     		adds	r3, r7, #7
 698 0040 FA1D     		adds	r2, r7, #7
 699 0042 1278     		ldrb	r2, [r2]
 700 0044 5F21     		movs	r1, #95
 701 0046 0A40     		ands	r2, r1
 702 0048 1A70     		strb	r2, [r3]
 310:RA8875.c      ****   writeData(temp);
 703              		.loc 1 310 0
 704 004a FB1D     		adds	r3, r7, #7
 705 004c 1B78     		ldrb	r3, [r3]
 706 004e 1800     		movs	r0, r3
 707 0050 FFF7FEFF 		bl	writeData
 311:RA8875.c      **** }
 708              		.loc 1 311 0
 709 0054 C046     		nop
 710 0056 BD46     		mov	sp, r7
 711 0058 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 19


 712              		@ sp needed
 713 005a 80BD     		pop	{r7, pc}
 714              		.cfi_endproc
 715              	.LFE41:
 716              		.size	textMode, .-textMode
 717              		.section	.text.textSetCursor,"ax",%progbits
 718              		.align	2
 719              		.global	textSetCursor
 720              		.code	16
 721              		.thumb_func
 722              		.type	textSetCursor, %function
 723              	textSetCursor:
 724              	.LFB42:
 312:RA8875.c      **** 
 313:RA8875.c      **** /**************************************************************************/
 314:RA8875.c      **** /*!
 315:RA8875.c      ****       Sets the display in text mode (as opposed to graphics mode)
 316:RA8875.c      ****       
 317:RA8875.c      ****       @args x[in] The x position of the cursor (in pixels, 0..1023)
 318:RA8875.c      ****       @args y[in] The y position of the cursor (in pixels, 0..511)
 319:RA8875.c      **** */
 320:RA8875.c      **** /**************************************************************************/
 321:RA8875.c      **** void textSetCursor(uint16_t x, uint16_t y) 
 322:RA8875.c      **** {
 725              		.loc 1 322 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 82B0     		sub	sp, sp, #8
 734              		.cfi_def_cfa_offset 16
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 0200     		movs	r2, r0
 738 0008 BB1D     		adds	r3, r7, #6
 739 000a 1A80     		strh	r2, [r3]
 740 000c 3B1D     		adds	r3, r7, #4
 741 000e 0A1C     		adds	r2, r1, #0
 742 0010 1A80     		strh	r2, [r3]
 323:RA8875.c      ****   /* Set cursor location */
 324:RA8875.c      ****   writeCommand(0x2A);
 743              		.loc 1 324 0
 744 0012 2A20     		movs	r0, #42
 745 0014 FFF7FEFF 		bl	writeCommand
 325:RA8875.c      ****   writeData(x & 0xFF);
 746              		.loc 1 325 0
 747 0018 BB1D     		adds	r3, r7, #6
 748 001a 1B88     		ldrh	r3, [r3]
 749 001c DBB2     		uxtb	r3, r3
 750 001e 1800     		movs	r0, r3
 751 0020 FFF7FEFF 		bl	writeData
 326:RA8875.c      ****   writeCommand(0x2B);
 752              		.loc 1 326 0
 753 0024 2B20     		movs	r0, #43
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 20


 754 0026 FFF7FEFF 		bl	writeCommand
 327:RA8875.c      ****   writeData(x >> 8);
 755              		.loc 1 327 0
 756 002a BB1D     		adds	r3, r7, #6
 757 002c 1B88     		ldrh	r3, [r3]
 758 002e 1B0A     		lsrs	r3, r3, #8
 759 0030 9BB2     		uxth	r3, r3
 760 0032 DBB2     		uxtb	r3, r3
 761 0034 1800     		movs	r0, r3
 762 0036 FFF7FEFF 		bl	writeData
 328:RA8875.c      ****   writeCommand(0x2C);
 763              		.loc 1 328 0
 764 003a 2C20     		movs	r0, #44
 765 003c FFF7FEFF 		bl	writeCommand
 329:RA8875.c      ****   writeData(y & 0xFF);
 766              		.loc 1 329 0
 767 0040 3B1D     		adds	r3, r7, #4
 768 0042 1B88     		ldrh	r3, [r3]
 769 0044 DBB2     		uxtb	r3, r3
 770 0046 1800     		movs	r0, r3
 771 0048 FFF7FEFF 		bl	writeData
 330:RA8875.c      ****   writeCommand(0x2D);
 772              		.loc 1 330 0
 773 004c 2D20     		movs	r0, #45
 774 004e FFF7FEFF 		bl	writeCommand
 331:RA8875.c      ****   writeData(y >> 8);
 775              		.loc 1 331 0
 776 0052 3B1D     		adds	r3, r7, #4
 777 0054 1B88     		ldrh	r3, [r3]
 778 0056 1B0A     		lsrs	r3, r3, #8
 779 0058 9BB2     		uxth	r3, r3
 780 005a DBB2     		uxtb	r3, r3
 781 005c 1800     		movs	r0, r3
 782 005e FFF7FEFF 		bl	writeData
 332:RA8875.c      **** }
 783              		.loc 1 332 0
 784 0062 C046     		nop
 785 0064 BD46     		mov	sp, r7
 786 0066 02B0     		add	sp, sp, #8
 787              		@ sp needed
 788 0068 80BD     		pop	{r7, pc}
 789              		.cfi_endproc
 790              	.LFE42:
 791              		.size	textSetCursor, .-textSetCursor
 792 006a C046     		.section	.text.textColor,"ax",%progbits
 793              		.align	2
 794              		.global	textColor
 795              		.code	16
 796              		.thumb_func
 797              		.type	textColor, %function
 798              	textColor:
 799              	.LFB43:
 333:RA8875.c      **** 
 334:RA8875.c      **** /**************************************************************************/
 335:RA8875.c      **** /*!
 336:RA8875.c      ****       Sets the fore and background color when rendering text
 337:RA8875.c      ****       
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 21


 338:RA8875.c      ****       @args foreColor[in] The RGB565 color to use when rendering the text
 339:RA8875.c      ****       @args bgColor[in]   The RGB565 colot to use for the background
 340:RA8875.c      **** */
 341:RA8875.c      **** /**************************************************************************/
 342:RA8875.c      **** void textColor(uint16_t foreColor, uint16_t bgColor)
 343:RA8875.c      **** {
 800              		.loc 1 343 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 16
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 84B0     		sub	sp, sp, #16
 809              		.cfi_def_cfa_offset 24
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 0200     		movs	r2, r0
 813 0008 BB1D     		adds	r3, r7, #6
 814 000a 1A80     		strh	r2, [r3]
 815 000c 3B1D     		adds	r3, r7, #4
 816 000e 0A1C     		adds	r2, r1, #0
 817 0010 1A80     		strh	r2, [r3]
 344:RA8875.c      ****   /* Set Fore Color */
 345:RA8875.c      ****   writeCommand(0x63);
 818              		.loc 1 345 0
 819 0012 6320     		movs	r0, #99
 820 0014 FFF7FEFF 		bl	writeCommand
 346:RA8875.c      ****   writeData((foreColor & 0xf800) >> 11);
 821              		.loc 1 346 0
 822 0018 BB1D     		adds	r3, r7, #6
 823 001a 1B88     		ldrh	r3, [r3]
 824 001c DB0A     		lsrs	r3, r3, #11
 825 001e 9BB2     		uxth	r3, r3
 826 0020 DBB2     		uxtb	r3, r3
 827 0022 1800     		movs	r0, r3
 828 0024 FFF7FEFF 		bl	writeData
 347:RA8875.c      ****   writeCommand(0x64);
 829              		.loc 1 347 0
 830 0028 6420     		movs	r0, #100
 831 002a FFF7FEFF 		bl	writeCommand
 348:RA8875.c      ****   writeData((foreColor & 0x07e0) >> 5);
 832              		.loc 1 348 0
 833 002e BB1D     		adds	r3, r7, #6
 834 0030 1B88     		ldrh	r3, [r3]
 835 0032 5B11     		asrs	r3, r3, #5
 836 0034 DBB2     		uxtb	r3, r3
 837 0036 3F22     		movs	r2, #63
 838 0038 1340     		ands	r3, r2
 839 003a DBB2     		uxtb	r3, r3
 840 003c 1800     		movs	r0, r3
 841 003e FFF7FEFF 		bl	writeData
 349:RA8875.c      ****   writeCommand(0x65);
 842              		.loc 1 349 0
 843 0042 6520     		movs	r0, #101
 844 0044 FFF7FEFF 		bl	writeCommand
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 22


 350:RA8875.c      ****   writeData((foreColor & 0x001f));
 845              		.loc 1 350 0
 846 0048 BB1D     		adds	r3, r7, #6
 847 004a 1B88     		ldrh	r3, [r3]
 848 004c DBB2     		uxtb	r3, r3
 849 004e 1F22     		movs	r2, #31
 850 0050 1340     		ands	r3, r2
 851 0052 DBB2     		uxtb	r3, r3
 852 0054 1800     		movs	r0, r3
 853 0056 FFF7FEFF 		bl	writeData
 351:RA8875.c      ****   
 352:RA8875.c      ****   /* Set Background Color */
 353:RA8875.c      ****   writeCommand(0x60);
 854              		.loc 1 353 0
 855 005a 6020     		movs	r0, #96
 856 005c FFF7FEFF 		bl	writeCommand
 354:RA8875.c      ****   writeData((bgColor & 0xf800) >> 11);
 857              		.loc 1 354 0
 858 0060 3B1D     		adds	r3, r7, #4
 859 0062 1B88     		ldrh	r3, [r3]
 860 0064 DB0A     		lsrs	r3, r3, #11
 861 0066 9BB2     		uxth	r3, r3
 862 0068 DBB2     		uxtb	r3, r3
 863 006a 1800     		movs	r0, r3
 864 006c FFF7FEFF 		bl	writeData
 355:RA8875.c      ****   writeCommand(0x61);
 865              		.loc 1 355 0
 866 0070 6120     		movs	r0, #97
 867 0072 FFF7FEFF 		bl	writeCommand
 356:RA8875.c      ****   writeData((bgColor & 0x07e0) >> 5);
 868              		.loc 1 356 0
 869 0076 3B1D     		adds	r3, r7, #4
 870 0078 1B88     		ldrh	r3, [r3]
 871 007a 5B11     		asrs	r3, r3, #5
 872 007c DBB2     		uxtb	r3, r3
 873 007e 3F22     		movs	r2, #63
 874 0080 1340     		ands	r3, r2
 875 0082 DBB2     		uxtb	r3, r3
 876 0084 1800     		movs	r0, r3
 877 0086 FFF7FEFF 		bl	writeData
 357:RA8875.c      ****   writeCommand(0x62);
 878              		.loc 1 357 0
 879 008a 6220     		movs	r0, #98
 880 008c FFF7FEFF 		bl	writeCommand
 358:RA8875.c      ****   writeData((bgColor & 0x001f));
 881              		.loc 1 358 0
 882 0090 3B1D     		adds	r3, r7, #4
 883 0092 1B88     		ldrh	r3, [r3]
 884 0094 DBB2     		uxtb	r3, r3
 885 0096 1F22     		movs	r2, #31
 886 0098 1340     		ands	r3, r2
 887 009a DBB2     		uxtb	r3, r3
 888 009c 1800     		movs	r0, r3
 889 009e FFF7FEFF 		bl	writeData
 359:RA8875.c      ****   
 360:RA8875.c      ****   /* Clear transparency flag */
 361:RA8875.c      ****   writeCommand(0x22);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 23


 890              		.loc 1 361 0
 891 00a2 2220     		movs	r0, #34
 892 00a4 FFF7FEFF 		bl	writeCommand
 362:RA8875.c      ****   uint8_t temp = readData();
 893              		.loc 1 362 0
 894 00a8 FFF7FEFF 		bl	readData
 895 00ac 0200     		movs	r2, r0
 896 00ae 0F23     		movs	r3, #15
 897 00b0 FB18     		adds	r3, r7, r3
 898 00b2 1A70     		strb	r2, [r3]
 363:RA8875.c      ****   temp &= ~(1<<6); // Clear bit 6
 899              		.loc 1 363 0
 900 00b4 0F23     		movs	r3, #15
 901 00b6 FB18     		adds	r3, r7, r3
 902 00b8 0F22     		movs	r2, #15
 903 00ba BA18     		adds	r2, r7, r2
 904 00bc 1278     		ldrb	r2, [r2]
 905 00be 4021     		movs	r1, #64
 906 00c0 8A43     		bics	r2, r1
 907 00c2 1A70     		strb	r2, [r3]
 364:RA8875.c      ****   writeData(temp);
 908              		.loc 1 364 0
 909 00c4 0F23     		movs	r3, #15
 910 00c6 FB18     		adds	r3, r7, r3
 911 00c8 1B78     		ldrb	r3, [r3]
 912 00ca 1800     		movs	r0, r3
 913 00cc FFF7FEFF 		bl	writeData
 365:RA8875.c      **** }
 914              		.loc 1 365 0
 915 00d0 C046     		nop
 916 00d2 BD46     		mov	sp, r7
 917 00d4 04B0     		add	sp, sp, #16
 918              		@ sp needed
 919 00d6 80BD     		pop	{r7, pc}
 920              		.cfi_endproc
 921              	.LFE43:
 922              		.size	textColor, .-textColor
 923              		.section	.text.textTransparent,"ax",%progbits
 924              		.align	2
 925              		.global	textTransparent
 926              		.code	16
 927              		.thumb_func
 928              		.type	textTransparent, %function
 929              	textTransparent:
 930              	.LFB44:
 366:RA8875.c      **** 
 367:RA8875.c      **** /**************************************************************************/
 368:RA8875.c      **** /*!
 369:RA8875.c      ****       Sets the fore color when rendering text with a transparent bg
 370:RA8875.c      ****       
 371:RA8875.c      ****       @args foreColor[in] The RGB565 color to use when rendering the text
 372:RA8875.c      **** */
 373:RA8875.c      **** /**************************************************************************/
 374:RA8875.c      **** void textTransparent(uint16_t foreColor)
 375:RA8875.c      **** {
 931              		.loc 1 375 0
 932              		.cfi_startproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 24


 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 0200     		movs	r2, r0
 944 0008 BB1D     		adds	r3, r7, #6
 945 000a 1A80     		strh	r2, [r3]
 376:RA8875.c      ****   /* Set Fore Color */
 377:RA8875.c      ****   writeCommand(0x63);
 946              		.loc 1 377 0
 947 000c 6320     		movs	r0, #99
 948 000e FFF7FEFF 		bl	writeCommand
 378:RA8875.c      ****   writeData((foreColor & 0xf800) >> 11);
 949              		.loc 1 378 0
 950 0012 BB1D     		adds	r3, r7, #6
 951 0014 1B88     		ldrh	r3, [r3]
 952 0016 DB0A     		lsrs	r3, r3, #11
 953 0018 9BB2     		uxth	r3, r3
 954 001a DBB2     		uxtb	r3, r3
 955 001c 1800     		movs	r0, r3
 956 001e FFF7FEFF 		bl	writeData
 379:RA8875.c      ****   writeCommand(0x64);
 957              		.loc 1 379 0
 958 0022 6420     		movs	r0, #100
 959 0024 FFF7FEFF 		bl	writeCommand
 380:RA8875.c      ****   writeData((foreColor & 0x07e0) >> 5);
 960              		.loc 1 380 0
 961 0028 BB1D     		adds	r3, r7, #6
 962 002a 1B88     		ldrh	r3, [r3]
 963 002c 5B11     		asrs	r3, r3, #5
 964 002e DBB2     		uxtb	r3, r3
 965 0030 3F22     		movs	r2, #63
 966 0032 1340     		ands	r3, r2
 967 0034 DBB2     		uxtb	r3, r3
 968 0036 1800     		movs	r0, r3
 969 0038 FFF7FEFF 		bl	writeData
 381:RA8875.c      ****   writeCommand(0x65);
 970              		.loc 1 381 0
 971 003c 6520     		movs	r0, #101
 972 003e FFF7FEFF 		bl	writeCommand
 382:RA8875.c      ****   writeData((foreColor & 0x001f));
 973              		.loc 1 382 0
 974 0042 BB1D     		adds	r3, r7, #6
 975 0044 1B88     		ldrh	r3, [r3]
 976 0046 DBB2     		uxtb	r3, r3
 977 0048 1F22     		movs	r2, #31
 978 004a 1340     		ands	r3, r2
 979 004c DBB2     		uxtb	r3, r3
 980 004e 1800     		movs	r0, r3
 981 0050 FFF7FEFF 		bl	writeData
 383:RA8875.c      **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 25


 384:RA8875.c      ****   /* Set transparency flag */
 385:RA8875.c      ****   writeCommand(0x22);
 982              		.loc 1 385 0
 983 0054 2220     		movs	r0, #34
 984 0056 FFF7FEFF 		bl	writeCommand
 386:RA8875.c      ****   uint8_t temp = readData();
 985              		.loc 1 386 0
 986 005a FFF7FEFF 		bl	readData
 987 005e 0200     		movs	r2, r0
 988 0060 0F23     		movs	r3, #15
 989 0062 FB18     		adds	r3, r7, r3
 990 0064 1A70     		strb	r2, [r3]
 387:RA8875.c      ****   temp |= (1<<6); // Set bit 6
 991              		.loc 1 387 0
 992 0066 0F23     		movs	r3, #15
 993 0068 FB18     		adds	r3, r7, r3
 994 006a 0F22     		movs	r2, #15
 995 006c BA18     		adds	r2, r7, r2
 996 006e 1278     		ldrb	r2, [r2]
 997 0070 4021     		movs	r1, #64
 998 0072 0A43     		orrs	r2, r1
 999 0074 1A70     		strb	r2, [r3]
 388:RA8875.c      ****   writeData(temp);  
 1000              		.loc 1 388 0
 1001 0076 0F23     		movs	r3, #15
 1002 0078 FB18     		adds	r3, r7, r3
 1003 007a 1B78     		ldrb	r3, [r3]
 1004 007c 1800     		movs	r0, r3
 1005 007e FFF7FEFF 		bl	writeData
 389:RA8875.c      **** }
 1006              		.loc 1 389 0
 1007 0082 C046     		nop
 1008 0084 BD46     		mov	sp, r7
 1009 0086 04B0     		add	sp, sp, #16
 1010              		@ sp needed
 1011 0088 80BD     		pop	{r7, pc}
 1012              		.cfi_endproc
 1013              	.LFE44:
 1014              		.size	textTransparent, .-textTransparent
 1015 008a C046     		.section	.text.textEnlarge,"ax",%progbits
 1016              		.align	2
 1017              		.global	textEnlarge
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	textEnlarge, %function
 1021              	textEnlarge:
 1022              	.LFB45:
 390:RA8875.c      **** 
 391:RA8875.c      **** /**************************************************************************/
 392:RA8875.c      **** /*!
 393:RA8875.c      ****       Sets the text enlarge settings, using one of the following values:
 394:RA8875.c      ****       
 395:RA8875.c      ****       0 = 1x zoom
 396:RA8875.c      ****       1 = 2x zoom
 397:RA8875.c      ****       2 = 3x zoom
 398:RA8875.c      ****       3 = 4x zoom
 399:RA8875.c      ****       
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 26


 400:RA8875.c      ****       @args scale[in]   The zoom factor (0..3 for 1-4x zoom)
 401:RA8875.c      **** */
 402:RA8875.c      **** /**************************************************************************/
 403:RA8875.c      **** void textEnlarge(uint8_t scale)
 404:RA8875.c      **** {
 1023              		.loc 1 404 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 16
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 84B0     		sub	sp, sp, #16
 1032              		.cfi_def_cfa_offset 24
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 1035 0006 0200     		movs	r2, r0
 1036 0008 FB1D     		adds	r3, r7, #7
 1037 000a 1A70     		strb	r2, [r3]
 405:RA8875.c      ****   if (scale > 3) scale = 3;
 1038              		.loc 1 405 0
 1039 000c FB1D     		adds	r3, r7, #7
 1040 000e 1B78     		ldrb	r3, [r3]
 1041 0010 032B     		cmp	r3, #3
 1042 0012 02D9     		bls	.L34
 1043              		.loc 1 405 0 is_stmt 0 discriminator 1
 1044 0014 FB1D     		adds	r3, r7, #7
 1045 0016 0322     		movs	r2, #3
 1046 0018 1A70     		strb	r2, [r3]
 1047              	.L34:
 406:RA8875.c      **** 
 407:RA8875.c      ****   /* Set font size flags */
 408:RA8875.c      ****   writeCommand(0x22);
 1048              		.loc 1 408 0 is_stmt 1
 1049 001a 2220     		movs	r0, #34
 1050 001c FFF7FEFF 		bl	writeCommand
 409:RA8875.c      ****   uint8_t temp = readData();
 1051              		.loc 1 409 0
 1052 0020 FFF7FEFF 		bl	readData
 1053 0024 0200     		movs	r2, r0
 1054 0026 0F23     		movs	r3, #15
 1055 0028 FB18     		adds	r3, r7, r3
 1056 002a 1A70     		strb	r2, [r3]
 410:RA8875.c      ****   temp &= ~(0xF); // Clears bits 0..3
 1057              		.loc 1 410 0
 1058 002c 0F23     		movs	r3, #15
 1059 002e FB18     		adds	r3, r7, r3
 1060 0030 0F22     		movs	r2, #15
 1061 0032 BA18     		adds	r2, r7, r2
 1062 0034 1278     		ldrb	r2, [r2]
 1063 0036 0F21     		movs	r1, #15
 1064 0038 8A43     		bics	r2, r1
 1065 003a 1A70     		strb	r2, [r3]
 411:RA8875.c      ****   temp |= scale << 2;
 1066              		.loc 1 411 0
 1067 003c FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 27


 1068 003e 1B78     		ldrb	r3, [r3]
 1069 0040 9B00     		lsls	r3, r3, #2
 1070 0042 5AB2     		sxtb	r2, r3
 1071 0044 0F23     		movs	r3, #15
 1072 0046 FB18     		adds	r3, r7, r3
 1073 0048 1B78     		ldrb	r3, [r3]
 1074 004a 5BB2     		sxtb	r3, r3
 1075 004c 1343     		orrs	r3, r2
 1076 004e 5AB2     		sxtb	r2, r3
 1077 0050 0F23     		movs	r3, #15
 1078 0052 FB18     		adds	r3, r7, r3
 1079 0054 1A70     		strb	r2, [r3]
 412:RA8875.c      ****   temp |= scale;
 1080              		.loc 1 412 0
 1081 0056 0F23     		movs	r3, #15
 1082 0058 FB18     		adds	r3, r7, r3
 1083 005a 0F22     		movs	r2, #15
 1084 005c B918     		adds	r1, r7, r2
 1085 005e FA1D     		adds	r2, r7, #7
 1086 0060 0978     		ldrb	r1, [r1]
 1087 0062 1278     		ldrb	r2, [r2]
 1088 0064 0A43     		orrs	r2, r1
 1089 0066 1A70     		strb	r2, [r3]
 413:RA8875.c      ****   writeData(temp);  
 1090              		.loc 1 413 0
 1091 0068 0F23     		movs	r3, #15
 1092 006a FB18     		adds	r3, r7, r3
 1093 006c 1B78     		ldrb	r3, [r3]
 1094 006e 1800     		movs	r0, r3
 1095 0070 FFF7FEFF 		bl	writeData
 414:RA8875.c      **** 
 415:RA8875.c      ****   _textScale = scale;
 1096              		.loc 1 415 0
 1097 0074 034B     		ldr	r3, .L35
 1098 0076 FA1D     		adds	r2, r7, #7
 1099 0078 1278     		ldrb	r2, [r2]
 1100 007a 1A70     		strb	r2, [r3]
 416:RA8875.c      **** }
 1101              		.loc 1 416 0
 1102 007c C046     		nop
 1103 007e BD46     		mov	sp, r7
 1104 0080 04B0     		add	sp, sp, #16
 1105              		@ sp needed
 1106 0082 80BD     		pop	{r7, pc}
 1107              	.L36:
 1108              		.align	2
 1109              	.L35:
 1110 0084 00000000 		.word	_textScale
 1111              		.cfi_endproc
 1112              	.LFE45:
 1113              		.size	textEnlarge, .-textEnlarge
 1114              		.section	.text.textWrite,"ax",%progbits
 1115              		.align	2
 1116              		.global	textWrite
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	textWrite, %function
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 28


 1120              	textWrite:
 1121              	.LFB46:
 417:RA8875.c      **** 
 418:RA8875.c      **** /**************************************************************************/
 419:RA8875.c      **** /*!
 420:RA8875.c      ****       Renders some text on the screen when in text mode
 421:RA8875.c      ****       
 422:RA8875.c      ****       @args buffer[in]    The buffer containing the characters to render
 423:RA8875.c      ****       @args len[in]       The size of the buffer in bytes
 424:RA8875.c      **** */
 425:RA8875.c      **** /**************************************************************************/
 426:RA8875.c      **** void textWrite(const char* buffer, uint16_t len) 
 427:RA8875.c      **** {
 1122              		.loc 1 427 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 16
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126 0000 80B5     		push	{r7, lr}
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 84B0     		sub	sp, sp, #16
 1131              		.cfi_def_cfa_offset 24
 1132 0004 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 1134 0006 7860     		str	r0, [r7, #4]
 1135 0008 0A00     		movs	r2, r1
 1136 000a BB1C     		adds	r3, r7, #2
 1137 000c 1A80     		strh	r2, [r3]
 428:RA8875.c      ****   if (len == 0) len = strlen(buffer);
 1138              		.loc 1 428 0
 1139 000e BB1C     		adds	r3, r7, #2
 1140 0010 1B88     		ldrh	r3, [r3]
 1141 0012 002B     		cmp	r3, #0
 1142 0014 06D1     		bne	.L38
 1143              		.loc 1 428 0 is_stmt 0 discriminator 1
 1144 0016 7B68     		ldr	r3, [r7, #4]
 1145 0018 1800     		movs	r0, r3
 1146 001a FFF7FEFF 		bl	strlen
 1147 001e 0200     		movs	r2, r0
 1148 0020 BB1C     		adds	r3, r7, #2
 1149 0022 1A80     		strh	r2, [r3]
 1150              	.L38:
 429:RA8875.c      ****   writeCommand(RA8875_MRWC);
 1151              		.loc 1 429 0 is_stmt 1
 1152 0024 0220     		movs	r0, #2
 1153 0026 FFF7FEFF 		bl	writeCommand
 1154              	.LBB2:
 430:RA8875.c      ****   for (uint16_t i=0;i<len;i++)
 1155              		.loc 1 430 0
 1156 002a 0E23     		movs	r3, #14
 1157 002c FB18     		adds	r3, r7, r3
 1158 002e 0022     		movs	r2, #0
 1159 0030 1A80     		strh	r2, [r3]
 1160 0032 16E0     		b	.L39
 1161              	.L41:
 431:RA8875.c      ****   {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 29


 432:RA8875.c      ****     writeData(buffer[i]);
 1162              		.loc 1 432 0
 1163 0034 0E23     		movs	r3, #14
 1164 0036 FB18     		adds	r3, r7, r3
 1165 0038 1B88     		ldrh	r3, [r3]
 1166 003a 7A68     		ldr	r2, [r7, #4]
 1167 003c D318     		adds	r3, r2, r3
 1168 003e 1B78     		ldrb	r3, [r3]
 1169 0040 1800     		movs	r0, r3
 1170 0042 FFF7FEFF 		bl	writeData
 433:RA8875.c      **** #if defined(__AVR__)
 434:RA8875.c      ****     if (_textScale > 1) delay(1);
 435:RA8875.c      **** #elif defined(__arm__)
 436:RA8875.c      ****     // This delay is needed with textEnlarge(1) because
 437:RA8875.c      ****     // Teensy 3.X is much faster than Arduino Uno
 438:RA8875.c      ****     if (_textScale > 0) CyDelay(1);
 1171              		.loc 1 438 0
 1172 0046 0C4B     		ldr	r3, .L42
 1173 0048 1B78     		ldrb	r3, [r3]
 1174 004a 002B     		cmp	r3, #0
 1175 004c 02D0     		beq	.L40
 1176              		.loc 1 438 0 is_stmt 0 discriminator 1
 1177 004e 0120     		movs	r0, #1
 1178 0050 FFF7FEFF 		bl	CyDelay
 1179              	.L40:
 430:RA8875.c      ****   {
 1180              		.loc 1 430 0 is_stmt 1 discriminator 2
 1181 0054 0E23     		movs	r3, #14
 1182 0056 FB18     		adds	r3, r7, r3
 1183 0058 1A88     		ldrh	r2, [r3]
 1184 005a 0E23     		movs	r3, #14
 1185 005c FB18     		adds	r3, r7, r3
 1186 005e 0132     		adds	r2, r2, #1
 1187 0060 1A80     		strh	r2, [r3]
 1188              	.L39:
 430:RA8875.c      ****   {
 1189              		.loc 1 430 0 is_stmt 0 discriminator 1
 1190 0062 0E23     		movs	r3, #14
 1191 0064 FA18     		adds	r2, r7, r3
 1192 0066 BB1C     		adds	r3, r7, #2
 1193 0068 1288     		ldrh	r2, [r2]
 1194 006a 1B88     		ldrh	r3, [r3]
 1195 006c 9A42     		cmp	r2, r3
 1196 006e E1D3     		bcc	.L41
 1197              	.LBE2:
 439:RA8875.c      **** #endif
 440:RA8875.c      ****   }
 441:RA8875.c      **** }
 1198              		.loc 1 441 0 is_stmt 1
 1199 0070 C046     		nop
 1200 0072 BD46     		mov	sp, r7
 1201 0074 04B0     		add	sp, sp, #16
 1202              		@ sp needed
 1203 0076 80BD     		pop	{r7, pc}
 1204              	.L43:
 1205              		.align	2
 1206              	.L42:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 30


 1207 0078 00000000 		.word	_textScale
 1208              		.cfi_endproc
 1209              	.LFE46:
 1210              		.size	textWrite, .-textWrite
 1211              		.section	.text.graphicsMode,"ax",%progbits
 1212              		.align	2
 1213              		.global	graphicsMode
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	graphicsMode, %function
 1217              	graphicsMode:
 1218              	.LFB47:
 442:RA8875.c      **** 
 443:RA8875.c      **** /************************* Graphics ***********************************/
 444:RA8875.c      **** 
 445:RA8875.c      **** /**************************************************************************/
 446:RA8875.c      **** /*!
 447:RA8875.c      ****       Sets the display in graphics mode (as opposed to text mode)
 448:RA8875.c      **** */
 449:RA8875.c      **** /**************************************************************************/
 450:RA8875.c      **** void graphicsMode(void) {
 1219              		.loc 1 450 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 8
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 82B0     		sub	sp, sp, #8
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 451:RA8875.c      ****   writeCommand(RA8875_MWCR0);
 1231              		.loc 1 451 0
 1232 0006 4020     		movs	r0, #64
 1233 0008 FFF7FEFF 		bl	writeCommand
 452:RA8875.c      ****   uint8_t temp = readData();
 1234              		.loc 1 452 0
 1235 000c FFF7FEFF 		bl	readData
 1236 0010 0200     		movs	r2, r0
 1237 0012 FB1D     		adds	r3, r7, #7
 1238 0014 1A70     		strb	r2, [r3]
 453:RA8875.c      ****   temp &= ~RA8875_MWCR0_TXTMODE; // bit #7
 1239              		.loc 1 453 0
 1240 0016 FB1D     		adds	r3, r7, #7
 1241 0018 FA1D     		adds	r2, r7, #7
 1242 001a 1278     		ldrb	r2, [r2]
 1243 001c 7F21     		movs	r1, #127
 1244 001e 0A40     		ands	r2, r1
 1245 0020 1A70     		strb	r2, [r3]
 454:RA8875.c      ****   writeData(temp);
 1246              		.loc 1 454 0
 1247 0022 FB1D     		adds	r3, r7, #7
 1248 0024 1B78     		ldrb	r3, [r3]
 1249 0026 1800     		movs	r0, r3
 1250 0028 FFF7FEFF 		bl	writeData
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 31


 455:RA8875.c      **** }
 1251              		.loc 1 455 0
 1252 002c C046     		nop
 1253 002e BD46     		mov	sp, r7
 1254 0030 02B0     		add	sp, sp, #8
 1255              		@ sp needed
 1256 0032 80BD     		pop	{r7, pc}
 1257              		.cfi_endproc
 1258              	.LFE47:
 1259              		.size	graphicsMode, .-graphicsMode
 1260              		.section	.text.waitPoll,"ax",%progbits
 1261              		.align	2
 1262              		.global	waitPoll
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	waitPoll, %function
 1266              	waitPoll:
 1267              	.LFB48:
 456:RA8875.c      **** 
 457:RA8875.c      **** /**************************************************************************/
 458:RA8875.c      **** /*!
 459:RA8875.c      ****       Waits for screen to finish by polling the status!
 460:RA8875.c      **** */
 461:RA8875.c      **** /**************************************************************************/
 462:RA8875.c      **** boolean waitPoll(uint8_t regname, uint8_t waitflag) {
 1268              		.loc 1 462 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 16
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 84B0     		sub	sp, sp, #16
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 1280 0006 0200     		movs	r2, r0
 1281 0008 FB1D     		adds	r3, r7, #7
 1282 000a 1A70     		strb	r2, [r3]
 1283 000c BB1D     		adds	r3, r7, #6
 1284 000e 0A1C     		adds	r2, r1, #0
 1285 0010 1A70     		strb	r2, [r3]
 1286              	.L48:
 1287              	.LBB3:
 463:RA8875.c      ****   /* Wait for the command to finish */
 464:RA8875.c      ****   while (1)
 465:RA8875.c      ****   {
 466:RA8875.c      ****     uint8_t temp = readReg(regname);
 1288              		.loc 1 466 0
 1289 0012 FB1D     		adds	r3, r7, #7
 1290 0014 1B78     		ldrb	r3, [r3]
 1291 0016 1800     		movs	r0, r3
 1292 0018 FFF7FEFF 		bl	readReg
 1293 001c 0200     		movs	r2, r0
 1294 001e 0F23     		movs	r3, #15
 1295 0020 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 32


 1296 0022 1A70     		strb	r2, [r3]
 467:RA8875.c      ****     if (!(temp & waitflag))
 1297              		.loc 1 467 0
 1298 0024 0F23     		movs	r3, #15
 1299 0026 FB18     		adds	r3, r7, r3
 1300 0028 BA1D     		adds	r2, r7, #6
 1301 002a 1B78     		ldrb	r3, [r3]
 1302 002c 1278     		ldrb	r2, [r2]
 1303 002e 1340     		ands	r3, r2
 1304 0030 DBB2     		uxtb	r3, r3
 1305 0032 002B     		cmp	r3, #0
 1306 0034 EDD1     		bne	.L48
 468:RA8875.c      ****       return true;
 1307              		.loc 1 468 0
 1308 0036 0123     		movs	r3, #1
 1309              	.LBE3:
 469:RA8875.c      ****   }  
 470:RA8875.c      ****   return false; // MEMEFIX: yeah i know, unreached! - add timeout?
 471:RA8875.c      **** }
 1310              		.loc 1 471 0
 1311 0038 1800     		movs	r0, r3
 1312 003a BD46     		mov	sp, r7
 1313 003c 04B0     		add	sp, sp, #16
 1314              		@ sp needed
 1315 003e 80BD     		pop	{r7, pc}
 1316              		.cfi_endproc
 1317              	.LFE48:
 1318              		.size	waitPoll, .-waitPoll
 1319              		.section	.text.setXY,"ax",%progbits
 1320              		.align	2
 1321              		.global	setXY
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	setXY, %function
 1325              	setXY:
 1326              	.LFB49:
 472:RA8875.c      **** 
 473:RA8875.c      **** 
 474:RA8875.c      **** /**************************************************************************/
 475:RA8875.c      **** /*!
 476:RA8875.c      ****       Sets the current X/Y position on the display before drawing
 477:RA8875.c      ****       
 478:RA8875.c      ****       @args x[in] The 0-based x location
 479:RA8875.c      ****       @args y[in] The 0-base y location
 480:RA8875.c      **** */
 481:RA8875.c      **** /**************************************************************************/
 482:RA8875.c      **** void setXY(uint16_t x, uint16_t y) {
 1327              		.loc 1 482 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 8
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331 0000 80B5     		push	{r7, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 82B0     		sub	sp, sp, #8
 1336              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 33


 1337 0004 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 1339 0006 0200     		movs	r2, r0
 1340 0008 BB1D     		adds	r3, r7, #6
 1341 000a 1A80     		strh	r2, [r3]
 1342 000c 3B1D     		adds	r3, r7, #4
 1343 000e 0A1C     		adds	r2, r1, #0
 1344 0010 1A80     		strh	r2, [r3]
 483:RA8875.c      ****   writeReg(RA8875_CURH0, x);
 1345              		.loc 1 483 0
 1346 0012 BB1D     		adds	r3, r7, #6
 1347 0014 1B88     		ldrh	r3, [r3]
 1348 0016 DBB2     		uxtb	r3, r3
 1349 0018 1900     		movs	r1, r3
 1350 001a 4620     		movs	r0, #70
 1351 001c FFF7FEFF 		bl	writeReg
 484:RA8875.c      ****   writeReg(RA8875_CURH1, x >> 8);
 1352              		.loc 1 484 0
 1353 0020 BB1D     		adds	r3, r7, #6
 1354 0022 1B88     		ldrh	r3, [r3]
 1355 0024 1B0A     		lsrs	r3, r3, #8
 1356 0026 9BB2     		uxth	r3, r3
 1357 0028 DBB2     		uxtb	r3, r3
 1358 002a 1900     		movs	r1, r3
 1359 002c 4720     		movs	r0, #71
 1360 002e FFF7FEFF 		bl	writeReg
 485:RA8875.c      ****   writeReg(RA8875_CURV0, y);
 1361              		.loc 1 485 0
 1362 0032 3B1D     		adds	r3, r7, #4
 1363 0034 1B88     		ldrh	r3, [r3]
 1364 0036 DBB2     		uxtb	r3, r3
 1365 0038 1900     		movs	r1, r3
 1366 003a 4820     		movs	r0, #72
 1367 003c FFF7FEFF 		bl	writeReg
 486:RA8875.c      ****   writeReg(RA8875_CURV1, y >> 8);  
 1368              		.loc 1 486 0
 1369 0040 3B1D     		adds	r3, r7, #4
 1370 0042 1B88     		ldrh	r3, [r3]
 1371 0044 1B0A     		lsrs	r3, r3, #8
 1372 0046 9BB2     		uxth	r3, r3
 1373 0048 DBB2     		uxtb	r3, r3
 1374 004a 1900     		movs	r1, r3
 1375 004c 4920     		movs	r0, #73
 1376 004e FFF7FEFF 		bl	writeReg
 487:RA8875.c      **** }
 1377              		.loc 1 487 0
 1378 0052 C046     		nop
 1379 0054 BD46     		mov	sp, r7
 1380 0056 02B0     		add	sp, sp, #8
 1381              		@ sp needed
 1382 0058 80BD     		pop	{r7, pc}
 1383              		.cfi_endproc
 1384              	.LFE49:
 1385              		.size	setXY, .-setXY
 1386 005a C046     		.section	.text.pushPixels,"ax",%progbits
 1387              		.align	2
 1388              		.global	pushPixels
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 34


 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	pushPixels, %function
 1392              	pushPixels:
 1393              	.LFB50:
 488:RA8875.c      **** 
 489:RA8875.c      **** /**************************************************************************/
 490:RA8875.c      **** /*!
 491:RA8875.c      ****       HW accelerated function to push a chunk of raw pixel data
 492:RA8875.c      ****       
 493:RA8875.c      ****       @args num[in] The number of pixels to push
 494:RA8875.c      ****       @args p[in]   The pixel color to use
 495:RA8875.c      **** */
 496:RA8875.c      **** /**************************************************************************/
 497:RA8875.c      **** void pushPixels(uint32_t num, uint16_t p) {
 1394              		.loc 1 497 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 8
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 82B0     		sub	sp, sp, #8
 1403              		.cfi_def_cfa_offset 16
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
 1407 0008 0A00     		movs	r2, r1
 1408 000a BB1C     		adds	r3, r7, #2
 1409 000c 1A80     		strh	r2, [r3]
 498:RA8875.c      ****     LCDSPI_Start(); 
 1410              		.loc 1 498 0
 1411 000e FFF7FEFF 		bl	LCDSPI_Start
 499:RA8875.c      ****  
 500:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 1412              		.loc 1 500 0
 1413 0012 0020     		movs	r0, #0
 1414 0014 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 501:RA8875.c      ****     
 502:RA8875.c      ****   while (num--) {
 1415              		.loc 1 502 0
 1416 0018 0BE0     		b	.L52
 1417              	.L53:
 503:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p >> 8);
 1418              		.loc 1 503 0
 1419 001a BB1C     		adds	r3, r7, #2
 1420 001c 1B88     		ldrh	r3, [r3]
 1421 001e 1B0A     		lsrs	r3, r3, #8
 1422 0020 9BB2     		uxth	r3, r3
 1423 0022 1800     		movs	r0, r3
 1424 0024 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 504:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p);
 1425              		.loc 1 504 0
 1426 0028 BB1C     		adds	r3, r7, #2
 1427 002a 1B88     		ldrh	r3, [r3]
 1428 002c 1800     		movs	r0, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 35


 1429 002e FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 1430              	.L52:
 502:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(p >> 8);
 1431              		.loc 1 502 0
 1432 0032 7B68     		ldr	r3, [r7, #4]
 1433 0034 5A1E     		subs	r2, r3, #1
 1434 0036 7A60     		str	r2, [r7, #4]
 1435 0038 002B     		cmp	r3, #0
 1436 003a EED1     		bne	.L53
 505:RA8875.c      ****   }
 506:RA8875.c      **** 
 507:RA8875.c      ****     LCDSPI_Stop();
 1437              		.loc 1 507 0
 1438 003c FFF7FEFF 		bl	LCDSPI_Stop
 508:RA8875.c      **** }
 1439              		.loc 1 508 0
 1440 0040 C046     		nop
 1441 0042 BD46     		mov	sp, r7
 1442 0044 02B0     		add	sp, sp, #8
 1443              		@ sp needed
 1444 0046 80BD     		pop	{r7, pc}
 1445              		.cfi_endproc
 1446              	.LFE50:
 1447              		.size	pushPixels, .-pushPixels
 1448              		.section	.text.fillRect1,"ax",%progbits
 1449              		.align	2
 1450              		.global	fillRect1
 1451              		.code	16
 1452              		.thumb_func
 1453              		.type	fillRect1, %function
 1454              	fillRect1:
 1455              	.LFB51:
 509:RA8875.c      **** 
 510:RA8875.c      **** /**************************************************************************/
 511:RA8875.c      **** /*!
 512:RA8875.c      **** 
 513:RA8875.c      **** */
 514:RA8875.c      **** /**************************************************************************/
 515:RA8875.c      **** void fillRect1(void) {
 1456              		.loc 1 515 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 516:RA8875.c      ****   writeCommand(RA8875_DCR);
 1466              		.loc 1 516 0
 1467 0004 9020     		movs	r0, #144
 1468 0006 FFF7FEFF 		bl	writeCommand
 517:RA8875.c      ****   writeData(RA8875_DCR_LINESQUTRI_STOP | RA8875_DCR_DRAWSQUARE);
 1469              		.loc 1 517 0
 1470 000a 1020     		movs	r0, #16
 1471 000c FFF7FEFF 		bl	writeData
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 36


 518:RA8875.c      ****   writeData(RA8875_DCR_LINESQUTRI_START | RA8875_DCR_FILL | RA8875_DCR_DRAWSQUARE);
 1472              		.loc 1 518 0
 1473 0010 B020     		movs	r0, #176
 1474 0012 FFF7FEFF 		bl	writeData
 519:RA8875.c      **** }
 1475              		.loc 1 519 0
 1476 0016 C046     		nop
 1477 0018 BD46     		mov	sp, r7
 1478              		@ sp needed
 1479 001a 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE51:
 1482              		.size	fillRect1, .-fillRect1
 1483              		.section	.text.drawPixel,"ax",%progbits
 1484              		.align	2
 1485              		.global	drawPixel
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	drawPixel, %function
 1489              	drawPixel:
 1490              	.LFB52:
 520:RA8875.c      **** 
 521:RA8875.c      **** /**************************************************************************/
 522:RA8875.c      **** /*!
 523:RA8875.c      ****       Draws a single pixel at the specified location
 524:RA8875.c      **** 
 525:RA8875.c      ****       @args x[in]     The 0-based x location
 526:RA8875.c      ****       @args y[in]     The 0-base y location
 527:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 528:RA8875.c      **** */
 529:RA8875.c      **** /**************************************************************************/
 530:RA8875.c      **** void drawPixel(int16_t x, int16_t y, uint16_t color)
 531:RA8875.c      **** {
 1491              		.loc 1 531 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 90B5     		push	{r4, r7, lr}
 1496              		.cfi_def_cfa_offset 12
 1497              		.cfi_offset 4, -12
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 83B0     		sub	sp, sp, #12
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 0400     		movs	r4, r0
 1505 0008 0800     		movs	r0, r1
 1506 000a 1100     		movs	r1, r2
 1507 000c BB1D     		adds	r3, r7, #6
 1508 000e 221C     		adds	r2, r4, #0
 1509 0010 1A80     		strh	r2, [r3]
 1510 0012 3B1D     		adds	r3, r7, #4
 1511 0014 021C     		adds	r2, r0, #0
 1512 0016 1A80     		strh	r2, [r3]
 1513 0018 BB1C     		adds	r3, r7, #2
 1514 001a 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 37


 1515 001c 1A80     		strh	r2, [r3]
 532:RA8875.c      ****   writeReg(RA8875_CURH0, x);
 1516              		.loc 1 532 0
 1517 001e BB1D     		adds	r3, r7, #6
 1518 0020 1B88     		ldrh	r3, [r3]
 1519 0022 DBB2     		uxtb	r3, r3
 1520 0024 1900     		movs	r1, r3
 1521 0026 4620     		movs	r0, #70
 1522 0028 FFF7FEFF 		bl	writeReg
 533:RA8875.c      ****   writeReg(RA8875_CURH1, x >> 8);
 1523              		.loc 1 533 0
 1524 002c BB1D     		adds	r3, r7, #6
 1525 002e 0022     		movs	r2, #0
 1526 0030 9B5E     		ldrsh	r3, [r3, r2]
 1527 0032 1B12     		asrs	r3, r3, #8
 1528 0034 1BB2     		sxth	r3, r3
 1529 0036 DBB2     		uxtb	r3, r3
 1530 0038 1900     		movs	r1, r3
 1531 003a 4720     		movs	r0, #71
 1532 003c FFF7FEFF 		bl	writeReg
 534:RA8875.c      ****   writeReg(RA8875_CURV0, y);
 1533              		.loc 1 534 0
 1534 0040 3B1D     		adds	r3, r7, #4
 1535 0042 1B88     		ldrh	r3, [r3]
 1536 0044 DBB2     		uxtb	r3, r3
 1537 0046 1900     		movs	r1, r3
 1538 0048 4820     		movs	r0, #72
 1539 004a FFF7FEFF 		bl	writeReg
 535:RA8875.c      ****   writeReg(RA8875_CURV1, y >> 8);  
 1540              		.loc 1 535 0
 1541 004e 3B1D     		adds	r3, r7, #4
 1542 0050 0022     		movs	r2, #0
 1543 0052 9B5E     		ldrsh	r3, [r3, r2]
 1544 0054 1B12     		asrs	r3, r3, #8
 1545 0056 1BB2     		sxth	r3, r3
 1546 0058 DBB2     		uxtb	r3, r3
 1547 005a 1900     		movs	r1, r3
 1548 005c 4920     		movs	r0, #73
 1549 005e FFF7FEFF 		bl	writeReg
 536:RA8875.c      ****   writeCommand(RA8875_MRWC);
 1550              		.loc 1 536 0
 1551 0062 0220     		movs	r0, #2
 1552 0064 FFF7FEFF 		bl	writeCommand
 537:RA8875.c      **** 
 538:RA8875.c      ****     LCDSPI_Start(); 
 1553              		.loc 1 538 0
 1554 0068 FFF7FEFF 		bl	LCDSPI_Start
 539:RA8875.c      ****  
 540:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 1555              		.loc 1 540 0
 1556 006c 0020     		movs	r0, #0
 1557 006e FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 541:RA8875.c      ****     
 542:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(color >> 8);
 1558              		.loc 1 542 0
 1559 0072 BB1C     		adds	r3, r7, #2
 1560 0074 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 38


 1561 0076 1B0A     		lsrs	r3, r3, #8
 1562 0078 9BB2     		uxth	r3, r3
 1563 007a 1800     		movs	r0, r3
 1564 007c FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 543:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(color);
 1565              		.loc 1 543 0
 1566 0080 BB1C     		adds	r3, r7, #2
 1567 0082 1B88     		ldrh	r3, [r3]
 1568 0084 1800     		movs	r0, r3
 1569 0086 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
 544:RA8875.c      ****     
 545:RA8875.c      ****     LCDSPI_Stop();
 1570              		.loc 1 545 0
 1571 008a FFF7FEFF 		bl	LCDSPI_Stop
 546:RA8875.c      **** }
 1572              		.loc 1 546 0
 1573 008e C046     		nop
 1574 0090 BD46     		mov	sp, r7
 1575 0092 03B0     		add	sp, sp, #12
 1576              		@ sp needed
 1577 0094 90BD     		pop	{r4, r7, pc}
 1578              		.cfi_endproc
 1579              	.LFE52:
 1580              		.size	drawPixel, .-drawPixel
 1581 0096 C046     		.section	.text.drawLine,"ax",%progbits
 1582              		.align	2
 1583              		.global	drawLine
 1584              		.code	16
 1585              		.thumb_func
 1586              		.type	drawLine, %function
 1587              	drawLine:
 1588              	.LFB53:
 547:RA8875.c      **** 
 548:RA8875.c      **** /**************************************************************************/
 549:RA8875.c      **** /*!
 550:RA8875.c      ****       Draws a HW accelerated line on the display
 551:RA8875.c      ****     
 552:RA8875.c      ****       @args x0[in]    The 0-based starting x location
 553:RA8875.c      ****       @args y0[in]    The 0-base starting y location
 554:RA8875.c      ****       @args x1[in]    The 0-based ending x location
 555:RA8875.c      ****       @args y1[in]    The 0-base ending y location
 556:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 557:RA8875.c      **** */
 558:RA8875.c      **** /**************************************************************************/
 559:RA8875.c      **** void drawLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color)
 560:RA8875.c      **** {
 1589              		.loc 1 560 0
 1590              		.cfi_startproc
 1591              		@ args = 4, pretend = 0, frame = 8
 1592              		@ frame_needed = 1, uses_anonymous_args = 0
 1593 0000 B0B5     		push	{r4, r5, r7, lr}
 1594              		.cfi_def_cfa_offset 16
 1595              		.cfi_offset 4, -16
 1596              		.cfi_offset 5, -12
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
 1599 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 39


 1600              		.cfi_def_cfa_offset 24
 1601 0004 00AF     		add	r7, sp, #0
 1602              		.cfi_def_cfa_register 7
 1603 0006 0500     		movs	r5, r0
 1604 0008 0C00     		movs	r4, r1
 1605 000a 1000     		movs	r0, r2
 1606 000c 1900     		movs	r1, r3
 1607 000e BB1D     		adds	r3, r7, #6
 1608 0010 2A1C     		adds	r2, r5, #0
 1609 0012 1A80     		strh	r2, [r3]
 1610 0014 3B1D     		adds	r3, r7, #4
 1611 0016 221C     		adds	r2, r4, #0
 1612 0018 1A80     		strh	r2, [r3]
 1613 001a BB1C     		adds	r3, r7, #2
 1614 001c 021C     		adds	r2, r0, #0
 1615 001e 1A80     		strh	r2, [r3]
 1616 0020 3B00     		movs	r3, r7
 1617 0022 0A1C     		adds	r2, r1, #0
 1618 0024 1A80     		strh	r2, [r3]
 561:RA8875.c      ****   /* Set X */
 562:RA8875.c      ****   writeCommand(0x91);
 1619              		.loc 1 562 0
 1620 0026 9120     		movs	r0, #145
 1621 0028 FFF7FEFF 		bl	writeCommand
 563:RA8875.c      ****   writeData(x0);
 1622              		.loc 1 563 0
 1623 002c BB1D     		adds	r3, r7, #6
 1624 002e 1B88     		ldrh	r3, [r3]
 1625 0030 DBB2     		uxtb	r3, r3
 1626 0032 1800     		movs	r0, r3
 1627 0034 FFF7FEFF 		bl	writeData
 564:RA8875.c      ****   writeCommand(0x92);
 1628              		.loc 1 564 0
 1629 0038 9220     		movs	r0, #146
 1630 003a FFF7FEFF 		bl	writeCommand
 565:RA8875.c      ****   writeData(x0 >> 8);
 1631              		.loc 1 565 0
 1632 003e BB1D     		adds	r3, r7, #6
 1633 0040 0022     		movs	r2, #0
 1634 0042 9B5E     		ldrsh	r3, [r3, r2]
 1635 0044 1B12     		asrs	r3, r3, #8
 1636 0046 1BB2     		sxth	r3, r3
 1637 0048 DBB2     		uxtb	r3, r3
 1638 004a 1800     		movs	r0, r3
 1639 004c FFF7FEFF 		bl	writeData
 566:RA8875.c      ****   
 567:RA8875.c      ****   /* Set Y */
 568:RA8875.c      ****   writeCommand(0x93);
 1640              		.loc 1 568 0
 1641 0050 9320     		movs	r0, #147
 1642 0052 FFF7FEFF 		bl	writeCommand
 569:RA8875.c      ****   writeData(y0); 
 1643              		.loc 1 569 0
 1644 0056 3B1D     		adds	r3, r7, #4
 1645 0058 1B88     		ldrh	r3, [r3]
 1646 005a DBB2     		uxtb	r3, r3
 1647 005c 1800     		movs	r0, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 40


 1648 005e FFF7FEFF 		bl	writeData
 570:RA8875.c      ****   writeCommand(0x94);
 1649              		.loc 1 570 0
 1650 0062 9420     		movs	r0, #148
 1651 0064 FFF7FEFF 		bl	writeCommand
 571:RA8875.c      ****   writeData(y0 >> 8);
 1652              		.loc 1 571 0
 1653 0068 3B1D     		adds	r3, r7, #4
 1654 006a 0022     		movs	r2, #0
 1655 006c 9B5E     		ldrsh	r3, [r3, r2]
 1656 006e 1B12     		asrs	r3, r3, #8
 1657 0070 1BB2     		sxth	r3, r3
 1658 0072 DBB2     		uxtb	r3, r3
 1659 0074 1800     		movs	r0, r3
 1660 0076 FFF7FEFF 		bl	writeData
 572:RA8875.c      ****   
 573:RA8875.c      ****   /* Set X1 */
 574:RA8875.c      ****   writeCommand(0x95);
 1661              		.loc 1 574 0
 1662 007a 9520     		movs	r0, #149
 1663 007c FFF7FEFF 		bl	writeCommand
 575:RA8875.c      ****   writeData(x1);
 1664              		.loc 1 575 0
 1665 0080 BB1C     		adds	r3, r7, #2
 1666 0082 1B88     		ldrh	r3, [r3]
 1667 0084 DBB2     		uxtb	r3, r3
 1668 0086 1800     		movs	r0, r3
 1669 0088 FFF7FEFF 		bl	writeData
 576:RA8875.c      ****   writeCommand(0x96);
 1670              		.loc 1 576 0
 1671 008c 9620     		movs	r0, #150
 1672 008e FFF7FEFF 		bl	writeCommand
 577:RA8875.c      ****   writeData((x1) >> 8);
 1673              		.loc 1 577 0
 1674 0092 BB1C     		adds	r3, r7, #2
 1675 0094 0022     		movs	r2, #0
 1676 0096 9B5E     		ldrsh	r3, [r3, r2]
 1677 0098 1B12     		asrs	r3, r3, #8
 1678 009a 1BB2     		sxth	r3, r3
 1679 009c DBB2     		uxtb	r3, r3
 1680 009e 1800     		movs	r0, r3
 1681 00a0 FFF7FEFF 		bl	writeData
 578:RA8875.c      ****   
 579:RA8875.c      ****   /* Set Y1 */
 580:RA8875.c      ****   writeCommand(0x97);
 1682              		.loc 1 580 0
 1683 00a4 9720     		movs	r0, #151
 1684 00a6 FFF7FEFF 		bl	writeCommand
 581:RA8875.c      ****   writeData(y1); 
 1685              		.loc 1 581 0
 1686 00aa 3B00     		movs	r3, r7
 1687 00ac 1B88     		ldrh	r3, [r3]
 1688 00ae DBB2     		uxtb	r3, r3
 1689 00b0 1800     		movs	r0, r3
 1690 00b2 FFF7FEFF 		bl	writeData
 582:RA8875.c      ****   writeCommand(0x98);
 1691              		.loc 1 582 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 41


 1692 00b6 9820     		movs	r0, #152
 1693 00b8 FFF7FEFF 		bl	writeCommand
 583:RA8875.c      ****   writeData((y1) >> 8);
 1694              		.loc 1 583 0
 1695 00bc 3B00     		movs	r3, r7
 1696 00be 0022     		movs	r2, #0
 1697 00c0 9B5E     		ldrsh	r3, [r3, r2]
 1698 00c2 1B12     		asrs	r3, r3, #8
 1699 00c4 1BB2     		sxth	r3, r3
 1700 00c6 DBB2     		uxtb	r3, r3
 1701 00c8 1800     		movs	r0, r3
 1702 00ca FFF7FEFF 		bl	writeData
 584:RA8875.c      ****   
 585:RA8875.c      ****   /* Set Color */
 586:RA8875.c      ****   writeCommand(0x63);
 1703              		.loc 1 586 0
 1704 00ce 6320     		movs	r0, #99
 1705 00d0 FFF7FEFF 		bl	writeCommand
 587:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 1706              		.loc 1 587 0
 1707 00d4 1823     		movs	r3, #24
 1708 00d6 FB18     		adds	r3, r7, r3
 1709 00d8 1B88     		ldrh	r3, [r3]
 1710 00da DB0A     		lsrs	r3, r3, #11
 1711 00dc 9BB2     		uxth	r3, r3
 1712 00de DBB2     		uxtb	r3, r3
 1713 00e0 1800     		movs	r0, r3
 1714 00e2 FFF7FEFF 		bl	writeData
 588:RA8875.c      ****   writeCommand(0x64);
 1715              		.loc 1 588 0
 1716 00e6 6420     		movs	r0, #100
 1717 00e8 FFF7FEFF 		bl	writeCommand
 589:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 1718              		.loc 1 589 0
 1719 00ec 1823     		movs	r3, #24
 1720 00ee FB18     		adds	r3, r7, r3
 1721 00f0 1B88     		ldrh	r3, [r3]
 1722 00f2 5B11     		asrs	r3, r3, #5
 1723 00f4 DBB2     		uxtb	r3, r3
 1724 00f6 3F22     		movs	r2, #63
 1725 00f8 1340     		ands	r3, r2
 1726 00fa DBB2     		uxtb	r3, r3
 1727 00fc 1800     		movs	r0, r3
 1728 00fe FFF7FEFF 		bl	writeData
 590:RA8875.c      ****   writeCommand(0x65);
 1729              		.loc 1 590 0
 1730 0102 6520     		movs	r0, #101
 1731 0104 FFF7FEFF 		bl	writeCommand
 591:RA8875.c      ****   writeData((color & 0x001f));
 1732              		.loc 1 591 0
 1733 0108 1823     		movs	r3, #24
 1734 010a FB18     		adds	r3, r7, r3
 1735 010c 1B88     		ldrh	r3, [r3]
 1736 010e DBB2     		uxtb	r3, r3
 1737 0110 1F22     		movs	r2, #31
 1738 0112 1340     		ands	r3, r2
 1739 0114 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 42


 1740 0116 1800     		movs	r0, r3
 1741 0118 FFF7FEFF 		bl	writeData
 592:RA8875.c      **** 
 593:RA8875.c      ****   /* Draw! */
 594:RA8875.c      ****   writeCommand(RA8875_DCR);
 1742              		.loc 1 594 0
 1743 011c 9020     		movs	r0, #144
 1744 011e FFF7FEFF 		bl	writeCommand
 595:RA8875.c      ****   writeData(0x80);
 1745              		.loc 1 595 0
 1746 0122 8020     		movs	r0, #128
 1747 0124 FFF7FEFF 		bl	writeData
 596:RA8875.c      ****   
 597:RA8875.c      ****   /* Wait for the command to finish */
 598:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 1748              		.loc 1 598 0
 1749 0128 8021     		movs	r1, #128
 1750 012a 9020     		movs	r0, #144
 1751 012c FFF7FEFF 		bl	waitPoll
 599:RA8875.c      **** }
 1752              		.loc 1 599 0
 1753 0130 C046     		nop
 1754 0132 BD46     		mov	sp, r7
 1755 0134 02B0     		add	sp, sp, #8
 1756              		@ sp needed
 1757 0136 B0BD     		pop	{r4, r5, r7, pc}
 1758              		.cfi_endproc
 1759              	.LFE53:
 1760              		.size	drawLine, .-drawLine
 1761              		.section	.text.drawFastVLine,"ax",%progbits
 1762              		.align	2
 1763              		.global	drawFastVLine
 1764              		.code	16
 1765              		.thumb_func
 1766              		.type	drawFastVLine, %function
 1767              	drawFastVLine:
 1768              	.LFB54:
 600:RA8875.c      **** 
 601:RA8875.c      **** /**************************************************************************/
 602:RA8875.c      **** /*!
 603:RA8875.c      **** 
 604:RA8875.c      **** */
 605:RA8875.c      **** /**************************************************************************/
 606:RA8875.c      **** void drawFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color)
 607:RA8875.c      **** {
 1769              		.loc 1 607 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 8
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773 0000 B0B5     		push	{r4, r5, r7, lr}
 1774              		.cfi_def_cfa_offset 16
 1775              		.cfi_offset 4, -16
 1776              		.cfi_offset 5, -12
 1777              		.cfi_offset 7, -8
 1778              		.cfi_offset 14, -4
 1779 0002 84B0     		sub	sp, sp, #16
 1780              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 43


 1781 0004 02AF     		add	r7, sp, #8
 1782              		.cfi_def_cfa 7, 24
 1783 0006 0500     		movs	r5, r0
 1784 0008 0C00     		movs	r4, r1
 1785 000a 1000     		movs	r0, r2
 1786 000c 1900     		movs	r1, r3
 1787 000e BB1D     		adds	r3, r7, #6
 1788 0010 2A1C     		adds	r2, r5, #0
 1789 0012 1A80     		strh	r2, [r3]
 1790 0014 3B1D     		adds	r3, r7, #4
 1791 0016 221C     		adds	r2, r4, #0
 1792 0018 1A80     		strh	r2, [r3]
 1793 001a BB1C     		adds	r3, r7, #2
 1794 001c 021C     		adds	r2, r0, #0
 1795 001e 1A80     		strh	r2, [r3]
 1796 0020 3B00     		movs	r3, r7
 1797 0022 0A1C     		adds	r2, r1, #0
 1798 0024 1A80     		strh	r2, [r3]
 608:RA8875.c      ****   drawLine(x, y, x, y+h, color);
 1799              		.loc 1 608 0
 1800 0026 3B1D     		adds	r3, r7, #4
 1801 0028 1A88     		ldrh	r2, [r3]
 1802 002a BB1C     		adds	r3, r7, #2
 1803 002c 1B88     		ldrh	r3, [r3]
 1804 002e D318     		adds	r3, r2, r3
 1805 0030 9BB2     		uxth	r3, r3
 1806 0032 1CB2     		sxth	r4, r3
 1807 0034 BB1D     		adds	r3, r7, #6
 1808 0036 0022     		movs	r2, #0
 1809 0038 9A5E     		ldrsh	r2, [r3, r2]
 1810 003a 3B1D     		adds	r3, r7, #4
 1811 003c 0021     		movs	r1, #0
 1812 003e 595E     		ldrsh	r1, [r3, r1]
 1813 0040 BB1D     		adds	r3, r7, #6
 1814 0042 0020     		movs	r0, #0
 1815 0044 185E     		ldrsh	r0, [r3, r0]
 1816 0046 3B00     		movs	r3, r7
 1817 0048 1B88     		ldrh	r3, [r3]
 1818 004a 0093     		str	r3, [sp]
 1819 004c 2300     		movs	r3, r4
 1820 004e FFF7FEFF 		bl	drawLine
 609:RA8875.c      **** }
 1821              		.loc 1 609 0
 1822 0052 C046     		nop
 1823 0054 BD46     		mov	sp, r7
 1824 0056 02B0     		add	sp, sp, #8
 1825              		@ sp needed
 1826 0058 B0BD     		pop	{r4, r5, r7, pc}
 1827              		.cfi_endproc
 1828              	.LFE54:
 1829              		.size	drawFastVLine, .-drawFastVLine
 1830 005a C046     		.section	.text.drawFastHLine,"ax",%progbits
 1831              		.align	2
 1832              		.global	drawFastHLine
 1833              		.code	16
 1834              		.thumb_func
 1835              		.type	drawFastHLine, %function
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 44


 1836              	drawFastHLine:
 1837              	.LFB55:
 610:RA8875.c      **** 
 611:RA8875.c      **** /**************************************************************************/
 612:RA8875.c      **** /*!
 613:RA8875.c      **** 
 614:RA8875.c      **** */
 615:RA8875.c      **** /**************************************************************************/
 616:RA8875.c      **** void drawFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color)
 617:RA8875.c      **** {
 1838              		.loc 1 617 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 8
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842 0000 B0B5     		push	{r4, r5, r7, lr}
 1843              		.cfi_def_cfa_offset 16
 1844              		.cfi_offset 4, -16
 1845              		.cfi_offset 5, -12
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 84B0     		sub	sp, sp, #16
 1849              		.cfi_def_cfa_offset 32
 1850 0004 02AF     		add	r7, sp, #8
 1851              		.cfi_def_cfa 7, 24
 1852 0006 0500     		movs	r5, r0
 1853 0008 0C00     		movs	r4, r1
 1854 000a 1000     		movs	r0, r2
 1855 000c 1900     		movs	r1, r3
 1856 000e BB1D     		adds	r3, r7, #6
 1857 0010 2A1C     		adds	r2, r5, #0
 1858 0012 1A80     		strh	r2, [r3]
 1859 0014 3B1D     		adds	r3, r7, #4
 1860 0016 221C     		adds	r2, r4, #0
 1861 0018 1A80     		strh	r2, [r3]
 1862 001a BB1C     		adds	r3, r7, #2
 1863 001c 021C     		adds	r2, r0, #0
 1864 001e 1A80     		strh	r2, [r3]
 1865 0020 3B00     		movs	r3, r7
 1866 0022 0A1C     		adds	r2, r1, #0
 1867 0024 1A80     		strh	r2, [r3]
 618:RA8875.c      ****   drawLine(x, y, x+w, y, color);
 1868              		.loc 1 618 0
 1869 0026 BB1D     		adds	r3, r7, #6
 1870 0028 1A88     		ldrh	r2, [r3]
 1871 002a BB1C     		adds	r3, r7, #2
 1872 002c 1B88     		ldrh	r3, [r3]
 1873 002e D318     		adds	r3, r2, r3
 1874 0030 9BB2     		uxth	r3, r3
 1875 0032 1AB2     		sxth	r2, r3
 1876 0034 3B1D     		adds	r3, r7, #4
 1877 0036 0024     		movs	r4, #0
 1878 0038 1C5F     		ldrsh	r4, [r3, r4]
 1879 003a 3B1D     		adds	r3, r7, #4
 1880 003c 0021     		movs	r1, #0
 1881 003e 595E     		ldrsh	r1, [r3, r1]
 1882 0040 BB1D     		adds	r3, r7, #6
 1883 0042 0020     		movs	r0, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 45


 1884 0044 185E     		ldrsh	r0, [r3, r0]
 1885 0046 3B00     		movs	r3, r7
 1886 0048 1B88     		ldrh	r3, [r3]
 1887 004a 0093     		str	r3, [sp]
 1888 004c 2300     		movs	r3, r4
 1889 004e FFF7FEFF 		bl	drawLine
 619:RA8875.c      **** }
 1890              		.loc 1 619 0
 1891 0052 C046     		nop
 1892 0054 BD46     		mov	sp, r7
 1893 0056 02B0     		add	sp, sp, #8
 1894              		@ sp needed
 1895 0058 B0BD     		pop	{r4, r5, r7, pc}
 1896              		.cfi_endproc
 1897              	.LFE55:
 1898              		.size	drawFastHLine, .-drawFastHLine
 1899 005a C046     		.section	.text.drawRect,"ax",%progbits
 1900              		.align	2
 1901              		.global	drawRect
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	drawRect, %function
 1905              	drawRect:
 1906              	.LFB56:
 620:RA8875.c      **** 
 621:RA8875.c      **** /**************************************************************************/
 622:RA8875.c      **** /*!
 623:RA8875.c      ****       Draws a HW accelerated rectangle on the display
 624:RA8875.c      **** 
 625:RA8875.c      ****       @args x[in]     The 0-based x location of the top-right corner
 626:RA8875.c      ****       @args y[in]     The 0-based y location of the top-right corner
 627:RA8875.c      ****       @args w[in]     The rectangle width
 628:RA8875.c      ****       @args h[in]     The rectangle height
 629:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 630:RA8875.c      **** */
 631:RA8875.c      **** /**************************************************************************/
 632:RA8875.c      **** void drawRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
 633:RA8875.c      **** {
 1907              		.loc 1 633 0
 1908              		.cfi_startproc
 1909              		@ args = 4, pretend = 0, frame = 8
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 B0B5     		push	{r4, r5, r7, lr}
 1912              		.cfi_def_cfa_offset 16
 1913              		.cfi_offset 4, -16
 1914              		.cfi_offset 5, -12
 1915              		.cfi_offset 7, -8
 1916              		.cfi_offset 14, -4
 1917 0002 84B0     		sub	sp, sp, #16
 1918              		.cfi_def_cfa_offset 32
 1919 0004 02AF     		add	r7, sp, #8
 1920              		.cfi_def_cfa 7, 24
 1921 0006 0500     		movs	r5, r0
 1922 0008 0C00     		movs	r4, r1
 1923 000a 1000     		movs	r0, r2
 1924 000c 1900     		movs	r1, r3
 1925 000e BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 46


 1926 0010 2A1C     		adds	r2, r5, #0
 1927 0012 1A80     		strh	r2, [r3]
 1928 0014 3B1D     		adds	r3, r7, #4
 1929 0016 221C     		adds	r2, r4, #0
 1930 0018 1A80     		strh	r2, [r3]
 1931 001a BB1C     		adds	r3, r7, #2
 1932 001c 021C     		adds	r2, r0, #0
 1933 001e 1A80     		strh	r2, [r3]
 1934 0020 3B00     		movs	r3, r7
 1935 0022 0A1C     		adds	r2, r1, #0
 1936 0024 1A80     		strh	r2, [r3]
 634:RA8875.c      ****   rectHelper(x, y, x+w, y+h, color, false);
 1937              		.loc 1 634 0
 1938 0026 BB1D     		adds	r3, r7, #6
 1939 0028 1A88     		ldrh	r2, [r3]
 1940 002a BB1C     		adds	r3, r7, #2
 1941 002c 1B88     		ldrh	r3, [r3]
 1942 002e D318     		adds	r3, r2, r3
 1943 0030 9BB2     		uxth	r3, r3
 1944 0032 1CB2     		sxth	r4, r3
 1945 0034 3B1D     		adds	r3, r7, #4
 1946 0036 1A88     		ldrh	r2, [r3]
 1947 0038 3B00     		movs	r3, r7
 1948 003a 1B88     		ldrh	r3, [r3]
 1949 003c D318     		adds	r3, r2, r3
 1950 003e 9BB2     		uxth	r3, r3
 1951 0040 1AB2     		sxth	r2, r3
 1952 0042 3B1D     		adds	r3, r7, #4
 1953 0044 0021     		movs	r1, #0
 1954 0046 595E     		ldrsh	r1, [r3, r1]
 1955 0048 BB1D     		adds	r3, r7, #6
 1956 004a 0020     		movs	r0, #0
 1957 004c 185E     		ldrsh	r0, [r3, r0]
 1958 004e 0023     		movs	r3, #0
 1959 0050 0193     		str	r3, [sp, #4]
 1960 0052 1823     		movs	r3, #24
 1961 0054 FB18     		adds	r3, r7, r3
 1962 0056 1B88     		ldrh	r3, [r3]
 1963 0058 0093     		str	r3, [sp]
 1964 005a 1300     		movs	r3, r2
 1965 005c 2200     		movs	r2, r4
 1966 005e FFF7FEFF 		bl	rectHelper
 635:RA8875.c      **** }
 1967              		.loc 1 635 0
 1968 0062 C046     		nop
 1969 0064 BD46     		mov	sp, r7
 1970 0066 02B0     		add	sp, sp, #8
 1971              		@ sp needed
 1972 0068 B0BD     		pop	{r4, r5, r7, pc}
 1973              		.cfi_endproc
 1974              	.LFE56:
 1975              		.size	drawRect, .-drawRect
 1976 006a C046     		.section	.text.fillRect,"ax",%progbits
 1977              		.align	2
 1978              		.global	fillRect
 1979              		.code	16
 1980              		.thumb_func
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 47


 1981              		.type	fillRect, %function
 1982              	fillRect:
 1983              	.LFB57:
 636:RA8875.c      **** 
 637:RA8875.c      **** /**************************************************************************/
 638:RA8875.c      **** /*!
 639:RA8875.c      ****       Draws a HW accelerated filled rectangle on the display
 640:RA8875.c      **** 
 641:RA8875.c      ****       @args x[in]     The 0-based x location of the top-right corner
 642:RA8875.c      ****       @args y[in]     The 0-based y location of the top-right corner
 643:RA8875.c      ****       @args w[in]     The rectangle width
 644:RA8875.c      ****       @args h[in]     The rectangle height
 645:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 646:RA8875.c      **** */
 647:RA8875.c      **** /**************************************************************************/
 648:RA8875.c      **** void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
 649:RA8875.c      **** {
 1984              		.loc 1 649 0
 1985              		.cfi_startproc
 1986              		@ args = 4, pretend = 0, frame = 8
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988 0000 B0B5     		push	{r4, r5, r7, lr}
 1989              		.cfi_def_cfa_offset 16
 1990              		.cfi_offset 4, -16
 1991              		.cfi_offset 5, -12
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 84B0     		sub	sp, sp, #16
 1995              		.cfi_def_cfa_offset 32
 1996 0004 02AF     		add	r7, sp, #8
 1997              		.cfi_def_cfa 7, 24
 1998 0006 0500     		movs	r5, r0
 1999 0008 0C00     		movs	r4, r1
 2000 000a 1000     		movs	r0, r2
 2001 000c 1900     		movs	r1, r3
 2002 000e BB1D     		adds	r3, r7, #6
 2003 0010 2A1C     		adds	r2, r5, #0
 2004 0012 1A80     		strh	r2, [r3]
 2005 0014 3B1D     		adds	r3, r7, #4
 2006 0016 221C     		adds	r2, r4, #0
 2007 0018 1A80     		strh	r2, [r3]
 2008 001a BB1C     		adds	r3, r7, #2
 2009 001c 021C     		adds	r2, r0, #0
 2010 001e 1A80     		strh	r2, [r3]
 2011 0020 3B00     		movs	r3, r7
 2012 0022 0A1C     		adds	r2, r1, #0
 2013 0024 1A80     		strh	r2, [r3]
 650:RA8875.c      ****   rectHelper(x, y, x+w, y+h, color, true);
 2014              		.loc 1 650 0
 2015 0026 BB1D     		adds	r3, r7, #6
 2016 0028 1A88     		ldrh	r2, [r3]
 2017 002a BB1C     		adds	r3, r7, #2
 2018 002c 1B88     		ldrh	r3, [r3]
 2019 002e D318     		adds	r3, r2, r3
 2020 0030 9BB2     		uxth	r3, r3
 2021 0032 1CB2     		sxth	r4, r3
 2022 0034 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 48


 2023 0036 1A88     		ldrh	r2, [r3]
 2024 0038 3B00     		movs	r3, r7
 2025 003a 1B88     		ldrh	r3, [r3]
 2026 003c D318     		adds	r3, r2, r3
 2027 003e 9BB2     		uxth	r3, r3
 2028 0040 1AB2     		sxth	r2, r3
 2029 0042 3B1D     		adds	r3, r7, #4
 2030 0044 0021     		movs	r1, #0
 2031 0046 595E     		ldrsh	r1, [r3, r1]
 2032 0048 BB1D     		adds	r3, r7, #6
 2033 004a 0020     		movs	r0, #0
 2034 004c 185E     		ldrsh	r0, [r3, r0]
 2035 004e 0123     		movs	r3, #1
 2036 0050 0193     		str	r3, [sp, #4]
 2037 0052 1823     		movs	r3, #24
 2038 0054 FB18     		adds	r3, r7, r3
 2039 0056 1B88     		ldrh	r3, [r3]
 2040 0058 0093     		str	r3, [sp]
 2041 005a 1300     		movs	r3, r2
 2042 005c 2200     		movs	r2, r4
 2043 005e FFF7FEFF 		bl	rectHelper
 651:RA8875.c      **** }
 2044              		.loc 1 651 0
 2045 0062 C046     		nop
 2046 0064 BD46     		mov	sp, r7
 2047 0066 02B0     		add	sp, sp, #8
 2048              		@ sp needed
 2049 0068 B0BD     		pop	{r4, r5, r7, pc}
 2050              		.cfi_endproc
 2051              	.LFE57:
 2052              		.size	fillRect, .-fillRect
 2053 006a C046     		.section	.text.fillScreen,"ax",%progbits
 2054              		.align	2
 2055              		.global	fillScreen
 2056              		.code	16
 2057              		.thumb_func
 2058              		.type	fillScreen, %function
 2059              	fillScreen:
 2060              	.LFB58:
 652:RA8875.c      **** 
 653:RA8875.c      **** /**************************************************************************/
 654:RA8875.c      **** /*!
 655:RA8875.c      ****       Fills the screen with the spefied RGB565 color
 656:RA8875.c      **** 
 657:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 658:RA8875.c      **** */
 659:RA8875.c      **** /**************************************************************************/
 660:RA8875.c      **** void fillScreen(uint16_t color)
 661:RA8875.c      **** {  
 2061              		.loc 1 661 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065 0000 80B5     		push	{r7, lr}
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 7, -8
 2068              		.cfi_offset 14, -4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 49


 2069 0002 84B0     		sub	sp, sp, #16
 2070              		.cfi_def_cfa_offset 24
 2071 0004 02AF     		add	r7, sp, #8
 2072              		.cfi_def_cfa 7, 16
 2073 0006 0200     		movs	r2, r0
 2074 0008 BB1D     		adds	r3, r7, #6
 2075 000a 1A80     		strh	r2, [r3]
 662:RA8875.c      ****   rectHelper(0, 0, _width-1, _height-1, color, true);
 2076              		.loc 1 662 0
 2077 000c 0B4B     		ldr	r3, .L62
 2078 000e 1B88     		ldrh	r3, [r3]
 2079 0010 013B     		subs	r3, r3, #1
 2080 0012 9BB2     		uxth	r3, r3
 2081 0014 1AB2     		sxth	r2, r3
 2082 0016 0A4B     		ldr	r3, .L62+4
 2083 0018 1B88     		ldrh	r3, [r3]
 2084 001a 013B     		subs	r3, r3, #1
 2085 001c 9BB2     		uxth	r3, r3
 2086 001e 19B2     		sxth	r1, r3
 2087 0020 0123     		movs	r3, #1
 2088 0022 0193     		str	r3, [sp, #4]
 2089 0024 BB1D     		adds	r3, r7, #6
 2090 0026 1B88     		ldrh	r3, [r3]
 2091 0028 0093     		str	r3, [sp]
 2092 002a 0B00     		movs	r3, r1
 2093 002c 0021     		movs	r1, #0
 2094 002e 0020     		movs	r0, #0
 2095 0030 FFF7FEFF 		bl	rectHelper
 663:RA8875.c      **** }
 2096              		.loc 1 663 0
 2097 0034 C046     		nop
 2098 0036 BD46     		mov	sp, r7
 2099 0038 02B0     		add	sp, sp, #8
 2100              		@ sp needed
 2101 003a 80BD     		pop	{r7, pc}
 2102              	.L63:
 2103              		.align	2
 2104              	.L62:
 2105 003c 00000000 		.word	_width
 2106 0040 00000000 		.word	_height
 2107              		.cfi_endproc
 2108              	.LFE58:
 2109              		.size	fillScreen, .-fillScreen
 2110              		.section	.text.drawCircle,"ax",%progbits
 2111              		.align	2
 2112              		.global	drawCircle
 2113              		.code	16
 2114              		.thumb_func
 2115              		.type	drawCircle, %function
 2116              	drawCircle:
 2117              	.LFB59:
 664:RA8875.c      **** 
 665:RA8875.c      **** /**************************************************************************/
 666:RA8875.c      **** /*!
 667:RA8875.c      ****       Draws a HW accelerated circle on the display
 668:RA8875.c      **** 
 669:RA8875.c      ****       @args x[in]     The 0-based x location of the center of the circle
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 50


 670:RA8875.c      ****       @args y[in]     The 0-based y location of the center of the circle
 671:RA8875.c      ****       @args w[in]     The circle's radius
 672:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 673:RA8875.c      **** */
 674:RA8875.c      **** /**************************************************************************/
 675:RA8875.c      **** void drawCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color)
 676:RA8875.c      **** {
 2118              		.loc 1 676 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 8
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122 0000 B0B5     		push	{r4, r5, r7, lr}
 2123              		.cfi_def_cfa_offset 16
 2124              		.cfi_offset 4, -16
 2125              		.cfi_offset 5, -12
 2126              		.cfi_offset 7, -8
 2127              		.cfi_offset 14, -4
 2128 0002 84B0     		sub	sp, sp, #16
 2129              		.cfi_def_cfa_offset 32
 2130 0004 02AF     		add	r7, sp, #8
 2131              		.cfi_def_cfa 7, 24
 2132 0006 0500     		movs	r5, r0
 2133 0008 0C00     		movs	r4, r1
 2134 000a 1000     		movs	r0, r2
 2135 000c 1900     		movs	r1, r3
 2136 000e BB1D     		adds	r3, r7, #6
 2137 0010 2A1C     		adds	r2, r5, #0
 2138 0012 1A80     		strh	r2, [r3]
 2139 0014 3B1D     		adds	r3, r7, #4
 2140 0016 221C     		adds	r2, r4, #0
 2141 0018 1A80     		strh	r2, [r3]
 2142 001a BB1C     		adds	r3, r7, #2
 2143 001c 021C     		adds	r2, r0, #0
 2144 001e 1A80     		strh	r2, [r3]
 2145 0020 3B00     		movs	r3, r7
 2146 0022 0A1C     		adds	r2, r1, #0
 2147 0024 1A80     		strh	r2, [r3]
 677:RA8875.c      ****   circleHelper(x0, y0, r, color, false);
 2148              		.loc 1 677 0
 2149 0026 3B00     		movs	r3, r7
 2150 0028 1C88     		ldrh	r4, [r3]
 2151 002a BB1C     		adds	r3, r7, #2
 2152 002c 0022     		movs	r2, #0
 2153 002e 9A5E     		ldrsh	r2, [r3, r2]
 2154 0030 3B1D     		adds	r3, r7, #4
 2155 0032 0021     		movs	r1, #0
 2156 0034 595E     		ldrsh	r1, [r3, r1]
 2157 0036 BB1D     		adds	r3, r7, #6
 2158 0038 0020     		movs	r0, #0
 2159 003a 185E     		ldrsh	r0, [r3, r0]
 2160 003c 0023     		movs	r3, #0
 2161 003e 0093     		str	r3, [sp]
 2162 0040 2300     		movs	r3, r4
 2163 0042 FFF7FEFF 		bl	circleHelper
 678:RA8875.c      **** }
 2164              		.loc 1 678 0
 2165 0046 C046     		nop
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 51


 2166 0048 BD46     		mov	sp, r7
 2167 004a 02B0     		add	sp, sp, #8
 2168              		@ sp needed
 2169 004c B0BD     		pop	{r4, r5, r7, pc}
 2170              		.cfi_endproc
 2171              	.LFE59:
 2172              		.size	drawCircle, .-drawCircle
 2173 004e C046     		.section	.text.fillCircle,"ax",%progbits
 2174              		.align	2
 2175              		.global	fillCircle
 2176              		.code	16
 2177              		.thumb_func
 2178              		.type	fillCircle, %function
 2179              	fillCircle:
 2180              	.LFB60:
 679:RA8875.c      **** 
 680:RA8875.c      **** /**************************************************************************/
 681:RA8875.c      **** /*!
 682:RA8875.c      ****       Draws a HW accelerated filled circle on the display
 683:RA8875.c      **** 
 684:RA8875.c      ****       @args x[in]     The 0-based x location of the center of the circle
 685:RA8875.c      ****       @args y[in]     The 0-based y location of the center of the circle
 686:RA8875.c      ****       @args w[in]     The circle's radius
 687:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 688:RA8875.c      **** */
 689:RA8875.c      **** /**************************************************************************/
 690:RA8875.c      **** void fillCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color)
 691:RA8875.c      **** {
 2181              		.loc 1 691 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 8
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0000 B0B5     		push	{r4, r5, r7, lr}
 2186              		.cfi_def_cfa_offset 16
 2187              		.cfi_offset 4, -16
 2188              		.cfi_offset 5, -12
 2189              		.cfi_offset 7, -8
 2190              		.cfi_offset 14, -4
 2191 0002 84B0     		sub	sp, sp, #16
 2192              		.cfi_def_cfa_offset 32
 2193 0004 02AF     		add	r7, sp, #8
 2194              		.cfi_def_cfa 7, 24
 2195 0006 0500     		movs	r5, r0
 2196 0008 0C00     		movs	r4, r1
 2197 000a 1000     		movs	r0, r2
 2198 000c 1900     		movs	r1, r3
 2199 000e BB1D     		adds	r3, r7, #6
 2200 0010 2A1C     		adds	r2, r5, #0
 2201 0012 1A80     		strh	r2, [r3]
 2202 0014 3B1D     		adds	r3, r7, #4
 2203 0016 221C     		adds	r2, r4, #0
 2204 0018 1A80     		strh	r2, [r3]
 2205 001a BB1C     		adds	r3, r7, #2
 2206 001c 021C     		adds	r2, r0, #0
 2207 001e 1A80     		strh	r2, [r3]
 2208 0020 3B00     		movs	r3, r7
 2209 0022 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 52


 2210 0024 1A80     		strh	r2, [r3]
 692:RA8875.c      ****   circleHelper(x0, y0, r, color, true);
 2211              		.loc 1 692 0
 2212 0026 3B00     		movs	r3, r7
 2213 0028 1C88     		ldrh	r4, [r3]
 2214 002a BB1C     		adds	r3, r7, #2
 2215 002c 0022     		movs	r2, #0
 2216 002e 9A5E     		ldrsh	r2, [r3, r2]
 2217 0030 3B1D     		adds	r3, r7, #4
 2218 0032 0021     		movs	r1, #0
 2219 0034 595E     		ldrsh	r1, [r3, r1]
 2220 0036 BB1D     		adds	r3, r7, #6
 2221 0038 0020     		movs	r0, #0
 2222 003a 185E     		ldrsh	r0, [r3, r0]
 2223 003c 0123     		movs	r3, #1
 2224 003e 0093     		str	r3, [sp]
 2225 0040 2300     		movs	r3, r4
 2226 0042 FFF7FEFF 		bl	circleHelper
 693:RA8875.c      **** }
 2227              		.loc 1 693 0
 2228 0046 C046     		nop
 2229 0048 BD46     		mov	sp, r7
 2230 004a 02B0     		add	sp, sp, #8
 2231              		@ sp needed
 2232 004c B0BD     		pop	{r4, r5, r7, pc}
 2233              		.cfi_endproc
 2234              	.LFE60:
 2235              		.size	fillCircle, .-fillCircle
 2236 004e C046     		.section	.text.drawTriangle,"ax",%progbits
 2237              		.align	2
 2238              		.global	drawTriangle
 2239              		.code	16
 2240              		.thumb_func
 2241              		.type	drawTriangle, %function
 2242              	drawTriangle:
 2243              	.LFB61:
 694:RA8875.c      **** 
 695:RA8875.c      **** /**************************************************************************/
 696:RA8875.c      **** /*!
 697:RA8875.c      ****       Draws a HW accelerated triangle on the display
 698:RA8875.c      **** 
 699:RA8875.c      ****       @args x0[in]    The 0-based x location of point 0 on the triangle
 700:RA8875.c      ****       @args y0[in]    The 0-based y location of point 0 on the triangle
 701:RA8875.c      ****       @args x1[in]    The 0-based x location of point 1 on the triangle
 702:RA8875.c      ****       @args y1[in]    The 0-based y location of point 1 on the triangle
 703:RA8875.c      ****       @args x2[in]    The 0-based x location of point 2 on the triangle
 704:RA8875.c      ****       @args y2[in]    The 0-based y location of point 2 on the triangle
 705:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 706:RA8875.c      **** */
 707:RA8875.c      **** /**************************************************************************/
 708:RA8875.c      **** void drawTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t 
 709:RA8875.c      **** {
 2244              		.loc 1 709 0
 2245              		.cfi_startproc
 2246              		@ args = 12, pretend = 0, frame = 8
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 53


 2249              		.cfi_def_cfa_offset 16
 2250              		.cfi_offset 4, -16
 2251              		.cfi_offset 5, -12
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 86B0     		sub	sp, sp, #24
 2255              		.cfi_def_cfa_offset 40
 2256 0004 04AF     		add	r7, sp, #16
 2257              		.cfi_def_cfa 7, 24
 2258 0006 0500     		movs	r5, r0
 2259 0008 0C00     		movs	r4, r1
 2260 000a 1000     		movs	r0, r2
 2261 000c 1900     		movs	r1, r3
 2262 000e BB1D     		adds	r3, r7, #6
 2263 0010 2A1C     		adds	r2, r5, #0
 2264 0012 1A80     		strh	r2, [r3]
 2265 0014 3B1D     		adds	r3, r7, #4
 2266 0016 221C     		adds	r2, r4, #0
 2267 0018 1A80     		strh	r2, [r3]
 2268 001a BB1C     		adds	r3, r7, #2
 2269 001c 021C     		adds	r2, r0, #0
 2270 001e 1A80     		strh	r2, [r3]
 2271 0020 3B00     		movs	r3, r7
 2272 0022 0A1C     		adds	r2, r1, #0
 2273 0024 1A80     		strh	r2, [r3]
 710:RA8875.c      ****   triangleHelper(x0, y0, x1, y1, x2, y2, color, false);
 2274              		.loc 1 710 0
 2275 0026 3B00     		movs	r3, r7
 2276 0028 0024     		movs	r4, #0
 2277 002a 1C5F     		ldrsh	r4, [r3, r4]
 2278 002c BB1C     		adds	r3, r7, #2
 2279 002e 0022     		movs	r2, #0
 2280 0030 9A5E     		ldrsh	r2, [r3, r2]
 2281 0032 3B1D     		adds	r3, r7, #4
 2282 0034 0021     		movs	r1, #0
 2283 0036 595E     		ldrsh	r1, [r3, r1]
 2284 0038 BB1D     		adds	r3, r7, #6
 2285 003a 0020     		movs	r0, #0
 2286 003c 185E     		ldrsh	r0, [r3, r0]
 2287 003e 0023     		movs	r3, #0
 2288 0040 0393     		str	r3, [sp, #12]
 2289 0042 2023     		movs	r3, #32
 2290 0044 FB18     		adds	r3, r7, r3
 2291 0046 1B88     		ldrh	r3, [r3]
 2292 0048 0293     		str	r3, [sp, #8]
 2293 004a 1C23     		movs	r3, #28
 2294 004c FB18     		adds	r3, r7, r3
 2295 004e 0025     		movs	r5, #0
 2296 0050 5B5F     		ldrsh	r3, [r3, r5]
 2297 0052 0193     		str	r3, [sp, #4]
 2298 0054 1823     		movs	r3, #24
 2299 0056 FB18     		adds	r3, r7, r3
 2300 0058 0025     		movs	r5, #0
 2301 005a 5B5F     		ldrsh	r3, [r3, r5]
 2302 005c 0093     		str	r3, [sp]
 2303 005e 2300     		movs	r3, r4
 2304 0060 FFF7FEFF 		bl	triangleHelper
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 54


 711:RA8875.c      **** }
 2305              		.loc 1 711 0
 2306 0064 C046     		nop
 2307 0066 BD46     		mov	sp, r7
 2308 0068 02B0     		add	sp, sp, #8
 2309              		@ sp needed
 2310 006a B0BD     		pop	{r4, r5, r7, pc}
 2311              		.cfi_endproc
 2312              	.LFE61:
 2313              		.size	drawTriangle, .-drawTriangle
 2314              		.section	.text.fillTriangle,"ax",%progbits
 2315              		.align	2
 2316              		.global	fillTriangle
 2317              		.code	16
 2318              		.thumb_func
 2319              		.type	fillTriangle, %function
 2320              	fillTriangle:
 2321              	.LFB62:
 712:RA8875.c      **** 
 713:RA8875.c      **** /**************************************************************************/
 714:RA8875.c      **** /*!
 715:RA8875.c      ****       Draws a HW accelerated filled triangle on the display
 716:RA8875.c      **** 
 717:RA8875.c      ****       @args x0[in]    The 0-based x location of point 0 on the triangle
 718:RA8875.c      ****       @args y0[in]    The 0-based y location of point 0 on the triangle
 719:RA8875.c      ****       @args x1[in]    The 0-based x location of point 1 on the triangle
 720:RA8875.c      ****       @args y1[in]    The 0-based y location of point 1 on the triangle
 721:RA8875.c      ****       @args x2[in]    The 0-based x location of point 2 on the triangle
 722:RA8875.c      ****       @args y2[in]    The 0-based y location of point 2 on the triangle
 723:RA8875.c      ****       @args color[in] The RGB565 color to use when drawing the pixel
 724:RA8875.c      **** */
 725:RA8875.c      **** /**************************************************************************/
 726:RA8875.c      **** void fillTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t 
 727:RA8875.c      **** {
 2322              		.loc 1 727 0
 2323              		.cfi_startproc
 2324              		@ args = 12, pretend = 0, frame = 8
 2325              		@ frame_needed = 1, uses_anonymous_args = 0
 2326 0000 B0B5     		push	{r4, r5, r7, lr}
 2327              		.cfi_def_cfa_offset 16
 2328              		.cfi_offset 4, -16
 2329              		.cfi_offset 5, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
 2332 0002 86B0     		sub	sp, sp, #24
 2333              		.cfi_def_cfa_offset 40
 2334 0004 04AF     		add	r7, sp, #16
 2335              		.cfi_def_cfa 7, 24
 2336 0006 0500     		movs	r5, r0
 2337 0008 0C00     		movs	r4, r1
 2338 000a 1000     		movs	r0, r2
 2339 000c 1900     		movs	r1, r3
 2340 000e BB1D     		adds	r3, r7, #6
 2341 0010 2A1C     		adds	r2, r5, #0
 2342 0012 1A80     		strh	r2, [r3]
 2343 0014 3B1D     		adds	r3, r7, #4
 2344 0016 221C     		adds	r2, r4, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 55


 2345 0018 1A80     		strh	r2, [r3]
 2346 001a BB1C     		adds	r3, r7, #2
 2347 001c 021C     		adds	r2, r0, #0
 2348 001e 1A80     		strh	r2, [r3]
 2349 0020 3B00     		movs	r3, r7
 2350 0022 0A1C     		adds	r2, r1, #0
 2351 0024 1A80     		strh	r2, [r3]
 728:RA8875.c      ****   triangleHelper(x0, y0, x1, y1, x2, y2, color, true);
 2352              		.loc 1 728 0
 2353 0026 3B00     		movs	r3, r7
 2354 0028 0024     		movs	r4, #0
 2355 002a 1C5F     		ldrsh	r4, [r3, r4]
 2356 002c BB1C     		adds	r3, r7, #2
 2357 002e 0022     		movs	r2, #0
 2358 0030 9A5E     		ldrsh	r2, [r3, r2]
 2359 0032 3B1D     		adds	r3, r7, #4
 2360 0034 0021     		movs	r1, #0
 2361 0036 595E     		ldrsh	r1, [r3, r1]
 2362 0038 BB1D     		adds	r3, r7, #6
 2363 003a 0020     		movs	r0, #0
 2364 003c 185E     		ldrsh	r0, [r3, r0]
 2365 003e 0123     		movs	r3, #1
 2366 0040 0393     		str	r3, [sp, #12]
 2367 0042 2023     		movs	r3, #32
 2368 0044 FB18     		adds	r3, r7, r3
 2369 0046 1B88     		ldrh	r3, [r3]
 2370 0048 0293     		str	r3, [sp, #8]
 2371 004a 1C23     		movs	r3, #28
 2372 004c FB18     		adds	r3, r7, r3
 2373 004e 0025     		movs	r5, #0
 2374 0050 5B5F     		ldrsh	r3, [r3, r5]
 2375 0052 0193     		str	r3, [sp, #4]
 2376 0054 1823     		movs	r3, #24
 2377 0056 FB18     		adds	r3, r7, r3
 2378 0058 0025     		movs	r5, #0
 2379 005a 5B5F     		ldrsh	r3, [r3, r5]
 2380 005c 0093     		str	r3, [sp]
 2381 005e 2300     		movs	r3, r4
 2382 0060 FFF7FEFF 		bl	triangleHelper
 729:RA8875.c      **** }
 2383              		.loc 1 729 0
 2384 0064 C046     		nop
 2385 0066 BD46     		mov	sp, r7
 2386 0068 02B0     		add	sp, sp, #8
 2387              		@ sp needed
 2388 006a B0BD     		pop	{r4, r5, r7, pc}
 2389              		.cfi_endproc
 2390              	.LFE62:
 2391              		.size	fillTriangle, .-fillTriangle
 2392              		.section	.text.drawEllipse,"ax",%progbits
 2393              		.align	2
 2394              		.global	drawEllipse
 2395              		.code	16
 2396              		.thumb_func
 2397              		.type	drawEllipse, %function
 2398              	drawEllipse:
 2399              	.LFB63:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 56


 730:RA8875.c      **** 
 731:RA8875.c      **** /**************************************************************************/
 732:RA8875.c      **** /*!
 733:RA8875.c      ****       Draws a HW accelerated ellipse on the display
 734:RA8875.c      **** 
 735:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 736:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 737:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 738:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 739:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 740:RA8875.c      **** */
 741:RA8875.c      **** /**************************************************************************/
 742:RA8875.c      **** void drawEllipse(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t co
 743:RA8875.c      **** {
 2400              		.loc 1 743 0
 2401              		.cfi_startproc
 2402              		@ args = 4, pretend = 0, frame = 8
 2403              		@ frame_needed = 1, uses_anonymous_args = 0
 2404 0000 B0B5     		push	{r4, r5, r7, lr}
 2405              		.cfi_def_cfa_offset 16
 2406              		.cfi_offset 4, -16
 2407              		.cfi_offset 5, -12
 2408              		.cfi_offset 7, -8
 2409              		.cfi_offset 14, -4
 2410 0002 84B0     		sub	sp, sp, #16
 2411              		.cfi_def_cfa_offset 32
 2412 0004 02AF     		add	r7, sp, #8
 2413              		.cfi_def_cfa 7, 24
 2414 0006 0500     		movs	r5, r0
 2415 0008 0C00     		movs	r4, r1
 2416 000a 1000     		movs	r0, r2
 2417 000c 1900     		movs	r1, r3
 2418 000e BB1D     		adds	r3, r7, #6
 2419 0010 2A1C     		adds	r2, r5, #0
 2420 0012 1A80     		strh	r2, [r3]
 2421 0014 3B1D     		adds	r3, r7, #4
 2422 0016 221C     		adds	r2, r4, #0
 2423 0018 1A80     		strh	r2, [r3]
 2424 001a BB1C     		adds	r3, r7, #2
 2425 001c 021C     		adds	r2, r0, #0
 2426 001e 1A80     		strh	r2, [r3]
 2427 0020 3B00     		movs	r3, r7
 2428 0022 0A1C     		adds	r2, r1, #0
 2429 0024 1A80     		strh	r2, [r3]
 744:RA8875.c      ****   ellipseHelper(xCenter, yCenter, longAxis, shortAxis, color, false);
 2430              		.loc 1 744 0
 2431 0026 3B00     		movs	r3, r7
 2432 0028 0024     		movs	r4, #0
 2433 002a 1C5F     		ldrsh	r4, [r3, r4]
 2434 002c BB1C     		adds	r3, r7, #2
 2435 002e 0022     		movs	r2, #0
 2436 0030 9A5E     		ldrsh	r2, [r3, r2]
 2437 0032 3B1D     		adds	r3, r7, #4
 2438 0034 0021     		movs	r1, #0
 2439 0036 595E     		ldrsh	r1, [r3, r1]
 2440 0038 BB1D     		adds	r3, r7, #6
 2441 003a 0020     		movs	r0, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 57


 2442 003c 185E     		ldrsh	r0, [r3, r0]
 2443 003e 0023     		movs	r3, #0
 2444 0040 0193     		str	r3, [sp, #4]
 2445 0042 1823     		movs	r3, #24
 2446 0044 FB18     		adds	r3, r7, r3
 2447 0046 1B88     		ldrh	r3, [r3]
 2448 0048 0093     		str	r3, [sp]
 2449 004a 2300     		movs	r3, r4
 2450 004c FFF7FEFF 		bl	ellipseHelper
 745:RA8875.c      **** }
 2451              		.loc 1 745 0
 2452 0050 C046     		nop
 2453 0052 BD46     		mov	sp, r7
 2454 0054 02B0     		add	sp, sp, #8
 2455              		@ sp needed
 2456 0056 B0BD     		pop	{r4, r5, r7, pc}
 2457              		.cfi_endproc
 2458              	.LFE63:
 2459              		.size	drawEllipse, .-drawEllipse
 2460              		.section	.text.fillEllipse,"ax",%progbits
 2461              		.align	2
 2462              		.global	fillEllipse
 2463              		.code	16
 2464              		.thumb_func
 2465              		.type	fillEllipse, %function
 2466              	fillEllipse:
 2467              	.LFB64:
 746:RA8875.c      **** 
 747:RA8875.c      **** /**************************************************************************/
 748:RA8875.c      **** /*!
 749:RA8875.c      ****       Draws a HW accelerated filled ellipse on the display
 750:RA8875.c      **** 
 751:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 752:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 753:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 754:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 755:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 756:RA8875.c      **** */
 757:RA8875.c      **** /**************************************************************************/
 758:RA8875.c      **** void fillEllipse(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t co
 759:RA8875.c      **** {
 2468              		.loc 1 759 0
 2469              		.cfi_startproc
 2470              		@ args = 4, pretend = 0, frame = 8
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472 0000 B0B5     		push	{r4, r5, r7, lr}
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 84B0     		sub	sp, sp, #16
 2479              		.cfi_def_cfa_offset 32
 2480 0004 02AF     		add	r7, sp, #8
 2481              		.cfi_def_cfa 7, 24
 2482 0006 0500     		movs	r5, r0
 2483 0008 0C00     		movs	r4, r1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 58


 2484 000a 1000     		movs	r0, r2
 2485 000c 1900     		movs	r1, r3
 2486 000e BB1D     		adds	r3, r7, #6
 2487 0010 2A1C     		adds	r2, r5, #0
 2488 0012 1A80     		strh	r2, [r3]
 2489 0014 3B1D     		adds	r3, r7, #4
 2490 0016 221C     		adds	r2, r4, #0
 2491 0018 1A80     		strh	r2, [r3]
 2492 001a BB1C     		adds	r3, r7, #2
 2493 001c 021C     		adds	r2, r0, #0
 2494 001e 1A80     		strh	r2, [r3]
 2495 0020 3B00     		movs	r3, r7
 2496 0022 0A1C     		adds	r2, r1, #0
 2497 0024 1A80     		strh	r2, [r3]
 760:RA8875.c      ****   ellipseHelper(xCenter, yCenter, longAxis, shortAxis, color, true);
 2498              		.loc 1 760 0
 2499 0026 3B00     		movs	r3, r7
 2500 0028 0024     		movs	r4, #0
 2501 002a 1C5F     		ldrsh	r4, [r3, r4]
 2502 002c BB1C     		adds	r3, r7, #2
 2503 002e 0022     		movs	r2, #0
 2504 0030 9A5E     		ldrsh	r2, [r3, r2]
 2505 0032 3B1D     		adds	r3, r7, #4
 2506 0034 0021     		movs	r1, #0
 2507 0036 595E     		ldrsh	r1, [r3, r1]
 2508 0038 BB1D     		adds	r3, r7, #6
 2509 003a 0020     		movs	r0, #0
 2510 003c 185E     		ldrsh	r0, [r3, r0]
 2511 003e 0123     		movs	r3, #1
 2512 0040 0193     		str	r3, [sp, #4]
 2513 0042 1823     		movs	r3, #24
 2514 0044 FB18     		adds	r3, r7, r3
 2515 0046 1B88     		ldrh	r3, [r3]
 2516 0048 0093     		str	r3, [sp]
 2517 004a 2300     		movs	r3, r4
 2518 004c FFF7FEFF 		bl	ellipseHelper
 761:RA8875.c      **** }
 2519              		.loc 1 761 0
 2520 0050 C046     		nop
 2521 0052 BD46     		mov	sp, r7
 2522 0054 02B0     		add	sp, sp, #8
 2523              		@ sp needed
 2524 0056 B0BD     		pop	{r4, r5, r7, pc}
 2525              		.cfi_endproc
 2526              	.LFE64:
 2527              		.size	fillEllipse, .-fillEllipse
 2528              		.section	.text.drawCurve,"ax",%progbits
 2529              		.align	2
 2530              		.global	drawCurve
 2531              		.code	16
 2532              		.thumb_func
 2533              		.type	drawCurve, %function
 2534              	drawCurve:
 2535              	.LFB65:
 762:RA8875.c      **** 
 763:RA8875.c      **** /**************************************************************************/
 764:RA8875.c      **** /*!
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 59


 765:RA8875.c      ****       Draws a HW accelerated curve on the display
 766:RA8875.c      **** 
 767:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 768:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 769:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 770:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 771:RA8875.c      ****       @args curvePart[in] The corner to draw, where in clock-wise motion:
 772:RA8875.c      ****                             0 = 180-270°
 773:RA8875.c      ****                             1 = 270-0°
 774:RA8875.c      ****                             2 = 0-90°
 775:RA8875.c      ****                             3 = 90-180°
 776:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 777:RA8875.c      **** */
 778:RA8875.c      **** /**************************************************************************/
 779:RA8875.c      **** void drawCurve(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t curve
 780:RA8875.c      **** {
 2536              		.loc 1 780 0
 2537              		.cfi_startproc
 2538              		@ args = 8, pretend = 0, frame = 8
 2539              		@ frame_needed = 1, uses_anonymous_args = 0
 2540 0000 B0B5     		push	{r4, r5, r7, lr}
 2541              		.cfi_def_cfa_offset 16
 2542              		.cfi_offset 4, -16
 2543              		.cfi_offset 5, -12
 2544              		.cfi_offset 7, -8
 2545              		.cfi_offset 14, -4
 2546 0002 86B0     		sub	sp, sp, #24
 2547              		.cfi_def_cfa_offset 40
 2548 0004 04AF     		add	r7, sp, #16
 2549              		.cfi_def_cfa 7, 24
 2550 0006 0500     		movs	r5, r0
 2551 0008 0C00     		movs	r4, r1
 2552 000a 1000     		movs	r0, r2
 2553 000c 1900     		movs	r1, r3
 2554 000e BB1D     		adds	r3, r7, #6
 2555 0010 2A1C     		adds	r2, r5, #0
 2556 0012 1A80     		strh	r2, [r3]
 2557 0014 3B1D     		adds	r3, r7, #4
 2558 0016 221C     		adds	r2, r4, #0
 2559 0018 1A80     		strh	r2, [r3]
 2560 001a BB1C     		adds	r3, r7, #2
 2561 001c 021C     		adds	r2, r0, #0
 2562 001e 1A80     		strh	r2, [r3]
 2563 0020 3B00     		movs	r3, r7
 2564 0022 0A1C     		adds	r2, r1, #0
 2565 0024 1A80     		strh	r2, [r3]
 781:RA8875.c      ****   curveHelper(xCenter, yCenter, longAxis, shortAxis, curvePart, color, false);
 2566              		.loc 1 781 0
 2567 0026 3B00     		movs	r3, r7
 2568 0028 0024     		movs	r4, #0
 2569 002a 1C5F     		ldrsh	r4, [r3, r4]
 2570 002c BB1C     		adds	r3, r7, #2
 2571 002e 0022     		movs	r2, #0
 2572 0030 9A5E     		ldrsh	r2, [r3, r2]
 2573 0032 3B1D     		adds	r3, r7, #4
 2574 0034 0021     		movs	r1, #0
 2575 0036 595E     		ldrsh	r1, [r3, r1]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 60


 2576 0038 BB1D     		adds	r3, r7, #6
 2577 003a 0020     		movs	r0, #0
 2578 003c 185E     		ldrsh	r0, [r3, r0]
 2579 003e 0023     		movs	r3, #0
 2580 0040 0293     		str	r3, [sp, #8]
 2581 0042 1C23     		movs	r3, #28
 2582 0044 FB18     		adds	r3, r7, r3
 2583 0046 1B88     		ldrh	r3, [r3]
 2584 0048 0193     		str	r3, [sp, #4]
 2585 004a 1823     		movs	r3, #24
 2586 004c FB18     		adds	r3, r7, r3
 2587 004e 1B78     		ldrb	r3, [r3]
 2588 0050 0093     		str	r3, [sp]
 2589 0052 2300     		movs	r3, r4
 2590 0054 FFF7FEFF 		bl	curveHelper
 782:RA8875.c      **** }
 2591              		.loc 1 782 0
 2592 0058 C046     		nop
 2593 005a BD46     		mov	sp, r7
 2594 005c 02B0     		add	sp, sp, #8
 2595              		@ sp needed
 2596 005e B0BD     		pop	{r4, r5, r7, pc}
 2597              		.cfi_endproc
 2598              	.LFE65:
 2599              		.size	drawCurve, .-drawCurve
 2600              		.section	.text.fillCurve,"ax",%progbits
 2601              		.align	2
 2602              		.global	fillCurve
 2603              		.code	16
 2604              		.thumb_func
 2605              		.type	fillCurve, %function
 2606              	fillCurve:
 2607              	.LFB66:
 783:RA8875.c      **** 
 784:RA8875.c      **** /**************************************************************************/
 785:RA8875.c      **** /*!
 786:RA8875.c      ****       Draws a HW accelerated filled curve on the display
 787:RA8875.c      **** 
 788:RA8875.c      ****       @args xCenter[in]   The 0-based x location of the ellipse's center
 789:RA8875.c      ****       @args yCenter[in]   The 0-based y location of the ellipse's center
 790:RA8875.c      ****       @args longAxis[in]  The size in pixels of the ellipse's long axis
 791:RA8875.c      ****       @args shortAxis[in] The size in pixels of the ellipse's short axis
 792:RA8875.c      ****       @args curvePart[in] The corner to draw, where in clock-wise motion:
 793:RA8875.c      ****                             0 = 180-270°
 794:RA8875.c      ****                             1 = 270-0°
 795:RA8875.c      ****                             2 = 0-90°
 796:RA8875.c      ****                             3 = 90-180°
 797:RA8875.c      ****       @args color[in]     The RGB565 color to use when drawing the pixel
 798:RA8875.c      **** */
 799:RA8875.c      **** /**************************************************************************/
 800:RA8875.c      **** void fillCurve(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t curve
 801:RA8875.c      **** {
 2608              		.loc 1 801 0
 2609              		.cfi_startproc
 2610              		@ args = 8, pretend = 0, frame = 8
 2611              		@ frame_needed = 1, uses_anonymous_args = 0
 2612 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 61


 2613              		.cfi_def_cfa_offset 16
 2614              		.cfi_offset 4, -16
 2615              		.cfi_offset 5, -12
 2616              		.cfi_offset 7, -8
 2617              		.cfi_offset 14, -4
 2618 0002 86B0     		sub	sp, sp, #24
 2619              		.cfi_def_cfa_offset 40
 2620 0004 04AF     		add	r7, sp, #16
 2621              		.cfi_def_cfa 7, 24
 2622 0006 0500     		movs	r5, r0
 2623 0008 0C00     		movs	r4, r1
 2624 000a 1000     		movs	r0, r2
 2625 000c 1900     		movs	r1, r3
 2626 000e BB1D     		adds	r3, r7, #6
 2627 0010 2A1C     		adds	r2, r5, #0
 2628 0012 1A80     		strh	r2, [r3]
 2629 0014 3B1D     		adds	r3, r7, #4
 2630 0016 221C     		adds	r2, r4, #0
 2631 0018 1A80     		strh	r2, [r3]
 2632 001a BB1C     		adds	r3, r7, #2
 2633 001c 021C     		adds	r2, r0, #0
 2634 001e 1A80     		strh	r2, [r3]
 2635 0020 3B00     		movs	r3, r7
 2636 0022 0A1C     		adds	r2, r1, #0
 2637 0024 1A80     		strh	r2, [r3]
 802:RA8875.c      ****   curveHelper(xCenter, yCenter, longAxis, shortAxis, curvePart, color, true);
 2638              		.loc 1 802 0
 2639 0026 3B00     		movs	r3, r7
 2640 0028 0024     		movs	r4, #0
 2641 002a 1C5F     		ldrsh	r4, [r3, r4]
 2642 002c BB1C     		adds	r3, r7, #2
 2643 002e 0022     		movs	r2, #0
 2644 0030 9A5E     		ldrsh	r2, [r3, r2]
 2645 0032 3B1D     		adds	r3, r7, #4
 2646 0034 0021     		movs	r1, #0
 2647 0036 595E     		ldrsh	r1, [r3, r1]
 2648 0038 BB1D     		adds	r3, r7, #6
 2649 003a 0020     		movs	r0, #0
 2650 003c 185E     		ldrsh	r0, [r3, r0]
 2651 003e 0123     		movs	r3, #1
 2652 0040 0293     		str	r3, [sp, #8]
 2653 0042 1C23     		movs	r3, #28
 2654 0044 FB18     		adds	r3, r7, r3
 2655 0046 1B88     		ldrh	r3, [r3]
 2656 0048 0193     		str	r3, [sp, #4]
 2657 004a 1823     		movs	r3, #24
 2658 004c FB18     		adds	r3, r7, r3
 2659 004e 1B78     		ldrb	r3, [r3]
 2660 0050 0093     		str	r3, [sp]
 2661 0052 2300     		movs	r3, r4
 2662 0054 FFF7FEFF 		bl	curveHelper
 803:RA8875.c      **** }
 2663              		.loc 1 803 0
 2664 0058 C046     		nop
 2665 005a BD46     		mov	sp, r7
 2666 005c 02B0     		add	sp, sp, #8
 2667              		@ sp needed
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 62


 2668 005e B0BD     		pop	{r4, r5, r7, pc}
 2669              		.cfi_endproc
 2670              	.LFE66:
 2671              		.size	fillCurve, .-fillCurve
 2672              		.section	.text.circleHelper,"ax",%progbits
 2673              		.align	2
 2674              		.global	circleHelper
 2675              		.code	16
 2676              		.thumb_func
 2677              		.type	circleHelper, %function
 2678              	circleHelper:
 2679              	.LFB67:
 804:RA8875.c      **** 
 805:RA8875.c      **** /**************************************************************************/
 806:RA8875.c      **** /*!
 807:RA8875.c      ****       Helper function for higher level circle drawing code
 808:RA8875.c      **** */
 809:RA8875.c      **** /**************************************************************************/
 810:RA8875.c      **** void circleHelper(int16_t x0, int16_t y0, int16_t r, uint16_t color, bool filled)
 811:RA8875.c      **** {
 2680              		.loc 1 811 0
 2681              		.cfi_startproc
 2682              		@ args = 4, pretend = 0, frame = 8
 2683              		@ frame_needed = 1, uses_anonymous_args = 0
 2684 0000 B0B5     		push	{r4, r5, r7, lr}
 2685              		.cfi_def_cfa_offset 16
 2686              		.cfi_offset 4, -16
 2687              		.cfi_offset 5, -12
 2688              		.cfi_offset 7, -8
 2689              		.cfi_offset 14, -4
 2690 0002 82B0     		sub	sp, sp, #8
 2691              		.cfi_def_cfa_offset 24
 2692 0004 00AF     		add	r7, sp, #0
 2693              		.cfi_def_cfa_register 7
 2694 0006 0500     		movs	r5, r0
 2695 0008 0C00     		movs	r4, r1
 2696 000a 1000     		movs	r0, r2
 2697 000c 1900     		movs	r1, r3
 2698 000e BB1D     		adds	r3, r7, #6
 2699 0010 2A1C     		adds	r2, r5, #0
 2700 0012 1A80     		strh	r2, [r3]
 2701 0014 3B1D     		adds	r3, r7, #4
 2702 0016 221C     		adds	r2, r4, #0
 2703 0018 1A80     		strh	r2, [r3]
 2704 001a BB1C     		adds	r3, r7, #2
 2705 001c 021C     		adds	r2, r0, #0
 2706 001e 1A80     		strh	r2, [r3]
 2707 0020 3B00     		movs	r3, r7
 2708 0022 0A1C     		adds	r2, r1, #0
 2709 0024 1A80     		strh	r2, [r3]
 812:RA8875.c      ****   /* Set X */
 813:RA8875.c      ****   writeCommand(0x99);
 2710              		.loc 1 813 0
 2711 0026 9920     		movs	r0, #153
 2712 0028 FFF7FEFF 		bl	writeCommand
 814:RA8875.c      ****   writeData(x0);
 2713              		.loc 1 814 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 63


 2714 002c BB1D     		adds	r3, r7, #6
 2715 002e 1B88     		ldrh	r3, [r3]
 2716 0030 DBB2     		uxtb	r3, r3
 2717 0032 1800     		movs	r0, r3
 2718 0034 FFF7FEFF 		bl	writeData
 815:RA8875.c      ****   writeCommand(0x9a);
 2719              		.loc 1 815 0
 2720 0038 9A20     		movs	r0, #154
 2721 003a FFF7FEFF 		bl	writeCommand
 816:RA8875.c      ****   writeData(x0 >> 8);
 2722              		.loc 1 816 0
 2723 003e BB1D     		adds	r3, r7, #6
 2724 0040 0022     		movs	r2, #0
 2725 0042 9B5E     		ldrsh	r3, [r3, r2]
 2726 0044 1B12     		asrs	r3, r3, #8
 2727 0046 1BB2     		sxth	r3, r3
 2728 0048 DBB2     		uxtb	r3, r3
 2729 004a 1800     		movs	r0, r3
 2730 004c FFF7FEFF 		bl	writeData
 817:RA8875.c      ****   
 818:RA8875.c      ****   /* Set Y */
 819:RA8875.c      ****   writeCommand(0x9b);
 2731              		.loc 1 819 0
 2732 0050 9B20     		movs	r0, #155
 2733 0052 FFF7FEFF 		bl	writeCommand
 820:RA8875.c      ****   writeData(y0); 
 2734              		.loc 1 820 0
 2735 0056 3B1D     		adds	r3, r7, #4
 2736 0058 1B88     		ldrh	r3, [r3]
 2737 005a DBB2     		uxtb	r3, r3
 2738 005c 1800     		movs	r0, r3
 2739 005e FFF7FEFF 		bl	writeData
 821:RA8875.c      ****   writeCommand(0x9c);	   
 2740              		.loc 1 821 0
 2741 0062 9C20     		movs	r0, #156
 2742 0064 FFF7FEFF 		bl	writeCommand
 822:RA8875.c      ****   writeData(y0 >> 8);
 2743              		.loc 1 822 0
 2744 0068 3B1D     		adds	r3, r7, #4
 2745 006a 0022     		movs	r2, #0
 2746 006c 9B5E     		ldrsh	r3, [r3, r2]
 2747 006e 1B12     		asrs	r3, r3, #8
 2748 0070 1BB2     		sxth	r3, r3
 2749 0072 DBB2     		uxtb	r3, r3
 2750 0074 1800     		movs	r0, r3
 2751 0076 FFF7FEFF 		bl	writeData
 823:RA8875.c      ****   
 824:RA8875.c      ****   /* Set Radius */
 825:RA8875.c      ****   writeCommand(0x9d);
 2752              		.loc 1 825 0
 2753 007a 9D20     		movs	r0, #157
 2754 007c FFF7FEFF 		bl	writeCommand
 826:RA8875.c      ****   writeData(r);  
 2755              		.loc 1 826 0
 2756 0080 BB1C     		adds	r3, r7, #2
 2757 0082 1B88     		ldrh	r3, [r3]
 2758 0084 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 64


 2759 0086 1800     		movs	r0, r3
 2760 0088 FFF7FEFF 		bl	writeData
 827:RA8875.c      ****   
 828:RA8875.c      ****   /* Set Color */
 829:RA8875.c      ****   writeCommand(0x63);
 2761              		.loc 1 829 0
 2762 008c 6320     		movs	r0, #99
 2763 008e FFF7FEFF 		bl	writeCommand
 830:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 2764              		.loc 1 830 0
 2765 0092 3B00     		movs	r3, r7
 2766 0094 1B88     		ldrh	r3, [r3]
 2767 0096 DB0A     		lsrs	r3, r3, #11
 2768 0098 9BB2     		uxth	r3, r3
 2769 009a DBB2     		uxtb	r3, r3
 2770 009c 1800     		movs	r0, r3
 2771 009e FFF7FEFF 		bl	writeData
 831:RA8875.c      ****   writeCommand(0x64);
 2772              		.loc 1 831 0
 2773 00a2 6420     		movs	r0, #100
 2774 00a4 FFF7FEFF 		bl	writeCommand
 832:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 2775              		.loc 1 832 0
 2776 00a8 3B00     		movs	r3, r7
 2777 00aa 1B88     		ldrh	r3, [r3]
 2778 00ac 5B11     		asrs	r3, r3, #5
 2779 00ae DBB2     		uxtb	r3, r3
 2780 00b0 3F22     		movs	r2, #63
 2781 00b2 1340     		ands	r3, r2
 2782 00b4 DBB2     		uxtb	r3, r3
 2783 00b6 1800     		movs	r0, r3
 2784 00b8 FFF7FEFF 		bl	writeData
 833:RA8875.c      ****   writeCommand(0x65);
 2785              		.loc 1 833 0
 2786 00bc 6520     		movs	r0, #101
 2787 00be FFF7FEFF 		bl	writeCommand
 834:RA8875.c      ****   writeData((color & 0x001f));
 2788              		.loc 1 834 0
 2789 00c2 3B00     		movs	r3, r7
 2790 00c4 1B88     		ldrh	r3, [r3]
 2791 00c6 DBB2     		uxtb	r3, r3
 2792 00c8 1F22     		movs	r2, #31
 2793 00ca 1340     		ands	r3, r2
 2794 00cc DBB2     		uxtb	r3, r3
 2795 00ce 1800     		movs	r0, r3
 2796 00d0 FFF7FEFF 		bl	writeData
 835:RA8875.c      ****   
 836:RA8875.c      ****   /* Draw! */
 837:RA8875.c      ****   writeCommand(RA8875_DCR);
 2797              		.loc 1 837 0
 2798 00d4 9020     		movs	r0, #144
 2799 00d6 FFF7FEFF 		bl	writeCommand
 838:RA8875.c      ****   if (filled)
 2800              		.loc 1 838 0
 2801 00da 1823     		movs	r3, #24
 2802 00dc FB18     		adds	r3, r7, r3
 2803 00de 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 65


 2804 00e0 002B     		cmp	r3, #0
 2805 00e2 03D0     		beq	.L73
 839:RA8875.c      ****   {
 840:RA8875.c      ****     writeData(RA8875_DCR_CIRCLE_START | RA8875_DCR_FILL);
 2806              		.loc 1 840 0
 2807 00e4 6020     		movs	r0, #96
 2808 00e6 FFF7FEFF 		bl	writeData
 2809 00ea 02E0     		b	.L74
 2810              	.L73:
 841:RA8875.c      ****   }
 842:RA8875.c      ****   else
 843:RA8875.c      ****   {
 844:RA8875.c      ****     writeData(RA8875_DCR_CIRCLE_START | RA8875_DCR_NOFILL);
 2811              		.loc 1 844 0
 2812 00ec 4020     		movs	r0, #64
 2813 00ee FFF7FEFF 		bl	writeData
 2814              	.L74:
 845:RA8875.c      ****   }
 846:RA8875.c      ****   
 847:RA8875.c      ****   /* Wait for the command to finish */
 848:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_CIRCLE_STATUS);
 2815              		.loc 1 848 0
 2816 00f2 4021     		movs	r1, #64
 2817 00f4 9020     		movs	r0, #144
 2818 00f6 FFF7FEFF 		bl	waitPoll
 849:RA8875.c      **** }
 2819              		.loc 1 849 0
 2820 00fa C046     		nop
 2821 00fc BD46     		mov	sp, r7
 2822 00fe 02B0     		add	sp, sp, #8
 2823              		@ sp needed
 2824 0100 B0BD     		pop	{r4, r5, r7, pc}
 2825              		.cfi_endproc
 2826              	.LFE67:
 2827              		.size	circleHelper, .-circleHelper
 2828 0102 C046     		.section	.text.rectHelper,"ax",%progbits
 2829              		.align	2
 2830              		.global	rectHelper
 2831              		.code	16
 2832              		.thumb_func
 2833              		.type	rectHelper, %function
 2834              	rectHelper:
 2835              	.LFB68:
 850:RA8875.c      **** 
 851:RA8875.c      **** /**************************************************************************/
 852:RA8875.c      **** /*!
 853:RA8875.c      ****       Helper function for higher level rectangle drawing code
 854:RA8875.c      **** */
 855:RA8875.c      **** /**************************************************************************/
 856:RA8875.c      **** void rectHelper(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color, bool filled)
 857:RA8875.c      **** {
 2836              		.loc 1 857 0
 2837              		.cfi_startproc
 2838              		@ args = 8, pretend = 0, frame = 8
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840 0000 B0B5     		push	{r4, r5, r7, lr}
 2841              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 66


 2842              		.cfi_offset 4, -16
 2843              		.cfi_offset 5, -12
 2844              		.cfi_offset 7, -8
 2845              		.cfi_offset 14, -4
 2846 0002 82B0     		sub	sp, sp, #8
 2847              		.cfi_def_cfa_offset 24
 2848 0004 00AF     		add	r7, sp, #0
 2849              		.cfi_def_cfa_register 7
 2850 0006 0500     		movs	r5, r0
 2851 0008 0C00     		movs	r4, r1
 2852 000a 1000     		movs	r0, r2
 2853 000c 1900     		movs	r1, r3
 2854 000e BB1D     		adds	r3, r7, #6
 2855 0010 2A1C     		adds	r2, r5, #0
 2856 0012 1A80     		strh	r2, [r3]
 2857 0014 3B1D     		adds	r3, r7, #4
 2858 0016 221C     		adds	r2, r4, #0
 2859 0018 1A80     		strh	r2, [r3]
 2860 001a BB1C     		adds	r3, r7, #2
 2861 001c 021C     		adds	r2, r0, #0
 2862 001e 1A80     		strh	r2, [r3]
 2863 0020 3B00     		movs	r3, r7
 2864 0022 0A1C     		adds	r2, r1, #0
 2865 0024 1A80     		strh	r2, [r3]
 858:RA8875.c      ****   /* Set X */
 859:RA8875.c      ****   writeCommand(0x91);
 2866              		.loc 1 859 0
 2867 0026 9120     		movs	r0, #145
 2868 0028 FFF7FEFF 		bl	writeCommand
 860:RA8875.c      ****   writeData(x);
 2869              		.loc 1 860 0
 2870 002c BB1D     		adds	r3, r7, #6
 2871 002e 1B88     		ldrh	r3, [r3]
 2872 0030 DBB2     		uxtb	r3, r3
 2873 0032 1800     		movs	r0, r3
 2874 0034 FFF7FEFF 		bl	writeData
 861:RA8875.c      ****   writeCommand(0x92);
 2875              		.loc 1 861 0
 2876 0038 9220     		movs	r0, #146
 2877 003a FFF7FEFF 		bl	writeCommand
 862:RA8875.c      ****   writeData(x >> 8);
 2878              		.loc 1 862 0
 2879 003e BB1D     		adds	r3, r7, #6
 2880 0040 0022     		movs	r2, #0
 2881 0042 9B5E     		ldrsh	r3, [r3, r2]
 2882 0044 1B12     		asrs	r3, r3, #8
 2883 0046 1BB2     		sxth	r3, r3
 2884 0048 DBB2     		uxtb	r3, r3
 2885 004a 1800     		movs	r0, r3
 2886 004c FFF7FEFF 		bl	writeData
 863:RA8875.c      ****   
 864:RA8875.c      ****   /* Set Y */
 865:RA8875.c      ****   writeCommand(0x93);
 2887              		.loc 1 865 0
 2888 0050 9320     		movs	r0, #147
 2889 0052 FFF7FEFF 		bl	writeCommand
 866:RA8875.c      ****   writeData(y); 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 67


 2890              		.loc 1 866 0
 2891 0056 3B1D     		adds	r3, r7, #4
 2892 0058 1B88     		ldrh	r3, [r3]
 2893 005a DBB2     		uxtb	r3, r3
 2894 005c 1800     		movs	r0, r3
 2895 005e FFF7FEFF 		bl	writeData
 867:RA8875.c      ****   writeCommand(0x94);	   
 2896              		.loc 1 867 0
 2897 0062 9420     		movs	r0, #148
 2898 0064 FFF7FEFF 		bl	writeCommand
 868:RA8875.c      ****   writeData(y >> 8);
 2899              		.loc 1 868 0
 2900 0068 3B1D     		adds	r3, r7, #4
 2901 006a 0022     		movs	r2, #0
 2902 006c 9B5E     		ldrsh	r3, [r3, r2]
 2903 006e 1B12     		asrs	r3, r3, #8
 2904 0070 1BB2     		sxth	r3, r3
 2905 0072 DBB2     		uxtb	r3, r3
 2906 0074 1800     		movs	r0, r3
 2907 0076 FFF7FEFF 		bl	writeData
 869:RA8875.c      ****   
 870:RA8875.c      ****   /* Set X1 */
 871:RA8875.c      ****   writeCommand(0x95);
 2908              		.loc 1 871 0
 2909 007a 9520     		movs	r0, #149
 2910 007c FFF7FEFF 		bl	writeCommand
 872:RA8875.c      ****   writeData(w);
 2911              		.loc 1 872 0
 2912 0080 BB1C     		adds	r3, r7, #2
 2913 0082 1B88     		ldrh	r3, [r3]
 2914 0084 DBB2     		uxtb	r3, r3
 2915 0086 1800     		movs	r0, r3
 2916 0088 FFF7FEFF 		bl	writeData
 873:RA8875.c      ****   writeCommand(0x96);
 2917              		.loc 1 873 0
 2918 008c 9620     		movs	r0, #150
 2919 008e FFF7FEFF 		bl	writeCommand
 874:RA8875.c      ****   writeData((w) >> 8);
 2920              		.loc 1 874 0
 2921 0092 BB1C     		adds	r3, r7, #2
 2922 0094 0022     		movs	r2, #0
 2923 0096 9B5E     		ldrsh	r3, [r3, r2]
 2924 0098 1B12     		asrs	r3, r3, #8
 2925 009a 1BB2     		sxth	r3, r3
 2926 009c DBB2     		uxtb	r3, r3
 2927 009e 1800     		movs	r0, r3
 2928 00a0 FFF7FEFF 		bl	writeData
 875:RA8875.c      ****   
 876:RA8875.c      ****   /* Set Y1 */
 877:RA8875.c      ****   writeCommand(0x97);
 2929              		.loc 1 877 0
 2930 00a4 9720     		movs	r0, #151
 2931 00a6 FFF7FEFF 		bl	writeCommand
 878:RA8875.c      ****   writeData(h); 
 2932              		.loc 1 878 0
 2933 00aa 3B00     		movs	r3, r7
 2934 00ac 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 68


 2935 00ae DBB2     		uxtb	r3, r3
 2936 00b0 1800     		movs	r0, r3
 2937 00b2 FFF7FEFF 		bl	writeData
 879:RA8875.c      ****   writeCommand(0x98);
 2938              		.loc 1 879 0
 2939 00b6 9820     		movs	r0, #152
 2940 00b8 FFF7FEFF 		bl	writeCommand
 880:RA8875.c      ****   writeData((h) >> 8);
 2941              		.loc 1 880 0
 2942 00bc 3B00     		movs	r3, r7
 2943 00be 0022     		movs	r2, #0
 2944 00c0 9B5E     		ldrsh	r3, [r3, r2]
 2945 00c2 1B12     		asrs	r3, r3, #8
 2946 00c4 1BB2     		sxth	r3, r3
 2947 00c6 DBB2     		uxtb	r3, r3
 2948 00c8 1800     		movs	r0, r3
 2949 00ca FFF7FEFF 		bl	writeData
 881:RA8875.c      **** 
 882:RA8875.c      ****   /* Set Color */
 883:RA8875.c      ****   writeCommand(0x63);
 2950              		.loc 1 883 0
 2951 00ce 6320     		movs	r0, #99
 2952 00d0 FFF7FEFF 		bl	writeCommand
 884:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 2953              		.loc 1 884 0
 2954 00d4 1823     		movs	r3, #24
 2955 00d6 FB18     		adds	r3, r7, r3
 2956 00d8 1B88     		ldrh	r3, [r3]
 2957 00da DB0A     		lsrs	r3, r3, #11
 2958 00dc 9BB2     		uxth	r3, r3
 2959 00de DBB2     		uxtb	r3, r3
 2960 00e0 1800     		movs	r0, r3
 2961 00e2 FFF7FEFF 		bl	writeData
 885:RA8875.c      ****   writeCommand(0x64);
 2962              		.loc 1 885 0
 2963 00e6 6420     		movs	r0, #100
 2964 00e8 FFF7FEFF 		bl	writeCommand
 886:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 2965              		.loc 1 886 0
 2966 00ec 1823     		movs	r3, #24
 2967 00ee FB18     		adds	r3, r7, r3
 2968 00f0 1B88     		ldrh	r3, [r3]
 2969 00f2 5B11     		asrs	r3, r3, #5
 2970 00f4 DBB2     		uxtb	r3, r3
 2971 00f6 3F22     		movs	r2, #63
 2972 00f8 1340     		ands	r3, r2
 2973 00fa DBB2     		uxtb	r3, r3
 2974 00fc 1800     		movs	r0, r3
 2975 00fe FFF7FEFF 		bl	writeData
 887:RA8875.c      ****   writeCommand(0x65);
 2976              		.loc 1 887 0
 2977 0102 6520     		movs	r0, #101
 2978 0104 FFF7FEFF 		bl	writeCommand
 888:RA8875.c      ****   writeData((color & 0x001f));
 2979              		.loc 1 888 0
 2980 0108 1823     		movs	r3, #24
 2981 010a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 69


 2982 010c 1B88     		ldrh	r3, [r3]
 2983 010e DBB2     		uxtb	r3, r3
 2984 0110 1F22     		movs	r2, #31
 2985 0112 1340     		ands	r3, r2
 2986 0114 DBB2     		uxtb	r3, r3
 2987 0116 1800     		movs	r0, r3
 2988 0118 FFF7FEFF 		bl	writeData
 889:RA8875.c      **** 
 890:RA8875.c      ****   /* Draw! */
 891:RA8875.c      ****   writeCommand(RA8875_DCR);
 2989              		.loc 1 891 0
 2990 011c 9020     		movs	r0, #144
 2991 011e FFF7FEFF 		bl	writeCommand
 892:RA8875.c      ****   if (filled)
 2992              		.loc 1 892 0
 2993 0122 1C23     		movs	r3, #28
 2994 0124 FB18     		adds	r3, r7, r3
 2995 0126 1B78     		ldrb	r3, [r3]
 2996 0128 002B     		cmp	r3, #0
 2997 012a 03D0     		beq	.L76
 893:RA8875.c      ****   {
 894:RA8875.c      ****     writeData(0xB0);
 2998              		.loc 1 894 0
 2999 012c B020     		movs	r0, #176
 3000 012e FFF7FEFF 		bl	writeData
 3001 0132 02E0     		b	.L77
 3002              	.L76:
 895:RA8875.c      ****   }
 896:RA8875.c      ****   else
 897:RA8875.c      ****   {
 898:RA8875.c      ****     writeData(0x90);
 3003              		.loc 1 898 0
 3004 0134 9020     		movs	r0, #144
 3005 0136 FFF7FEFF 		bl	writeData
 3006              	.L77:
 899:RA8875.c      ****   }
 900:RA8875.c      ****   
 901:RA8875.c      ****   /* Wait for the command to finish */
 902:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 3007              		.loc 1 902 0
 3008 013a 8021     		movs	r1, #128
 3009 013c 9020     		movs	r0, #144
 3010 013e FFF7FEFF 		bl	waitPoll
 903:RA8875.c      **** 
 904:RA8875.c      **** }
 3011              		.loc 1 904 0
 3012 0142 C046     		nop
 3013 0144 BD46     		mov	sp, r7
 3014 0146 02B0     		add	sp, sp, #8
 3015              		@ sp needed
 3016 0148 B0BD     		pop	{r4, r5, r7, pc}
 3017              		.cfi_endproc
 3018              	.LFE68:
 3019              		.size	rectHelper, .-rectHelper
 3020 014a C046     		.section	.text.triangleHelper,"ax",%progbits
 3021              		.align	2
 3022              		.global	triangleHelper
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 70


 3023              		.code	16
 3024              		.thumb_func
 3025              		.type	triangleHelper, %function
 3026              	triangleHelper:
 3027              	.LFB69:
 905:RA8875.c      **** 
 906:RA8875.c      **** /**************************************************************************/
 907:RA8875.c      **** /*!
 908:RA8875.c      ****       Helper function for higher level triangle drawing code
 909:RA8875.c      **** */
 910:RA8875.c      **** /**************************************************************************/
 911:RA8875.c      **** void triangleHelper(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_
 912:RA8875.c      **** {
 3028              		.loc 1 912 0
 3029              		.cfi_startproc
 3030              		@ args = 16, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0000 B0B5     		push	{r4, r5, r7, lr}
 3033              		.cfi_def_cfa_offset 16
 3034              		.cfi_offset 4, -16
 3035              		.cfi_offset 5, -12
 3036              		.cfi_offset 7, -8
 3037              		.cfi_offset 14, -4
 3038 0002 82B0     		sub	sp, sp, #8
 3039              		.cfi_def_cfa_offset 24
 3040 0004 00AF     		add	r7, sp, #0
 3041              		.cfi_def_cfa_register 7
 3042 0006 0500     		movs	r5, r0
 3043 0008 0C00     		movs	r4, r1
 3044 000a 1000     		movs	r0, r2
 3045 000c 1900     		movs	r1, r3
 3046 000e BB1D     		adds	r3, r7, #6
 3047 0010 2A1C     		adds	r2, r5, #0
 3048 0012 1A80     		strh	r2, [r3]
 3049 0014 3B1D     		adds	r3, r7, #4
 3050 0016 221C     		adds	r2, r4, #0
 3051 0018 1A80     		strh	r2, [r3]
 3052 001a BB1C     		adds	r3, r7, #2
 3053 001c 021C     		adds	r2, r0, #0
 3054 001e 1A80     		strh	r2, [r3]
 3055 0020 3B00     		movs	r3, r7
 3056 0022 0A1C     		adds	r2, r1, #0
 3057 0024 1A80     		strh	r2, [r3]
 913:RA8875.c      ****   /* Set Point 0 */
 914:RA8875.c      ****   writeCommand(0x91);
 3058              		.loc 1 914 0
 3059 0026 9120     		movs	r0, #145
 3060 0028 FFF7FEFF 		bl	writeCommand
 915:RA8875.c      ****   writeData(x0);
 3061              		.loc 1 915 0
 3062 002c BB1D     		adds	r3, r7, #6
 3063 002e 1B88     		ldrh	r3, [r3]
 3064 0030 DBB2     		uxtb	r3, r3
 3065 0032 1800     		movs	r0, r3
 3066 0034 FFF7FEFF 		bl	writeData
 916:RA8875.c      ****   writeCommand(0x92);
 3067              		.loc 1 916 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 71


 3068 0038 9220     		movs	r0, #146
 3069 003a FFF7FEFF 		bl	writeCommand
 917:RA8875.c      ****   writeData(x0 >> 8);
 3070              		.loc 1 917 0
 3071 003e BB1D     		adds	r3, r7, #6
 3072 0040 0022     		movs	r2, #0
 3073 0042 9B5E     		ldrsh	r3, [r3, r2]
 3074 0044 1B12     		asrs	r3, r3, #8
 3075 0046 1BB2     		sxth	r3, r3
 3076 0048 DBB2     		uxtb	r3, r3
 3077 004a 1800     		movs	r0, r3
 3078 004c FFF7FEFF 		bl	writeData
 918:RA8875.c      ****   writeCommand(0x93);
 3079              		.loc 1 918 0
 3080 0050 9320     		movs	r0, #147
 3081 0052 FFF7FEFF 		bl	writeCommand
 919:RA8875.c      ****   writeData(y0); 
 3082              		.loc 1 919 0
 3083 0056 3B1D     		adds	r3, r7, #4
 3084 0058 1B88     		ldrh	r3, [r3]
 3085 005a DBB2     		uxtb	r3, r3
 3086 005c 1800     		movs	r0, r3
 3087 005e FFF7FEFF 		bl	writeData
 920:RA8875.c      ****   writeCommand(0x94);
 3088              		.loc 1 920 0
 3089 0062 9420     		movs	r0, #148
 3090 0064 FFF7FEFF 		bl	writeCommand
 921:RA8875.c      ****   writeData(y0 >> 8);
 3091              		.loc 1 921 0
 3092 0068 3B1D     		adds	r3, r7, #4
 3093 006a 0022     		movs	r2, #0
 3094 006c 9B5E     		ldrsh	r3, [r3, r2]
 3095 006e 1B12     		asrs	r3, r3, #8
 3096 0070 1BB2     		sxth	r3, r3
 3097 0072 DBB2     		uxtb	r3, r3
 3098 0074 1800     		movs	r0, r3
 3099 0076 FFF7FEFF 		bl	writeData
 922:RA8875.c      **** 
 923:RA8875.c      ****   /* Set Point 1 */
 924:RA8875.c      ****   writeCommand(0x95);
 3100              		.loc 1 924 0
 3101 007a 9520     		movs	r0, #149
 3102 007c FFF7FEFF 		bl	writeCommand
 925:RA8875.c      ****   writeData(x1);
 3103              		.loc 1 925 0
 3104 0080 BB1C     		adds	r3, r7, #2
 3105 0082 1B88     		ldrh	r3, [r3]
 3106 0084 DBB2     		uxtb	r3, r3
 3107 0086 1800     		movs	r0, r3
 3108 0088 FFF7FEFF 		bl	writeData
 926:RA8875.c      ****   writeCommand(0x96);
 3109              		.loc 1 926 0
 3110 008c 9620     		movs	r0, #150
 3111 008e FFF7FEFF 		bl	writeCommand
 927:RA8875.c      ****   writeData(x1 >> 8);
 3112              		.loc 1 927 0
 3113 0092 BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 72


 3114 0094 0022     		movs	r2, #0
 3115 0096 9B5E     		ldrsh	r3, [r3, r2]
 3116 0098 1B12     		asrs	r3, r3, #8
 3117 009a 1BB2     		sxth	r3, r3
 3118 009c DBB2     		uxtb	r3, r3
 3119 009e 1800     		movs	r0, r3
 3120 00a0 FFF7FEFF 		bl	writeData
 928:RA8875.c      ****   writeCommand(0x97);
 3121              		.loc 1 928 0
 3122 00a4 9720     		movs	r0, #151
 3123 00a6 FFF7FEFF 		bl	writeCommand
 929:RA8875.c      ****   writeData(y1); 
 3124              		.loc 1 929 0
 3125 00aa 3B00     		movs	r3, r7
 3126 00ac 1B88     		ldrh	r3, [r3]
 3127 00ae DBB2     		uxtb	r3, r3
 3128 00b0 1800     		movs	r0, r3
 3129 00b2 FFF7FEFF 		bl	writeData
 930:RA8875.c      ****   writeCommand(0x98);
 3130              		.loc 1 930 0
 3131 00b6 9820     		movs	r0, #152
 3132 00b8 FFF7FEFF 		bl	writeCommand
 931:RA8875.c      ****   writeData(y1 >> 8);
 3133              		.loc 1 931 0
 3134 00bc 3B00     		movs	r3, r7
 3135 00be 0022     		movs	r2, #0
 3136 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3137 00c2 1B12     		asrs	r3, r3, #8
 3138 00c4 1BB2     		sxth	r3, r3
 3139 00c6 DBB2     		uxtb	r3, r3
 3140 00c8 1800     		movs	r0, r3
 3141 00ca FFF7FEFF 		bl	writeData
 932:RA8875.c      **** 
 933:RA8875.c      ****   /* Set Point 2 */
 934:RA8875.c      ****   writeCommand(0xA9);
 3142              		.loc 1 934 0
 3143 00ce A920     		movs	r0, #169
 3144 00d0 FFF7FEFF 		bl	writeCommand
 935:RA8875.c      ****   writeData(x2);
 3145              		.loc 1 935 0
 3146 00d4 1823     		movs	r3, #24
 3147 00d6 FB18     		adds	r3, r7, r3
 3148 00d8 1B88     		ldrh	r3, [r3]
 3149 00da DBB2     		uxtb	r3, r3
 3150 00dc 1800     		movs	r0, r3
 3151 00de FFF7FEFF 		bl	writeData
 936:RA8875.c      ****   writeCommand(0xAA);
 3152              		.loc 1 936 0
 3153 00e2 AA20     		movs	r0, #170
 3154 00e4 FFF7FEFF 		bl	writeCommand
 937:RA8875.c      ****   writeData(x2 >> 8);
 3155              		.loc 1 937 0
 3156 00e8 1823     		movs	r3, #24
 3157 00ea FB18     		adds	r3, r7, r3
 3158 00ec 0022     		movs	r2, #0
 3159 00ee 9B5E     		ldrsh	r3, [r3, r2]
 3160 00f0 1B12     		asrs	r3, r3, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 73


 3161 00f2 1BB2     		sxth	r3, r3
 3162 00f4 DBB2     		uxtb	r3, r3
 3163 00f6 1800     		movs	r0, r3
 3164 00f8 FFF7FEFF 		bl	writeData
 938:RA8875.c      ****   writeCommand(0xAB);
 3165              		.loc 1 938 0
 3166 00fc AB20     		movs	r0, #171
 3167 00fe FFF7FEFF 		bl	writeCommand
 939:RA8875.c      ****   writeData(y2); 
 3168              		.loc 1 939 0
 3169 0102 1C23     		movs	r3, #28
 3170 0104 FB18     		adds	r3, r7, r3
 3171 0106 1B88     		ldrh	r3, [r3]
 3172 0108 DBB2     		uxtb	r3, r3
 3173 010a 1800     		movs	r0, r3
 3174 010c FFF7FEFF 		bl	writeData
 940:RA8875.c      ****   writeCommand(0xAC);
 3175              		.loc 1 940 0
 3176 0110 AC20     		movs	r0, #172
 3177 0112 FFF7FEFF 		bl	writeCommand
 941:RA8875.c      ****   writeData(y2 >> 8);
 3178              		.loc 1 941 0
 3179 0116 1C23     		movs	r3, #28
 3180 0118 FB18     		adds	r3, r7, r3
 3181 011a 0022     		movs	r2, #0
 3182 011c 9B5E     		ldrsh	r3, [r3, r2]
 3183 011e 1B12     		asrs	r3, r3, #8
 3184 0120 1BB2     		sxth	r3, r3
 3185 0122 DBB2     		uxtb	r3, r3
 3186 0124 1800     		movs	r0, r3
 3187 0126 FFF7FEFF 		bl	writeData
 942:RA8875.c      ****   
 943:RA8875.c      ****   /* Set Color */
 944:RA8875.c      ****   writeCommand(0x63);
 3188              		.loc 1 944 0
 3189 012a 6320     		movs	r0, #99
 3190 012c FFF7FEFF 		bl	writeCommand
 945:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3191              		.loc 1 945 0
 3192 0130 2023     		movs	r3, #32
 3193 0132 FB18     		adds	r3, r7, r3
 3194 0134 1B88     		ldrh	r3, [r3]
 3195 0136 DB0A     		lsrs	r3, r3, #11
 3196 0138 9BB2     		uxth	r3, r3
 3197 013a DBB2     		uxtb	r3, r3
 3198 013c 1800     		movs	r0, r3
 3199 013e FFF7FEFF 		bl	writeData
 946:RA8875.c      ****   writeCommand(0x64);
 3200              		.loc 1 946 0
 3201 0142 6420     		movs	r0, #100
 3202 0144 FFF7FEFF 		bl	writeCommand
 947:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3203              		.loc 1 947 0
 3204 0148 2023     		movs	r3, #32
 3205 014a FB18     		adds	r3, r7, r3
 3206 014c 1B88     		ldrh	r3, [r3]
 3207 014e 5B11     		asrs	r3, r3, #5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 74


 3208 0150 DBB2     		uxtb	r3, r3
 3209 0152 3F22     		movs	r2, #63
 3210 0154 1340     		ands	r3, r2
 3211 0156 DBB2     		uxtb	r3, r3
 3212 0158 1800     		movs	r0, r3
 3213 015a FFF7FEFF 		bl	writeData
 948:RA8875.c      ****   writeCommand(0x65);
 3214              		.loc 1 948 0
 3215 015e 6520     		movs	r0, #101
 3216 0160 FFF7FEFF 		bl	writeCommand
 949:RA8875.c      ****   writeData((color & 0x001f));
 3217              		.loc 1 949 0
 3218 0164 2023     		movs	r3, #32
 3219 0166 FB18     		adds	r3, r7, r3
 3220 0168 1B88     		ldrh	r3, [r3]
 3221 016a DBB2     		uxtb	r3, r3
 3222 016c 1F22     		movs	r2, #31
 3223 016e 1340     		ands	r3, r2
 3224 0170 DBB2     		uxtb	r3, r3
 3225 0172 1800     		movs	r0, r3
 3226 0174 FFF7FEFF 		bl	writeData
 950:RA8875.c      ****   
 951:RA8875.c      ****   /* Draw! */
 952:RA8875.c      ****   writeCommand(RA8875_DCR);
 3227              		.loc 1 952 0
 3228 0178 9020     		movs	r0, #144
 3229 017a FFF7FEFF 		bl	writeCommand
 953:RA8875.c      ****   if (filled)
 3230              		.loc 1 953 0
 3231 017e 2423     		movs	r3, #36
 3232 0180 FB18     		adds	r3, r7, r3
 3233 0182 1B78     		ldrb	r3, [r3]
 3234 0184 002B     		cmp	r3, #0
 3235 0186 03D0     		beq	.L79
 954:RA8875.c      ****   {
 955:RA8875.c      ****     writeData(0xA1);
 3236              		.loc 1 955 0
 3237 0188 A120     		movs	r0, #161
 3238 018a FFF7FEFF 		bl	writeData
 3239 018e 02E0     		b	.L80
 3240              	.L79:
 956:RA8875.c      ****   }
 957:RA8875.c      ****   else
 958:RA8875.c      ****   {
 959:RA8875.c      ****     writeData(0x81);
 3241              		.loc 1 959 0
 3242 0190 8120     		movs	r0, #129
 3243 0192 FFF7FEFF 		bl	writeData
 3244              	.L80:
 960:RA8875.c      ****   }
 961:RA8875.c      ****   
 962:RA8875.c      ****   /* Wait for the command to finish */
 963:RA8875.c      ****   waitPoll(RA8875_DCR, RA8875_DCR_LINESQUTRI_STATUS);
 3245              		.loc 1 963 0
 3246 0196 8021     		movs	r1, #128
 3247 0198 9020     		movs	r0, #144
 3248 019a FFF7FEFF 		bl	waitPoll
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 75


 964:RA8875.c      **** }
 3249              		.loc 1 964 0
 3250 019e C046     		nop
 3251 01a0 BD46     		mov	sp, r7
 3252 01a2 02B0     		add	sp, sp, #8
 3253              		@ sp needed
 3254 01a4 B0BD     		pop	{r4, r5, r7, pc}
 3255              		.cfi_endproc
 3256              	.LFE69:
 3257              		.size	triangleHelper, .-triangleHelper
 3258 01a6 C046     		.section	.text.ellipseHelper,"ax",%progbits
 3259              		.align	2
 3260              		.global	ellipseHelper
 3261              		.code	16
 3262              		.thumb_func
 3263              		.type	ellipseHelper, %function
 3264              	ellipseHelper:
 3265              	.LFB70:
 965:RA8875.c      **** 
 966:RA8875.c      **** /**************************************************************************/
 967:RA8875.c      **** /*!
 968:RA8875.c      ****       Helper function for higher level ellipse drawing code
 969:RA8875.c      **** */
 970:RA8875.c      **** /**************************************************************************/
 971:RA8875.c      **** void ellipseHelper(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint16_t 
 972:RA8875.c      **** {
 3266              		.loc 1 972 0
 3267              		.cfi_startproc
 3268              		@ args = 8, pretend = 0, frame = 8
 3269              		@ frame_needed = 1, uses_anonymous_args = 0
 3270 0000 B0B5     		push	{r4, r5, r7, lr}
 3271              		.cfi_def_cfa_offset 16
 3272              		.cfi_offset 4, -16
 3273              		.cfi_offset 5, -12
 3274              		.cfi_offset 7, -8
 3275              		.cfi_offset 14, -4
 3276 0002 82B0     		sub	sp, sp, #8
 3277              		.cfi_def_cfa_offset 24
 3278 0004 00AF     		add	r7, sp, #0
 3279              		.cfi_def_cfa_register 7
 3280 0006 0500     		movs	r5, r0
 3281 0008 0C00     		movs	r4, r1
 3282 000a 1000     		movs	r0, r2
 3283 000c 1900     		movs	r1, r3
 3284 000e BB1D     		adds	r3, r7, #6
 3285 0010 2A1C     		adds	r2, r5, #0
 3286 0012 1A80     		strh	r2, [r3]
 3287 0014 3B1D     		adds	r3, r7, #4
 3288 0016 221C     		adds	r2, r4, #0
 3289 0018 1A80     		strh	r2, [r3]
 3290 001a BB1C     		adds	r3, r7, #2
 3291 001c 021C     		adds	r2, r0, #0
 3292 001e 1A80     		strh	r2, [r3]
 3293 0020 3B00     		movs	r3, r7
 3294 0022 0A1C     		adds	r2, r1, #0
 3295 0024 1A80     		strh	r2, [r3]
 973:RA8875.c      ****   /* Set Center Point */
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 76


 974:RA8875.c      ****   writeCommand(0xA5);
 3296              		.loc 1 974 0
 3297 0026 A520     		movs	r0, #165
 3298 0028 FFF7FEFF 		bl	writeCommand
 975:RA8875.c      ****   writeData(xCenter);
 3299              		.loc 1 975 0
 3300 002c BB1D     		adds	r3, r7, #6
 3301 002e 1B88     		ldrh	r3, [r3]
 3302 0030 DBB2     		uxtb	r3, r3
 3303 0032 1800     		movs	r0, r3
 3304 0034 FFF7FEFF 		bl	writeData
 976:RA8875.c      ****   writeCommand(0xA6);
 3305              		.loc 1 976 0
 3306 0038 A620     		movs	r0, #166
 3307 003a FFF7FEFF 		bl	writeCommand
 977:RA8875.c      ****   writeData(xCenter >> 8);
 3308              		.loc 1 977 0
 3309 003e BB1D     		adds	r3, r7, #6
 3310 0040 0022     		movs	r2, #0
 3311 0042 9B5E     		ldrsh	r3, [r3, r2]
 3312 0044 1B12     		asrs	r3, r3, #8
 3313 0046 1BB2     		sxth	r3, r3
 3314 0048 DBB2     		uxtb	r3, r3
 3315 004a 1800     		movs	r0, r3
 3316 004c FFF7FEFF 		bl	writeData
 978:RA8875.c      ****   writeCommand(0xA7);
 3317              		.loc 1 978 0
 3318 0050 A720     		movs	r0, #167
 3319 0052 FFF7FEFF 		bl	writeCommand
 979:RA8875.c      ****   writeData(yCenter); 
 3320              		.loc 1 979 0
 3321 0056 3B1D     		adds	r3, r7, #4
 3322 0058 1B88     		ldrh	r3, [r3]
 3323 005a DBB2     		uxtb	r3, r3
 3324 005c 1800     		movs	r0, r3
 3325 005e FFF7FEFF 		bl	writeData
 980:RA8875.c      ****   writeCommand(0xA8);
 3326              		.loc 1 980 0
 3327 0062 A820     		movs	r0, #168
 3328 0064 FFF7FEFF 		bl	writeCommand
 981:RA8875.c      ****   writeData(yCenter >> 8);
 3329              		.loc 1 981 0
 3330 0068 3B1D     		adds	r3, r7, #4
 3331 006a 0022     		movs	r2, #0
 3332 006c 9B5E     		ldrsh	r3, [r3, r2]
 3333 006e 1B12     		asrs	r3, r3, #8
 3334 0070 1BB2     		sxth	r3, r3
 3335 0072 DBB2     		uxtb	r3, r3
 3336 0074 1800     		movs	r0, r3
 3337 0076 FFF7FEFF 		bl	writeData
 982:RA8875.c      **** 
 983:RA8875.c      ****   /* Set Long and Short Axis */
 984:RA8875.c      ****   writeCommand(0xA1);
 3338              		.loc 1 984 0
 3339 007a A120     		movs	r0, #161
 3340 007c FFF7FEFF 		bl	writeCommand
 985:RA8875.c      ****   writeData(longAxis);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 77


 3341              		.loc 1 985 0
 3342 0080 BB1C     		adds	r3, r7, #2
 3343 0082 1B88     		ldrh	r3, [r3]
 3344 0084 DBB2     		uxtb	r3, r3
 3345 0086 1800     		movs	r0, r3
 3346 0088 FFF7FEFF 		bl	writeData
 986:RA8875.c      ****   writeCommand(0xA2);
 3347              		.loc 1 986 0
 3348 008c A220     		movs	r0, #162
 3349 008e FFF7FEFF 		bl	writeCommand
 987:RA8875.c      ****   writeData(longAxis >> 8);
 3350              		.loc 1 987 0
 3351 0092 BB1C     		adds	r3, r7, #2
 3352 0094 0022     		movs	r2, #0
 3353 0096 9B5E     		ldrsh	r3, [r3, r2]
 3354 0098 1B12     		asrs	r3, r3, #8
 3355 009a 1BB2     		sxth	r3, r3
 3356 009c DBB2     		uxtb	r3, r3
 3357 009e 1800     		movs	r0, r3
 3358 00a0 FFF7FEFF 		bl	writeData
 988:RA8875.c      ****   writeCommand(0xA3);
 3359              		.loc 1 988 0
 3360 00a4 A320     		movs	r0, #163
 3361 00a6 FFF7FEFF 		bl	writeCommand
 989:RA8875.c      ****   writeData(shortAxis); 
 3362              		.loc 1 989 0
 3363 00aa 3B00     		movs	r3, r7
 3364 00ac 1B88     		ldrh	r3, [r3]
 3365 00ae DBB2     		uxtb	r3, r3
 3366 00b0 1800     		movs	r0, r3
 3367 00b2 FFF7FEFF 		bl	writeData
 990:RA8875.c      ****   writeCommand(0xA4);
 3368              		.loc 1 990 0
 3369 00b6 A420     		movs	r0, #164
 3370 00b8 FFF7FEFF 		bl	writeCommand
 991:RA8875.c      ****   writeData(shortAxis >> 8);
 3371              		.loc 1 991 0
 3372 00bc 3B00     		movs	r3, r7
 3373 00be 0022     		movs	r2, #0
 3374 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3375 00c2 1B12     		asrs	r3, r3, #8
 3376 00c4 1BB2     		sxth	r3, r3
 3377 00c6 DBB2     		uxtb	r3, r3
 3378 00c8 1800     		movs	r0, r3
 3379 00ca FFF7FEFF 		bl	writeData
 992:RA8875.c      ****   
 993:RA8875.c      ****   /* Set Color */
 994:RA8875.c      ****   writeCommand(0x63);
 3380              		.loc 1 994 0
 3381 00ce 6320     		movs	r0, #99
 3382 00d0 FFF7FEFF 		bl	writeCommand
 995:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3383              		.loc 1 995 0
 3384 00d4 1823     		movs	r3, #24
 3385 00d6 FB18     		adds	r3, r7, r3
 3386 00d8 1B88     		ldrh	r3, [r3]
 3387 00da DB0A     		lsrs	r3, r3, #11
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 78


 3388 00dc 9BB2     		uxth	r3, r3
 3389 00de DBB2     		uxtb	r3, r3
 3390 00e0 1800     		movs	r0, r3
 3391 00e2 FFF7FEFF 		bl	writeData
 996:RA8875.c      ****   writeCommand(0x64);
 3392              		.loc 1 996 0
 3393 00e6 6420     		movs	r0, #100
 3394 00e8 FFF7FEFF 		bl	writeCommand
 997:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3395              		.loc 1 997 0
 3396 00ec 1823     		movs	r3, #24
 3397 00ee FB18     		adds	r3, r7, r3
 3398 00f0 1B88     		ldrh	r3, [r3]
 3399 00f2 5B11     		asrs	r3, r3, #5
 3400 00f4 DBB2     		uxtb	r3, r3
 3401 00f6 3F22     		movs	r2, #63
 3402 00f8 1340     		ands	r3, r2
 3403 00fa DBB2     		uxtb	r3, r3
 3404 00fc 1800     		movs	r0, r3
 3405 00fe FFF7FEFF 		bl	writeData
 998:RA8875.c      ****   writeCommand(0x65);
 3406              		.loc 1 998 0
 3407 0102 6520     		movs	r0, #101
 3408 0104 FFF7FEFF 		bl	writeCommand
 999:RA8875.c      ****   writeData((color & 0x001f));
 3409              		.loc 1 999 0
 3410 0108 1823     		movs	r3, #24
 3411 010a FB18     		adds	r3, r7, r3
 3412 010c 1B88     		ldrh	r3, [r3]
 3413 010e DBB2     		uxtb	r3, r3
 3414 0110 1F22     		movs	r2, #31
 3415 0112 1340     		ands	r3, r2
 3416 0114 DBB2     		uxtb	r3, r3
 3417 0116 1800     		movs	r0, r3
 3418 0118 FFF7FEFF 		bl	writeData
1000:RA8875.c      ****   
1001:RA8875.c      ****   /* Draw! */
1002:RA8875.c      ****   writeCommand(0xA0);
 3419              		.loc 1 1002 0
 3420 011c A020     		movs	r0, #160
 3421 011e FFF7FEFF 		bl	writeCommand
1003:RA8875.c      ****   if (filled)
 3422              		.loc 1 1003 0
 3423 0122 1C23     		movs	r3, #28
 3424 0124 FB18     		adds	r3, r7, r3
 3425 0126 1B78     		ldrb	r3, [r3]
 3426 0128 002B     		cmp	r3, #0
 3427 012a 03D0     		beq	.L82
1004:RA8875.c      ****   {
1005:RA8875.c      ****     writeData(0xC0);
 3428              		.loc 1 1005 0
 3429 012c C020     		movs	r0, #192
 3430 012e FFF7FEFF 		bl	writeData
 3431 0132 02E0     		b	.L83
 3432              	.L82:
1006:RA8875.c      ****   }
1007:RA8875.c      ****   else
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 79


1008:RA8875.c      ****   {
1009:RA8875.c      ****     writeData(0x80);
 3433              		.loc 1 1009 0
 3434 0134 8020     		movs	r0, #128
 3435 0136 FFF7FEFF 		bl	writeData
 3436              	.L83:
1010:RA8875.c      ****   }
1011:RA8875.c      ****   
1012:RA8875.c      ****   /* Wait for the command to finish */
1013:RA8875.c      ****   waitPoll(RA8875_ELLIPSE, RA8875_ELLIPSE_STATUS);
 3437              		.loc 1 1013 0
 3438 013a 8021     		movs	r1, #128
 3439 013c A020     		movs	r0, #160
 3440 013e FFF7FEFF 		bl	waitPoll
1014:RA8875.c      **** }
 3441              		.loc 1 1014 0
 3442 0142 C046     		nop
 3443 0144 BD46     		mov	sp, r7
 3444 0146 02B0     		add	sp, sp, #8
 3445              		@ sp needed
 3446 0148 B0BD     		pop	{r4, r5, r7, pc}
 3447              		.cfi_endproc
 3448              	.LFE70:
 3449              		.size	ellipseHelper, .-ellipseHelper
 3450 014a C046     		.section	.text.curveHelper,"ax",%progbits
 3451              		.align	2
 3452              		.global	curveHelper
 3453              		.code	16
 3454              		.thumb_func
 3455              		.type	curveHelper, %function
 3456              	curveHelper:
 3457              	.LFB71:
1015:RA8875.c      **** 
1016:RA8875.c      **** /**************************************************************************/
1017:RA8875.c      **** /*!
1018:RA8875.c      ****       Helper function for higher level curve drawing code
1019:RA8875.c      **** */
1020:RA8875.c      **** /**************************************************************************/
1021:RA8875.c      **** void curveHelper(int16_t xCenter, int16_t yCenter, int16_t longAxis, int16_t shortAxis, uint8_t cur
1022:RA8875.c      **** {
 3458              		.loc 1 1022 0
 3459              		.cfi_startproc
 3460              		@ args = 12, pretend = 0, frame = 8
 3461              		@ frame_needed = 1, uses_anonymous_args = 0
 3462 0000 B0B5     		push	{r4, r5, r7, lr}
 3463              		.cfi_def_cfa_offset 16
 3464              		.cfi_offset 4, -16
 3465              		.cfi_offset 5, -12
 3466              		.cfi_offset 7, -8
 3467              		.cfi_offset 14, -4
 3468 0002 82B0     		sub	sp, sp, #8
 3469              		.cfi_def_cfa_offset 24
 3470 0004 00AF     		add	r7, sp, #0
 3471              		.cfi_def_cfa_register 7
 3472 0006 0500     		movs	r5, r0
 3473 0008 0C00     		movs	r4, r1
 3474 000a 1000     		movs	r0, r2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 80


 3475 000c 1900     		movs	r1, r3
 3476 000e BB1D     		adds	r3, r7, #6
 3477 0010 2A1C     		adds	r2, r5, #0
 3478 0012 1A80     		strh	r2, [r3]
 3479 0014 3B1D     		adds	r3, r7, #4
 3480 0016 221C     		adds	r2, r4, #0
 3481 0018 1A80     		strh	r2, [r3]
 3482 001a BB1C     		adds	r3, r7, #2
 3483 001c 021C     		adds	r2, r0, #0
 3484 001e 1A80     		strh	r2, [r3]
 3485 0020 3B00     		movs	r3, r7
 3486 0022 0A1C     		adds	r2, r1, #0
 3487 0024 1A80     		strh	r2, [r3]
1023:RA8875.c      ****   /* Set Center Point */
1024:RA8875.c      ****   writeCommand(0xA5);
 3488              		.loc 1 1024 0
 3489 0026 A520     		movs	r0, #165
 3490 0028 FFF7FEFF 		bl	writeCommand
1025:RA8875.c      ****   writeData(xCenter);
 3491              		.loc 1 1025 0
 3492 002c BB1D     		adds	r3, r7, #6
 3493 002e 1B88     		ldrh	r3, [r3]
 3494 0030 DBB2     		uxtb	r3, r3
 3495 0032 1800     		movs	r0, r3
 3496 0034 FFF7FEFF 		bl	writeData
1026:RA8875.c      ****   writeCommand(0xA6);
 3497              		.loc 1 1026 0
 3498 0038 A620     		movs	r0, #166
 3499 003a FFF7FEFF 		bl	writeCommand
1027:RA8875.c      ****   writeData(xCenter >> 8);
 3500              		.loc 1 1027 0
 3501 003e BB1D     		adds	r3, r7, #6
 3502 0040 0022     		movs	r2, #0
 3503 0042 9B5E     		ldrsh	r3, [r3, r2]
 3504 0044 1B12     		asrs	r3, r3, #8
 3505 0046 1BB2     		sxth	r3, r3
 3506 0048 DBB2     		uxtb	r3, r3
 3507 004a 1800     		movs	r0, r3
 3508 004c FFF7FEFF 		bl	writeData
1028:RA8875.c      ****   writeCommand(0xA7);
 3509              		.loc 1 1028 0
 3510 0050 A720     		movs	r0, #167
 3511 0052 FFF7FEFF 		bl	writeCommand
1029:RA8875.c      ****   writeData(yCenter); 
 3512              		.loc 1 1029 0
 3513 0056 3B1D     		adds	r3, r7, #4
 3514 0058 1B88     		ldrh	r3, [r3]
 3515 005a DBB2     		uxtb	r3, r3
 3516 005c 1800     		movs	r0, r3
 3517 005e FFF7FEFF 		bl	writeData
1030:RA8875.c      ****   writeCommand(0xA8);
 3518              		.loc 1 1030 0
 3519 0062 A820     		movs	r0, #168
 3520 0064 FFF7FEFF 		bl	writeCommand
1031:RA8875.c      ****   writeData(yCenter >> 8);
 3521              		.loc 1 1031 0
 3522 0068 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 81


 3523 006a 0022     		movs	r2, #0
 3524 006c 9B5E     		ldrsh	r3, [r3, r2]
 3525 006e 1B12     		asrs	r3, r3, #8
 3526 0070 1BB2     		sxth	r3, r3
 3527 0072 DBB2     		uxtb	r3, r3
 3528 0074 1800     		movs	r0, r3
 3529 0076 FFF7FEFF 		bl	writeData
1032:RA8875.c      **** 
1033:RA8875.c      ****   /* Set Long and Short Axis */
1034:RA8875.c      ****   writeCommand(0xA1);
 3530              		.loc 1 1034 0
 3531 007a A120     		movs	r0, #161
 3532 007c FFF7FEFF 		bl	writeCommand
1035:RA8875.c      ****   writeData(longAxis);
 3533              		.loc 1 1035 0
 3534 0080 BB1C     		adds	r3, r7, #2
 3535 0082 1B88     		ldrh	r3, [r3]
 3536 0084 DBB2     		uxtb	r3, r3
 3537 0086 1800     		movs	r0, r3
 3538 0088 FFF7FEFF 		bl	writeData
1036:RA8875.c      ****   writeCommand(0xA2);
 3539              		.loc 1 1036 0
 3540 008c A220     		movs	r0, #162
 3541 008e FFF7FEFF 		bl	writeCommand
1037:RA8875.c      ****   writeData(longAxis >> 8);
 3542              		.loc 1 1037 0
 3543 0092 BB1C     		adds	r3, r7, #2
 3544 0094 0022     		movs	r2, #0
 3545 0096 9B5E     		ldrsh	r3, [r3, r2]
 3546 0098 1B12     		asrs	r3, r3, #8
 3547 009a 1BB2     		sxth	r3, r3
 3548 009c DBB2     		uxtb	r3, r3
 3549 009e 1800     		movs	r0, r3
 3550 00a0 FFF7FEFF 		bl	writeData
1038:RA8875.c      ****   writeCommand(0xA3);
 3551              		.loc 1 1038 0
 3552 00a4 A320     		movs	r0, #163
 3553 00a6 FFF7FEFF 		bl	writeCommand
1039:RA8875.c      ****   writeData(shortAxis); 
 3554              		.loc 1 1039 0
 3555 00aa 3B00     		movs	r3, r7
 3556 00ac 1B88     		ldrh	r3, [r3]
 3557 00ae DBB2     		uxtb	r3, r3
 3558 00b0 1800     		movs	r0, r3
 3559 00b2 FFF7FEFF 		bl	writeData
1040:RA8875.c      ****   writeCommand(0xA4);
 3560              		.loc 1 1040 0
 3561 00b6 A420     		movs	r0, #164
 3562 00b8 FFF7FEFF 		bl	writeCommand
1041:RA8875.c      ****   writeData(shortAxis >> 8);
 3563              		.loc 1 1041 0
 3564 00bc 3B00     		movs	r3, r7
 3565 00be 0022     		movs	r2, #0
 3566 00c0 9B5E     		ldrsh	r3, [r3, r2]
 3567 00c2 1B12     		asrs	r3, r3, #8
 3568 00c4 1BB2     		sxth	r3, r3
 3569 00c6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 82


 3570 00c8 1800     		movs	r0, r3
 3571 00ca FFF7FEFF 		bl	writeData
1042:RA8875.c      ****   
1043:RA8875.c      ****   /* Set Color */
1044:RA8875.c      ****   writeCommand(0x63);
 3572              		.loc 1 1044 0
 3573 00ce 6320     		movs	r0, #99
 3574 00d0 FFF7FEFF 		bl	writeCommand
1045:RA8875.c      ****   writeData((color & 0xf800) >> 11);
 3575              		.loc 1 1045 0
 3576 00d4 1C23     		movs	r3, #28
 3577 00d6 FB18     		adds	r3, r7, r3
 3578 00d8 1B88     		ldrh	r3, [r3]
 3579 00da DB0A     		lsrs	r3, r3, #11
 3580 00dc 9BB2     		uxth	r3, r3
 3581 00de DBB2     		uxtb	r3, r3
 3582 00e0 1800     		movs	r0, r3
 3583 00e2 FFF7FEFF 		bl	writeData
1046:RA8875.c      ****   writeCommand(0x64);
 3584              		.loc 1 1046 0
 3585 00e6 6420     		movs	r0, #100
 3586 00e8 FFF7FEFF 		bl	writeCommand
1047:RA8875.c      ****   writeData((color & 0x07e0) >> 5);
 3587              		.loc 1 1047 0
 3588 00ec 1C23     		movs	r3, #28
 3589 00ee FB18     		adds	r3, r7, r3
 3590 00f0 1B88     		ldrh	r3, [r3]
 3591 00f2 5B11     		asrs	r3, r3, #5
 3592 00f4 DBB2     		uxtb	r3, r3
 3593 00f6 3F22     		movs	r2, #63
 3594 00f8 1340     		ands	r3, r2
 3595 00fa DBB2     		uxtb	r3, r3
 3596 00fc 1800     		movs	r0, r3
 3597 00fe FFF7FEFF 		bl	writeData
1048:RA8875.c      ****   writeCommand(0x65);
 3598              		.loc 1 1048 0
 3599 0102 6520     		movs	r0, #101
 3600 0104 FFF7FEFF 		bl	writeCommand
1049:RA8875.c      ****   writeData((color & 0x001f));
 3601              		.loc 1 1049 0
 3602 0108 1C23     		movs	r3, #28
 3603 010a FB18     		adds	r3, r7, r3
 3604 010c 1B88     		ldrh	r3, [r3]
 3605 010e DBB2     		uxtb	r3, r3
 3606 0110 1F22     		movs	r2, #31
 3607 0112 1340     		ands	r3, r2
 3608 0114 DBB2     		uxtb	r3, r3
 3609 0116 1800     		movs	r0, r3
 3610 0118 FFF7FEFF 		bl	writeData
1050:RA8875.c      **** 
1051:RA8875.c      ****   /* Draw! */
1052:RA8875.c      ****   writeCommand(0xA0);
 3611              		.loc 1 1052 0
 3612 011c A020     		movs	r0, #160
 3613 011e FFF7FEFF 		bl	writeCommand
1053:RA8875.c      ****   if (filled)
 3614              		.loc 1 1053 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 83


 3615 0122 2023     		movs	r3, #32
 3616 0124 FB18     		adds	r3, r7, r3
 3617 0126 1B78     		ldrb	r3, [r3]
 3618 0128 002B     		cmp	r3, #0
 3619 012a 0FD0     		beq	.L85
1054:RA8875.c      ****   {
1055:RA8875.c      ****     writeData(0xD0 | (curvePart & 0x03));
 3620              		.loc 1 1055 0
 3621 012c 1823     		movs	r3, #24
 3622 012e FB18     		adds	r3, r7, r3
 3623 0130 1B78     		ldrb	r3, [r3]
 3624 0132 5BB2     		sxtb	r3, r3
 3625 0134 0322     		movs	r2, #3
 3626 0136 1340     		ands	r3, r2
 3627 0138 5BB2     		sxtb	r3, r3
 3628 013a 3022     		movs	r2, #48
 3629 013c 5242     		rsbs	r2, r2, #0
 3630 013e 1343     		orrs	r3, r2
 3631 0140 5BB2     		sxtb	r3, r3
 3632 0142 DBB2     		uxtb	r3, r3
 3633 0144 1800     		movs	r0, r3
 3634 0146 FFF7FEFF 		bl	writeData
 3635 014a 0EE0     		b	.L86
 3636              	.L85:
1056:RA8875.c      ****   }
1057:RA8875.c      ****   else
1058:RA8875.c      ****   {
1059:RA8875.c      ****     writeData(0x90 | (curvePart & 0x03));
 3637              		.loc 1 1059 0
 3638 014c 1823     		movs	r3, #24
 3639 014e FB18     		adds	r3, r7, r3
 3640 0150 1B78     		ldrb	r3, [r3]
 3641 0152 5BB2     		sxtb	r3, r3
 3642 0154 0322     		movs	r2, #3
 3643 0156 1340     		ands	r3, r2
 3644 0158 5BB2     		sxtb	r3, r3
 3645 015a 7022     		movs	r2, #112
 3646 015c 5242     		rsbs	r2, r2, #0
 3647 015e 1343     		orrs	r3, r2
 3648 0160 5BB2     		sxtb	r3, r3
 3649 0162 DBB2     		uxtb	r3, r3
 3650 0164 1800     		movs	r0, r3
 3651 0166 FFF7FEFF 		bl	writeData
 3652              	.L86:
1060:RA8875.c      ****   }
1061:RA8875.c      ****   
1062:RA8875.c      ****   /* Wait for the command to finish */
1063:RA8875.c      ****   waitPoll(RA8875_ELLIPSE, RA8875_ELLIPSE_STATUS);
 3653              		.loc 1 1063 0
 3654 016a 8021     		movs	r1, #128
 3655 016c A020     		movs	r0, #160
 3656 016e FFF7FEFF 		bl	waitPoll
1064:RA8875.c      **** }
 3657              		.loc 1 1064 0
 3658 0172 C046     		nop
 3659 0174 BD46     		mov	sp, r7
 3660 0176 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 84


 3661              		@ sp needed
 3662 0178 B0BD     		pop	{r4, r5, r7, pc}
 3663              		.cfi_endproc
 3664              	.LFE71:
 3665              		.size	curveHelper, .-curveHelper
 3666 017a C046     		.section	.text.GPIOX,"ax",%progbits
 3667              		.align	2
 3668              		.global	GPIOX
 3669              		.code	16
 3670              		.thumb_func
 3671              		.type	GPIOX, %function
 3672              	GPIOX:
 3673              	.LFB72:
1065:RA8875.c      **** 
1066:RA8875.c      **** /************************* Mid Level ***********************************/
1067:RA8875.c      **** 
1068:RA8875.c      **** /**************************************************************************/
1069:RA8875.c      **** /*!
1070:RA8875.c      **** 
1071:RA8875.c      **** */
1072:RA8875.c      **** /**************************************************************************/
1073:RA8875.c      **** void GPIOX(boolean on) {
 3674              		.loc 1 1073 0
 3675              		.cfi_startproc
 3676              		@ args = 0, pretend = 0, frame = 8
 3677              		@ frame_needed = 1, uses_anonymous_args = 0
 3678 0000 80B5     		push	{r7, lr}
 3679              		.cfi_def_cfa_offset 8
 3680              		.cfi_offset 7, -8
 3681              		.cfi_offset 14, -4
 3682 0002 82B0     		sub	sp, sp, #8
 3683              		.cfi_def_cfa_offset 16
 3684 0004 00AF     		add	r7, sp, #0
 3685              		.cfi_def_cfa_register 7
 3686 0006 0200     		movs	r2, r0
 3687 0008 FB1D     		adds	r3, r7, #7
 3688 000a 1A70     		strb	r2, [r3]
1074:RA8875.c      **** //  uint8 x;
1075:RA8875.c      ****     
1076:RA8875.c      ****   if (on) {
 3689              		.loc 1 1076 0
 3690 000c FB1D     		adds	r3, r7, #7
 3691 000e 1B78     		ldrb	r3, [r3]
 3692 0010 002B     		cmp	r3, #0
 3693 0012 04D0     		beq	.L88
1077:RA8875.c      **** //    x = readReg(RA8875_GPIOX);
1078:RA8875.c      ****     writeReg(RA8875_GPIOX, 1);
 3694              		.loc 1 1078 0
 3695 0014 0121     		movs	r1, #1
 3696 0016 C720     		movs	r0, #199
 3697 0018 FFF7FEFF 		bl	writeReg
1079:RA8875.c      **** //    CyDelay(5);
1080:RA8875.c      **** //    x = readReg(RA8875_GPIOX);
1081:RA8875.c      ****     }
1082:RA8875.c      ****   else 
1083:RA8875.c      ****     writeReg(RA8875_GPIOX, 0);
1084:RA8875.c      **** }
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 85


 3698              		.loc 1 1084 0
 3699 001c 03E0     		b	.L90
 3700              	.L88:
1083:RA8875.c      **** }
 3701              		.loc 1 1083 0
 3702 001e 0021     		movs	r1, #0
 3703 0020 C720     		movs	r0, #199
 3704 0022 FFF7FEFF 		bl	writeReg
 3705              	.L90:
 3706              		.loc 1 1084 0
 3707 0026 C046     		nop
 3708 0028 BD46     		mov	sp, r7
 3709 002a 02B0     		add	sp, sp, #8
 3710              		@ sp needed
 3711 002c 80BD     		pop	{r7, pc}
 3712              		.cfi_endproc
 3713              	.LFE72:
 3714              		.size	GPIOX, .-GPIOX
 3715 002e C046     		.section	.text.PWM1out,"ax",%progbits
 3716              		.align	2
 3717              		.global	PWM1out
 3718              		.code	16
 3719              		.thumb_func
 3720              		.type	PWM1out, %function
 3721              	PWM1out:
 3722              	.LFB73:
1085:RA8875.c      **** 
1086:RA8875.c      **** /**************************************************************************/
1087:RA8875.c      **** /*!
1088:RA8875.c      **** 
1089:RA8875.c      **** */
1090:RA8875.c      **** /**************************************************************************/
1091:RA8875.c      **** void PWM1out(uint8_t p) {
 3723              		.loc 1 1091 0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 8
 3726              		@ frame_needed = 1, uses_anonymous_args = 0
 3727 0000 80B5     		push	{r7, lr}
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 7, -8
 3730              		.cfi_offset 14, -4
 3731 0002 82B0     		sub	sp, sp, #8
 3732              		.cfi_def_cfa_offset 16
 3733 0004 00AF     		add	r7, sp, #0
 3734              		.cfi_def_cfa_register 7
 3735 0006 0200     		movs	r2, r0
 3736 0008 FB1D     		adds	r3, r7, #7
 3737 000a 1A70     		strb	r2, [r3]
1092:RA8875.c      **** //    uint8 x;
1093:RA8875.c      **** //    readReg(RA8875_P1DCR);
1094:RA8875.c      ****   writeReg(RA8875_P1DCR, p);
 3738              		.loc 1 1094 0
 3739 000c FB1D     		adds	r3, r7, #7
 3740 000e 1B78     		ldrb	r3, [r3]
 3741 0010 1900     		movs	r1, r3
 3742 0012 8B20     		movs	r0, #139
 3743 0014 FFF7FEFF 		bl	writeReg
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 86


1095:RA8875.c      **** //    CyDelay(1000);
1096:RA8875.c      **** //    readReg(RA8875_P1DCR);
1097:RA8875.c      **** }
 3744              		.loc 1 1097 0
 3745 0018 C046     		nop
 3746 001a BD46     		mov	sp, r7
 3747 001c 02B0     		add	sp, sp, #8
 3748              		@ sp needed
 3749 001e 80BD     		pop	{r7, pc}
 3750              		.cfi_endproc
 3751              	.LFE73:
 3752              		.size	PWM1out, .-PWM1out
 3753              		.section	.text.PWM2out,"ax",%progbits
 3754              		.align	2
 3755              		.global	PWM2out
 3756              		.code	16
 3757              		.thumb_func
 3758              		.type	PWM2out, %function
 3759              	PWM2out:
 3760              	.LFB74:
1098:RA8875.c      **** 
1099:RA8875.c      **** /**************************************************************************/
1100:RA8875.c      **** /*!
1101:RA8875.c      **** 
1102:RA8875.c      **** */
1103:RA8875.c      **** /**************************************************************************/
1104:RA8875.c      **** void PWM2out(uint8_t p) {
 3761              		.loc 1 1104 0
 3762              		.cfi_startproc
 3763              		@ args = 0, pretend = 0, frame = 8
 3764              		@ frame_needed = 1, uses_anonymous_args = 0
 3765 0000 80B5     		push	{r7, lr}
 3766              		.cfi_def_cfa_offset 8
 3767              		.cfi_offset 7, -8
 3768              		.cfi_offset 14, -4
 3769 0002 82B0     		sub	sp, sp, #8
 3770              		.cfi_def_cfa_offset 16
 3771 0004 00AF     		add	r7, sp, #0
 3772              		.cfi_def_cfa_register 7
 3773 0006 0200     		movs	r2, r0
 3774 0008 FB1D     		adds	r3, r7, #7
 3775 000a 1A70     		strb	r2, [r3]
1105:RA8875.c      ****   writeReg(RA8875_P2DCR, p);
 3776              		.loc 1 1105 0
 3777 000c FB1D     		adds	r3, r7, #7
 3778 000e 1B78     		ldrb	r3, [r3]
 3779 0010 1900     		movs	r1, r3
 3780 0012 8D20     		movs	r0, #141
 3781 0014 FFF7FEFF 		bl	writeReg
1106:RA8875.c      **** }
 3782              		.loc 1 1106 0
 3783 0018 C046     		nop
 3784 001a BD46     		mov	sp, r7
 3785 001c 02B0     		add	sp, sp, #8
 3786              		@ sp needed
 3787 001e 80BD     		pop	{r7, pc}
 3788              		.cfi_endproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 87


 3789              	.LFE74:
 3790              		.size	PWM2out, .-PWM2out
 3791              		.section	.text.PWM1config,"ax",%progbits
 3792              		.align	2
 3793              		.global	PWM1config
 3794              		.code	16
 3795              		.thumb_func
 3796              		.type	PWM1config, %function
 3797              	PWM1config:
 3798              	.LFB75:
1107:RA8875.c      **** 
1108:RA8875.c      **** /**************************************************************************/
1109:RA8875.c      **** /*!
1110:RA8875.c      **** 
1111:RA8875.c      **** */
1112:RA8875.c      **** /**************************************************************************/
1113:RA8875.c      **** void PWM1config(boolean on, uint8_t clock) {
 3799              		.loc 1 1113 0
 3800              		.cfi_startproc
 3801              		@ args = 0, pretend = 0, frame = 8
 3802              		@ frame_needed = 1, uses_anonymous_args = 0
 3803 0000 80B5     		push	{r7, lr}
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 7, -8
 3806              		.cfi_offset 14, -4
 3807 0002 82B0     		sub	sp, sp, #8
 3808              		.cfi_def_cfa_offset 16
 3809 0004 00AF     		add	r7, sp, #0
 3810              		.cfi_def_cfa_register 7
 3811 0006 0200     		movs	r2, r0
 3812 0008 FB1D     		adds	r3, r7, #7
 3813 000a 1A70     		strb	r2, [r3]
 3814 000c BB1D     		adds	r3, r7, #6
 3815 000e 0A1C     		adds	r2, r1, #0
 3816 0010 1A70     		strb	r2, [r3]
1114:RA8875.c      **** //    uint8 x;
1115:RA8875.c      ****   if (on) {
 3817              		.loc 1 1115 0
 3818 0012 FB1D     		adds	r3, r7, #7
 3819 0014 1B78     		ldrb	r3, [r3]
 3820 0016 002B     		cmp	r3, #0
 3821 0018 0FD0     		beq	.L94
1116:RA8875.c      **** //    x = readReg(RA8875_P1CR);
1117:RA8875.c      ****     writeReg(RA8875_P1CR, RA8875_P1CR_ENABLE | (clock & 0x0F));
 3822              		.loc 1 1117 0
 3823 001a BB1D     		adds	r3, r7, #6
 3824 001c 1B78     		ldrb	r3, [r3]
 3825 001e 5BB2     		sxtb	r3, r3
 3826 0020 0F22     		movs	r2, #15
 3827 0022 1340     		ands	r3, r2
 3828 0024 5BB2     		sxtb	r3, r3
 3829 0026 8022     		movs	r2, #128
 3830 0028 5242     		rsbs	r2, r2, #0
 3831 002a 1343     		orrs	r3, r2
 3832 002c 5BB2     		sxtb	r3, r3
 3833 002e DBB2     		uxtb	r3, r3
 3834 0030 1900     		movs	r1, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 88


 3835 0032 8A20     		movs	r0, #138
 3836 0034 FFF7FEFF 		bl	writeReg
1118:RA8875.c      ****     //writeReg(RA8875_P1CR, 0x40);
1119:RA8875.c      **** //    CyDelay(5);
1120:RA8875.c      **** //    x = readReg(RA8875_P1CR);
1121:RA8875.c      ****   } else {
1122:RA8875.c      ****     writeReg(RA8875_P1CR, RA8875_P1CR_DISABLE | (clock & 0x0F));
1123:RA8875.c      ****   }
1124:RA8875.c      **** }
 3837              		.loc 1 1124 0
 3838 0038 08E0     		b	.L96
 3839              	.L94:
1122:RA8875.c      ****   }
 3840              		.loc 1 1122 0
 3841 003a BB1D     		adds	r3, r7, #6
 3842 003c 1B78     		ldrb	r3, [r3]
 3843 003e 0F22     		movs	r2, #15
 3844 0040 1340     		ands	r3, r2
 3845 0042 DBB2     		uxtb	r3, r3
 3846 0044 1900     		movs	r1, r3
 3847 0046 8A20     		movs	r0, #138
 3848 0048 FFF7FEFF 		bl	writeReg
 3849              	.L96:
 3850              		.loc 1 1124 0
 3851 004c C046     		nop
 3852 004e BD46     		mov	sp, r7
 3853 0050 02B0     		add	sp, sp, #8
 3854              		@ sp needed
 3855 0052 80BD     		pop	{r7, pc}
 3856              		.cfi_endproc
 3857              	.LFE75:
 3858              		.size	PWM1config, .-PWM1config
 3859              		.section	.text.PWM2config,"ax",%progbits
 3860              		.align	2
 3861              		.global	PWM2config
 3862              		.code	16
 3863              		.thumb_func
 3864              		.type	PWM2config, %function
 3865              	PWM2config:
 3866              	.LFB76:
1125:RA8875.c      **** 
1126:RA8875.c      **** /**************************************************************************/
1127:RA8875.c      **** /*!
1128:RA8875.c      **** 
1129:RA8875.c      **** */
1130:RA8875.c      **** /**************************************************************************/
1131:RA8875.c      **** void PWM2config(boolean on, uint8_t clock) {
 3867              		.loc 1 1131 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 8
 3870              		@ frame_needed = 1, uses_anonymous_args = 0
 3871 0000 80B5     		push	{r7, lr}
 3872              		.cfi_def_cfa_offset 8
 3873              		.cfi_offset 7, -8
 3874              		.cfi_offset 14, -4
 3875 0002 82B0     		sub	sp, sp, #8
 3876              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 89


 3877 0004 00AF     		add	r7, sp, #0
 3878              		.cfi_def_cfa_register 7
 3879 0006 0200     		movs	r2, r0
 3880 0008 FB1D     		adds	r3, r7, #7
 3881 000a 1A70     		strb	r2, [r3]
 3882 000c BB1D     		adds	r3, r7, #6
 3883 000e 0A1C     		adds	r2, r1, #0
 3884 0010 1A70     		strb	r2, [r3]
1132:RA8875.c      ****   if (on) {
 3885              		.loc 1 1132 0
 3886 0012 FB1D     		adds	r3, r7, #7
 3887 0014 1B78     		ldrb	r3, [r3]
 3888 0016 002B     		cmp	r3, #0
 3889 0018 0FD0     		beq	.L98
1133:RA8875.c      ****     writeReg(RA8875_P2CR, RA8875_P2CR_ENABLE | (clock & 0xF));
 3890              		.loc 1 1133 0
 3891 001a BB1D     		adds	r3, r7, #6
 3892 001c 1B78     		ldrb	r3, [r3]
 3893 001e 5BB2     		sxtb	r3, r3
 3894 0020 0F22     		movs	r2, #15
 3895 0022 1340     		ands	r3, r2
 3896 0024 5BB2     		sxtb	r3, r3
 3897 0026 8022     		movs	r2, #128
 3898 0028 5242     		rsbs	r2, r2, #0
 3899 002a 1343     		orrs	r3, r2
 3900 002c 5BB2     		sxtb	r3, r3
 3901 002e DBB2     		uxtb	r3, r3
 3902 0030 1900     		movs	r1, r3
 3903 0032 8C20     		movs	r0, #140
 3904 0034 FFF7FEFF 		bl	writeReg
1134:RA8875.c      ****   } else {
1135:RA8875.c      ****     writeReg(RA8875_P2CR, RA8875_P2CR_DISABLE | (clock & 0xF));
1136:RA8875.c      ****   }
1137:RA8875.c      **** }
 3905              		.loc 1 1137 0
 3906 0038 08E0     		b	.L100
 3907              	.L98:
1135:RA8875.c      ****   }
 3908              		.loc 1 1135 0
 3909 003a BB1D     		adds	r3, r7, #6
 3910 003c 1B78     		ldrb	r3, [r3]
 3911 003e 0F22     		movs	r2, #15
 3912 0040 1340     		ands	r3, r2
 3913 0042 DBB2     		uxtb	r3, r3
 3914 0044 1900     		movs	r1, r3
 3915 0046 8C20     		movs	r0, #140
 3916 0048 FFF7FEFF 		bl	writeReg
 3917              	.L100:
 3918              		.loc 1 1137 0
 3919 004c C046     		nop
 3920 004e BD46     		mov	sp, r7
 3921 0050 02B0     		add	sp, sp, #8
 3922              		@ sp needed
 3923 0052 80BD     		pop	{r7, pc}
 3924              		.cfi_endproc
 3925              	.LFE76:
 3926              		.size	PWM2config, .-PWM2config
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 90


 3927              		.section	.text.touchEnable,"ax",%progbits
 3928              		.align	2
 3929              		.global	touchEnable
 3930              		.code	16
 3931              		.thumb_func
 3932              		.type	touchEnable, %function
 3933              	touchEnable:
 3934              	.LFB77:
1138:RA8875.c      **** 
1139:RA8875.c      **** /**************************************************************************/
1140:RA8875.c      **** /*!
1141:RA8875.c      ****       Enables or disables the on-chip touch screen controller
1142:RA8875.c      **** */
1143:RA8875.c      **** /**************************************************************************/
1144:RA8875.c      **** void touchEnable(boolean on) 
1145:RA8875.c      **** {
 3935              		.loc 1 1145 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 16
 3938              		@ frame_needed = 1, uses_anonymous_args = 0
 3939 0000 80B5     		push	{r7, lr}
 3940              		.cfi_def_cfa_offset 8
 3941              		.cfi_offset 7, -8
 3942              		.cfi_offset 14, -4
 3943 0002 84B0     		sub	sp, sp, #16
 3944              		.cfi_def_cfa_offset 24
 3945 0004 00AF     		add	r7, sp, #0
 3946              		.cfi_def_cfa_register 7
 3947 0006 0200     		movs	r2, r0
 3948 0008 FB1D     		adds	r3, r7, #7
 3949 000a 1A70     		strb	r2, [r3]
1146:RA8875.c      ****   uint8_t   adcClk = (uint8_t) RA8875_TPCR0_ADCCLK_DIV4;
 3950              		.loc 1 1146 0
 3951 000c 0F23     		movs	r3, #15
 3952 000e FB18     		adds	r3, r7, r3
 3953 0010 0222     		movs	r2, #2
 3954 0012 1A70     		strb	r2, [r3]
1147:RA8875.c      **** 
1148:RA8875.c      ****   if ( _size == RA8875_800x480 ) //match up touch size with LCD size
 3955              		.loc 1 1148 0
 3956 0014 1D4B     		ldr	r3, .L106
 3957 0016 1B78     		ldrb	r3, [r3]
 3958 0018 012B     		cmp	r3, #1
 3959 001a 03D1     		bne	.L102
1149:RA8875.c      ****     adcClk = (uint8_t) RA8875_TPCR0_ADCCLK_DIV16;
 3960              		.loc 1 1149 0
 3961 001c 0F23     		movs	r3, #15
 3962 001e FB18     		adds	r3, r7, r3
 3963 0020 0422     		movs	r2, #4
 3964 0022 1A70     		strb	r2, [r3]
 3965              	.L102:
1150:RA8875.c      **** 
1151:RA8875.c      ****   if (on)
 3966              		.loc 1 1151 0
 3967 0024 FB1D     		adds	r3, r7, #7
 3968 0026 1B78     		ldrb	r3, [r3]
 3969 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 91


 3970 002a 1BD0     		beq	.L103
1152:RA8875.c      ****   {
1153:RA8875.c      ****     /* Enable Touch Panel (Reg 0x70) */
1154:RA8875.c      ****     writeReg(RA8875_TPCR0, RA8875_TPCR0_ENABLE        |
 3971              		.loc 1 1154 0
 3972 002c 0F23     		movs	r3, #15
 3973 002e FB18     		adds	r3, r7, r3
 3974 0030 1B78     		ldrb	r3, [r3]
 3975 0032 4822     		movs	r2, #72
 3976 0034 5242     		rsbs	r2, r2, #0
 3977 0036 1343     		orrs	r3, r2
 3978 0038 DBB2     		uxtb	r3, r3
 3979 003a 1900     		movs	r1, r3
 3980 003c 7020     		movs	r0, #112
 3981 003e FFF7FEFF 		bl	writeReg
1155:RA8875.c      ****                            RA8875_TPCR0_WAIT_4096CLK  |
1156:RA8875.c      ****                            RA8875_TPCR0_WAKEENABLE   |
1157:RA8875.c      ****                            adcClk); // 10mhz max!
1158:RA8875.c      ****     /* Set Auto Mode      (Reg 0x71) */
1159:RA8875.c      ****     writeReg(RA8875_TPCR1, RA8875_TPCR1_AUTO    |
 3982              		.loc 1 1159 0
 3983 0042 0421     		movs	r1, #4
 3984 0044 7120     		movs	r0, #113
 3985 0046 FFF7FEFF 		bl	writeReg
1160:RA8875.c      ****                            // RA8875_TPCR1_VREFEXT |
1161:RA8875.c      ****                            RA8875_TPCR1_DEBOUNCE);
1162:RA8875.c      ****     /* Enable TP INT */
1163:RA8875.c      ****     writeReg(RA8875_INTC1, readReg(RA8875_INTC1) | RA8875_INTC1_TP);
 3986              		.loc 1 1163 0
 3987 004a F020     		movs	r0, #240
 3988 004c FFF7FEFF 		bl	readReg
 3989 0050 0300     		movs	r3, r0
 3990 0052 DBB2     		uxtb	r3, r3
 3991 0054 0422     		movs	r2, #4
 3992 0056 1343     		orrs	r3, r2
 3993 0058 DBB2     		uxtb	r3, r3
 3994 005a 1900     		movs	r1, r3
 3995 005c F020     		movs	r0, #240
 3996 005e FFF7FEFF 		bl	writeReg
1164:RA8875.c      ****   }
1165:RA8875.c      ****   else
1166:RA8875.c      ****   {
1167:RA8875.c      ****     /* Disable TP INT */
1168:RA8875.c      ****     writeReg(RA8875_INTC1, readReg(RA8875_INTC1) & ~RA8875_INTC1_TP);
1169:RA8875.c      ****     /* Disable Touch Panel (Reg 0x70) */
1170:RA8875.c      ****     writeReg(RA8875_TPCR0, RA8875_TPCR0_DISABLE);
1171:RA8875.c      ****   }
1172:RA8875.c      **** }
 3997              		.loc 1 1172 0
 3998 0062 0FE0     		b	.L105
 3999              	.L103:
1168:RA8875.c      ****     /* Disable Touch Panel (Reg 0x70) */
 4000              		.loc 1 1168 0
 4001 0064 F020     		movs	r0, #240
 4002 0066 FFF7FEFF 		bl	readReg
 4003 006a 0300     		movs	r3, r0
 4004 006c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 92


 4005 006e 0422     		movs	r2, #4
 4006 0070 9343     		bics	r3, r2
 4007 0072 DBB2     		uxtb	r3, r3
 4008 0074 1900     		movs	r1, r3
 4009 0076 F020     		movs	r0, #240
 4010 0078 FFF7FEFF 		bl	writeReg
1170:RA8875.c      ****   }
 4011              		.loc 1 1170 0
 4012 007c 0021     		movs	r1, #0
 4013 007e 7020     		movs	r0, #112
 4014 0080 FFF7FEFF 		bl	writeReg
 4015              	.L105:
 4016              		.loc 1 1172 0
 4017 0084 C046     		nop
 4018 0086 BD46     		mov	sp, r7
 4019 0088 04B0     		add	sp, sp, #16
 4020              		@ sp needed
 4021 008a 80BD     		pop	{r7, pc}
 4022              	.L107:
 4023              		.align	2
 4024              	.L106:
 4025 008c 00000000 		.word	_size
 4026              		.cfi_endproc
 4027              	.LFE77:
 4028              		.size	touchEnable, .-touchEnable
 4029              		.section	.text.touched,"ax",%progbits
 4030              		.align	2
 4031              		.global	touched
 4032              		.code	16
 4033              		.thumb_func
 4034              		.type	touched, %function
 4035              	touched:
 4036              	.LFB78:
1173:RA8875.c      **** 
1174:RA8875.c      **** /**************************************************************************/
1175:RA8875.c      **** /*!
1176:RA8875.c      ****       Checks if a touch event has occured
1177:RA8875.c      ****       
1178:RA8875.c      ****       @returns  True is a touch event has occured (reading it via
1179:RA8875.c      ****                 touchRead() will clear the interrupt in memory)
1180:RA8875.c      **** */
1181:RA8875.c      **** /**************************************************************************/
1182:RA8875.c      **** boolean touched(void) 
1183:RA8875.c      **** {
 4037              		.loc 1 1183 0
 4038              		.cfi_startproc
 4039              		@ args = 0, pretend = 0, frame = 0
 4040              		@ frame_needed = 1, uses_anonymous_args = 0
 4041 0000 80B5     		push	{r7, lr}
 4042              		.cfi_def_cfa_offset 8
 4043              		.cfi_offset 7, -8
 4044              		.cfi_offset 14, -4
 4045 0002 00AF     		add	r7, sp, #0
 4046              		.cfi_def_cfa_register 7
1184:RA8875.c      ****   if (readReg(RA8875_INTC2) & RA8875_INTC2_TP) return true;
 4047              		.loc 1 1184 0
 4048 0004 F120     		movs	r0, #241
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 93


 4049 0006 FFF7FEFF 		bl	readReg
 4050 000a 0200     		movs	r2, r0
 4051 000c 0423     		movs	r3, #4
 4052 000e 1340     		ands	r3, r2
 4053 0010 01D0     		beq	.L109
 4054              		.loc 1 1184 0 is_stmt 0 discriminator 1
 4055 0012 0123     		movs	r3, #1
 4056 0014 00E0     		b	.L110
 4057              	.L109:
1185:RA8875.c      ****   return false;
 4058              		.loc 1 1185 0 is_stmt 1
 4059 0016 0023     		movs	r3, #0
 4060              	.L110:
1186:RA8875.c      **** }
 4061              		.loc 1 1186 0
 4062 0018 1800     		movs	r0, r3
 4063 001a BD46     		mov	sp, r7
 4064              		@ sp needed
 4065 001c 80BD     		pop	{r7, pc}
 4066              		.cfi_endproc
 4067              	.LFE78:
 4068              		.size	touched, .-touched
 4069 001e C046     		.section	.text.touchRead,"ax",%progbits
 4070              		.align	2
 4071              		.global	touchRead
 4072              		.code	16
 4073              		.thumb_func
 4074              		.type	touchRead, %function
 4075              	touchRead:
 4076              	.LFB79:
1187:RA8875.c      **** 
1188:RA8875.c      **** /**************************************************************************/
1189:RA8875.c      **** /*!
1190:RA8875.c      ****       Reads the last touch event
1191:RA8875.c      ****       
1192:RA8875.c      ****       @args x[out]  Pointer to the uint16_t field to assign the raw X value
1193:RA8875.c      ****       @args y[out]  Pointer to the uint16_t field to assign the raw Y value
1194:RA8875.c      ****       
1195:RA8875.c      ****       @note Calling this function will clear the touch panel interrupt on
1196:RA8875.c      ****             the RA8875, resetting the flag used by the 'touched' function
1197:RA8875.c      **** */
1198:RA8875.c      **** /**************************************************************************/
1199:RA8875.c      **** boolean touchRead(uint16_t *x, uint16_t *y) 
1200:RA8875.c      **** {
 4077              		.loc 1 1200 0
 4078              		.cfi_startproc
 4079              		@ args = 0, pretend = 0, frame = 16
 4080              		@ frame_needed = 1, uses_anonymous_args = 0
 4081 0000 80B5     		push	{r7, lr}
 4082              		.cfi_def_cfa_offset 8
 4083              		.cfi_offset 7, -8
 4084              		.cfi_offset 14, -4
 4085 0002 84B0     		sub	sp, sp, #16
 4086              		.cfi_def_cfa_offset 24
 4087 0004 00AF     		add	r7, sp, #0
 4088              		.cfi_def_cfa_register 7
 4089 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 94


 4090 0008 3960     		str	r1, [r7]
1201:RA8875.c      ****   uint16_t tx, ty;
1202:RA8875.c      ****   uint8_t temp;
1203:RA8875.c      ****   
1204:RA8875.c      ****   tx = readReg(RA8875_TPXH);
 4091              		.loc 1 1204 0
 4092 000a 7220     		movs	r0, #114
 4093 000c FFF7FEFF 		bl	readReg
 4094 0010 0200     		movs	r2, r0
 4095 0012 0E23     		movs	r3, #14
 4096 0014 FB18     		adds	r3, r7, r3
 4097 0016 1A80     		strh	r2, [r3]
1205:RA8875.c      ****   ty = readReg(RA8875_TPYH);
 4098              		.loc 1 1205 0
 4099 0018 7320     		movs	r0, #115
 4100 001a FFF7FEFF 		bl	readReg
 4101 001e 0200     		movs	r2, r0
 4102 0020 0C23     		movs	r3, #12
 4103 0022 FB18     		adds	r3, r7, r3
 4104 0024 1A80     		strh	r2, [r3]
1206:RA8875.c      ****   temp = readReg(RA8875_TPXYL);
 4105              		.loc 1 1206 0
 4106 0026 7420     		movs	r0, #116
 4107 0028 FFF7FEFF 		bl	readReg
 4108 002c 0200     		movs	r2, r0
 4109 002e 0B23     		movs	r3, #11
 4110 0030 FB18     		adds	r3, r7, r3
 4111 0032 1A70     		strb	r2, [r3]
1207:RA8875.c      ****   tx <<= 2;
 4112              		.loc 1 1207 0
 4113 0034 0E23     		movs	r3, #14
 4114 0036 FB18     		adds	r3, r7, r3
 4115 0038 0E22     		movs	r2, #14
 4116 003a BA18     		adds	r2, r7, r2
 4117 003c 1288     		ldrh	r2, [r2]
 4118 003e 9200     		lsls	r2, r2, #2
 4119 0040 1A80     		strh	r2, [r3]
1208:RA8875.c      ****   ty <<= 2;
 4120              		.loc 1 1208 0
 4121 0042 0C23     		movs	r3, #12
 4122 0044 FB18     		adds	r3, r7, r3
 4123 0046 0C22     		movs	r2, #12
 4124 0048 BA18     		adds	r2, r7, r2
 4125 004a 1288     		ldrh	r2, [r2]
 4126 004c 9200     		lsls	r2, r2, #2
 4127 004e 1A80     		strh	r2, [r3]
1209:RA8875.c      ****   tx |= temp & 0x03;        // get the bottom x bits
 4128              		.loc 1 1209 0
 4129 0050 0B23     		movs	r3, #11
 4130 0052 FB18     		adds	r3, r7, r3
 4131 0054 1B78     		ldrb	r3, [r3]
 4132 0056 1BB2     		sxth	r3, r3
 4133 0058 0322     		movs	r2, #3
 4134 005a 1340     		ands	r3, r2
 4135 005c 1AB2     		sxth	r2, r3
 4136 005e 0E23     		movs	r3, #14
 4137 0060 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 95


 4138 0062 0021     		movs	r1, #0
 4139 0064 5B5E     		ldrsh	r3, [r3, r1]
 4140 0066 1343     		orrs	r3, r2
 4141 0068 1AB2     		sxth	r2, r3
 4142 006a 0E23     		movs	r3, #14
 4143 006c FB18     		adds	r3, r7, r3
 4144 006e 1A80     		strh	r2, [r3]
1210:RA8875.c      ****   ty |= (temp >> 2) & 0x03; // get the bottom y bits
 4145              		.loc 1 1210 0
 4146 0070 0B23     		movs	r3, #11
 4147 0072 FB18     		adds	r3, r7, r3
 4148 0074 1B78     		ldrb	r3, [r3]
 4149 0076 9B08     		lsrs	r3, r3, #2
 4150 0078 DBB2     		uxtb	r3, r3
 4151 007a 1BB2     		sxth	r3, r3
 4152 007c 0322     		movs	r2, #3
 4153 007e 1340     		ands	r3, r2
 4154 0080 1AB2     		sxth	r2, r3
 4155 0082 0C23     		movs	r3, #12
 4156 0084 FB18     		adds	r3, r7, r3
 4157 0086 0021     		movs	r1, #0
 4158 0088 5B5E     		ldrsh	r3, [r3, r1]
 4159 008a 1343     		orrs	r3, r2
 4160 008c 1AB2     		sxth	r2, r3
 4161 008e 0C23     		movs	r3, #12
 4162 0090 FB18     		adds	r3, r7, r3
 4163 0092 1A80     		strh	r2, [r3]
1211:RA8875.c      **** 
1212:RA8875.c      ****   *x = tx;
 4164              		.loc 1 1212 0
 4165 0094 7B68     		ldr	r3, [r7, #4]
 4166 0096 0E22     		movs	r2, #14
 4167 0098 BA18     		adds	r2, r7, r2
 4168 009a 1288     		ldrh	r2, [r2]
 4169 009c 1A80     		strh	r2, [r3]
1213:RA8875.c      ****   *y = ty;
 4170              		.loc 1 1213 0
 4171 009e 3B68     		ldr	r3, [r7]
 4172 00a0 0C22     		movs	r2, #12
 4173 00a2 BA18     		adds	r2, r7, r2
 4174 00a4 1288     		ldrh	r2, [r2]
 4175 00a6 1A80     		strh	r2, [r3]
1214:RA8875.c      **** 
1215:RA8875.c      ****   /* Clear TP INT Status */
1216:RA8875.c      ****   writeReg(RA8875_INTC2, RA8875_INTC2_TP);
 4176              		.loc 1 1216 0
 4177 00a8 0421     		movs	r1, #4
 4178 00aa F120     		movs	r0, #241
 4179 00ac FFF7FEFF 		bl	writeReg
1217:RA8875.c      **** 
1218:RA8875.c      ****   return true;
 4180              		.loc 1 1218 0
 4181 00b0 0123     		movs	r3, #1
1219:RA8875.c      **** }
 4182              		.loc 1 1219 0
 4183 00b2 1800     		movs	r0, r3
 4184 00b4 BD46     		mov	sp, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 96


 4185 00b6 04B0     		add	sp, sp, #16
 4186              		@ sp needed
 4187 00b8 80BD     		pop	{r7, pc}
 4188              		.cfi_endproc
 4189              	.LFE79:
 4190              		.size	touchRead, .-touchRead
 4191 00ba C046     		.section	.text.displayOn,"ax",%progbits
 4192              		.align	2
 4193              		.global	displayOn
 4194              		.code	16
 4195              		.thumb_func
 4196              		.type	displayOn, %function
 4197              	displayOn:
 4198              	.LFB80:
1220:RA8875.c      **** 
1221:RA8875.c      **** /**************************************************************************/
1222:RA8875.c      **** /*!
1223:RA8875.c      ****       Turns the display on or off
1224:RA8875.c      **** */
1225:RA8875.c      **** /**************************************************************************/
1226:RA8875.c      **** void displayOn(boolean on) 
1227:RA8875.c      **** {
 4199              		.loc 1 1227 0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 8
 4202              		@ frame_needed = 1, uses_anonymous_args = 0
 4203 0000 80B5     		push	{r7, lr}
 4204              		.cfi_def_cfa_offset 8
 4205              		.cfi_offset 7, -8
 4206              		.cfi_offset 14, -4
 4207 0002 82B0     		sub	sp, sp, #8
 4208              		.cfi_def_cfa_offset 16
 4209 0004 00AF     		add	r7, sp, #0
 4210              		.cfi_def_cfa_register 7
 4211 0006 0200     		movs	r2, r0
 4212 0008 FB1D     		adds	r3, r7, #7
 4213 000a 1A70     		strb	r2, [r3]
1228:RA8875.c      ****  if (on) { 
 4214              		.loc 1 1228 0
 4215 000c FB1D     		adds	r3, r7, #7
 4216 000e 1B78     		ldrb	r3, [r3]
 4217 0010 002B     		cmp	r3, #0
 4218 0012 04D0     		beq	.L114
1229:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_NORMAL | RA8875_PWRR_DISPON);
 4219              		.loc 1 1229 0
 4220 0014 8021     		movs	r1, #128
 4221 0016 0120     		movs	r0, #1
 4222 0018 FFF7FEFF 		bl	writeReg
1230:RA8875.c      **** }
1231:RA8875.c      ****  else
1232:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_NORMAL | RA8875_PWRR_DISPOFF);
1233:RA8875.c      **** }
 4223              		.loc 1 1233 0
 4224 001c 03E0     		b	.L116
 4225              	.L114:
1232:RA8875.c      **** }
 4226              		.loc 1 1232 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 97


 4227 001e 0021     		movs	r1, #0
 4228 0020 0120     		movs	r0, #1
 4229 0022 FFF7FEFF 		bl	writeReg
 4230              	.L116:
 4231              		.loc 1 1233 0
 4232 0026 C046     		nop
 4233 0028 BD46     		mov	sp, r7
 4234 002a 02B0     		add	sp, sp, #8
 4235              		@ sp needed
 4236 002c 80BD     		pop	{r7, pc}
 4237              		.cfi_endproc
 4238              	.LFE80:
 4239              		.size	displayOn, .-displayOn
 4240 002e C046     		.section	.text.sleep,"ax",%progbits
 4241              		.align	2
 4242              		.global	sleep
 4243              		.code	16
 4244              		.thumb_func
 4245              		.type	sleep, %function
 4246              	sleep:
 4247              	.LFB81:
1234:RA8875.c      **** 
1235:RA8875.c      **** /**************************************************************************/
1236:RA8875.c      **** /*!
1237:RA8875.c      ****     Puts the display in sleep mode, or disables sleep mode if enabled
1238:RA8875.c      **** */
1239:RA8875.c      **** /**************************************************************************/
1240:RA8875.c      **** void sleep(boolean sleep) 
1241:RA8875.c      **** {
 4248              		.loc 1 1241 0
 4249              		.cfi_startproc
 4250              		@ args = 0, pretend = 0, frame = 8
 4251              		@ frame_needed = 1, uses_anonymous_args = 0
 4252 0000 80B5     		push	{r7, lr}
 4253              		.cfi_def_cfa_offset 8
 4254              		.cfi_offset 7, -8
 4255              		.cfi_offset 14, -4
 4256 0002 82B0     		sub	sp, sp, #8
 4257              		.cfi_def_cfa_offset 16
 4258 0004 00AF     		add	r7, sp, #0
 4259              		.cfi_def_cfa_register 7
 4260 0006 0200     		movs	r2, r0
 4261 0008 FB1D     		adds	r3, r7, #7
 4262 000a 1A70     		strb	r2, [r3]
1242:RA8875.c      ****  if (sleep) 
 4263              		.loc 1 1242 0
 4264 000c FB1D     		adds	r3, r7, #7
 4265 000e 1B78     		ldrb	r3, [r3]
 4266 0010 002B     		cmp	r3, #0
 4267 0012 04D0     		beq	.L118
1243:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_DISPOFF | RA8875_PWRR_SLEEP);
 4268              		.loc 1 1243 0
 4269 0014 0221     		movs	r1, #2
 4270 0016 0120     		movs	r0, #1
 4271 0018 FFF7FEFF 		bl	writeReg
1244:RA8875.c      ****  else
1245:RA8875.c      ****    writeReg(RA8875_PWRR, RA8875_PWRR_DISPOFF);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 98


1246:RA8875.c      **** }
 4272              		.loc 1 1246 0
 4273 001c 03E0     		b	.L120
 4274              	.L118:
1245:RA8875.c      **** }
 4275              		.loc 1 1245 0
 4276 001e 0021     		movs	r1, #0
 4277 0020 0120     		movs	r0, #1
 4278 0022 FFF7FEFF 		bl	writeReg
 4279              	.L120:
 4280              		.loc 1 1246 0
 4281 0026 C046     		nop
 4282 0028 BD46     		mov	sp, r7
 4283 002a 02B0     		add	sp, sp, #8
 4284              		@ sp needed
 4285 002c 80BD     		pop	{r7, pc}
 4286              		.cfi_endproc
 4287              	.LFE81:
 4288              		.size	sleep, .-sleep
 4289 002e C046     		.section	.text.writeReg,"ax",%progbits
 4290              		.align	2
 4291              		.global	writeReg
 4292              		.code	16
 4293              		.thumb_func
 4294              		.type	writeReg, %function
 4295              	writeReg:
 4296              	.LFB82:
1247:RA8875.c      **** 
1248:RA8875.c      **** /************************* Low Level ***********************************/
1249:RA8875.c      **** 
1250:RA8875.c      **** /**************************************************************************/
1251:RA8875.c      **** /*!
1252:RA8875.c      **** 
1253:RA8875.c      **** */
1254:RA8875.c      **** /**************************************************************************/
1255:RA8875.c      **** void  writeReg(uint8_t reg, uint8_t val) 
1256:RA8875.c      **** {
 4297              		.loc 1 1256 0
 4298              		.cfi_startproc
 4299              		@ args = 0, pretend = 0, frame = 8
 4300              		@ frame_needed = 1, uses_anonymous_args = 0
 4301 0000 80B5     		push	{r7, lr}
 4302              		.cfi_def_cfa_offset 8
 4303              		.cfi_offset 7, -8
 4304              		.cfi_offset 14, -4
 4305 0002 82B0     		sub	sp, sp, #8
 4306              		.cfi_def_cfa_offset 16
 4307 0004 00AF     		add	r7, sp, #0
 4308              		.cfi_def_cfa_register 7
 4309 0006 0200     		movs	r2, r0
 4310 0008 FB1D     		adds	r3, r7, #7
 4311 000a 1A70     		strb	r2, [r3]
 4312 000c BB1D     		adds	r3, r7, #6
 4313 000e 0A1C     		adds	r2, r1, #0
 4314 0010 1A70     		strb	r2, [r3]
1257:RA8875.c      ****   writeCommand(reg);
 4315              		.loc 1 1257 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 99


 4316 0012 FB1D     		adds	r3, r7, #7
 4317 0014 1B78     		ldrb	r3, [r3]
 4318 0016 1800     		movs	r0, r3
 4319 0018 FFF7FEFF 		bl	writeCommand
1258:RA8875.c      ****   writeData(val);
 4320              		.loc 1 1258 0
 4321 001c BB1D     		adds	r3, r7, #6
 4322 001e 1B78     		ldrb	r3, [r3]
 4323 0020 1800     		movs	r0, r3
 4324 0022 FFF7FEFF 		bl	writeData
1259:RA8875.c      **** }
 4325              		.loc 1 1259 0
 4326 0026 C046     		nop
 4327 0028 BD46     		mov	sp, r7
 4328 002a 02B0     		add	sp, sp, #8
 4329              		@ sp needed
 4330 002c 80BD     		pop	{r7, pc}
 4331              		.cfi_endproc
 4332              	.LFE82:
 4333              		.size	writeReg, .-writeReg
 4334 002e C046     		.section	.text.readReg,"ax",%progbits
 4335              		.align	2
 4336              		.global	readReg
 4337              		.code	16
 4338              		.thumb_func
 4339              		.type	readReg, %function
 4340              	readReg:
 4341              	.LFB83:
1260:RA8875.c      **** 
1261:RA8875.c      **** /**************************************************************************/
1262:RA8875.c      **** /*!
1263:RA8875.c      **** 
1264:RA8875.c      **** */
1265:RA8875.c      **** /**************************************************************************/
1266:RA8875.c      **** uint32_t  readReg(uint8_t reg) 
1267:RA8875.c      **** {
 4342              		.loc 1 1267 0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 8
 4345              		@ frame_needed = 1, uses_anonymous_args = 0
 4346 0000 80B5     		push	{r7, lr}
 4347              		.cfi_def_cfa_offset 8
 4348              		.cfi_offset 7, -8
 4349              		.cfi_offset 14, -4
 4350 0002 82B0     		sub	sp, sp, #8
 4351              		.cfi_def_cfa_offset 16
 4352 0004 00AF     		add	r7, sp, #0
 4353              		.cfi_def_cfa_register 7
 4354 0006 0200     		movs	r2, r0
 4355 0008 FB1D     		adds	r3, r7, #7
 4356 000a 1A70     		strb	r2, [r3]
1268:RA8875.c      ****   writeCommand(reg);
 4357              		.loc 1 1268 0
 4358 000c FB1D     		adds	r3, r7, #7
 4359 000e 1B78     		ldrb	r3, [r3]
 4360 0010 1800     		movs	r0, r3
 4361 0012 FFF7FEFF 		bl	writeCommand
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 100


1269:RA8875.c      ****   return readData();
 4362              		.loc 1 1269 0
 4363 0016 FFF7FEFF 		bl	readData
 4364 001a 0300     		movs	r3, r0
1270:RA8875.c      **** }
 4365              		.loc 1 1270 0
 4366 001c 1800     		movs	r0, r3
 4367 001e BD46     		mov	sp, r7
 4368 0020 02B0     		add	sp, sp, #8
 4369              		@ sp needed
 4370 0022 80BD     		pop	{r7, pc}
 4371              		.cfi_endproc
 4372              	.LFE83:
 4373              		.size	readReg, .-readReg
 4374              		.section	.text.writeData,"ax",%progbits
 4375              		.align	2
 4376              		.global	writeData
 4377              		.code	16
 4378              		.thumb_func
 4379              		.type	writeData, %function
 4380              	writeData:
 4381              	.LFB84:
1271:RA8875.c      **** 
1272:RA8875.c      **** /**************************************************************************/
1273:RA8875.c      **** /*!
1274:RA8875.c      **** 
1275:RA8875.c      **** */
1276:RA8875.c      **** /**************************************************************************/
1277:RA8875.c      **** void  writeData(uint8_t d) 
1278:RA8875.c      **** {
 4382              		.loc 1 1278 0
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 8
 4385              		@ frame_needed = 1, uses_anonymous_args = 0
 4386 0000 80B5     		push	{r7, lr}
 4387              		.cfi_def_cfa_offset 8
 4388              		.cfi_offset 7, -8
 4389              		.cfi_offset 14, -4
 4390 0002 82B0     		sub	sp, sp, #8
 4391              		.cfi_def_cfa_offset 16
 4392 0004 00AF     		add	r7, sp, #0
 4393              		.cfi_def_cfa_register 7
 4394 0006 0200     		movs	r2, r0
 4395 0008 FB1D     		adds	r3, r7, #7
 4396 000a 1A70     		strb	r2, [r3]
1279:RA8875.c      ****     LCDSPI_Start();
 4397              		.loc 1 1279 0
 4398 000c FFF7FEFF 		bl	LCDSPI_Start
1280:RA8875.c      ****     CyDelay(1); // testing
 4399              		.loc 1 1280 0
 4400 0010 0120     		movs	r0, #1
 4401 0012 FFF7FEFF 		bl	CyDelay
1281:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAWRITE);
 4402              		.loc 1 1281 0
 4403 0016 0020     		movs	r0, #0
 4404 0018 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1282:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(d);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 101


 4405              		.loc 1 1282 0
 4406 001c FB1D     		adds	r3, r7, #7
 4407 001e 1B78     		ldrb	r3, [r3]
 4408 0020 1800     		movs	r0, r3
 4409 0022 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1283:RA8875.c      ****     CyDelay(1); // testing
 4410              		.loc 1 1283 0
 4411 0026 0120     		movs	r0, #1
 4412 0028 FFF7FEFF 		bl	CyDelay
1284:RA8875.c      ****     LCDSPI_Stop();
 4413              		.loc 1 1284 0
 4414 002c FFF7FEFF 		bl	LCDSPI_Stop
1285:RA8875.c      **** }
 4415              		.loc 1 1285 0
 4416 0030 C046     		nop
 4417 0032 BD46     		mov	sp, r7
 4418 0034 02B0     		add	sp, sp, #8
 4419              		@ sp needed
 4420 0036 80BD     		pop	{r7, pc}
 4421              		.cfi_endproc
 4422              	.LFE84:
 4423              		.size	writeData, .-writeData
 4424              		.section	.text.readData,"ax",%progbits
 4425              		.align	2
 4426              		.global	readData
 4427              		.code	16
 4428              		.thumb_func
 4429              		.type	readData, %function
 4430              	readData:
 4431              	.LFB85:
1286:RA8875.c      **** 
1287:RA8875.c      **** /**************************************************************************/
1288:RA8875.c      **** /*!
1289:RA8875.c      **** 
1290:RA8875.c      **** */
1291:RA8875.c      **** /**************************************************************************/
1292:RA8875.c      **** uint32_t  readData(void) 
1293:RA8875.c      **** {
 4432              		.loc 1 1293 0
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 8
 4435              		@ frame_needed = 1, uses_anonymous_args = 0
 4436 0000 80B5     		push	{r7, lr}
 4437              		.cfi_def_cfa_offset 8
 4438              		.cfi_offset 7, -8
 4439              		.cfi_offset 14, -4
 4440 0002 82B0     		sub	sp, sp, #8
 4441              		.cfi_def_cfa_offset 16
 4442 0004 00AF     		add	r7, sp, #0
 4443              		.cfi_def_cfa_register 7
1294:RA8875.c      ****     uint32_t x = 0u;
 4444              		.loc 1 1294 0
 4445 0006 0023     		movs	r3, #0
 4446 0008 7B60     		str	r3, [r7, #4]
1295:RA8875.c      **** //  digitalWrite(_cs, LOW);
1296:RA8875.c      **** //    spi_begin();
1297:RA8875.c      ****     LCDSPI_Start();
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 102


 4447              		.loc 1 1297 0
 4448 000a FFF7FEFF 		bl	LCDSPI_Start
1298:RA8875.c      ****     CyDelay(1);
 4449              		.loc 1 1298 0
 4450 000e 0120     		movs	r0, #1
 4451 0010 FFF7FEFF 		bl	CyDelay
1299:RA8875.c      **** //  SPI.transfer(RA8875_DATAREAD);
1300:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_DATAREAD);
 4452              		.loc 1 1300 0
 4453 0014 4020     		movs	r0, #64
 4454 0016 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1301:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(0);
 4455              		.loc 1 1301 0
 4456 001a 0020     		movs	r0, #0
 4457 001c FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1302:RA8875.c      **** //  uint8_t x = SPI.transfer(0x0);
1303:RA8875.c      ****     x = LCDSPI_SpiUartReadRxData() & 0x000F;
 4458              		.loc 1 1303 0
 4459 0020 FFF7FEFF 		bl	LCDSPI_SpiUartReadRxData
 4460 0024 0200     		movs	r2, r0
 4461 0026 0F23     		movs	r3, #15
 4462 0028 1340     		ands	r3, r2
 4463 002a 7B60     		str	r3, [r7, #4]
1304:RA8875.c      **** //    spi_end();
1305:RA8875.c      **** //  digitalWrite(_cs, HIGH);
1306:RA8875.c      ****     CyDelay(1); // testing
 4464              		.loc 1 1306 0
 4465 002c 0120     		movs	r0, #1
 4466 002e FFF7FEFF 		bl	CyDelay
1307:RA8875.c      ****     LCDSPI_Stop();
 4467              		.loc 1 1307 0
 4468 0032 FFF7FEFF 		bl	LCDSPI_Stop
1308:RA8875.c      ****     
1309:RA8875.c      ****     return x;
 4469              		.loc 1 1309 0
 4470 0036 7B68     		ldr	r3, [r7, #4]
1310:RA8875.c      **** }
 4471              		.loc 1 1310 0
 4472 0038 1800     		movs	r0, r3
 4473 003a BD46     		mov	sp, r7
 4474 003c 02B0     		add	sp, sp, #8
 4475              		@ sp needed
 4476 003e 80BD     		pop	{r7, pc}
 4477              		.cfi_endproc
 4478              	.LFE85:
 4479              		.size	readData, .-readData
 4480              		.section	.text.writeCommand,"ax",%progbits
 4481              		.align	2
 4482              		.global	writeCommand
 4483              		.code	16
 4484              		.thumb_func
 4485              		.type	writeCommand, %function
 4486              	writeCommand:
 4487              	.LFB86:
1311:RA8875.c      **** 
1312:RA8875.c      **** /**************************************************************************/
1313:RA8875.c      **** /*!
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 103


1314:RA8875.c      **** 
1315:RA8875.c      **** */
1316:RA8875.c      **** /**************************************************************************/
1317:RA8875.c      **** void  writeCommand(uint8_t d) 
1318:RA8875.c      **** {
 4488              		.loc 1 1318 0
 4489              		.cfi_startproc
 4490              		@ args = 0, pretend = 0, frame = 8
 4491              		@ frame_needed = 1, uses_anonymous_args = 0
 4492 0000 80B5     		push	{r7, lr}
 4493              		.cfi_def_cfa_offset 8
 4494              		.cfi_offset 7, -8
 4495              		.cfi_offset 14, -4
 4496 0002 82B0     		sub	sp, sp, #8
 4497              		.cfi_def_cfa_offset 16
 4498 0004 00AF     		add	r7, sp, #0
 4499              		.cfi_def_cfa_register 7
 4500 0006 0200     		movs	r2, r0
 4501 0008 FB1D     		adds	r3, r7, #7
 4502 000a 1A70     		strb	r2, [r3]
1319:RA8875.c      ****     LCDSPI_Start(); 
 4503              		.loc 1 1319 0
 4504 000c FFF7FEFF 		bl	LCDSPI_Start
1320:RA8875.c      ****     CyDelay(1); // testing
 4505              		.loc 1 1320 0
 4506 0010 0120     		movs	r0, #1
 4507 0012 FFF7FEFF 		bl	CyDelay
1321:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_CMDWRITE);
 4508              		.loc 1 1321 0
 4509 0016 8020     		movs	r0, #128
 4510 0018 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1322:RA8875.c      ****     
1323:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(d);
 4511              		.loc 1 1323 0
 4512 001c FB1D     		adds	r3, r7, #7
 4513 001e 1B78     		ldrb	r3, [r3]
 4514 0020 1800     		movs	r0, r3
 4515 0022 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1324:RA8875.c      ****     CyDelay(1); // testing
 4516              		.loc 1 1324 0
 4517 0026 0120     		movs	r0, #1
 4518 0028 FFF7FEFF 		bl	CyDelay
1325:RA8875.c      ****     LCDSPI_Stop();
 4519              		.loc 1 1325 0
 4520 002c FFF7FEFF 		bl	LCDSPI_Stop
1326:RA8875.c      **** }
 4521              		.loc 1 1326 0
 4522 0030 C046     		nop
 4523 0032 BD46     		mov	sp, r7
 4524 0034 02B0     		add	sp, sp, #8
 4525              		@ sp needed
 4526 0036 80BD     		pop	{r7, pc}
 4527              		.cfi_endproc
 4528              	.LFE86:
 4529              		.size	writeCommand, .-writeCommand
 4530              		.section	.text.readStatus,"ax",%progbits
 4531              		.align	2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 104


 4532              		.global	readStatus
 4533              		.code	16
 4534              		.thumb_func
 4535              		.type	readStatus, %function
 4536              	readStatus:
 4537              	.LFB87:
1327:RA8875.c      **** 
1328:RA8875.c      **** /**************************************************************************/
1329:RA8875.c      **** /*!
1330:RA8875.c      **** 
1331:RA8875.c      **** */
1332:RA8875.c      **** /**************************************************************************/
1333:RA8875.c      **** uint8_t  readStatus(void) 
1334:RA8875.c      **** {
 4538              		.loc 1 1334 0
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 8
 4541              		@ frame_needed = 1, uses_anonymous_args = 0
 4542 0000 80B5     		push	{r7, lr}
 4543              		.cfi_def_cfa_offset 8
 4544              		.cfi_offset 7, -8
 4545              		.cfi_offset 14, -4
 4546 0002 82B0     		sub	sp, sp, #8
 4547              		.cfi_def_cfa_offset 16
 4548 0004 00AF     		add	r7, sp, #0
 4549              		.cfi_def_cfa_register 7
1335:RA8875.c      **** //  digitalWrite(_cs, LOW);
1336:RA8875.c      **** //    spi_begin();
1337:RA8875.c      ****     LCDSPI_Start();
 4550              		.loc 1 1337 0
 4551 0006 FFF7FEFF 		bl	LCDSPI_Start
1338:RA8875.c      ****     CyDelay(1);
 4552              		.loc 1 1338 0
 4553 000a 0120     		movs	r0, #1
 4554 000c FFF7FEFF 		bl	CyDelay
1339:RA8875.c      **** //  SPI.transfer(RA8875_CMDREAD);
1340:RA8875.c      ****     LCDSPI_SpiUartWriteTxData(RA8875_CMDREAD);
 4555              		.loc 1 1340 0
 4556 0010 C020     		movs	r0, #192
 4557 0012 FFF7FEFF 		bl	LCDSPI_SpiUartWriteTxData
1341:RA8875.c      **** //  uint8_t x = SPI.transfer(0x0);
1342:RA8875.c      ****     uint8_t x = LCDSPI_SpiUartReadRxData();
 4558              		.loc 1 1342 0
 4559 0016 FFF7FEFF 		bl	LCDSPI_SpiUartReadRxData
 4560 001a 0200     		movs	r2, r0
 4561 001c FB1D     		adds	r3, r7, #7
 4562 001e 1A70     		strb	r2, [r3]
1343:RA8875.c      **** //    spi_end();
1344:RA8875.c      **** //
1345:RA8875.c      **** //  digitalWrite(_cs, HIGH);
1346:RA8875.c      ****     CyDelay(1); // testing
 4563              		.loc 1 1346 0
 4564 0020 0120     		movs	r0, #1
 4565 0022 FFF7FEFF 		bl	CyDelay
1347:RA8875.c      ****     LCDSPI_Stop();
 4566              		.loc 1 1347 0
 4567 0026 FFF7FEFF 		bl	LCDSPI_Stop
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 105


1348:RA8875.c      ****     
1349:RA8875.c      ****     return x;
 4568              		.loc 1 1349 0
 4569 002a FB1D     		adds	r3, r7, #7
 4570 002c 1B78     		ldrb	r3, [r3]
1350:RA8875.c      **** }
 4571              		.loc 1 1350 0
 4572 002e 1800     		movs	r0, r3
 4573 0030 BD46     		mov	sp, r7
 4574 0032 02B0     		add	sp, sp, #8
 4575              		@ sp needed
 4576 0034 80BD     		pop	{r7, pc}
 4577              		.cfi_endproc
 4578              	.LFE87:
 4579              		.size	readStatus, .-readStatus
 4580 0036 C046     		.text
 4581              	.Letext0:
 4582              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 4583              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 4584              		.file 4 "Generated_Source\\PSoC4/BLE_1_Stack.h"
 4585              		.file 5 "Generated_Source\\PSoC4/BLE_1_dis.h"
 4586              		.file 6 "RA8875.h"
 4587              		.section	.debug_info,"",%progbits
 4588              	.Ldebug_info0:
 4589 0000 5A110000 		.4byte	0x115a
 4590 0004 0400     		.2byte	0x4
 4591 0006 00000000 		.4byte	.Ldebug_abbrev0
 4592 000a 04       		.byte	0x4
 4593 000b 01       		.uleb128 0x1
 4594 000c C5060000 		.4byte	.LASF193
 4595 0010 0C       		.byte	0xc
 4596 0011 E70A0000 		.4byte	.LASF194
 4597 0015 700B0000 		.4byte	.LASF195
 4598 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4599 001d 00000000 		.4byte	0
 4600 0021 00000000 		.4byte	.Ldebug_line0
 4601 0025 02       		.uleb128 0x2
 4602 0026 01       		.byte	0x1
 4603 0027 06       		.byte	0x6
 4604 0028 F9010000 		.4byte	.LASF0
 4605 002c 03       		.uleb128 0x3
 4606 002d 9E000000 		.4byte	.LASF2
 4607 0031 02       		.byte	0x2
 4608 0032 1D       		.byte	0x1d
 4609 0033 37000000 		.4byte	0x37
 4610 0037 02       		.uleb128 0x2
 4611 0038 01       		.byte	0x1
 4612 0039 08       		.byte	0x8
 4613 003a DC090000 		.4byte	.LASF1
 4614 003e 03       		.uleb128 0x3
 4615 003f 6A030000 		.4byte	.LASF3
 4616 0043 02       		.byte	0x2
 4617 0044 29       		.byte	0x29
 4618 0045 49000000 		.4byte	0x49
 4619 0049 02       		.uleb128 0x2
 4620 004a 02       		.byte	0x2
 4621 004b 05       		.byte	0x5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 106


 4622 004c 430A0000 		.4byte	.LASF4
 4623 0050 03       		.uleb128 0x3
 4624 0051 7C0C0000 		.4byte	.LASF5
 4625 0055 02       		.byte	0x2
 4626 0056 2B       		.byte	0x2b
 4627 0057 5B000000 		.4byte	0x5b
 4628 005b 02       		.uleb128 0x2
 4629 005c 02       		.byte	0x2
 4630 005d 07       		.byte	0x7
 4631 005e 26050000 		.4byte	.LASF6
 4632 0062 02       		.uleb128 0x2
 4633 0063 04       		.byte	0x4
 4634 0064 05       		.byte	0x5
 4635 0065 CB000000 		.4byte	.LASF7
 4636 0069 03       		.uleb128 0x3
 4637 006a 53030000 		.4byte	.LASF8
 4638 006e 02       		.byte	0x2
 4639 006f 41       		.byte	0x41
 4640 0070 74000000 		.4byte	0x74
 4641 0074 02       		.uleb128 0x2
 4642 0075 04       		.byte	0x4
 4643 0076 07       		.byte	0x7
 4644 0077 77040000 		.4byte	.LASF9
 4645 007b 02       		.uleb128 0x2
 4646 007c 08       		.byte	0x8
 4647 007d 05       		.byte	0x5
 4648 007e EB010000 		.4byte	.LASF10
 4649 0082 02       		.uleb128 0x2
 4650 0083 08       		.byte	0x8
 4651 0084 07       		.byte	0x7
 4652 0085 D4000000 		.4byte	.LASF11
 4653 0089 04       		.uleb128 0x4
 4654 008a 04       		.byte	0x4
 4655 008b 05       		.byte	0x5
 4656 008c 696E7400 		.ascii	"int\000"
 4657 0090 02       		.uleb128 0x2
 4658 0091 04       		.byte	0x4
 4659 0092 07       		.byte	0x7
 4660 0093 0D040000 		.4byte	.LASF12
 4661 0097 03       		.uleb128 0x3
 4662 0098 1A0E0000 		.4byte	.LASF13
 4663 009c 03       		.byte	0x3
 4664 009d 18       		.byte	0x18
 4665 009e 2C000000 		.4byte	0x2c
 4666 00a2 03       		.uleb128 0x3
 4667 00a3 DA010000 		.4byte	.LASF14
 4668 00a7 03       		.byte	0x3
 4669 00a8 20       		.byte	0x20
 4670 00a9 3E000000 		.4byte	0x3e
 4671 00ad 03       		.uleb128 0x3
 4672 00ae D1020000 		.4byte	.LASF15
 4673 00b2 03       		.byte	0x3
 4674 00b3 24       		.byte	0x24
 4675 00b4 50000000 		.4byte	0x50
 4676 00b8 03       		.uleb128 0x3
 4677 00b9 440F0000 		.4byte	.LASF16
 4678 00bd 03       		.byte	0x3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 107


 4679 00be 30       		.byte	0x30
 4680 00bf 69000000 		.4byte	0x69
 4681 00c3 02       		.uleb128 0x2
 4682 00c4 04       		.byte	0x4
 4683 00c5 04       		.byte	0x4
 4684 00c6 92090000 		.4byte	.LASF17
 4685 00ca 02       		.uleb128 0x2
 4686 00cb 08       		.byte	0x8
 4687 00cc 04       		.byte	0x4
 4688 00cd E1020000 		.4byte	.LASF18
 4689 00d1 02       		.uleb128 0x2
 4690 00d2 01       		.byte	0x1
 4691 00d3 08       		.byte	0x8
 4692 00d4 330C0000 		.4byte	.LASF19
 4693 00d8 02       		.uleb128 0x2
 4694 00d9 08       		.byte	0x8
 4695 00da 04       		.byte	0x4
 4696 00db 270C0000 		.4byte	.LASF20
 4697 00df 02       		.uleb128 0x2
 4698 00e0 04       		.byte	0x4
 4699 00e1 07       		.byte	0x7
 4700 00e2 640E0000 		.4byte	.LASF21
 4701 00e6 05       		.uleb128 0x5
 4702 00e7 04       		.byte	0x4
 4703 00e8 EC000000 		.4byte	0xec
 4704 00ec 06       		.uleb128 0x6
 4705 00ed D1000000 		.4byte	0xd1
 4706 00f1 07       		.uleb128 0x7
 4707 00f2 01       		.byte	0x1
 4708 00f3 37000000 		.4byte	0x37
 4709 00f7 04       		.byte	0x4
 4710 00f8 4D01     		.2byte	0x14d
 4711 00fa AF020000 		.4byte	0x2af
 4712 00fe 08       		.uleb128 0x8
 4713 00ff 39050000 		.4byte	.LASF22
 4714 0103 00       		.byte	0
 4715 0104 08       		.uleb128 0x8
 4716 0105 05020000 		.4byte	.LASF23
 4717 0109 01       		.byte	0x1
 4718 010a 08       		.uleb128 0x8
 4719 010b B9000000 		.4byte	.LASF24
 4720 010f 02       		.byte	0x2
 4721 0110 08       		.uleb128 0x8
 4722 0111 380D0000 		.4byte	.LASF25
 4723 0115 03       		.byte	0x3
 4724 0116 08       		.uleb128 0x8
 4725 0117 F7000000 		.4byte	.LASF26
 4726 011b 04       		.byte	0x4
 4727 011c 08       		.uleb128 0x8
 4728 011d 74000000 		.4byte	.LASF27
 4729 0121 05       		.byte	0x5
 4730 0122 08       		.uleb128 0x8
 4731 0123 6E050000 		.4byte	.LASF28
 4732 0127 06       		.byte	0x6
 4733 0128 08       		.uleb128 0x8
 4734 0129 9A070000 		.4byte	.LASF29
 4735 012d 20       		.byte	0x20
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 108


 4736 012e 08       		.uleb128 0x8
 4737 012f 42020000 		.4byte	.LASF30
 4738 0133 21       		.byte	0x21
 4739 0134 08       		.uleb128 0x8
 4740 0135 A6050000 		.4byte	.LASF31
 4741 0139 22       		.byte	0x22
 4742 013a 08       		.uleb128 0x8
 4743 013b E4080000 		.4byte	.LASF32
 4744 013f 23       		.byte	0x23
 4745 0140 08       		.uleb128 0x8
 4746 0141 C8080000 		.4byte	.LASF33
 4747 0145 24       		.byte	0x24
 4748 0146 08       		.uleb128 0x8
 4749 0147 35080000 		.4byte	.LASF34
 4750 014b 25       		.byte	0x25
 4751 014c 08       		.uleb128 0x8
 4752 014d 99020000 		.4byte	.LASF35
 4753 0151 26       		.byte	0x26
 4754 0152 08       		.uleb128 0x8
 4755 0153 CA050000 		.4byte	.LASF36
 4756 0157 27       		.byte	0x27
 4757 0158 08       		.uleb128 0x8
 4758 0159 64010000 		.4byte	.LASF37
 4759 015d 28       		.byte	0x28
 4760 015e 08       		.uleb128 0x8
 4761 015f CA0A0000 		.4byte	.LASF38
 4762 0163 29       		.byte	0x29
 4763 0164 08       		.uleb128 0x8
 4764 0165 2A000000 		.4byte	.LASF39
 4765 0169 2A       		.byte	0x2a
 4766 016a 08       		.uleb128 0x8
 4767 016b 18020000 		.4byte	.LASF40
 4768 016f 2B       		.byte	0x2b
 4769 0170 08       		.uleb128 0x8
 4770 0171 FF090000 		.4byte	.LASF41
 4771 0175 2C       		.byte	0x2c
 4772 0176 08       		.uleb128 0x8
 4773 0177 8E010000 		.4byte	.LASF42
 4774 017b 2D       		.byte	0x2d
 4775 017c 08       		.uleb128 0x8
 4776 017d B80C0000 		.4byte	.LASF43
 4777 0181 2E       		.byte	0x2e
 4778 0182 08       		.uleb128 0x8
 4779 0183 510D0000 		.4byte	.LASF44
 4780 0187 2F       		.byte	0x2f
 4781 0188 08       		.uleb128 0x8
 4782 0189 8A080000 		.4byte	.LASF45
 4783 018d 30       		.byte	0x30
 4784 018e 08       		.uleb128 0x8
 4785 018f E60E0000 		.4byte	.LASF46
 4786 0193 31       		.byte	0x31
 4787 0194 08       		.uleb128 0x8
 4788 0195 69080000 		.4byte	.LASF47
 4789 0199 32       		.byte	0x32
 4790 019a 08       		.uleb128 0x8
 4791 019b 3E0B0000 		.4byte	.LASF48
 4792 019f 33       		.byte	0x33
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 109


 4793 01a0 08       		.uleb128 0x8
 4794 01a1 89040000 		.4byte	.LASF49
 4795 01a5 34       		.byte	0x34
 4796 01a6 08       		.uleb128 0x8
 4797 01a7 98030000 		.4byte	.LASF50
 4798 01ab 35       		.byte	0x35
 4799 01ac 08       		.uleb128 0x8
 4800 01ad 31060000 		.4byte	.LASF51
 4801 01b1 36       		.byte	0x36
 4802 01b2 08       		.uleb128 0x8
 4803 01b3 57060000 		.4byte	.LASF52
 4804 01b7 37       		.byte	0x37
 4805 01b8 08       		.uleb128 0x8
 4806 01b9 240B0000 		.4byte	.LASF53
 4807 01bd 40       		.byte	0x40
 4808 01be 08       		.uleb128 0x8
 4809 01bf DC070000 		.4byte	.LASF54
 4810 01c3 41       		.byte	0x41
 4811 01c4 08       		.uleb128 0x8
 4812 01c5 260F0000 		.4byte	.LASF55
 4813 01c9 42       		.byte	0x42
 4814 01ca 08       		.uleb128 0x8
 4815 01cb C40D0000 		.4byte	.LASF56
 4816 01cf 43       		.byte	0x43
 4817 01d0 08       		.uleb128 0x8
 4818 01d1 AF040000 		.4byte	.LASF57
 4819 01d5 44       		.byte	0x44
 4820 01d6 08       		.uleb128 0x8
 4821 01d7 6B090000 		.4byte	.LASF58
 4822 01db 45       		.byte	0x45
 4823 01dc 08       		.uleb128 0x8
 4824 01dd 39040000 		.4byte	.LASF59
 4825 01e1 46       		.byte	0x46
 4826 01e2 08       		.uleb128 0x8
 4827 01e3 50050000 		.4byte	.LASF60
 4828 01e7 47       		.byte	0x47
 4829 01e8 08       		.uleb128 0x8
 4830 01e9 880D0000 		.4byte	.LASF61
 4831 01ed 48       		.byte	0x48
 4832 01ee 08       		.uleb128 0x8
 4833 01ef 59020000 		.4byte	.LASF62
 4834 01f3 49       		.byte	0x49
 4835 01f4 08       		.uleb128 0x8
 4836 01f5 00000000 		.4byte	.LASF63
 4837 01f9 4A       		.byte	0x4a
 4838 01fa 08       		.uleb128 0x8
 4839 01fb 380C0000 		.4byte	.LASF64
 4840 01ff 4B       		.byte	0x4b
 4841 0200 08       		.uleb128 0x8
 4842 0201 17060000 		.4byte	.LASF65
 4843 0205 4C       		.byte	0x4c
 4844 0206 08       		.uleb128 0x8
 4845 0207 4F080000 		.4byte	.LASF66
 4846 020b 4D       		.byte	0x4d
 4847 020c 08       		.uleb128 0x8
 4848 020d 8C060000 		.4byte	.LASF67
 4849 0211 4E       		.byte	0x4e
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 110


 4850 0212 08       		.uleb128 0x8
 4851 0213 AB0A0000 		.4byte	.LASF68
 4852 0217 4F       		.byte	0x4f
 4853 0218 08       		.uleb128 0x8
 4854 0219 87050000 		.4byte	.LASF69
 4855 021d 50       		.byte	0x50
 4856 021e 08       		.uleb128 0x8
 4857 021f 2E0E0000 		.4byte	.LASF70
 4858 0223 51       		.byte	0x51
 4859 0224 08       		.uleb128 0x8
 4860 0225 0A090000 		.4byte	.LASF71
 4861 0229 52       		.byte	0x52
 4862 022a 08       		.uleb128 0x8
 4863 022b F6050000 		.4byte	.LASF72
 4864 022f 53       		.byte	0x53
 4865 0230 08       		.uleb128 0x8
 4866 0231 030B0000 		.4byte	.LASF73
 4867 0235 54       		.byte	0x54
 4868 0236 08       		.uleb128 0x8
 4869 0237 CD040000 		.4byte	.LASF74
 4870 023b 55       		.byte	0x55
 4871 023c 08       		.uleb128 0x8
 4872 023d EB030000 		.4byte	.LASF75
 4873 0241 56       		.byte	0x56
 4874 0242 08       		.uleb128 0x8
 4875 0243 870C0000 		.4byte	.LASF76
 4876 0247 57       		.byte	0x57
 4877 0248 08       		.uleb128 0x8
 4878 0249 C8030000 		.4byte	.LASF77
 4879 024d 58       		.byte	0x58
 4880 024e 08       		.uleb128 0x8
 4881 024f 3E010000 		.4byte	.LASF78
 4882 0253 70       		.byte	0x70
 4883 0254 08       		.uleb128 0x8
 4884 0255 C00E0000 		.4byte	.LASF79
 4885 0259 71       		.byte	0x71
 4886 025a 08       		.uleb128 0x8
 4887 025b 65070000 		.4byte	.LASF80
 4888 025f 72       		.byte	0x72
 4889 0260 08       		.uleb128 0x8
 4890 0261 F7070000 		.4byte	.LASF81
 4891 0265 73       		.byte	0x73
 4892 0266 08       		.uleb128 0x8
 4893 0267 4D090000 		.4byte	.LASF82
 4894 026b 74       		.byte	0x74
 4895 026c 08       		.uleb128 0x8
 4896 026d 920E0000 		.4byte	.LASF83
 4897 0271 75       		.byte	0x75
 4898 0272 08       		.uleb128 0x8
 4899 0273 53000000 		.4byte	.LASF84
 4900 0277 76       		.byte	0x76
 4901 0278 08       		.uleb128 0x8
 4902 0279 080D0000 		.4byte	.LASF85
 4903 027d 77       		.byte	0x77
 4904 027e 08       		.uleb128 0x8
 4905 027f DC0C0000 		.4byte	.LASF86
 4906 0283 78       		.byte	0x78
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 111


 4907 0284 08       		.uleb128 0x8
 4908 0285 B7010000 		.4byte	.LASF87
 4909 0289 79       		.byte	0x79
 4910 028a 08       		.uleb128 0x8
 4911 028b 74030000 		.4byte	.LASF88
 4912 028f 7A       		.byte	0x7a
 4913 0290 08       		.uleb128 0x8
 4914 0291 20010000 		.4byte	.LASF89
 4915 0295 FA       		.byte	0xfa
 4916 0296 08       		.uleb128 0x8
 4917 0297 1A040000 		.4byte	.LASF90
 4918 029b FB       		.byte	0xfb
 4919 029c 08       		.uleb128 0x8
 4920 029d 5D0A0000 		.4byte	.LASF91
 4921 02a1 FC       		.byte	0xfc
 4922 02a2 08       		.uleb128 0x8
 4923 02a3 4D0F0000 		.4byte	.LASF92
 4924 02a7 FD       		.byte	0xfd
 4925 02a8 08       		.uleb128 0x8
 4926 02a9 45030000 		.4byte	.LASF93
 4927 02ad FF       		.byte	0xff
 4928 02ae 00       		.byte	0
 4929 02af 09       		.uleb128 0x9
 4930 02b0 01       		.byte	0x1
 4931 02b1 37000000 		.4byte	0x37
 4932 02b5 05       		.byte	0x5
 4933 02b6 22       		.byte	0x22
 4934 02b7 F8020000 		.4byte	0x2f8
 4935 02bb 08       		.uleb128 0x8
 4936 02bc 0A0F0000 		.4byte	.LASF94
 4937 02c0 00       		.byte	0
 4938 02c1 08       		.uleb128 0x8
 4939 02c2 4D0E0000 		.4byte	.LASF95
 4940 02c6 01       		.byte	0x1
 4941 02c7 08       		.uleb128 0x8
 4942 02c8 AF090000 		.4byte	.LASF96
 4943 02cc 02       		.byte	0x2
 4944 02cd 08       		.uleb128 0x8
 4945 02ce 2E030000 		.4byte	.LASF97
 4946 02d2 03       		.byte	0x3
 4947 02d3 08       		.uleb128 0x8
 4948 02d4 FF020000 		.4byte	.LASF98
 4949 02d8 04       		.byte	0x4
 4950 02d9 08       		.uleb128 0x8
 4951 02da 6F0A0000 		.4byte	.LASF99
 4952 02de 05       		.byte	0x5
 4953 02df 08       		.uleb128 0x8
 4954 02e0 BE070000 		.4byte	.LASF100
 4955 02e4 06       		.byte	0x6
 4956 02e5 08       		.uleb128 0x8
 4957 02e6 35090000 		.4byte	.LASF101
 4958 02ea 07       		.byte	0x7
 4959 02eb 08       		.uleb128 0x8
 4960 02ec AA060000 		.4byte	.LASF102
 4961 02f0 08       		.byte	0x8
 4962 02f1 08       		.uleb128 0x8
 4963 02f2 EA090000 		.4byte	.LASF103
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 112


 4964 02f6 09       		.byte	0x9
 4965 02f7 00       		.byte	0
 4966 02f8 0A       		.uleb128 0xa
 4967 02f9 AF0D0000 		.4byte	.LASF196
 4968 02fd 01       		.byte	0x1
 4969 02fe 37000000 		.4byte	0x37
 4970 0302 06       		.byte	0x6
 4971 0303 30       		.byte	0x30
 4972 0304 15030000 		.4byte	0x315
 4973 0308 08       		.uleb128 0x8
 4974 0309 570C0000 		.4byte	.LASF104
 4975 030d 00       		.byte	0
 4976 030e 08       		.uleb128 0x8
 4977 030f 81070000 		.4byte	.LASF105
 4978 0313 01       		.byte	0x1
 4979 0314 00       		.byte	0
 4980 0315 09       		.uleb128 0x9
 4981 0316 01       		.byte	0x1
 4982 0317 37000000 		.4byte	0x37
 4983 031b 06       		.byte	0x6
 4984 031c 44       		.byte	0x44
 4985 031d 2E030000 		.4byte	0x32e
 4986 0321 08       		.uleb128 0x8
 4987 0322 570A0000 		.4byte	.LASF106
 4988 0326 00       		.byte	0
 4989 0327 08       		.uleb128 0x8
 4990 0328 6E0F0000 		.4byte	.LASF107
 4991 032c 01       		.byte	0x1
 4992 032d 00       		.byte	0
 4993 032e 03       		.uleb128 0x3
 4994 032f B00C0000 		.4byte	.LASF108
 4995 0333 06       		.byte	0x6
 4996 0334 47       		.byte	0x47
 4997 0335 15030000 		.4byte	0x315
 4998 0339 03       		.uleb128 0x3
 4999 033a 52060000 		.4byte	.LASF109
 5000 033e 06       		.byte	0x6
 5001 033f 47       		.byte	0x47
 5002 0340 15030000 		.4byte	0x315
 5003 0344 0B       		.uleb128 0xb
 5004 0345 5A040000 		.4byte	.LASF135
 5005 0349 01       		.byte	0x1
 5006 034a 4E       		.byte	0x4e
 5007 034b 2E030000 		.4byte	0x32e
 5008 034f 00000000 		.4byte	.LFB35
 5009 0353 A8000000 		.4byte	.LFE35-.LFB35
 5010 0357 01       		.uleb128 0x1
 5011 0358 9C       		.byte	0x9c
 5012 0359 81030000 		.4byte	0x381
 5013 035d 0C       		.uleb128 0xc
 5014 035e 7300     		.ascii	"s\000"
 5015 0360 01       		.byte	0x1
 5016 0361 4E       		.byte	0x4e
 5017 0362 F8020000 		.4byte	0x2f8
 5018 0366 02       		.uleb128 0x2
 5019 0367 91       		.byte	0x91
 5020 0368 6F       		.sleb128 -17
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 113


 5021 0369 0D       		.uleb128 0xd
 5022 036a 7800     		.ascii	"x\000"
 5023 036c 01       		.byte	0x1
 5024 036d 4F       		.byte	0x4f
 5025 036e B8000000 		.4byte	0xb8
 5026 0372 02       		.uleb128 0x2
 5027 0373 91       		.byte	0x91
 5028 0374 74       		.sleb128 -12
 5029 0375 0E       		.uleb128 0xe
 5030 0376 AB080000 		.4byte	.LASF197
 5031 037a 01       		.byte	0x1
 5032 037b 50       		.byte	0x50
 5033 037c B8000000 		.4byte	0xb8
 5034 0380 00       		.byte	0
 5035 0381 0F       		.uleb128 0xf
 5036 0382 8F020000 		.4byte	.LASF110
 5037 0386 01       		.byte	0x1
 5038 0387 A3       		.byte	0xa3
 5039 0388 00000000 		.4byte	.LFB36
 5040 038c 22000000 		.4byte	.LFE36-.LFB36
 5041 0390 01       		.uleb128 0x1
 5042 0391 9C       		.byte	0x9c
 5043 0392 0F       		.uleb128 0xf
 5044 0393 1E050000 		.4byte	.LASF111
 5045 0397 01       		.byte	0x1
 5046 0398 AF       		.byte	0xaf
 5047 0399 00000000 		.4byte	.LFB37
 5048 039d 50000000 		.4byte	.LFE37-.LFB37
 5049 03a1 01       		.uleb128 0x1
 5050 03a2 9C       		.byte	0x9c
 5051 03a3 10       		.uleb128 0x10
 5052 03a4 A00A0000 		.4byte	.LASF122
 5053 03a8 01       		.byte	0x1
 5054 03a9 C4       		.byte	0xc4
 5055 03aa 00000000 		.4byte	.LFB38
 5056 03ae 3C020000 		.4byte	.LFE38-.LFB38
 5057 03b2 01       		.uleb128 0x1
 5058 03b3 9C       		.byte	0x9c
 5059 03b4 29040000 		.4byte	0x429
 5060 03b8 11       		.uleb128 0x11
 5061 03b9 CD090000 		.4byte	.LASF112
 5062 03bd 01       		.byte	0x1
 5063 03be C9       		.byte	0xc9
 5064 03bf 97000000 		.4byte	0x97
 5065 03c3 02       		.uleb128 0x2
 5066 03c4 91       		.byte	0x91
 5067 03c5 77       		.sleb128 -9
 5068 03c6 11       		.uleb128 0x11
 5069 03c7 A3090000 		.4byte	.LASF113
 5070 03cb 01       		.byte	0x1
 5071 03cc CA       		.byte	0xca
 5072 03cd 97000000 		.4byte	0x97
 5073 03d1 02       		.uleb128 0x2
 5074 03d2 91       		.byte	0x91
 5075 03d3 76       		.sleb128 -10
 5076 03d4 11       		.uleb128 0x11
 5077 03d5 270D0000 		.4byte	.LASF114
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 114


 5078 03d9 01       		.byte	0x1
 5079 03da CB       		.byte	0xcb
 5080 03db 97000000 		.4byte	0x97
 5081 03df 02       		.uleb128 0x2
 5082 03e0 91       		.byte	0x91
 5083 03e1 75       		.sleb128 -11
 5084 03e2 11       		.uleb128 0x11
 5085 03e3 7A0E0000 		.4byte	.LASF115
 5086 03e7 01       		.byte	0x1
 5087 03e8 CC       		.byte	0xcc
 5088 03e9 97000000 		.4byte	0x97
 5089 03ed 02       		.uleb128 0x2
 5090 03ee 91       		.byte	0x91
 5091 03ef 74       		.sleb128 -12
 5092 03f0 11       		.uleb128 0x11
 5093 03f1 7A0D0000 		.4byte	.LASF116
 5094 03f5 01       		.byte	0x1
 5095 03f6 CD       		.byte	0xcd
 5096 03f7 97000000 		.4byte	0x97
 5097 03fb 02       		.uleb128 0x2
 5098 03fc 91       		.byte	0x91
 5099 03fd 73       		.sleb128 -13
 5100 03fe 11       		.uleb128 0x11
 5101 03ff 72020000 		.4byte	.LASF117
 5102 0403 01       		.byte	0x1
 5103 0404 CE       		.byte	0xce
 5104 0405 97000000 		.4byte	0x97
 5105 0409 02       		.uleb128 0x2
 5106 040a 91       		.byte	0x91
 5107 040b 72       		.sleb128 -14
 5108 040c 11       		.uleb128 0x11
 5109 040d 2B0A0000 		.4byte	.LASF118
 5110 0411 01       		.byte	0x1
 5111 0412 CF       		.byte	0xcf
 5112 0413 AD000000 		.4byte	0xad
 5113 0417 02       		.uleb128 0x2
 5114 0418 91       		.byte	0x91
 5115 0419 70       		.sleb128 -16
 5116 041a 11       		.uleb128 0x11
 5117 041b EB000000 		.4byte	.LASF119
 5118 041f 01       		.byte	0x1
 5119 0420 D0       		.byte	0xd0
 5120 0421 AD000000 		.4byte	0xad
 5121 0425 02       		.uleb128 0x2
 5122 0426 91       		.byte	0x91
 5123 0427 6E       		.sleb128 -18
 5124 0428 00       		.byte	0
 5125 0429 12       		.uleb128 0x12
 5126 042a 0E050000 		.4byte	.LASF120
 5127 042e 01       		.byte	0x1
 5128 042f 1801     		.2byte	0x118
 5129 0431 AD000000 		.4byte	0xad
 5130 0435 00000000 		.4byte	.LFB39
 5131 0439 14000000 		.4byte	.LFE39-.LFB39
 5132 043d 01       		.uleb128 0x1
 5133 043e 9C       		.byte	0x9c
 5134 043f 12       		.uleb128 0x12
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 115


 5135 0440 B90E0000 		.4byte	.LASF121
 5136 0444 01       		.byte	0x1
 5137 0445 2101     		.2byte	0x121
 5138 0447 AD000000 		.4byte	0xad
 5139 044b 00000000 		.4byte	.LFB40
 5140 044f 14000000 		.4byte	.LFE40-.LFB40
 5141 0453 01       		.uleb128 0x1
 5142 0454 9C       		.byte	0x9c
 5143 0455 13       		.uleb128 0x13
 5144 0456 BF080000 		.4byte	.LASF123
 5145 045a 01       		.byte	0x1
 5146 045b 2A01     		.2byte	0x12a
 5147 045d 00000000 		.4byte	.LFB41
 5148 0461 5C000000 		.4byte	.LFE41-.LFB41
 5149 0465 01       		.uleb128 0x1
 5150 0466 9C       		.byte	0x9c
 5151 0467 7B040000 		.4byte	0x47b
 5152 046b 14       		.uleb128 0x14
 5153 046c B5030000 		.4byte	.LASF124
 5154 0470 01       		.byte	0x1
 5155 0471 2E01     		.2byte	0x12e
 5156 0473 97000000 		.4byte	0x97
 5157 0477 02       		.uleb128 0x2
 5158 0478 91       		.byte	0x91
 5159 0479 77       		.sleb128 -9
 5160 047a 00       		.byte	0
 5161 047b 13       		.uleb128 0x13
 5162 047c 90000000 		.4byte	.LASF125
 5163 0480 01       		.byte	0x1
 5164 0481 4101     		.2byte	0x141
 5165 0483 00000000 		.4byte	.LFB42
 5166 0487 6A000000 		.4byte	.LFE42-.LFB42
 5167 048b 01       		.uleb128 0x1
 5168 048c 9C       		.byte	0x9c
 5169 048d AC040000 		.4byte	0x4ac
 5170 0491 15       		.uleb128 0x15
 5171 0492 7800     		.ascii	"x\000"
 5172 0494 01       		.byte	0x1
 5173 0495 4101     		.2byte	0x141
 5174 0497 AD000000 		.4byte	0xad
 5175 049b 02       		.uleb128 0x2
 5176 049c 91       		.byte	0x91
 5177 049d 76       		.sleb128 -10
 5178 049e 15       		.uleb128 0x15
 5179 049f 7900     		.ascii	"y\000"
 5180 04a1 01       		.byte	0x1
 5181 04a2 4101     		.2byte	0x141
 5182 04a4 AD000000 		.4byte	0xad
 5183 04a8 02       		.uleb128 0x2
 5184 04a9 91       		.byte	0x91
 5185 04aa 74       		.sleb128 -12
 5186 04ab 00       		.byte	0
 5187 04ac 13       		.uleb128 0x13
 5188 04ad 2B090000 		.4byte	.LASF126
 5189 04b1 01       		.byte	0x1
 5190 04b2 5601     		.2byte	0x156
 5191 04b4 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 116


 5192 04b8 D8000000 		.4byte	.LFE43-.LFB43
 5193 04bc 01       		.uleb128 0x1
 5194 04bd 9C       		.byte	0x9c
 5195 04be F0040000 		.4byte	0x4f0
 5196 04c2 16       		.uleb128 0x16
 5197 04c3 BB060000 		.4byte	.LASF127
 5198 04c7 01       		.byte	0x1
 5199 04c8 5601     		.2byte	0x156
 5200 04ca AD000000 		.4byte	0xad
 5201 04ce 02       		.uleb128 0x2
 5202 04cf 91       		.byte	0x91
 5203 04d0 6E       		.sleb128 -18
 5204 04d1 16       		.uleb128 0x16
 5205 04d2 15080000 		.4byte	.LASF128
 5206 04d6 01       		.byte	0x1
 5207 04d7 5601     		.2byte	0x156
 5208 04d9 AD000000 		.4byte	0xad
 5209 04dd 02       		.uleb128 0x2
 5210 04de 91       		.byte	0x91
 5211 04df 6C       		.sleb128 -20
 5212 04e0 14       		.uleb128 0x14
 5213 04e1 B5030000 		.4byte	.LASF124
 5214 04e5 01       		.byte	0x1
 5215 04e6 6A01     		.2byte	0x16a
 5216 04e8 97000000 		.4byte	0x97
 5217 04ec 02       		.uleb128 0x2
 5218 04ed 91       		.byte	0x91
 5219 04ee 77       		.sleb128 -9
 5220 04ef 00       		.byte	0
 5221 04f0 13       		.uleb128 0x13
 5222 04f1 F70D0000 		.4byte	.LASF129
 5223 04f5 01       		.byte	0x1
 5224 04f6 7601     		.2byte	0x176
 5225 04f8 00000000 		.4byte	.LFB44
 5226 04fc 8A000000 		.4byte	.LFE44-.LFB44
 5227 0500 01       		.uleb128 0x1
 5228 0501 9C       		.byte	0x9c
 5229 0502 25050000 		.4byte	0x525
 5230 0506 16       		.uleb128 0x16
 5231 0507 BB060000 		.4byte	.LASF127
 5232 050b 01       		.byte	0x1
 5233 050c 7601     		.2byte	0x176
 5234 050e AD000000 		.4byte	0xad
 5235 0512 02       		.uleb128 0x2
 5236 0513 91       		.byte	0x91
 5237 0514 6E       		.sleb128 -18
 5238 0515 14       		.uleb128 0x14
 5239 0516 B5030000 		.4byte	.LASF124
 5240 051a 01       		.byte	0x1
 5241 051b 8201     		.2byte	0x182
 5242 051d 97000000 		.4byte	0x97
 5243 0521 02       		.uleb128 0x2
 5244 0522 91       		.byte	0x91
 5245 0523 77       		.sleb128 -9
 5246 0524 00       		.byte	0
 5247 0525 13       		.uleb128 0x13
 5248 0526 220E0000 		.4byte	.LASF130
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 117


 5249 052a 01       		.byte	0x1
 5250 052b 9301     		.2byte	0x193
 5251 052d 00000000 		.4byte	.LFB45
 5252 0531 88000000 		.4byte	.LFE45-.LFB45
 5253 0535 01       		.uleb128 0x1
 5254 0536 9C       		.byte	0x9c
 5255 0537 5A050000 		.4byte	0x55a
 5256 053b 16       		.uleb128 0x16
 5257 053c 1E000000 		.4byte	.LASF131
 5258 0540 01       		.byte	0x1
 5259 0541 9301     		.2byte	0x193
 5260 0543 97000000 		.4byte	0x97
 5261 0547 02       		.uleb128 0x2
 5262 0548 91       		.byte	0x91
 5263 0549 6F       		.sleb128 -17
 5264 054a 14       		.uleb128 0x14
 5265 054b B5030000 		.4byte	.LASF124
 5266 054f 01       		.byte	0x1
 5267 0550 9901     		.2byte	0x199
 5268 0552 97000000 		.4byte	0x97
 5269 0556 02       		.uleb128 0x2
 5270 0557 91       		.byte	0x91
 5271 0558 77       		.sleb128 -9
 5272 0559 00       		.byte	0
 5273 055a 13       		.uleb128 0x13
 5274 055b 16010000 		.4byte	.LASF132
 5275 055f 01       		.byte	0x1
 5276 0560 AA01     		.2byte	0x1aa
 5277 0562 00000000 		.4byte	.LFB46
 5278 0566 7C000000 		.4byte	.LFE46-.LFB46
 5279 056a 01       		.uleb128 0x1
 5280 056b 9C       		.byte	0x9c
 5281 056c A6050000 		.4byte	0x5a6
 5282 0570 16       		.uleb128 0x16
 5283 0571 E8020000 		.4byte	.LASF133
 5284 0575 01       		.byte	0x1
 5285 0576 AA01     		.2byte	0x1aa
 5286 0578 E6000000 		.4byte	0xe6
 5287 057c 02       		.uleb128 0x2
 5288 057d 91       		.byte	0x91
 5289 057e 6C       		.sleb128 -20
 5290 057f 15       		.uleb128 0x15
 5291 0580 6C656E00 		.ascii	"len\000"
 5292 0584 01       		.byte	0x1
 5293 0585 AA01     		.2byte	0x1aa
 5294 0587 AD000000 		.4byte	0xad
 5295 058b 02       		.uleb128 0x2
 5296 058c 91       		.byte	0x91
 5297 058d 6A       		.sleb128 -22
 5298 058e 17       		.uleb128 0x17
 5299 058f 2A000000 		.4byte	.LBB2
 5300 0593 46000000 		.4byte	.LBE2-.LBB2
 5301 0597 18       		.uleb128 0x18
 5302 0598 6900     		.ascii	"i\000"
 5303 059a 01       		.byte	0x1
 5304 059b AE01     		.2byte	0x1ae
 5305 059d AD000000 		.4byte	0xad
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 118


 5306 05a1 02       		.uleb128 0x2
 5307 05a2 91       		.byte	0x91
 5308 05a3 76       		.sleb128 -10
 5309 05a4 00       		.byte	0
 5310 05a5 00       		.byte	0
 5311 05a6 13       		.uleb128 0x13
 5312 05a7 E9050000 		.4byte	.LASF134
 5313 05ab 01       		.byte	0x1
 5314 05ac C201     		.2byte	0x1c2
 5315 05ae 00000000 		.4byte	.LFB47
 5316 05b2 34000000 		.4byte	.LFE47-.LFB47
 5317 05b6 01       		.uleb128 0x1
 5318 05b7 9C       		.byte	0x9c
 5319 05b8 CC050000 		.4byte	0x5cc
 5320 05bc 14       		.uleb128 0x14
 5321 05bd B5030000 		.4byte	.LASF124
 5322 05c1 01       		.byte	0x1
 5323 05c2 C401     		.2byte	0x1c4
 5324 05c4 97000000 		.4byte	0x97
 5325 05c8 02       		.uleb128 0x2
 5326 05c9 91       		.byte	0x91
 5327 05ca 77       		.sleb128 -9
 5328 05cb 00       		.byte	0
 5329 05cc 19       		.uleb128 0x19
 5330 05cd E2010000 		.4byte	.LASF136
 5331 05d1 01       		.byte	0x1
 5332 05d2 CE01     		.2byte	0x1ce
 5333 05d4 2E030000 		.4byte	0x32e
 5334 05d8 00000000 		.4byte	.LFB48
 5335 05dc 40000000 		.4byte	.LFE48-.LFB48
 5336 05e0 01       		.uleb128 0x1
 5337 05e1 9C       		.byte	0x9c
 5338 05e2 1E060000 		.4byte	0x61e
 5339 05e6 16       		.uleb128 0x16
 5340 05e7 C9020000 		.4byte	.LASF137
 5341 05eb 01       		.byte	0x1
 5342 05ec CE01     		.2byte	0x1ce
 5343 05ee 97000000 		.4byte	0x97
 5344 05f2 02       		.uleb128 0x2
 5345 05f3 91       		.byte	0x91
 5346 05f4 6F       		.sleb128 -17
 5347 05f5 16       		.uleb128 0x16
 5348 05f6 890E0000 		.4byte	.LASF138
 5349 05fa 01       		.byte	0x1
 5350 05fb CE01     		.2byte	0x1ce
 5351 05fd 97000000 		.4byte	0x97
 5352 0601 02       		.uleb128 0x2
 5353 0602 91       		.byte	0x91
 5354 0603 6E       		.sleb128 -18
 5355 0604 17       		.uleb128 0x17
 5356 0605 12000000 		.4byte	.LBB3
 5357 0609 26000000 		.4byte	.LBE3-.LBB3
 5358 060d 14       		.uleb128 0x14
 5359 060e B5030000 		.4byte	.LASF124
 5360 0612 01       		.byte	0x1
 5361 0613 D201     		.2byte	0x1d2
 5362 0615 97000000 		.4byte	0x97
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 119


 5363 0619 02       		.uleb128 0x2
 5364 061a 91       		.byte	0x91
 5365 061b 77       		.sleb128 -9
 5366 061c 00       		.byte	0
 5367 061d 00       		.byte	0
 5368 061e 13       		.uleb128 0x13
 5369 061f 24000000 		.4byte	.LASF139
 5370 0623 01       		.byte	0x1
 5371 0624 E201     		.2byte	0x1e2
 5372 0626 00000000 		.4byte	.LFB49
 5373 062a 5A000000 		.4byte	.LFE49-.LFB49
 5374 062e 01       		.uleb128 0x1
 5375 062f 9C       		.byte	0x9c
 5376 0630 4F060000 		.4byte	0x64f
 5377 0634 15       		.uleb128 0x15
 5378 0635 7800     		.ascii	"x\000"
 5379 0637 01       		.byte	0x1
 5380 0638 E201     		.2byte	0x1e2
 5381 063a AD000000 		.4byte	0xad
 5382 063e 02       		.uleb128 0x2
 5383 063f 91       		.byte	0x91
 5384 0640 76       		.sleb128 -10
 5385 0641 15       		.uleb128 0x15
 5386 0642 7900     		.ascii	"y\000"
 5387 0644 01       		.byte	0x1
 5388 0645 E201     		.2byte	0x1e2
 5389 0647 AD000000 		.4byte	0xad
 5390 064b 02       		.uleb128 0x2
 5391 064c 91       		.byte	0x91
 5392 064d 74       		.sleb128 -12
 5393 064e 00       		.byte	0
 5394 064f 13       		.uleb128 0x13
 5395 0650 F80A0000 		.4byte	.LASF140
 5396 0654 01       		.byte	0x1
 5397 0655 F101     		.2byte	0x1f1
 5398 0657 00000000 		.4byte	.LFB50
 5399 065b 48000000 		.4byte	.LFE50-.LFB50
 5400 065f 01       		.uleb128 0x1
 5401 0660 9C       		.byte	0x9c
 5402 0661 82060000 		.4byte	0x682
 5403 0665 15       		.uleb128 0x15
 5404 0666 6E756D00 		.ascii	"num\000"
 5405 066a 01       		.byte	0x1
 5406 066b F101     		.2byte	0x1f1
 5407 066d B8000000 		.4byte	0xb8
 5408 0671 02       		.uleb128 0x2
 5409 0672 91       		.byte	0x91
 5410 0673 74       		.sleb128 -12
 5411 0674 15       		.uleb128 0x15
 5412 0675 7000     		.ascii	"p\000"
 5413 0677 01       		.byte	0x1
 5414 0678 F101     		.2byte	0x1f1
 5415 067a AD000000 		.4byte	0xad
 5416 067e 02       		.uleb128 0x2
 5417 067f 91       		.byte	0x91
 5418 0680 72       		.sleb128 -14
 5419 0681 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 120


 5420 0682 1A       		.uleb128 0x1a
 5421 0683 14050000 		.4byte	.LASF141
 5422 0687 01       		.byte	0x1
 5423 0688 0302     		.2byte	0x203
 5424 068a 00000000 		.4byte	.LFB51
 5425 068e 1C000000 		.4byte	.LFE51-.LFB51
 5426 0692 01       		.uleb128 0x1
 5427 0693 9C       		.byte	0x9c
 5428 0694 13       		.uleb128 0x13
 5429 0695 070E0000 		.4byte	.LASF142
 5430 0699 01       		.byte	0x1
 5431 069a 1202     		.2byte	0x212
 5432 069c 00000000 		.4byte	.LFB52
 5433 06a0 96000000 		.4byte	.LFE52-.LFB52
 5434 06a4 01       		.uleb128 0x1
 5435 06a5 9C       		.byte	0x9c
 5436 06a6 D4060000 		.4byte	0x6d4
 5437 06aa 15       		.uleb128 0x15
 5438 06ab 7800     		.ascii	"x\000"
 5439 06ad 01       		.byte	0x1
 5440 06ae 1202     		.2byte	0x212
 5441 06b0 A2000000 		.4byte	0xa2
 5442 06b4 02       		.uleb128 0x2
 5443 06b5 91       		.byte	0x91
 5444 06b6 6E       		.sleb128 -18
 5445 06b7 15       		.uleb128 0x15
 5446 06b8 7900     		.ascii	"y\000"
 5447 06ba 01       		.byte	0x1
 5448 06bb 1202     		.2byte	0x212
 5449 06bd A2000000 		.4byte	0xa2
 5450 06c1 02       		.uleb128 0x2
 5451 06c2 91       		.byte	0x91
 5452 06c3 6C       		.sleb128 -20
 5453 06c4 16       		.uleb128 0x16
 5454 06c5 5F070000 		.4byte	.LASF143
 5455 06c9 01       		.byte	0x1
 5456 06ca 1202     		.2byte	0x212
 5457 06cc AD000000 		.4byte	0xad
 5458 06d0 02       		.uleb128 0x2
 5459 06d1 91       		.byte	0x91
 5460 06d2 6A       		.sleb128 -22
 5461 06d3 00       		.byte	0
 5462 06d4 13       		.uleb128 0x13
 5463 06d5 F6020000 		.4byte	.LASF144
 5464 06d9 01       		.byte	0x1
 5465 06da 2F02     		.2byte	0x22f
 5466 06dc 00000000 		.4byte	.LFB53
 5467 06e0 38010000 		.4byte	.LFE53-.LFB53
 5468 06e4 01       		.uleb128 0x1
 5469 06e5 9C       		.byte	0x9c
 5470 06e6 32070000 		.4byte	0x732
 5471 06ea 15       		.uleb128 0x15
 5472 06eb 783000   		.ascii	"x0\000"
 5473 06ee 01       		.byte	0x1
 5474 06ef 2F02     		.2byte	0x22f
 5475 06f1 A2000000 		.4byte	0xa2
 5476 06f5 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 121


 5477 06f6 91       		.byte	0x91
 5478 06f7 6E       		.sleb128 -18
 5479 06f8 15       		.uleb128 0x15
 5480 06f9 793000   		.ascii	"y0\000"
 5481 06fc 01       		.byte	0x1
 5482 06fd 2F02     		.2byte	0x22f
 5483 06ff A2000000 		.4byte	0xa2
 5484 0703 02       		.uleb128 0x2
 5485 0704 91       		.byte	0x91
 5486 0705 6C       		.sleb128 -20
 5487 0706 15       		.uleb128 0x15
 5488 0707 783100   		.ascii	"x1\000"
 5489 070a 01       		.byte	0x1
 5490 070b 2F02     		.2byte	0x22f
 5491 070d A2000000 		.4byte	0xa2
 5492 0711 02       		.uleb128 0x2
 5493 0712 91       		.byte	0x91
 5494 0713 6A       		.sleb128 -22
 5495 0714 15       		.uleb128 0x15
 5496 0715 793100   		.ascii	"y1\000"
 5497 0718 01       		.byte	0x1
 5498 0719 2F02     		.2byte	0x22f
 5499 071b A2000000 		.4byte	0xa2
 5500 071f 02       		.uleb128 0x2
 5501 0720 91       		.byte	0x91
 5502 0721 68       		.sleb128 -24
 5503 0722 16       		.uleb128 0x16
 5504 0723 5F070000 		.4byte	.LASF143
 5505 0727 01       		.byte	0x1
 5506 0728 2F02     		.2byte	0x22f
 5507 072a AD000000 		.4byte	0xad
 5508 072e 02       		.uleb128 0x2
 5509 072f 91       		.byte	0x91
 5510 0730 00       		.sleb128 0
 5511 0731 00       		.byte	0
 5512 0732 13       		.uleb128 0x13
 5513 0733 BA030000 		.4byte	.LASF145
 5514 0737 01       		.byte	0x1
 5515 0738 5E02     		.2byte	0x25e
 5516 073a 00000000 		.4byte	.LFB54
 5517 073e 5A000000 		.4byte	.LFE54-.LFB54
 5518 0742 01       		.uleb128 0x1
 5519 0743 9C       		.byte	0x9c
 5520 0744 7F070000 		.4byte	0x77f
 5521 0748 15       		.uleb128 0x15
 5522 0749 7800     		.ascii	"x\000"
 5523 074b 01       		.byte	0x1
 5524 074c 5E02     		.2byte	0x25e
 5525 074e A2000000 		.4byte	0xa2
 5526 0752 02       		.uleb128 0x2
 5527 0753 91       		.byte	0x91
 5528 0754 6E       		.sleb128 -18
 5529 0755 15       		.uleb128 0x15
 5530 0756 7900     		.ascii	"y\000"
 5531 0758 01       		.byte	0x1
 5532 0759 5E02     		.2byte	0x25e
 5533 075b A2000000 		.4byte	0xa2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 122


 5534 075f 02       		.uleb128 0x2
 5535 0760 91       		.byte	0x91
 5536 0761 6C       		.sleb128 -20
 5537 0762 15       		.uleb128 0x15
 5538 0763 6800     		.ascii	"h\000"
 5539 0765 01       		.byte	0x1
 5540 0766 5E02     		.2byte	0x25e
 5541 0768 A2000000 		.4byte	0xa2
 5542 076c 02       		.uleb128 0x2
 5543 076d 91       		.byte	0x91
 5544 076e 6A       		.sleb128 -22
 5545 076f 16       		.uleb128 0x16
 5546 0770 5F070000 		.4byte	.LASF143
 5547 0774 01       		.byte	0x1
 5548 0775 5E02     		.2byte	0x25e
 5549 0777 AD000000 		.4byte	0xad
 5550 077b 02       		.uleb128 0x2
 5551 077c 91       		.byte	0x91
 5552 077d 68       		.sleb128 -24
 5553 077e 00       		.byte	0
 5554 077f 13       		.uleb128 0x13
 5555 0780 27080000 		.4byte	.LASF146
 5556 0784 01       		.byte	0x1
 5557 0785 6802     		.2byte	0x268
 5558 0787 00000000 		.4byte	.LFB55
 5559 078b 5A000000 		.4byte	.LFE55-.LFB55
 5560 078f 01       		.uleb128 0x1
 5561 0790 9C       		.byte	0x9c
 5562 0791 CC070000 		.4byte	0x7cc
 5563 0795 15       		.uleb128 0x15
 5564 0796 7800     		.ascii	"x\000"
 5565 0798 01       		.byte	0x1
 5566 0799 6802     		.2byte	0x268
 5567 079b A2000000 		.4byte	0xa2
 5568 079f 02       		.uleb128 0x2
 5569 07a0 91       		.byte	0x91
 5570 07a1 6E       		.sleb128 -18
 5571 07a2 15       		.uleb128 0x15
 5572 07a3 7900     		.ascii	"y\000"
 5573 07a5 01       		.byte	0x1
 5574 07a6 6802     		.2byte	0x268
 5575 07a8 A2000000 		.4byte	0xa2
 5576 07ac 02       		.uleb128 0x2
 5577 07ad 91       		.byte	0x91
 5578 07ae 6C       		.sleb128 -20
 5579 07af 15       		.uleb128 0x15
 5580 07b0 7700     		.ascii	"w\000"
 5581 07b2 01       		.byte	0x1
 5582 07b3 6802     		.2byte	0x268
 5583 07b5 A2000000 		.4byte	0xa2
 5584 07b9 02       		.uleb128 0x2
 5585 07ba 91       		.byte	0x91
 5586 07bb 6A       		.sleb128 -22
 5587 07bc 16       		.uleb128 0x16
 5588 07bd 5F070000 		.4byte	.LASF143
 5589 07c1 01       		.byte	0x1
 5590 07c2 6802     		.2byte	0x268
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 123


 5591 07c4 AD000000 		.4byte	0xad
 5592 07c8 02       		.uleb128 0x2
 5593 07c9 91       		.byte	0x91
 5594 07ca 68       		.sleb128 -24
 5595 07cb 00       		.byte	0
 5596 07cc 13       		.uleb128 0x13
 5597 07cd 110E0000 		.4byte	.LASF147
 5598 07d1 01       		.byte	0x1
 5599 07d2 7802     		.2byte	0x278
 5600 07d4 00000000 		.4byte	.LFB56
 5601 07d8 6A000000 		.4byte	.LFE56-.LFB56
 5602 07dc 01       		.uleb128 0x1
 5603 07dd 9C       		.byte	0x9c
 5604 07de 26080000 		.4byte	0x826
 5605 07e2 15       		.uleb128 0x15
 5606 07e3 7800     		.ascii	"x\000"
 5607 07e5 01       		.byte	0x1
 5608 07e6 7802     		.2byte	0x278
 5609 07e8 A2000000 		.4byte	0xa2
 5610 07ec 02       		.uleb128 0x2
 5611 07ed 91       		.byte	0x91
 5612 07ee 6E       		.sleb128 -18
 5613 07ef 15       		.uleb128 0x15
 5614 07f0 7900     		.ascii	"y\000"
 5615 07f2 01       		.byte	0x1
 5616 07f3 7802     		.2byte	0x278
 5617 07f5 A2000000 		.4byte	0xa2
 5618 07f9 02       		.uleb128 0x2
 5619 07fa 91       		.byte	0x91
 5620 07fb 6C       		.sleb128 -20
 5621 07fc 15       		.uleb128 0x15
 5622 07fd 7700     		.ascii	"w\000"
 5623 07ff 01       		.byte	0x1
 5624 0800 7802     		.2byte	0x278
 5625 0802 A2000000 		.4byte	0xa2
 5626 0806 02       		.uleb128 0x2
 5627 0807 91       		.byte	0x91
 5628 0808 6A       		.sleb128 -22
 5629 0809 15       		.uleb128 0x15
 5630 080a 6800     		.ascii	"h\000"
 5631 080c 01       		.byte	0x1
 5632 080d 7802     		.2byte	0x278
 5633 080f A2000000 		.4byte	0xa2
 5634 0813 02       		.uleb128 0x2
 5635 0814 91       		.byte	0x91
 5636 0815 68       		.sleb128 -24
 5637 0816 16       		.uleb128 0x16
 5638 0817 5F070000 		.4byte	.LASF143
 5639 081b 01       		.byte	0x1
 5640 081c 7802     		.2byte	0x278
 5641 081e AD000000 		.4byte	0xad
 5642 0822 02       		.uleb128 0x2
 5643 0823 91       		.byte	0x91
 5644 0824 00       		.sleb128 0
 5645 0825 00       		.byte	0
 5646 0826 13       		.uleb128 0x13
 5647 0827 650F0000 		.4byte	.LASF148
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 124


 5648 082b 01       		.byte	0x1
 5649 082c 8802     		.2byte	0x288
 5650 082e 00000000 		.4byte	.LFB57
 5651 0832 6A000000 		.4byte	.LFE57-.LFB57
 5652 0836 01       		.uleb128 0x1
 5653 0837 9C       		.byte	0x9c
 5654 0838 80080000 		.4byte	0x880
 5655 083c 15       		.uleb128 0x15
 5656 083d 7800     		.ascii	"x\000"
 5657 083f 01       		.byte	0x1
 5658 0840 8802     		.2byte	0x288
 5659 0842 A2000000 		.4byte	0xa2
 5660 0846 02       		.uleb128 0x2
 5661 0847 91       		.byte	0x91
 5662 0848 6E       		.sleb128 -18
 5663 0849 15       		.uleb128 0x15
 5664 084a 7900     		.ascii	"y\000"
 5665 084c 01       		.byte	0x1
 5666 084d 8802     		.2byte	0x288
 5667 084f A2000000 		.4byte	0xa2
 5668 0853 02       		.uleb128 0x2
 5669 0854 91       		.byte	0x91
 5670 0855 6C       		.sleb128 -20
 5671 0856 15       		.uleb128 0x15
 5672 0857 7700     		.ascii	"w\000"
 5673 0859 01       		.byte	0x1
 5674 085a 8802     		.2byte	0x288
 5675 085c A2000000 		.4byte	0xa2
 5676 0860 02       		.uleb128 0x2
 5677 0861 91       		.byte	0x91
 5678 0862 6A       		.sleb128 -22
 5679 0863 15       		.uleb128 0x15
 5680 0864 6800     		.ascii	"h\000"
 5681 0866 01       		.byte	0x1
 5682 0867 8802     		.2byte	0x288
 5683 0869 A2000000 		.4byte	0xa2
 5684 086d 02       		.uleb128 0x2
 5685 086e 91       		.byte	0x91
 5686 086f 68       		.sleb128 -24
 5687 0870 16       		.uleb128 0x16
 5688 0871 5F070000 		.4byte	.LASF143
 5689 0875 01       		.byte	0x1
 5690 0876 8802     		.2byte	0x288
 5691 0878 AD000000 		.4byte	0xad
 5692 087c 02       		.uleb128 0x2
 5693 087d 91       		.byte	0x91
 5694 087e 00       		.sleb128 0
 5695 087f 00       		.byte	0
 5696 0880 13       		.uleb128 0x13
 5697 0881 860A0000 		.4byte	.LASF149
 5698 0885 01       		.byte	0x1
 5699 0886 9402     		.2byte	0x294
 5700 0888 00000000 		.4byte	.LFB58
 5701 088c 44000000 		.4byte	.LFE58-.LFB58
 5702 0890 01       		.uleb128 0x1
 5703 0891 9C       		.byte	0x9c
 5704 0892 A6080000 		.4byte	0x8a6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 125


 5705 0896 16       		.uleb128 0x16
 5706 0897 5F070000 		.4byte	.LASF143
 5707 089b 01       		.byte	0x1
 5708 089c 9402     		.2byte	0x294
 5709 089e AD000000 		.4byte	0xad
 5710 08a2 02       		.uleb128 0x2
 5711 08a3 91       		.byte	0x91
 5712 08a4 76       		.sleb128 -10
 5713 08a5 00       		.byte	0
 5714 08a6 13       		.uleb128 0x13
 5715 08a7 98090000 		.4byte	.LASF150
 5716 08ab 01       		.byte	0x1
 5717 08ac A302     		.2byte	0x2a3
 5718 08ae 00000000 		.4byte	.LFB59
 5719 08b2 4E000000 		.4byte	.LFE59-.LFB59
 5720 08b6 01       		.uleb128 0x1
 5721 08b7 9C       		.byte	0x9c
 5722 08b8 F5080000 		.4byte	0x8f5
 5723 08bc 15       		.uleb128 0x15
 5724 08bd 783000   		.ascii	"x0\000"
 5725 08c0 01       		.byte	0x1
 5726 08c1 A302     		.2byte	0x2a3
 5727 08c3 A2000000 		.4byte	0xa2
 5728 08c7 02       		.uleb128 0x2
 5729 08c8 91       		.byte	0x91
 5730 08c9 6E       		.sleb128 -18
 5731 08ca 15       		.uleb128 0x15
 5732 08cb 793000   		.ascii	"y0\000"
 5733 08ce 01       		.byte	0x1
 5734 08cf A302     		.2byte	0x2a3
 5735 08d1 A2000000 		.4byte	0xa2
 5736 08d5 02       		.uleb128 0x2
 5737 08d6 91       		.byte	0x91
 5738 08d7 6C       		.sleb128 -20
 5739 08d8 15       		.uleb128 0x15
 5740 08d9 7200     		.ascii	"r\000"
 5741 08db 01       		.byte	0x1
 5742 08dc A302     		.2byte	0x2a3
 5743 08de A2000000 		.4byte	0xa2
 5744 08e2 02       		.uleb128 0x2
 5745 08e3 91       		.byte	0x91
 5746 08e4 6A       		.sleb128 -22
 5747 08e5 16       		.uleb128 0x16
 5748 08e6 5F070000 		.4byte	.LASF143
 5749 08ea 01       		.byte	0x1
 5750 08eb A302     		.2byte	0x2a3
 5751 08ed AD000000 		.4byte	0xad
 5752 08f1 02       		.uleb128 0x2
 5753 08f2 91       		.byte	0x91
 5754 08f3 68       		.sleb128 -24
 5755 08f4 00       		.byte	0
 5756 08f5 13       		.uleb128 0x13
 5757 08f6 23030000 		.4byte	.LASF151
 5758 08fa 01       		.byte	0x1
 5759 08fb B202     		.2byte	0x2b2
 5760 08fd 00000000 		.4byte	.LFB60
 5761 0901 4E000000 		.4byte	.LFE60-.LFB60
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 126


 5762 0905 01       		.uleb128 0x1
 5763 0906 9C       		.byte	0x9c
 5764 0907 44090000 		.4byte	0x944
 5765 090b 15       		.uleb128 0x15
 5766 090c 783000   		.ascii	"x0\000"
 5767 090f 01       		.byte	0x1
 5768 0910 B202     		.2byte	0x2b2
 5769 0912 A2000000 		.4byte	0xa2
 5770 0916 02       		.uleb128 0x2
 5771 0917 91       		.byte	0x91
 5772 0918 6E       		.sleb128 -18
 5773 0919 15       		.uleb128 0x15
 5774 091a 793000   		.ascii	"y0\000"
 5775 091d 01       		.byte	0x1
 5776 091e B202     		.2byte	0x2b2
 5777 0920 A2000000 		.4byte	0xa2
 5778 0924 02       		.uleb128 0x2
 5779 0925 91       		.byte	0x91
 5780 0926 6C       		.sleb128 -20
 5781 0927 15       		.uleb128 0x15
 5782 0928 7200     		.ascii	"r\000"
 5783 092a 01       		.byte	0x1
 5784 092b B202     		.2byte	0x2b2
 5785 092d A2000000 		.4byte	0xa2
 5786 0931 02       		.uleb128 0x2
 5787 0932 91       		.byte	0x91
 5788 0933 6A       		.sleb128 -22
 5789 0934 16       		.uleb128 0x16
 5790 0935 5F070000 		.4byte	.LASF143
 5791 0939 01       		.byte	0x1
 5792 093a B202     		.2byte	0x2b2
 5793 093c AD000000 		.4byte	0xad
 5794 0940 02       		.uleb128 0x2
 5795 0941 91       		.byte	0x91
 5796 0942 68       		.sleb128 -24
 5797 0943 00       		.byte	0
 5798 0944 13       		.uleb128 0x13
 5799 0945 EA0D0000 		.4byte	.LASF152
 5800 0949 01       		.byte	0x1
 5801 094a C402     		.2byte	0x2c4
 5802 094c 00000000 		.4byte	.LFB61
 5803 0950 6C000000 		.4byte	.LFE61-.LFB61
 5804 0954 01       		.uleb128 0x1
 5805 0955 9C       		.byte	0x9c
 5806 0956 BE090000 		.4byte	0x9be
 5807 095a 15       		.uleb128 0x15
 5808 095b 783000   		.ascii	"x0\000"
 5809 095e 01       		.byte	0x1
 5810 095f C402     		.2byte	0x2c4
 5811 0961 A2000000 		.4byte	0xa2
 5812 0965 02       		.uleb128 0x2
 5813 0966 91       		.byte	0x91
 5814 0967 6E       		.sleb128 -18
 5815 0968 15       		.uleb128 0x15
 5816 0969 793000   		.ascii	"y0\000"
 5817 096c 01       		.byte	0x1
 5818 096d C402     		.2byte	0x2c4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 127


 5819 096f A2000000 		.4byte	0xa2
 5820 0973 02       		.uleb128 0x2
 5821 0974 91       		.byte	0x91
 5822 0975 6C       		.sleb128 -20
 5823 0976 15       		.uleb128 0x15
 5824 0977 783100   		.ascii	"x1\000"
 5825 097a 01       		.byte	0x1
 5826 097b C402     		.2byte	0x2c4
 5827 097d A2000000 		.4byte	0xa2
 5828 0981 02       		.uleb128 0x2
 5829 0982 91       		.byte	0x91
 5830 0983 6A       		.sleb128 -22
 5831 0984 15       		.uleb128 0x15
 5832 0985 793100   		.ascii	"y1\000"
 5833 0988 01       		.byte	0x1
 5834 0989 C402     		.2byte	0x2c4
 5835 098b A2000000 		.4byte	0xa2
 5836 098f 02       		.uleb128 0x2
 5837 0990 91       		.byte	0x91
 5838 0991 68       		.sleb128 -24
 5839 0992 15       		.uleb128 0x15
 5840 0993 783200   		.ascii	"x2\000"
 5841 0996 01       		.byte	0x1
 5842 0997 C402     		.2byte	0x2c4
 5843 0999 A2000000 		.4byte	0xa2
 5844 099d 02       		.uleb128 0x2
 5845 099e 91       		.byte	0x91
 5846 099f 00       		.sleb128 0
 5847 09a0 15       		.uleb128 0x15
 5848 09a1 793200   		.ascii	"y2\000"
 5849 09a4 01       		.byte	0x1
 5850 09a5 C402     		.2byte	0x2c4
 5851 09a7 A2000000 		.4byte	0xa2
 5852 09ab 02       		.uleb128 0x2
 5853 09ac 91       		.byte	0x91
 5854 09ad 04       		.sleb128 4
 5855 09ae 16       		.uleb128 0x16
 5856 09af 5F070000 		.4byte	.LASF143
 5857 09b3 01       		.byte	0x1
 5858 09b4 C402     		.2byte	0x2c4
 5859 09b6 AD000000 		.4byte	0xad
 5860 09ba 02       		.uleb128 0x2
 5861 09bb 91       		.byte	0x91
 5862 09bc 08       		.sleb128 8
 5863 09bd 00       		.byte	0
 5864 09be 13       		.uleb128 0x13
 5865 09bf 16030000 		.4byte	.LASF153
 5866 09c3 01       		.byte	0x1
 5867 09c4 D602     		.2byte	0x2d6
 5868 09c6 00000000 		.4byte	.LFB62
 5869 09ca 6C000000 		.4byte	.LFE62-.LFB62
 5870 09ce 01       		.uleb128 0x1
 5871 09cf 9C       		.byte	0x9c
 5872 09d0 380A0000 		.4byte	0xa38
 5873 09d4 15       		.uleb128 0x15
 5874 09d5 783000   		.ascii	"x0\000"
 5875 09d8 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 128


 5876 09d9 D602     		.2byte	0x2d6
 5877 09db A2000000 		.4byte	0xa2
 5878 09df 02       		.uleb128 0x2
 5879 09e0 91       		.byte	0x91
 5880 09e1 6E       		.sleb128 -18
 5881 09e2 15       		.uleb128 0x15
 5882 09e3 793000   		.ascii	"y0\000"
 5883 09e6 01       		.byte	0x1
 5884 09e7 D602     		.2byte	0x2d6
 5885 09e9 A2000000 		.4byte	0xa2
 5886 09ed 02       		.uleb128 0x2
 5887 09ee 91       		.byte	0x91
 5888 09ef 6C       		.sleb128 -20
 5889 09f0 15       		.uleb128 0x15
 5890 09f1 783100   		.ascii	"x1\000"
 5891 09f4 01       		.byte	0x1
 5892 09f5 D602     		.2byte	0x2d6
 5893 09f7 A2000000 		.4byte	0xa2
 5894 09fb 02       		.uleb128 0x2
 5895 09fc 91       		.byte	0x91
 5896 09fd 6A       		.sleb128 -22
 5897 09fe 15       		.uleb128 0x15
 5898 09ff 793100   		.ascii	"y1\000"
 5899 0a02 01       		.byte	0x1
 5900 0a03 D602     		.2byte	0x2d6
 5901 0a05 A2000000 		.4byte	0xa2
 5902 0a09 02       		.uleb128 0x2
 5903 0a0a 91       		.byte	0x91
 5904 0a0b 68       		.sleb128 -24
 5905 0a0c 15       		.uleb128 0x15
 5906 0a0d 783200   		.ascii	"x2\000"
 5907 0a10 01       		.byte	0x1
 5908 0a11 D602     		.2byte	0x2d6
 5909 0a13 A2000000 		.4byte	0xa2
 5910 0a17 02       		.uleb128 0x2
 5911 0a18 91       		.byte	0x91
 5912 0a19 00       		.sleb128 0
 5913 0a1a 15       		.uleb128 0x15
 5914 0a1b 793200   		.ascii	"y2\000"
 5915 0a1e 01       		.byte	0x1
 5916 0a1f D602     		.2byte	0x2d6
 5917 0a21 A2000000 		.4byte	0xa2
 5918 0a25 02       		.uleb128 0x2
 5919 0a26 91       		.byte	0x91
 5920 0a27 04       		.sleb128 4
 5921 0a28 16       		.uleb128 0x16
 5922 0a29 5F070000 		.4byte	.LASF143
 5923 0a2d 01       		.byte	0x1
 5924 0a2e D602     		.2byte	0x2d6
 5925 0a30 AD000000 		.4byte	0xad
 5926 0a34 02       		.uleb128 0x2
 5927 0a35 91       		.byte	0x91
 5928 0a36 08       		.sleb128 8
 5929 0a37 00       		.byte	0
 5930 0a38 13       		.uleb128 0x13
 5931 0a39 53070000 		.4byte	.LASF154
 5932 0a3d 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 129


 5933 0a3e E602     		.2byte	0x2e6
 5934 0a40 00000000 		.4byte	.LFB63
 5935 0a44 58000000 		.4byte	.LFE63-.LFB63
 5936 0a48 01       		.uleb128 0x1
 5937 0a49 9C       		.byte	0x9c
 5938 0a4a 9A0A0000 		.4byte	0xa9a
 5939 0a4e 16       		.uleb128 0x16
 5940 0a4f 86010000 		.4byte	.LASF155
 5941 0a53 01       		.byte	0x1
 5942 0a54 E602     		.2byte	0x2e6
 5943 0a56 A2000000 		.4byte	0xa2
 5944 0a5a 02       		.uleb128 0x2
 5945 0a5b 91       		.byte	0x91
 5946 0a5c 6E       		.sleb128 -18
 5947 0a5d 16       		.uleb128 0x16
 5948 0a5e D4090000 		.4byte	.LASF156
 5949 0a62 01       		.byte	0x1
 5950 0a63 E602     		.2byte	0x2e6
 5951 0a65 A2000000 		.4byte	0xa2
 5952 0a69 02       		.uleb128 0x2
 5953 0a6a 91       		.byte	0x91
 5954 0a6b 6C       		.sleb128 -20
 5955 0a6c 16       		.uleb128 0x16
 5956 0a6d 7B020000 		.4byte	.LASF157
 5957 0a71 01       		.byte	0x1
 5958 0a72 E602     		.2byte	0x2e6
 5959 0a74 A2000000 		.4byte	0xa2
 5960 0a78 02       		.uleb128 0x2
 5961 0a79 91       		.byte	0x91
 5962 0a7a 6A       		.sleb128 -22
 5963 0a7b 16       		.uleb128 0x16
 5964 0a7c 390A0000 		.4byte	.LASF158
 5965 0a80 01       		.byte	0x1
 5966 0a81 E602     		.2byte	0x2e6
 5967 0a83 A2000000 		.4byte	0xa2
 5968 0a87 02       		.uleb128 0x2
 5969 0a88 91       		.byte	0x91
 5970 0a89 68       		.sleb128 -24
 5971 0a8a 16       		.uleb128 0x16
 5972 0a8b 5F070000 		.4byte	.LASF143
 5973 0a8f 01       		.byte	0x1
 5974 0a90 E602     		.2byte	0x2e6
 5975 0a92 AD000000 		.4byte	0xad
 5976 0a96 02       		.uleb128 0x2
 5977 0a97 91       		.byte	0x91
 5978 0a98 00       		.sleb128 0
 5979 0a99 00       		.byte	0
 5980 0a9a 13       		.uleb128 0x13
 5981 0a9b 5E030000 		.4byte	.LASF159
 5982 0a9f 01       		.byte	0x1
 5983 0aa0 F602     		.2byte	0x2f6
 5984 0aa2 00000000 		.4byte	.LFB64
 5985 0aa6 58000000 		.4byte	.LFE64-.LFB64
 5986 0aaa 01       		.uleb128 0x1
 5987 0aab 9C       		.byte	0x9c
 5988 0aac FC0A0000 		.4byte	0xafc
 5989 0ab0 16       		.uleb128 0x16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 130


 5990 0ab1 86010000 		.4byte	.LASF155
 5991 0ab5 01       		.byte	0x1
 5992 0ab6 F602     		.2byte	0x2f6
 5993 0ab8 A2000000 		.4byte	0xa2
 5994 0abc 02       		.uleb128 0x2
 5995 0abd 91       		.byte	0x91
 5996 0abe 6E       		.sleb128 -18
 5997 0abf 16       		.uleb128 0x16
 5998 0ac0 D4090000 		.4byte	.LASF156
 5999 0ac4 01       		.byte	0x1
 6000 0ac5 F602     		.2byte	0x2f6
 6001 0ac7 A2000000 		.4byte	0xa2
 6002 0acb 02       		.uleb128 0x2
 6003 0acc 91       		.byte	0x91
 6004 0acd 6C       		.sleb128 -20
 6005 0ace 16       		.uleb128 0x16
 6006 0acf 7B020000 		.4byte	.LASF157
 6007 0ad3 01       		.byte	0x1
 6008 0ad4 F602     		.2byte	0x2f6
 6009 0ad6 A2000000 		.4byte	0xa2
 6010 0ada 02       		.uleb128 0x2
 6011 0adb 91       		.byte	0x91
 6012 0adc 6A       		.sleb128 -22
 6013 0add 16       		.uleb128 0x16
 6014 0ade 390A0000 		.4byte	.LASF158
 6015 0ae2 01       		.byte	0x1
 6016 0ae3 F602     		.2byte	0x2f6
 6017 0ae5 A2000000 		.4byte	0xa2
 6018 0ae9 02       		.uleb128 0x2
 6019 0aea 91       		.byte	0x91
 6020 0aeb 68       		.sleb128 -24
 6021 0aec 16       		.uleb128 0x16
 6022 0aed 5F070000 		.4byte	.LASF143
 6023 0af1 01       		.byte	0x1
 6024 0af2 F602     		.2byte	0x2f6
 6025 0af4 AD000000 		.4byte	0xad
 6026 0af8 02       		.uleb128 0x2
 6027 0af9 91       		.byte	0x91
 6028 0afa 00       		.sleb128 0
 6029 0afb 00       		.byte	0
 6030 0afc 13       		.uleb128 0x13
 6031 0afd 60040000 		.4byte	.LASF160
 6032 0b01 01       		.byte	0x1
 6033 0b02 0B03     		.2byte	0x30b
 6034 0b04 00000000 		.4byte	.LFB65
 6035 0b08 60000000 		.4byte	.LFE65-.LFB65
 6036 0b0c 01       		.uleb128 0x1
 6037 0b0d 9C       		.byte	0x9c
 6038 0b0e 6D0B0000 		.4byte	0xb6d
 6039 0b12 16       		.uleb128 0x16
 6040 0b13 86010000 		.4byte	.LASF155
 6041 0b17 01       		.byte	0x1
 6042 0b18 0B03     		.2byte	0x30b
 6043 0b1a A2000000 		.4byte	0xa2
 6044 0b1e 02       		.uleb128 0x2
 6045 0b1f 91       		.byte	0x91
 6046 0b20 6E       		.sleb128 -18
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 131


 6047 0b21 16       		.uleb128 0x16
 6048 0b22 D4090000 		.4byte	.LASF156
 6049 0b26 01       		.byte	0x1
 6050 0b27 0B03     		.2byte	0x30b
 6051 0b29 A2000000 		.4byte	0xa2
 6052 0b2d 02       		.uleb128 0x2
 6053 0b2e 91       		.byte	0x91
 6054 0b2f 6C       		.sleb128 -20
 6055 0b30 16       		.uleb128 0x16
 6056 0b31 7B020000 		.4byte	.LASF157
 6057 0b35 01       		.byte	0x1
 6058 0b36 0B03     		.2byte	0x30b
 6059 0b38 A2000000 		.4byte	0xa2
 6060 0b3c 02       		.uleb128 0x2
 6061 0b3d 91       		.byte	0x91
 6062 0b3e 6A       		.sleb128 -22
 6063 0b3f 16       		.uleb128 0x16
 6064 0b40 390A0000 		.4byte	.LASF158
 6065 0b44 01       		.byte	0x1
 6066 0b45 0B03     		.2byte	0x30b
 6067 0b47 A2000000 		.4byte	0xa2
 6068 0b4b 02       		.uleb128 0x2
 6069 0b4c 91       		.byte	0x91
 6070 0b4d 68       		.sleb128 -24
 6071 0b4e 16       		.uleb128 0x16
 6072 0b4f F1040000 		.4byte	.LASF161
 6073 0b53 01       		.byte	0x1
 6074 0b54 0B03     		.2byte	0x30b
 6075 0b56 97000000 		.4byte	0x97
 6076 0b5a 02       		.uleb128 0x2
 6077 0b5b 91       		.byte	0x91
 6078 0b5c 00       		.sleb128 0
 6079 0b5d 16       		.uleb128 0x16
 6080 0b5e 5F070000 		.4byte	.LASF143
 6081 0b62 01       		.byte	0x1
 6082 0b63 0B03     		.2byte	0x30b
 6083 0b65 AD000000 		.4byte	0xad
 6084 0b69 02       		.uleb128 0x2
 6085 0b6a 91       		.byte	0x91
 6086 0b6b 04       		.sleb128 4
 6087 0b6c 00       		.byte	0
 6088 0b6d 13       		.uleb128 0x13
 6089 0b6e D2070000 		.4byte	.LASF162
 6090 0b72 01       		.byte	0x1
 6091 0b73 2003     		.2byte	0x320
 6092 0b75 00000000 		.4byte	.LFB66
 6093 0b79 60000000 		.4byte	.LFE66-.LFB66
 6094 0b7d 01       		.uleb128 0x1
 6095 0b7e 9C       		.byte	0x9c
 6096 0b7f DE0B0000 		.4byte	0xbde
 6097 0b83 16       		.uleb128 0x16
 6098 0b84 86010000 		.4byte	.LASF155
 6099 0b88 01       		.byte	0x1
 6100 0b89 2003     		.2byte	0x320
 6101 0b8b A2000000 		.4byte	0xa2
 6102 0b8f 02       		.uleb128 0x2
 6103 0b90 91       		.byte	0x91
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 132


 6104 0b91 6E       		.sleb128 -18
 6105 0b92 16       		.uleb128 0x16
 6106 0b93 D4090000 		.4byte	.LASF156
 6107 0b97 01       		.byte	0x1
 6108 0b98 2003     		.2byte	0x320
 6109 0b9a A2000000 		.4byte	0xa2
 6110 0b9e 02       		.uleb128 0x2
 6111 0b9f 91       		.byte	0x91
 6112 0ba0 6C       		.sleb128 -20
 6113 0ba1 16       		.uleb128 0x16
 6114 0ba2 7B020000 		.4byte	.LASF157
 6115 0ba6 01       		.byte	0x1
 6116 0ba7 2003     		.2byte	0x320
 6117 0ba9 A2000000 		.4byte	0xa2
 6118 0bad 02       		.uleb128 0x2
 6119 0bae 91       		.byte	0x91
 6120 0baf 6A       		.sleb128 -22
 6121 0bb0 16       		.uleb128 0x16
 6122 0bb1 390A0000 		.4byte	.LASF158
 6123 0bb5 01       		.byte	0x1
 6124 0bb6 2003     		.2byte	0x320
 6125 0bb8 A2000000 		.4byte	0xa2
 6126 0bbc 02       		.uleb128 0x2
 6127 0bbd 91       		.byte	0x91
 6128 0bbe 68       		.sleb128 -24
 6129 0bbf 16       		.uleb128 0x16
 6130 0bc0 F1040000 		.4byte	.LASF161
 6131 0bc4 01       		.byte	0x1
 6132 0bc5 2003     		.2byte	0x320
 6133 0bc7 97000000 		.4byte	0x97
 6134 0bcb 02       		.uleb128 0x2
 6135 0bcc 91       		.byte	0x91
 6136 0bcd 00       		.sleb128 0
 6137 0bce 16       		.uleb128 0x16
 6138 0bcf 5F070000 		.4byte	.LASF143
 6139 0bd3 01       		.byte	0x1
 6140 0bd4 2003     		.2byte	0x320
 6141 0bd6 AD000000 		.4byte	0xad
 6142 0bda 02       		.uleb128 0x2
 6143 0bdb 91       		.byte	0x91
 6144 0bdc 04       		.sleb128 4
 6145 0bdd 00       		.byte	0
 6146 0bde 13       		.uleb128 0x13
 6147 0bdf 6D0E0000 		.4byte	.LASF163
 6148 0be3 01       		.byte	0x1
 6149 0be4 2A03     		.2byte	0x32a
 6150 0be6 00000000 		.4byte	.LFB67
 6151 0bea 02010000 		.4byte	.LFE67-.LFB67
 6152 0bee 01       		.uleb128 0x1
 6153 0bef 9C       		.byte	0x9c
 6154 0bf0 3C0C0000 		.4byte	0xc3c
 6155 0bf4 15       		.uleb128 0x15
 6156 0bf5 783000   		.ascii	"x0\000"
 6157 0bf8 01       		.byte	0x1
 6158 0bf9 2A03     		.2byte	0x32a
 6159 0bfb A2000000 		.4byte	0xa2
 6160 0bff 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 133


 6161 0c00 91       		.byte	0x91
 6162 0c01 6E       		.sleb128 -18
 6163 0c02 15       		.uleb128 0x15
 6164 0c03 793000   		.ascii	"y0\000"
 6165 0c06 01       		.byte	0x1
 6166 0c07 2A03     		.2byte	0x32a
 6167 0c09 A2000000 		.4byte	0xa2
 6168 0c0d 02       		.uleb128 0x2
 6169 0c0e 91       		.byte	0x91
 6170 0c0f 6C       		.sleb128 -20
 6171 0c10 15       		.uleb128 0x15
 6172 0c11 7200     		.ascii	"r\000"
 6173 0c13 01       		.byte	0x1
 6174 0c14 2A03     		.2byte	0x32a
 6175 0c16 A2000000 		.4byte	0xa2
 6176 0c1a 02       		.uleb128 0x2
 6177 0c1b 91       		.byte	0x91
 6178 0c1c 6A       		.sleb128 -22
 6179 0c1d 16       		.uleb128 0x16
 6180 0c1e 5F070000 		.4byte	.LASF143
 6181 0c22 01       		.byte	0x1
 6182 0c23 2A03     		.2byte	0x32a
 6183 0c25 AD000000 		.4byte	0xad
 6184 0c29 02       		.uleb128 0x2
 6185 0c2a 91       		.byte	0x91
 6186 0c2b 68       		.sleb128 -24
 6187 0c2c 16       		.uleb128 0x16
 6188 0c2d DA020000 		.4byte	.LASF164
 6189 0c31 01       		.byte	0x1
 6190 0c32 2A03     		.2byte	0x32a
 6191 0c34 39030000 		.4byte	0x339
 6192 0c38 02       		.uleb128 0x2
 6193 0c39 91       		.byte	0x91
 6194 0c3a 00       		.sleb128 0
 6195 0c3b 00       		.byte	0
 6196 0c3c 13       		.uleb128 0x13
 6197 0c3d AE000000 		.4byte	.LASF165
 6198 0c41 01       		.byte	0x1
 6199 0c42 5803     		.2byte	0x358
 6200 0c44 00000000 		.4byte	.LFB68
 6201 0c48 4A010000 		.4byte	.LFE68-.LFB68
 6202 0c4c 01       		.uleb128 0x1
 6203 0c4d 9C       		.byte	0x9c
 6204 0c4e A50C0000 		.4byte	0xca5
 6205 0c52 15       		.uleb128 0x15
 6206 0c53 7800     		.ascii	"x\000"
 6207 0c55 01       		.byte	0x1
 6208 0c56 5803     		.2byte	0x358
 6209 0c58 A2000000 		.4byte	0xa2
 6210 0c5c 02       		.uleb128 0x2
 6211 0c5d 91       		.byte	0x91
 6212 0c5e 6E       		.sleb128 -18
 6213 0c5f 15       		.uleb128 0x15
 6214 0c60 7900     		.ascii	"y\000"
 6215 0c62 01       		.byte	0x1
 6216 0c63 5803     		.2byte	0x358
 6217 0c65 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 134


 6218 0c69 02       		.uleb128 0x2
 6219 0c6a 91       		.byte	0x91
 6220 0c6b 6C       		.sleb128 -20
 6221 0c6c 15       		.uleb128 0x15
 6222 0c6d 7700     		.ascii	"w\000"
 6223 0c6f 01       		.byte	0x1
 6224 0c70 5803     		.2byte	0x358
 6225 0c72 A2000000 		.4byte	0xa2
 6226 0c76 02       		.uleb128 0x2
 6227 0c77 91       		.byte	0x91
 6228 0c78 6A       		.sleb128 -22
 6229 0c79 15       		.uleb128 0x15
 6230 0c7a 6800     		.ascii	"h\000"
 6231 0c7c 01       		.byte	0x1
 6232 0c7d 5803     		.2byte	0x358
 6233 0c7f A2000000 		.4byte	0xa2
 6234 0c83 02       		.uleb128 0x2
 6235 0c84 91       		.byte	0x91
 6236 0c85 68       		.sleb128 -24
 6237 0c86 16       		.uleb128 0x16
 6238 0c87 5F070000 		.4byte	.LASF143
 6239 0c8b 01       		.byte	0x1
 6240 0c8c 5803     		.2byte	0x358
 6241 0c8e AD000000 		.4byte	0xad
 6242 0c92 02       		.uleb128 0x2
 6243 0c93 91       		.byte	0x91
 6244 0c94 00       		.sleb128 0
 6245 0c95 16       		.uleb128 0x16
 6246 0c96 DA020000 		.4byte	.LASF164
 6247 0c9a 01       		.byte	0x1
 6248 0c9b 5803     		.2byte	0x358
 6249 0c9d 39030000 		.4byte	0x339
 6250 0ca1 02       		.uleb128 0x2
 6251 0ca2 91       		.byte	0x91
 6252 0ca3 04       		.sleb128 4
 6253 0ca4 00       		.byte	0
 6254 0ca5 13       		.uleb128 0x13
 6255 0ca6 910A0000 		.4byte	.LASF166
 6256 0caa 01       		.byte	0x1
 6257 0cab 8F03     		.2byte	0x38f
 6258 0cad 00000000 		.4byte	.LFB69
 6259 0cb1 A6010000 		.4byte	.LFE69-.LFB69
 6260 0cb5 01       		.uleb128 0x1
 6261 0cb6 9C       		.byte	0x9c
 6262 0cb7 2E0D0000 		.4byte	0xd2e
 6263 0cbb 15       		.uleb128 0x15
 6264 0cbc 783000   		.ascii	"x0\000"
 6265 0cbf 01       		.byte	0x1
 6266 0cc0 8F03     		.2byte	0x38f
 6267 0cc2 A2000000 		.4byte	0xa2
 6268 0cc6 02       		.uleb128 0x2
 6269 0cc7 91       		.byte	0x91
 6270 0cc8 6E       		.sleb128 -18
 6271 0cc9 15       		.uleb128 0x15
 6272 0cca 793000   		.ascii	"y0\000"
 6273 0ccd 01       		.byte	0x1
 6274 0cce 8F03     		.2byte	0x38f
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 135


 6275 0cd0 A2000000 		.4byte	0xa2
 6276 0cd4 02       		.uleb128 0x2
 6277 0cd5 91       		.byte	0x91
 6278 0cd6 6C       		.sleb128 -20
 6279 0cd7 15       		.uleb128 0x15
 6280 0cd8 783100   		.ascii	"x1\000"
 6281 0cdb 01       		.byte	0x1
 6282 0cdc 8F03     		.2byte	0x38f
 6283 0cde A2000000 		.4byte	0xa2
 6284 0ce2 02       		.uleb128 0x2
 6285 0ce3 91       		.byte	0x91
 6286 0ce4 6A       		.sleb128 -22
 6287 0ce5 15       		.uleb128 0x15
 6288 0ce6 793100   		.ascii	"y1\000"
 6289 0ce9 01       		.byte	0x1
 6290 0cea 8F03     		.2byte	0x38f
 6291 0cec A2000000 		.4byte	0xa2
 6292 0cf0 02       		.uleb128 0x2
 6293 0cf1 91       		.byte	0x91
 6294 0cf2 68       		.sleb128 -24
 6295 0cf3 15       		.uleb128 0x15
 6296 0cf4 783200   		.ascii	"x2\000"
 6297 0cf7 01       		.byte	0x1
 6298 0cf8 8F03     		.2byte	0x38f
 6299 0cfa A2000000 		.4byte	0xa2
 6300 0cfe 02       		.uleb128 0x2
 6301 0cff 91       		.byte	0x91
 6302 0d00 00       		.sleb128 0
 6303 0d01 15       		.uleb128 0x15
 6304 0d02 793200   		.ascii	"y2\000"
 6305 0d05 01       		.byte	0x1
 6306 0d06 8F03     		.2byte	0x38f
 6307 0d08 A2000000 		.4byte	0xa2
 6308 0d0c 02       		.uleb128 0x2
 6309 0d0d 91       		.byte	0x91
 6310 0d0e 04       		.sleb128 4
 6311 0d0f 16       		.uleb128 0x16
 6312 0d10 5F070000 		.4byte	.LASF143
 6313 0d14 01       		.byte	0x1
 6314 0d15 8F03     		.2byte	0x38f
 6315 0d17 AD000000 		.4byte	0xad
 6316 0d1b 02       		.uleb128 0x2
 6317 0d1c 91       		.byte	0x91
 6318 0d1d 08       		.sleb128 8
 6319 0d1e 16       		.uleb128 0x16
 6320 0d1f DA020000 		.4byte	.LASF164
 6321 0d23 01       		.byte	0x1
 6322 0d24 8F03     		.2byte	0x38f
 6323 0d26 39030000 		.4byte	0x339
 6324 0d2a 02       		.uleb128 0x2
 6325 0d2b 91       		.byte	0x91
 6326 0d2c 0C       		.sleb128 12
 6327 0d2d 00       		.byte	0
 6328 0d2e 13       		.uleb128 0x13
 6329 0d2f A1040000 		.4byte	.LASF167
 6330 0d33 01       		.byte	0x1
 6331 0d34 CB03     		.2byte	0x3cb
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 136


 6332 0d36 00000000 		.4byte	.LFB70
 6333 0d3a 4A010000 		.4byte	.LFE70-.LFB70
 6334 0d3e 01       		.uleb128 0x1
 6335 0d3f 9C       		.byte	0x9c
 6336 0d40 9F0D0000 		.4byte	0xd9f
 6337 0d44 16       		.uleb128 0x16
 6338 0d45 86010000 		.4byte	.LASF155
 6339 0d49 01       		.byte	0x1
 6340 0d4a CB03     		.2byte	0x3cb
 6341 0d4c A2000000 		.4byte	0xa2
 6342 0d50 02       		.uleb128 0x2
 6343 0d51 91       		.byte	0x91
 6344 0d52 6E       		.sleb128 -18
 6345 0d53 16       		.uleb128 0x16
 6346 0d54 D4090000 		.4byte	.LASF156
 6347 0d58 01       		.byte	0x1
 6348 0d59 CB03     		.2byte	0x3cb
 6349 0d5b A2000000 		.4byte	0xa2
 6350 0d5f 02       		.uleb128 0x2
 6351 0d60 91       		.byte	0x91
 6352 0d61 6C       		.sleb128 -20
 6353 0d62 16       		.uleb128 0x16
 6354 0d63 7B020000 		.4byte	.LASF157
 6355 0d67 01       		.byte	0x1
 6356 0d68 CB03     		.2byte	0x3cb
 6357 0d6a A2000000 		.4byte	0xa2
 6358 0d6e 02       		.uleb128 0x2
 6359 0d6f 91       		.byte	0x91
 6360 0d70 6A       		.sleb128 -22
 6361 0d71 16       		.uleb128 0x16
 6362 0d72 390A0000 		.4byte	.LASF158
 6363 0d76 01       		.byte	0x1
 6364 0d77 CB03     		.2byte	0x3cb
 6365 0d79 A2000000 		.4byte	0xa2
 6366 0d7d 02       		.uleb128 0x2
 6367 0d7e 91       		.byte	0x91
 6368 0d7f 68       		.sleb128 -24
 6369 0d80 16       		.uleb128 0x16
 6370 0d81 5F070000 		.4byte	.LASF143
 6371 0d85 01       		.byte	0x1
 6372 0d86 CB03     		.2byte	0x3cb
 6373 0d88 AD000000 		.4byte	0xad
 6374 0d8c 02       		.uleb128 0x2
 6375 0d8d 91       		.byte	0x91
 6376 0d8e 00       		.sleb128 0
 6377 0d8f 16       		.uleb128 0x16
 6378 0d90 DA020000 		.4byte	.LASF164
 6379 0d94 01       		.byte	0x1
 6380 0d95 CB03     		.2byte	0x3cb
 6381 0d97 39030000 		.4byte	0x339
 6382 0d9b 02       		.uleb128 0x2
 6383 0d9c 91       		.byte	0x91
 6384 0d9d 04       		.sleb128 4
 6385 0d9e 00       		.byte	0
 6386 0d9f 13       		.uleb128 0x13
 6387 0da0 02050000 		.4byte	.LASF168
 6388 0da4 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 137


 6389 0da5 FD03     		.2byte	0x3fd
 6390 0da7 00000000 		.4byte	.LFB71
 6391 0dab 7A010000 		.4byte	.LFE71-.LFB71
 6392 0daf 01       		.uleb128 0x1
 6393 0db0 9C       		.byte	0x9c
 6394 0db1 1F0E0000 		.4byte	0xe1f
 6395 0db5 16       		.uleb128 0x16
 6396 0db6 86010000 		.4byte	.LASF155
 6397 0dba 01       		.byte	0x1
 6398 0dbb FD03     		.2byte	0x3fd
 6399 0dbd A2000000 		.4byte	0xa2
 6400 0dc1 02       		.uleb128 0x2
 6401 0dc2 91       		.byte	0x91
 6402 0dc3 6E       		.sleb128 -18
 6403 0dc4 16       		.uleb128 0x16
 6404 0dc5 D4090000 		.4byte	.LASF156
 6405 0dc9 01       		.byte	0x1
 6406 0dca FD03     		.2byte	0x3fd
 6407 0dcc A2000000 		.4byte	0xa2
 6408 0dd0 02       		.uleb128 0x2
 6409 0dd1 91       		.byte	0x91
 6410 0dd2 6C       		.sleb128 -20
 6411 0dd3 16       		.uleb128 0x16
 6412 0dd4 7B020000 		.4byte	.LASF157
 6413 0dd8 01       		.byte	0x1
 6414 0dd9 FD03     		.2byte	0x3fd
 6415 0ddb A2000000 		.4byte	0xa2
 6416 0ddf 02       		.uleb128 0x2
 6417 0de0 91       		.byte	0x91
 6418 0de1 6A       		.sleb128 -22
 6419 0de2 16       		.uleb128 0x16
 6420 0de3 390A0000 		.4byte	.LASF158
 6421 0de7 01       		.byte	0x1
 6422 0de8 FD03     		.2byte	0x3fd
 6423 0dea A2000000 		.4byte	0xa2
 6424 0dee 02       		.uleb128 0x2
 6425 0def 91       		.byte	0x91
 6426 0df0 68       		.sleb128 -24
 6427 0df1 16       		.uleb128 0x16
 6428 0df2 F1040000 		.4byte	.LASF161
 6429 0df6 01       		.byte	0x1
 6430 0df7 FD03     		.2byte	0x3fd
 6431 0df9 97000000 		.4byte	0x97
 6432 0dfd 02       		.uleb128 0x2
 6433 0dfe 91       		.byte	0x91
 6434 0dff 00       		.sleb128 0
 6435 0e00 16       		.uleb128 0x16
 6436 0e01 5F070000 		.4byte	.LASF143
 6437 0e05 01       		.byte	0x1
 6438 0e06 FD03     		.2byte	0x3fd
 6439 0e08 AD000000 		.4byte	0xad
 6440 0e0c 02       		.uleb128 0x2
 6441 0e0d 91       		.byte	0x91
 6442 0e0e 04       		.sleb128 4
 6443 0e0f 16       		.uleb128 0x16
 6444 0e10 DA020000 		.4byte	.LASF164
 6445 0e14 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 138


 6446 0e15 FD03     		.2byte	0x3fd
 6447 0e17 39030000 		.4byte	0x339
 6448 0e1b 02       		.uleb128 0x2
 6449 0e1c 91       		.byte	0x91
 6450 0e1d 08       		.sleb128 8
 6451 0e1e 00       		.byte	0
 6452 0e1f 13       		.uleb128 0x13
 6453 0e20 C7090000 		.4byte	.LASF169
 6454 0e24 01       		.byte	0x1
 6455 0e25 3104     		.2byte	0x431
 6456 0e27 00000000 		.4byte	.LFB72
 6457 0e2b 2E000000 		.4byte	.LFE72-.LFB72
 6458 0e2f 01       		.uleb128 0x1
 6459 0e30 9C       		.byte	0x9c
 6460 0e31 440E0000 		.4byte	0xe44
 6461 0e35 15       		.uleb128 0x15
 6462 0e36 6F6E00   		.ascii	"on\000"
 6463 0e39 01       		.byte	0x1
 6464 0e3a 3104     		.2byte	0x431
 6465 0e3c 2E030000 		.4byte	0x32e
 6466 0e40 02       		.uleb128 0x2
 6467 0e41 91       		.byte	0x91
 6468 0e42 77       		.sleb128 -9
 6469 0e43 00       		.byte	0
 6470 0e44 13       		.uleb128 0x13
 6471 0e45 300D0000 		.4byte	.LASF170
 6472 0e49 01       		.byte	0x1
 6473 0e4a 4304     		.2byte	0x443
 6474 0e4c 00000000 		.4byte	.LFB73
 6475 0e50 20000000 		.4byte	.LFE73-.LFB73
 6476 0e54 01       		.uleb128 0x1
 6477 0e55 9C       		.byte	0x9c
 6478 0e56 680E0000 		.4byte	0xe68
 6479 0e5a 15       		.uleb128 0x15
 6480 0e5b 7000     		.ascii	"p\000"
 6481 0e5d 01       		.byte	0x1
 6482 0e5e 4304     		.2byte	0x443
 6483 0e60 97000000 		.4byte	0x97
 6484 0e64 02       		.uleb128 0x2
 6485 0e65 91       		.byte	0x91
 6486 0e66 77       		.sleb128 -9
 6487 0e67 00       		.byte	0
 6488 0e68 13       		.uleb128 0x13
 6489 0e69 F00A0000 		.4byte	.LASF171
 6490 0e6d 01       		.byte	0x1
 6491 0e6e 5004     		.2byte	0x450
 6492 0e70 00000000 		.4byte	.LFB74
 6493 0e74 20000000 		.4byte	.LFE74-.LFB74
 6494 0e78 01       		.uleb128 0x1
 6495 0e79 9C       		.byte	0x9c
 6496 0e7a 8C0E0000 		.4byte	0xe8c
 6497 0e7e 15       		.uleb128 0x15
 6498 0e7f 7000     		.ascii	"p\000"
 6499 0e81 01       		.byte	0x1
 6500 0e82 5004     		.2byte	0x450
 6501 0e84 97000000 		.4byte	0x97
 6502 0e88 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 139


 6503 0e89 91       		.byte	0x91
 6504 0e8a 77       		.sleb128 -9
 6505 0e8b 00       		.byte	0
 6506 0e8c 13       		.uleb128 0x13
 6507 0e8d 84020000 		.4byte	.LASF172
 6508 0e91 01       		.byte	0x1
 6509 0e92 5904     		.2byte	0x459
 6510 0e94 00000000 		.4byte	.LFB75
 6511 0e98 54000000 		.4byte	.LFE75-.LFB75
 6512 0e9c 01       		.uleb128 0x1
 6513 0e9d 9C       		.byte	0x9c
 6514 0e9e C00E0000 		.4byte	0xec0
 6515 0ea2 15       		.uleb128 0x15
 6516 0ea3 6F6E00   		.ascii	"on\000"
 6517 0ea6 01       		.byte	0x1
 6518 0ea7 5904     		.2byte	0x459
 6519 0ea9 2E030000 		.4byte	0x32e
 6520 0ead 02       		.uleb128 0x2
 6521 0eae 91       		.byte	0x91
 6522 0eaf 77       		.sleb128 -9
 6523 0eb0 16       		.uleb128 0x16
 6524 0eb1 B30E0000 		.4byte	.LASF173
 6525 0eb5 01       		.byte	0x1
 6526 0eb6 5904     		.2byte	0x459
 6527 0eb8 97000000 		.4byte	0x97
 6528 0ebc 02       		.uleb128 0x2
 6529 0ebd 91       		.byte	0x91
 6530 0ebe 76       		.sleb128 -10
 6531 0ebf 00       		.byte	0
 6532 0ec0 13       		.uleb128 0x13
 6533 0ec1 650B0000 		.4byte	.LASF174
 6534 0ec5 01       		.byte	0x1
 6535 0ec6 6B04     		.2byte	0x46b
 6536 0ec8 00000000 		.4byte	.LFB76
 6537 0ecc 54000000 		.4byte	.LFE76-.LFB76
 6538 0ed0 01       		.uleb128 0x1
 6539 0ed1 9C       		.byte	0x9c
 6540 0ed2 F40E0000 		.4byte	0xef4
 6541 0ed6 15       		.uleb128 0x15
 6542 0ed7 6F6E00   		.ascii	"on\000"
 6543 0eda 01       		.byte	0x1
 6544 0edb 6B04     		.2byte	0x46b
 6545 0edd 2E030000 		.4byte	0x32e
 6546 0ee1 02       		.uleb128 0x2
 6547 0ee2 91       		.byte	0x91
 6548 0ee3 77       		.sleb128 -9
 6549 0ee4 16       		.uleb128 0x16
 6550 0ee5 B30E0000 		.4byte	.LASF173
 6551 0ee9 01       		.byte	0x1
 6552 0eea 6B04     		.2byte	0x46b
 6553 0eec 97000000 		.4byte	0x97
 6554 0ef0 02       		.uleb128 0x2
 6555 0ef1 91       		.byte	0x91
 6556 0ef2 76       		.sleb128 -10
 6557 0ef3 00       		.byte	0
 6558 0ef4 13       		.uleb128 0x13
 6559 0ef5 B3080000 		.4byte	.LASF175
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 140


 6560 0ef9 01       		.byte	0x1
 6561 0efa 7804     		.2byte	0x478
 6562 0efc 00000000 		.4byte	.LFB77
 6563 0f00 90000000 		.4byte	.LFE77-.LFB77
 6564 0f04 01       		.uleb128 0x1
 6565 0f05 9C       		.byte	0x9c
 6566 0f06 280F0000 		.4byte	0xf28
 6567 0f0a 15       		.uleb128 0x15
 6568 0f0b 6F6E00   		.ascii	"on\000"
 6569 0f0e 01       		.byte	0x1
 6570 0f0f 7804     		.2byte	0x478
 6571 0f11 2E030000 		.4byte	0x32e
 6572 0f15 02       		.uleb128 0x2
 6573 0f16 91       		.byte	0x91
 6574 0f17 6F       		.sleb128 -17
 6575 0f18 14       		.uleb128 0x14
 6576 0f19 EF020000 		.4byte	.LASF176
 6577 0f1d 01       		.byte	0x1
 6578 0f1e 7A04     		.2byte	0x47a
 6579 0f20 97000000 		.4byte	0x97
 6580 0f24 02       		.uleb128 0x2
 6581 0f25 91       		.byte	0x91
 6582 0f26 77       		.sleb128 -9
 6583 0f27 00       		.byte	0
 6584 0f28 1B       		.uleb128 0x1b
 6585 0f29 230A0000 		.4byte	.LASF177
 6586 0f2d 01       		.byte	0x1
 6587 0f2e 9E04     		.2byte	0x49e
 6588 0f30 2E030000 		.4byte	0x32e
 6589 0f34 00000000 		.4byte	.LFB78
 6590 0f38 1E000000 		.4byte	.LFE78-.LFB78
 6591 0f3c 01       		.uleb128 0x1
 6592 0f3d 9C       		.byte	0x9c
 6593 0f3e 19       		.uleb128 0x19
 6594 0f3f 4D0A0000 		.4byte	.LASF178
 6595 0f43 01       		.byte	0x1
 6596 0f44 AF04     		.2byte	0x4af
 6597 0f46 2E030000 		.4byte	0x32e
 6598 0f4a 00000000 		.4byte	.LFB79
 6599 0f4e BA000000 		.4byte	.LFE79-.LFB79
 6600 0f52 01       		.uleb128 0x1
 6601 0f53 9C       		.byte	0x9c
 6602 0f54 9E0F0000 		.4byte	0xf9e
 6603 0f58 15       		.uleb128 0x15
 6604 0f59 7800     		.ascii	"x\000"
 6605 0f5b 01       		.byte	0x1
 6606 0f5c AF04     		.2byte	0x4af
 6607 0f5e 9E0F0000 		.4byte	0xf9e
 6608 0f62 02       		.uleb128 0x2
 6609 0f63 91       		.byte	0x91
 6610 0f64 6C       		.sleb128 -20
 6611 0f65 15       		.uleb128 0x15
 6612 0f66 7900     		.ascii	"y\000"
 6613 0f68 01       		.byte	0x1
 6614 0f69 AF04     		.2byte	0x4af
 6615 0f6b 9E0F0000 		.4byte	0xf9e
 6616 0f6f 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 141


 6617 0f70 91       		.byte	0x91
 6618 0f71 68       		.sleb128 -24
 6619 0f72 18       		.uleb128 0x18
 6620 0f73 747800   		.ascii	"tx\000"
 6621 0f76 01       		.byte	0x1
 6622 0f77 B104     		.2byte	0x4b1
 6623 0f79 AD000000 		.4byte	0xad
 6624 0f7d 02       		.uleb128 0x2
 6625 0f7e 91       		.byte	0x91
 6626 0f7f 76       		.sleb128 -10
 6627 0f80 18       		.uleb128 0x18
 6628 0f81 747900   		.ascii	"ty\000"
 6629 0f84 01       		.byte	0x1
 6630 0f85 B104     		.2byte	0x4b1
 6631 0f87 AD000000 		.4byte	0xad
 6632 0f8b 02       		.uleb128 0x2
 6633 0f8c 91       		.byte	0x91
 6634 0f8d 74       		.sleb128 -12
 6635 0f8e 14       		.uleb128 0x14
 6636 0f8f B5030000 		.4byte	.LASF124
 6637 0f93 01       		.byte	0x1
 6638 0f94 B204     		.2byte	0x4b2
 6639 0f96 97000000 		.4byte	0x97
 6640 0f9a 02       		.uleb128 0x2
 6641 0f9b 91       		.byte	0x91
 6642 0f9c 73       		.sleb128 -13
 6643 0f9d 00       		.byte	0
 6644 0f9e 05       		.uleb128 0x5
 6645 0f9f 04       		.byte	0x4
 6646 0fa0 AD000000 		.4byte	0xad
 6647 0fa4 13       		.uleb128 0x13
 6648 0fa5 90070000 		.4byte	.LASF179
 6649 0fa9 01       		.byte	0x1
 6650 0faa CA04     		.2byte	0x4ca
 6651 0fac 00000000 		.4byte	.LFB80
 6652 0fb0 2E000000 		.4byte	.LFE80-.LFB80
 6653 0fb4 01       		.uleb128 0x1
 6654 0fb5 9C       		.byte	0x9c
 6655 0fb6 C90F0000 		.4byte	0xfc9
 6656 0fba 15       		.uleb128 0x15
 6657 0fbb 6F6E00   		.ascii	"on\000"
 6658 0fbe 01       		.byte	0x1
 6659 0fbf CA04     		.2byte	0x4ca
 6660 0fc1 2E030000 		.4byte	0x32e
 6661 0fc5 02       		.uleb128 0x2
 6662 0fc6 91       		.byte	0x91
 6663 0fc7 77       		.sleb128 -9
 6664 0fc8 00       		.byte	0
 6665 0fc9 13       		.uleb128 0x13
 6666 0fca A8000000 		.4byte	.LASF180
 6667 0fce 01       		.byte	0x1
 6668 0fcf D804     		.2byte	0x4d8
 6669 0fd1 00000000 		.4byte	.LFB81
 6670 0fd5 2E000000 		.4byte	.LFE81-.LFB81
 6671 0fd9 01       		.uleb128 0x1
 6672 0fda 9C       		.byte	0x9c
 6673 0fdb EF0F0000 		.4byte	0xfef
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 142


 6674 0fdf 16       		.uleb128 0x16
 6675 0fe0 A8000000 		.4byte	.LASF180
 6676 0fe4 01       		.byte	0x1
 6677 0fe5 D804     		.2byte	0x4d8
 6678 0fe7 2E030000 		.4byte	0x32e
 6679 0feb 02       		.uleb128 0x2
 6680 0fec 91       		.byte	0x91
 6681 0fed 77       		.sleb128 -9
 6682 0fee 00       		.byte	0
 6683 0fef 13       		.uleb128 0x13
 6684 0ff0 BB0D0000 		.4byte	.LASF181
 6685 0ff4 01       		.byte	0x1
 6686 0ff5 E704     		.2byte	0x4e7
 6687 0ff7 00000000 		.4byte	.LFB82
 6688 0ffb 2E000000 		.4byte	.LFE82-.LFB82
 6689 0fff 01       		.uleb128 0x1
 6690 1000 9C       		.byte	0x9c
 6691 1001 24100000 		.4byte	0x1024
 6692 1005 15       		.uleb128 0x15
 6693 1006 72656700 		.ascii	"reg\000"
 6694 100a 01       		.byte	0x1
 6695 100b E704     		.2byte	0x4e7
 6696 100d 97000000 		.4byte	0x97
 6697 1011 02       		.uleb128 0x2
 6698 1012 91       		.byte	0x91
 6699 1013 77       		.sleb128 -9
 6700 1014 15       		.uleb128 0x15
 6701 1015 76616C00 		.ascii	"val\000"
 6702 1019 01       		.byte	0x1
 6703 101a E704     		.2byte	0x4e7
 6704 101c 97000000 		.4byte	0x97
 6705 1020 02       		.uleb128 0x2
 6706 1021 91       		.byte	0x91
 6707 1022 76       		.sleb128 -10
 6708 1023 00       		.byte	0
 6709 1024 19       		.uleb128 0x19
 6710 1025 C1020000 		.4byte	.LASF182
 6711 1029 01       		.byte	0x1
 6712 102a F204     		.2byte	0x4f2
 6713 102c B8000000 		.4byte	0xb8
 6714 1030 00000000 		.4byte	.LFB83
 6715 1034 24000000 		.4byte	.LFE83-.LFB83
 6716 1038 01       		.uleb128 0x1
 6717 1039 9C       		.byte	0x9c
 6718 103a 4E100000 		.4byte	0x104e
 6719 103e 15       		.uleb128 0x15
 6720 103f 72656700 		.ascii	"reg\000"
 6721 1043 01       		.byte	0x1
 6722 1044 F204     		.2byte	0x4f2
 6723 1046 97000000 		.4byte	0x97
 6724 104a 02       		.uleb128 0x2
 6725 104b 91       		.byte	0x91
 6726 104c 77       		.sleb128 -9
 6727 104d 00       		.byte	0
 6728 104e 13       		.uleb128 0x13
 6729 104f 1D080000 		.4byte	.LASF183
 6730 1053 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 143


 6731 1054 FD04     		.2byte	0x4fd
 6732 1056 00000000 		.4byte	.LFB84
 6733 105a 38000000 		.4byte	.LFE84-.LFB84
 6734 105e 01       		.uleb128 0x1
 6735 105f 9C       		.byte	0x9c
 6736 1060 72100000 		.4byte	0x1072
 6737 1064 15       		.uleb128 0x15
 6738 1065 6400     		.ascii	"d\000"
 6739 1067 01       		.byte	0x1
 6740 1068 FD04     		.2byte	0x4fd
 6741 106a 97000000 		.4byte	0x97
 6742 106e 02       		.uleb128 0x2
 6743 106f 91       		.byte	0x91
 6744 1070 77       		.sleb128 -9
 6745 1071 00       		.byte	0
 6746 1072 19       		.uleb128 0x19
 6747 1073 FF0C0000 		.4byte	.LASF184
 6748 1077 01       		.byte	0x1
 6749 1078 0C05     		.2byte	0x50c
 6750 107a B8000000 		.4byte	0xb8
 6751 107e 00000000 		.4byte	.LFB85
 6752 1082 40000000 		.4byte	.LFE85-.LFB85
 6753 1086 01       		.uleb128 0x1
 6754 1087 9C       		.byte	0x9c
 6755 1088 9A100000 		.4byte	0x109a
 6756 108c 18       		.uleb128 0x18
 6757 108d 7800     		.ascii	"x\000"
 6758 108f 01       		.byte	0x1
 6759 1090 0E05     		.2byte	0x50e
 6760 1092 B8000000 		.4byte	0xb8
 6761 1096 02       		.uleb128 0x2
 6762 1097 91       		.byte	0x91
 6763 1098 74       		.sleb128 -12
 6764 1099 00       		.byte	0
 6765 109a 13       		.uleb128 0x13
 6766 109b 6A040000 		.4byte	.LASF185
 6767 109f 01       		.byte	0x1
 6768 10a0 2505     		.2byte	0x525
 6769 10a2 00000000 		.4byte	.LFB86
 6770 10a6 38000000 		.4byte	.LFE86-.LFB86
 6771 10aa 01       		.uleb128 0x1
 6772 10ab 9C       		.byte	0x9c
 6773 10ac BE100000 		.4byte	0x10be
 6774 10b0 15       		.uleb128 0x15
 6775 10b1 6400     		.ascii	"d\000"
 6776 10b3 01       		.byte	0x1
 6777 10b4 2505     		.2byte	0x525
 6778 10b6 97000000 		.4byte	0x97
 6779 10ba 02       		.uleb128 0x2
 6780 10bb 91       		.byte	0x91
 6781 10bc 77       		.sleb128 -9
 6782 10bd 00       		.byte	0
 6783 10be 19       		.uleb128 0x19
 6784 10bf 710C0000 		.4byte	.LASF186
 6785 10c3 01       		.byte	0x1
 6786 10c4 3505     		.2byte	0x535
 6787 10c6 97000000 		.4byte	0x97
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 144


 6788 10ca 00000000 		.4byte	.LFB87
 6789 10ce 36000000 		.4byte	.LFE87-.LFB87
 6790 10d2 01       		.uleb128 0x1
 6791 10d3 9C       		.byte	0x9c
 6792 10d4 E6100000 		.4byte	0x10e6
 6793 10d8 18       		.uleb128 0x18
 6794 10d9 7800     		.ascii	"x\000"
 6795 10db 01       		.byte	0x1
 6796 10dc 3E05     		.2byte	0x53e
 6797 10de 97000000 		.4byte	0x97
 6798 10e2 02       		.uleb128 0x2
 6799 10e3 91       		.byte	0x91
 6800 10e4 77       		.sleb128 -9
 6801 10e5 00       		.byte	0
 6802 10e6 1C       		.uleb128 0x1c
 6803 10e7 5F637300 		.ascii	"_cs\000"
 6804 10eb 06       		.byte	0x6
 6805 10ec 9F       		.byte	0x9f
 6806 10ed 97000000 		.4byte	0x97
 6807 10f1 05       		.uleb128 0x5
 6808 10f2 03       		.byte	0x3
 6809 10f3 00000000 		.4byte	_cs
 6810 10f7 1D       		.uleb128 0x1d
 6811 10f8 660C0000 		.4byte	.LASF187
 6812 10fc 06       		.byte	0x6
 6813 10fd 9F       		.byte	0x9f
 6814 10fe 97000000 		.4byte	0x97
 6815 1102 05       		.uleb128 0x5
 6816 1103 03       		.byte	0x3
 6817 1104 00000000 		.4byte	_rst
 6818 1108 1D       		.uleb128 0x1d
 6819 1109 FB040000 		.4byte	.LASF188
 6820 110d 06       		.byte	0x6
 6821 110e A0       		.byte	0xa0
 6822 110f AD000000 		.4byte	0xad
 6823 1113 05       		.uleb128 0x5
 6824 1114 03       		.byte	0x3
 6825 1115 00000000 		.4byte	_width
 6826 1119 1D       		.uleb128 0x1d
 6827 111a E20D0000 		.4byte	.LASF189
 6828 111e 06       		.byte	0x6
 6829 111f A0       		.byte	0xa0
 6830 1120 AD000000 		.4byte	0xad
 6831 1124 05       		.uleb128 0x5
 6832 1125 03       		.byte	0x3
 6833 1126 00000000 		.4byte	_height
 6834 112a 1D       		.uleb128 0x1d
 6835 112b 37020000 		.4byte	.LASF190
 6836 112f 06       		.byte	0x6
 6837 1130 A1       		.byte	0xa1
 6838 1131 97000000 		.4byte	0x97
 6839 1135 05       		.uleb128 0x5
 6840 1136 03       		.byte	0x3
 6841 1137 00000000 		.4byte	_textScale
 6842 113b 1D       		.uleb128 0x1d
 6843 113c 6B0C0000 		.4byte	.LASF191
 6844 1140 06       		.byte	0x6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 145


 6845 1141 A2       		.byte	0xa2
 6846 1142 F8020000 		.4byte	0x2f8
 6847 1146 05       		.uleb128 0x5
 6848 1147 03       		.byte	0x3
 6849 1148 00000000 		.4byte	_size
 6850 114c 1D       		.uleb128 0x1d
 6851 114d 0C010000 		.4byte	.LASF192
 6852 1151 01       		.byte	0x1
 6853 1152 22       		.byte	0x22
 6854 1153 B8000000 		.4byte	0xb8
 6855 1157 05       		.uleb128 0x5
 6856 1158 03       		.byte	0x3
 6857 1159 00000000 		.4byte	spi_speed
 6858 115d 00       		.byte	0
 6859              		.section	.debug_abbrev,"",%progbits
 6860              	.Ldebug_abbrev0:
 6861 0000 01       		.uleb128 0x1
 6862 0001 11       		.uleb128 0x11
 6863 0002 01       		.byte	0x1
 6864 0003 25       		.uleb128 0x25
 6865 0004 0E       		.uleb128 0xe
 6866 0005 13       		.uleb128 0x13
 6867 0006 0B       		.uleb128 0xb
 6868 0007 03       		.uleb128 0x3
 6869 0008 0E       		.uleb128 0xe
 6870 0009 1B       		.uleb128 0x1b
 6871 000a 0E       		.uleb128 0xe
 6872 000b 55       		.uleb128 0x55
 6873 000c 17       		.uleb128 0x17
 6874 000d 11       		.uleb128 0x11
 6875 000e 01       		.uleb128 0x1
 6876 000f 10       		.uleb128 0x10
 6877 0010 17       		.uleb128 0x17
 6878 0011 00       		.byte	0
 6879 0012 00       		.byte	0
 6880 0013 02       		.uleb128 0x2
 6881 0014 24       		.uleb128 0x24
 6882 0015 00       		.byte	0
 6883 0016 0B       		.uleb128 0xb
 6884 0017 0B       		.uleb128 0xb
 6885 0018 3E       		.uleb128 0x3e
 6886 0019 0B       		.uleb128 0xb
 6887 001a 03       		.uleb128 0x3
 6888 001b 0E       		.uleb128 0xe
 6889 001c 00       		.byte	0
 6890 001d 00       		.byte	0
 6891 001e 03       		.uleb128 0x3
 6892 001f 16       		.uleb128 0x16
 6893 0020 00       		.byte	0
 6894 0021 03       		.uleb128 0x3
 6895 0022 0E       		.uleb128 0xe
 6896 0023 3A       		.uleb128 0x3a
 6897 0024 0B       		.uleb128 0xb
 6898 0025 3B       		.uleb128 0x3b
 6899 0026 0B       		.uleb128 0xb
 6900 0027 49       		.uleb128 0x49
 6901 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 146


 6902 0029 00       		.byte	0
 6903 002a 00       		.byte	0
 6904 002b 04       		.uleb128 0x4
 6905 002c 24       		.uleb128 0x24
 6906 002d 00       		.byte	0
 6907 002e 0B       		.uleb128 0xb
 6908 002f 0B       		.uleb128 0xb
 6909 0030 3E       		.uleb128 0x3e
 6910 0031 0B       		.uleb128 0xb
 6911 0032 03       		.uleb128 0x3
 6912 0033 08       		.uleb128 0x8
 6913 0034 00       		.byte	0
 6914 0035 00       		.byte	0
 6915 0036 05       		.uleb128 0x5
 6916 0037 0F       		.uleb128 0xf
 6917 0038 00       		.byte	0
 6918 0039 0B       		.uleb128 0xb
 6919 003a 0B       		.uleb128 0xb
 6920 003b 49       		.uleb128 0x49
 6921 003c 13       		.uleb128 0x13
 6922 003d 00       		.byte	0
 6923 003e 00       		.byte	0
 6924 003f 06       		.uleb128 0x6
 6925 0040 26       		.uleb128 0x26
 6926 0041 00       		.byte	0
 6927 0042 49       		.uleb128 0x49
 6928 0043 13       		.uleb128 0x13
 6929 0044 00       		.byte	0
 6930 0045 00       		.byte	0
 6931 0046 07       		.uleb128 0x7
 6932 0047 04       		.uleb128 0x4
 6933 0048 01       		.byte	0x1
 6934 0049 0B       		.uleb128 0xb
 6935 004a 0B       		.uleb128 0xb
 6936 004b 49       		.uleb128 0x49
 6937 004c 13       		.uleb128 0x13
 6938 004d 3A       		.uleb128 0x3a
 6939 004e 0B       		.uleb128 0xb
 6940 004f 3B       		.uleb128 0x3b
 6941 0050 05       		.uleb128 0x5
 6942 0051 01       		.uleb128 0x1
 6943 0052 13       		.uleb128 0x13
 6944 0053 00       		.byte	0
 6945 0054 00       		.byte	0
 6946 0055 08       		.uleb128 0x8
 6947 0056 28       		.uleb128 0x28
 6948 0057 00       		.byte	0
 6949 0058 03       		.uleb128 0x3
 6950 0059 0E       		.uleb128 0xe
 6951 005a 1C       		.uleb128 0x1c
 6952 005b 0B       		.uleb128 0xb
 6953 005c 00       		.byte	0
 6954 005d 00       		.byte	0
 6955 005e 09       		.uleb128 0x9
 6956 005f 04       		.uleb128 0x4
 6957 0060 01       		.byte	0x1
 6958 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 147


 6959 0062 0B       		.uleb128 0xb
 6960 0063 49       		.uleb128 0x49
 6961 0064 13       		.uleb128 0x13
 6962 0065 3A       		.uleb128 0x3a
 6963 0066 0B       		.uleb128 0xb
 6964 0067 3B       		.uleb128 0x3b
 6965 0068 0B       		.uleb128 0xb
 6966 0069 01       		.uleb128 0x1
 6967 006a 13       		.uleb128 0x13
 6968 006b 00       		.byte	0
 6969 006c 00       		.byte	0
 6970 006d 0A       		.uleb128 0xa
 6971 006e 04       		.uleb128 0x4
 6972 006f 01       		.byte	0x1
 6973 0070 03       		.uleb128 0x3
 6974 0071 0E       		.uleb128 0xe
 6975 0072 0B       		.uleb128 0xb
 6976 0073 0B       		.uleb128 0xb
 6977 0074 49       		.uleb128 0x49
 6978 0075 13       		.uleb128 0x13
 6979 0076 3A       		.uleb128 0x3a
 6980 0077 0B       		.uleb128 0xb
 6981 0078 3B       		.uleb128 0x3b
 6982 0079 0B       		.uleb128 0xb
 6983 007a 01       		.uleb128 0x1
 6984 007b 13       		.uleb128 0x13
 6985 007c 00       		.byte	0
 6986 007d 00       		.byte	0
 6987 007e 0B       		.uleb128 0xb
 6988 007f 2E       		.uleb128 0x2e
 6989 0080 01       		.byte	0x1
 6990 0081 3F       		.uleb128 0x3f
 6991 0082 19       		.uleb128 0x19
 6992 0083 03       		.uleb128 0x3
 6993 0084 0E       		.uleb128 0xe
 6994 0085 3A       		.uleb128 0x3a
 6995 0086 0B       		.uleb128 0xb
 6996 0087 3B       		.uleb128 0x3b
 6997 0088 0B       		.uleb128 0xb
 6998 0089 27       		.uleb128 0x27
 6999 008a 19       		.uleb128 0x19
 7000 008b 49       		.uleb128 0x49
 7001 008c 13       		.uleb128 0x13
 7002 008d 11       		.uleb128 0x11
 7003 008e 01       		.uleb128 0x1
 7004 008f 12       		.uleb128 0x12
 7005 0090 06       		.uleb128 0x6
 7006 0091 40       		.uleb128 0x40
 7007 0092 18       		.uleb128 0x18
 7008 0093 9642     		.uleb128 0x2116
 7009 0095 19       		.uleb128 0x19
 7010 0096 01       		.uleb128 0x1
 7011 0097 13       		.uleb128 0x13
 7012 0098 00       		.byte	0
 7013 0099 00       		.byte	0
 7014 009a 0C       		.uleb128 0xc
 7015 009b 05       		.uleb128 0x5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 148


 7016 009c 00       		.byte	0
 7017 009d 03       		.uleb128 0x3
 7018 009e 08       		.uleb128 0x8
 7019 009f 3A       		.uleb128 0x3a
 7020 00a0 0B       		.uleb128 0xb
 7021 00a1 3B       		.uleb128 0x3b
 7022 00a2 0B       		.uleb128 0xb
 7023 00a3 49       		.uleb128 0x49
 7024 00a4 13       		.uleb128 0x13
 7025 00a5 02       		.uleb128 0x2
 7026 00a6 18       		.uleb128 0x18
 7027 00a7 00       		.byte	0
 7028 00a8 00       		.byte	0
 7029 00a9 0D       		.uleb128 0xd
 7030 00aa 34       		.uleb128 0x34
 7031 00ab 00       		.byte	0
 7032 00ac 03       		.uleb128 0x3
 7033 00ad 08       		.uleb128 0x8
 7034 00ae 3A       		.uleb128 0x3a
 7035 00af 0B       		.uleb128 0xb
 7036 00b0 3B       		.uleb128 0x3b
 7037 00b1 0B       		.uleb128 0xb
 7038 00b2 49       		.uleb128 0x49
 7039 00b3 13       		.uleb128 0x13
 7040 00b4 02       		.uleb128 0x2
 7041 00b5 18       		.uleb128 0x18
 7042 00b6 00       		.byte	0
 7043 00b7 00       		.byte	0
 7044 00b8 0E       		.uleb128 0xe
 7045 00b9 34       		.uleb128 0x34
 7046 00ba 00       		.byte	0
 7047 00bb 03       		.uleb128 0x3
 7048 00bc 0E       		.uleb128 0xe
 7049 00bd 3A       		.uleb128 0x3a
 7050 00be 0B       		.uleb128 0xb
 7051 00bf 3B       		.uleb128 0x3b
 7052 00c0 0B       		.uleb128 0xb
 7053 00c1 49       		.uleb128 0x49
 7054 00c2 13       		.uleb128 0x13
 7055 00c3 00       		.byte	0
 7056 00c4 00       		.byte	0
 7057 00c5 0F       		.uleb128 0xf
 7058 00c6 2E       		.uleb128 0x2e
 7059 00c7 00       		.byte	0
 7060 00c8 3F       		.uleb128 0x3f
 7061 00c9 19       		.uleb128 0x19
 7062 00ca 03       		.uleb128 0x3
 7063 00cb 0E       		.uleb128 0xe
 7064 00cc 3A       		.uleb128 0x3a
 7065 00cd 0B       		.uleb128 0xb
 7066 00ce 3B       		.uleb128 0x3b
 7067 00cf 0B       		.uleb128 0xb
 7068 00d0 27       		.uleb128 0x27
 7069 00d1 19       		.uleb128 0x19
 7070 00d2 11       		.uleb128 0x11
 7071 00d3 01       		.uleb128 0x1
 7072 00d4 12       		.uleb128 0x12
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 149


 7073 00d5 06       		.uleb128 0x6
 7074 00d6 40       		.uleb128 0x40
 7075 00d7 18       		.uleb128 0x18
 7076 00d8 9642     		.uleb128 0x2116
 7077 00da 19       		.uleb128 0x19
 7078 00db 00       		.byte	0
 7079 00dc 00       		.byte	0
 7080 00dd 10       		.uleb128 0x10
 7081 00de 2E       		.uleb128 0x2e
 7082 00df 01       		.byte	0x1
 7083 00e0 3F       		.uleb128 0x3f
 7084 00e1 19       		.uleb128 0x19
 7085 00e2 03       		.uleb128 0x3
 7086 00e3 0E       		.uleb128 0xe
 7087 00e4 3A       		.uleb128 0x3a
 7088 00e5 0B       		.uleb128 0xb
 7089 00e6 3B       		.uleb128 0x3b
 7090 00e7 0B       		.uleb128 0xb
 7091 00e8 27       		.uleb128 0x27
 7092 00e9 19       		.uleb128 0x19
 7093 00ea 11       		.uleb128 0x11
 7094 00eb 01       		.uleb128 0x1
 7095 00ec 12       		.uleb128 0x12
 7096 00ed 06       		.uleb128 0x6
 7097 00ee 40       		.uleb128 0x40
 7098 00ef 18       		.uleb128 0x18
 7099 00f0 9642     		.uleb128 0x2116
 7100 00f2 19       		.uleb128 0x19
 7101 00f3 01       		.uleb128 0x1
 7102 00f4 13       		.uleb128 0x13
 7103 00f5 00       		.byte	0
 7104 00f6 00       		.byte	0
 7105 00f7 11       		.uleb128 0x11
 7106 00f8 34       		.uleb128 0x34
 7107 00f9 00       		.byte	0
 7108 00fa 03       		.uleb128 0x3
 7109 00fb 0E       		.uleb128 0xe
 7110 00fc 3A       		.uleb128 0x3a
 7111 00fd 0B       		.uleb128 0xb
 7112 00fe 3B       		.uleb128 0x3b
 7113 00ff 0B       		.uleb128 0xb
 7114 0100 49       		.uleb128 0x49
 7115 0101 13       		.uleb128 0x13
 7116 0102 02       		.uleb128 0x2
 7117 0103 18       		.uleb128 0x18
 7118 0104 00       		.byte	0
 7119 0105 00       		.byte	0
 7120 0106 12       		.uleb128 0x12
 7121 0107 2E       		.uleb128 0x2e
 7122 0108 00       		.byte	0
 7123 0109 3F       		.uleb128 0x3f
 7124 010a 19       		.uleb128 0x19
 7125 010b 03       		.uleb128 0x3
 7126 010c 0E       		.uleb128 0xe
 7127 010d 3A       		.uleb128 0x3a
 7128 010e 0B       		.uleb128 0xb
 7129 010f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 150


 7130 0110 05       		.uleb128 0x5
 7131 0111 27       		.uleb128 0x27
 7132 0112 19       		.uleb128 0x19
 7133 0113 49       		.uleb128 0x49
 7134 0114 13       		.uleb128 0x13
 7135 0115 11       		.uleb128 0x11
 7136 0116 01       		.uleb128 0x1
 7137 0117 12       		.uleb128 0x12
 7138 0118 06       		.uleb128 0x6
 7139 0119 40       		.uleb128 0x40
 7140 011a 18       		.uleb128 0x18
 7141 011b 9742     		.uleb128 0x2117
 7142 011d 19       		.uleb128 0x19
 7143 011e 00       		.byte	0
 7144 011f 00       		.byte	0
 7145 0120 13       		.uleb128 0x13
 7146 0121 2E       		.uleb128 0x2e
 7147 0122 01       		.byte	0x1
 7148 0123 3F       		.uleb128 0x3f
 7149 0124 19       		.uleb128 0x19
 7150 0125 03       		.uleb128 0x3
 7151 0126 0E       		.uleb128 0xe
 7152 0127 3A       		.uleb128 0x3a
 7153 0128 0B       		.uleb128 0xb
 7154 0129 3B       		.uleb128 0x3b
 7155 012a 05       		.uleb128 0x5
 7156 012b 27       		.uleb128 0x27
 7157 012c 19       		.uleb128 0x19
 7158 012d 11       		.uleb128 0x11
 7159 012e 01       		.uleb128 0x1
 7160 012f 12       		.uleb128 0x12
 7161 0130 06       		.uleb128 0x6
 7162 0131 40       		.uleb128 0x40
 7163 0132 18       		.uleb128 0x18
 7164 0133 9642     		.uleb128 0x2116
 7165 0135 19       		.uleb128 0x19
 7166 0136 01       		.uleb128 0x1
 7167 0137 13       		.uleb128 0x13
 7168 0138 00       		.byte	0
 7169 0139 00       		.byte	0
 7170 013a 14       		.uleb128 0x14
 7171 013b 34       		.uleb128 0x34
 7172 013c 00       		.byte	0
 7173 013d 03       		.uleb128 0x3
 7174 013e 0E       		.uleb128 0xe
 7175 013f 3A       		.uleb128 0x3a
 7176 0140 0B       		.uleb128 0xb
 7177 0141 3B       		.uleb128 0x3b
 7178 0142 05       		.uleb128 0x5
 7179 0143 49       		.uleb128 0x49
 7180 0144 13       		.uleb128 0x13
 7181 0145 02       		.uleb128 0x2
 7182 0146 18       		.uleb128 0x18
 7183 0147 00       		.byte	0
 7184 0148 00       		.byte	0
 7185 0149 15       		.uleb128 0x15
 7186 014a 05       		.uleb128 0x5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 151


 7187 014b 00       		.byte	0
 7188 014c 03       		.uleb128 0x3
 7189 014d 08       		.uleb128 0x8
 7190 014e 3A       		.uleb128 0x3a
 7191 014f 0B       		.uleb128 0xb
 7192 0150 3B       		.uleb128 0x3b
 7193 0151 05       		.uleb128 0x5
 7194 0152 49       		.uleb128 0x49
 7195 0153 13       		.uleb128 0x13
 7196 0154 02       		.uleb128 0x2
 7197 0155 18       		.uleb128 0x18
 7198 0156 00       		.byte	0
 7199 0157 00       		.byte	0
 7200 0158 16       		.uleb128 0x16
 7201 0159 05       		.uleb128 0x5
 7202 015a 00       		.byte	0
 7203 015b 03       		.uleb128 0x3
 7204 015c 0E       		.uleb128 0xe
 7205 015d 3A       		.uleb128 0x3a
 7206 015e 0B       		.uleb128 0xb
 7207 015f 3B       		.uleb128 0x3b
 7208 0160 05       		.uleb128 0x5
 7209 0161 49       		.uleb128 0x49
 7210 0162 13       		.uleb128 0x13
 7211 0163 02       		.uleb128 0x2
 7212 0164 18       		.uleb128 0x18
 7213 0165 00       		.byte	0
 7214 0166 00       		.byte	0
 7215 0167 17       		.uleb128 0x17
 7216 0168 0B       		.uleb128 0xb
 7217 0169 01       		.byte	0x1
 7218 016a 11       		.uleb128 0x11
 7219 016b 01       		.uleb128 0x1
 7220 016c 12       		.uleb128 0x12
 7221 016d 06       		.uleb128 0x6
 7222 016e 00       		.byte	0
 7223 016f 00       		.byte	0
 7224 0170 18       		.uleb128 0x18
 7225 0171 34       		.uleb128 0x34
 7226 0172 00       		.byte	0
 7227 0173 03       		.uleb128 0x3
 7228 0174 08       		.uleb128 0x8
 7229 0175 3A       		.uleb128 0x3a
 7230 0176 0B       		.uleb128 0xb
 7231 0177 3B       		.uleb128 0x3b
 7232 0178 05       		.uleb128 0x5
 7233 0179 49       		.uleb128 0x49
 7234 017a 13       		.uleb128 0x13
 7235 017b 02       		.uleb128 0x2
 7236 017c 18       		.uleb128 0x18
 7237 017d 00       		.byte	0
 7238 017e 00       		.byte	0
 7239 017f 19       		.uleb128 0x19
 7240 0180 2E       		.uleb128 0x2e
 7241 0181 01       		.byte	0x1
 7242 0182 3F       		.uleb128 0x3f
 7243 0183 19       		.uleb128 0x19
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 152


 7244 0184 03       		.uleb128 0x3
 7245 0185 0E       		.uleb128 0xe
 7246 0186 3A       		.uleb128 0x3a
 7247 0187 0B       		.uleb128 0xb
 7248 0188 3B       		.uleb128 0x3b
 7249 0189 05       		.uleb128 0x5
 7250 018a 27       		.uleb128 0x27
 7251 018b 19       		.uleb128 0x19
 7252 018c 49       		.uleb128 0x49
 7253 018d 13       		.uleb128 0x13
 7254 018e 11       		.uleb128 0x11
 7255 018f 01       		.uleb128 0x1
 7256 0190 12       		.uleb128 0x12
 7257 0191 06       		.uleb128 0x6
 7258 0192 40       		.uleb128 0x40
 7259 0193 18       		.uleb128 0x18
 7260 0194 9642     		.uleb128 0x2116
 7261 0196 19       		.uleb128 0x19
 7262 0197 01       		.uleb128 0x1
 7263 0198 13       		.uleb128 0x13
 7264 0199 00       		.byte	0
 7265 019a 00       		.byte	0
 7266 019b 1A       		.uleb128 0x1a
 7267 019c 2E       		.uleb128 0x2e
 7268 019d 00       		.byte	0
 7269 019e 3F       		.uleb128 0x3f
 7270 019f 19       		.uleb128 0x19
 7271 01a0 03       		.uleb128 0x3
 7272 01a1 0E       		.uleb128 0xe
 7273 01a2 3A       		.uleb128 0x3a
 7274 01a3 0B       		.uleb128 0xb
 7275 01a4 3B       		.uleb128 0x3b
 7276 01a5 05       		.uleb128 0x5
 7277 01a6 27       		.uleb128 0x27
 7278 01a7 19       		.uleb128 0x19
 7279 01a8 11       		.uleb128 0x11
 7280 01a9 01       		.uleb128 0x1
 7281 01aa 12       		.uleb128 0x12
 7282 01ab 06       		.uleb128 0x6
 7283 01ac 40       		.uleb128 0x40
 7284 01ad 18       		.uleb128 0x18
 7285 01ae 9642     		.uleb128 0x2116
 7286 01b0 19       		.uleb128 0x19
 7287 01b1 00       		.byte	0
 7288 01b2 00       		.byte	0
 7289 01b3 1B       		.uleb128 0x1b
 7290 01b4 2E       		.uleb128 0x2e
 7291 01b5 00       		.byte	0
 7292 01b6 3F       		.uleb128 0x3f
 7293 01b7 19       		.uleb128 0x19
 7294 01b8 03       		.uleb128 0x3
 7295 01b9 0E       		.uleb128 0xe
 7296 01ba 3A       		.uleb128 0x3a
 7297 01bb 0B       		.uleb128 0xb
 7298 01bc 3B       		.uleb128 0x3b
 7299 01bd 05       		.uleb128 0x5
 7300 01be 27       		.uleb128 0x27
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 153


 7301 01bf 19       		.uleb128 0x19
 7302 01c0 49       		.uleb128 0x49
 7303 01c1 13       		.uleb128 0x13
 7304 01c2 11       		.uleb128 0x11
 7305 01c3 01       		.uleb128 0x1
 7306 01c4 12       		.uleb128 0x12
 7307 01c5 06       		.uleb128 0x6
 7308 01c6 40       		.uleb128 0x40
 7309 01c7 18       		.uleb128 0x18
 7310 01c8 9642     		.uleb128 0x2116
 7311 01ca 19       		.uleb128 0x19
 7312 01cb 00       		.byte	0
 7313 01cc 00       		.byte	0
 7314 01cd 1C       		.uleb128 0x1c
 7315 01ce 34       		.uleb128 0x34
 7316 01cf 00       		.byte	0
 7317 01d0 03       		.uleb128 0x3
 7318 01d1 08       		.uleb128 0x8
 7319 01d2 3A       		.uleb128 0x3a
 7320 01d3 0B       		.uleb128 0xb
 7321 01d4 3B       		.uleb128 0x3b
 7322 01d5 0B       		.uleb128 0xb
 7323 01d6 49       		.uleb128 0x49
 7324 01d7 13       		.uleb128 0x13
 7325 01d8 3F       		.uleb128 0x3f
 7326 01d9 19       		.uleb128 0x19
 7327 01da 02       		.uleb128 0x2
 7328 01db 18       		.uleb128 0x18
 7329 01dc 00       		.byte	0
 7330 01dd 00       		.byte	0
 7331 01de 1D       		.uleb128 0x1d
 7332 01df 34       		.uleb128 0x34
 7333 01e0 00       		.byte	0
 7334 01e1 03       		.uleb128 0x3
 7335 01e2 0E       		.uleb128 0xe
 7336 01e3 3A       		.uleb128 0x3a
 7337 01e4 0B       		.uleb128 0xb
 7338 01e5 3B       		.uleb128 0x3b
 7339 01e6 0B       		.uleb128 0xb
 7340 01e7 49       		.uleb128 0x49
 7341 01e8 13       		.uleb128 0x13
 7342 01e9 3F       		.uleb128 0x3f
 7343 01ea 19       		.uleb128 0x19
 7344 01eb 02       		.uleb128 0x2
 7345 01ec 18       		.uleb128 0x18
 7346 01ed 00       		.byte	0
 7347 01ee 00       		.byte	0
 7348 01ef 00       		.byte	0
 7349              		.section	.debug_aranges,"",%progbits
 7350 0000 BC010000 		.4byte	0x1bc
 7351 0004 0200     		.2byte	0x2
 7352 0006 00000000 		.4byte	.Ldebug_info0
 7353 000a 04       		.byte	0x4
 7354 000b 00       		.byte	0
 7355 000c 0000     		.2byte	0
 7356 000e 0000     		.2byte	0
 7357 0010 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 154


 7358 0014 A8000000 		.4byte	.LFE35-.LFB35
 7359 0018 00000000 		.4byte	.LFB36
 7360 001c 22000000 		.4byte	.LFE36-.LFB36
 7361 0020 00000000 		.4byte	.LFB37
 7362 0024 50000000 		.4byte	.LFE37-.LFB37
 7363 0028 00000000 		.4byte	.LFB38
 7364 002c 3C020000 		.4byte	.LFE38-.LFB38
 7365 0030 00000000 		.4byte	.LFB39
 7366 0034 14000000 		.4byte	.LFE39-.LFB39
 7367 0038 00000000 		.4byte	.LFB40
 7368 003c 14000000 		.4byte	.LFE40-.LFB40
 7369 0040 00000000 		.4byte	.LFB41
 7370 0044 5C000000 		.4byte	.LFE41-.LFB41
 7371 0048 00000000 		.4byte	.LFB42
 7372 004c 6A000000 		.4byte	.LFE42-.LFB42
 7373 0050 00000000 		.4byte	.LFB43
 7374 0054 D8000000 		.4byte	.LFE43-.LFB43
 7375 0058 00000000 		.4byte	.LFB44
 7376 005c 8A000000 		.4byte	.LFE44-.LFB44
 7377 0060 00000000 		.4byte	.LFB45
 7378 0064 88000000 		.4byte	.LFE45-.LFB45
 7379 0068 00000000 		.4byte	.LFB46
 7380 006c 7C000000 		.4byte	.LFE46-.LFB46
 7381 0070 00000000 		.4byte	.LFB47
 7382 0074 34000000 		.4byte	.LFE47-.LFB47
 7383 0078 00000000 		.4byte	.LFB48
 7384 007c 40000000 		.4byte	.LFE48-.LFB48
 7385 0080 00000000 		.4byte	.LFB49
 7386 0084 5A000000 		.4byte	.LFE49-.LFB49
 7387 0088 00000000 		.4byte	.LFB50
 7388 008c 48000000 		.4byte	.LFE50-.LFB50
 7389 0090 00000000 		.4byte	.LFB51
 7390 0094 1C000000 		.4byte	.LFE51-.LFB51
 7391 0098 00000000 		.4byte	.LFB52
 7392 009c 96000000 		.4byte	.LFE52-.LFB52
 7393 00a0 00000000 		.4byte	.LFB53
 7394 00a4 38010000 		.4byte	.LFE53-.LFB53
 7395 00a8 00000000 		.4byte	.LFB54
 7396 00ac 5A000000 		.4byte	.LFE54-.LFB54
 7397 00b0 00000000 		.4byte	.LFB55
 7398 00b4 5A000000 		.4byte	.LFE55-.LFB55
 7399 00b8 00000000 		.4byte	.LFB56
 7400 00bc 6A000000 		.4byte	.LFE56-.LFB56
 7401 00c0 00000000 		.4byte	.LFB57
 7402 00c4 6A000000 		.4byte	.LFE57-.LFB57
 7403 00c8 00000000 		.4byte	.LFB58
 7404 00cc 44000000 		.4byte	.LFE58-.LFB58
 7405 00d0 00000000 		.4byte	.LFB59
 7406 00d4 4E000000 		.4byte	.LFE59-.LFB59
 7407 00d8 00000000 		.4byte	.LFB60
 7408 00dc 4E000000 		.4byte	.LFE60-.LFB60
 7409 00e0 00000000 		.4byte	.LFB61
 7410 00e4 6C000000 		.4byte	.LFE61-.LFB61
 7411 00e8 00000000 		.4byte	.LFB62
 7412 00ec 6C000000 		.4byte	.LFE62-.LFB62
 7413 00f0 00000000 		.4byte	.LFB63
 7414 00f4 58000000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 155


 7415 00f8 00000000 		.4byte	.LFB64
 7416 00fc 58000000 		.4byte	.LFE64-.LFB64
 7417 0100 00000000 		.4byte	.LFB65
 7418 0104 60000000 		.4byte	.LFE65-.LFB65
 7419 0108 00000000 		.4byte	.LFB66
 7420 010c 60000000 		.4byte	.LFE66-.LFB66
 7421 0110 00000000 		.4byte	.LFB67
 7422 0114 02010000 		.4byte	.LFE67-.LFB67
 7423 0118 00000000 		.4byte	.LFB68
 7424 011c 4A010000 		.4byte	.LFE68-.LFB68
 7425 0120 00000000 		.4byte	.LFB69
 7426 0124 A6010000 		.4byte	.LFE69-.LFB69
 7427 0128 00000000 		.4byte	.LFB70
 7428 012c 4A010000 		.4byte	.LFE70-.LFB70
 7429 0130 00000000 		.4byte	.LFB71
 7430 0134 7A010000 		.4byte	.LFE71-.LFB71
 7431 0138 00000000 		.4byte	.LFB72
 7432 013c 2E000000 		.4byte	.LFE72-.LFB72
 7433 0140 00000000 		.4byte	.LFB73
 7434 0144 20000000 		.4byte	.LFE73-.LFB73
 7435 0148 00000000 		.4byte	.LFB74
 7436 014c 20000000 		.4byte	.LFE74-.LFB74
 7437 0150 00000000 		.4byte	.LFB75
 7438 0154 54000000 		.4byte	.LFE75-.LFB75
 7439 0158 00000000 		.4byte	.LFB76
 7440 015c 54000000 		.4byte	.LFE76-.LFB76
 7441 0160 00000000 		.4byte	.LFB77
 7442 0164 90000000 		.4byte	.LFE77-.LFB77
 7443 0168 00000000 		.4byte	.LFB78
 7444 016c 1E000000 		.4byte	.LFE78-.LFB78
 7445 0170 00000000 		.4byte	.LFB79
 7446 0174 BA000000 		.4byte	.LFE79-.LFB79
 7447 0178 00000000 		.4byte	.LFB80
 7448 017c 2E000000 		.4byte	.LFE80-.LFB80
 7449 0180 00000000 		.4byte	.LFB81
 7450 0184 2E000000 		.4byte	.LFE81-.LFB81
 7451 0188 00000000 		.4byte	.LFB82
 7452 018c 2E000000 		.4byte	.LFE82-.LFB82
 7453 0190 00000000 		.4byte	.LFB83
 7454 0194 24000000 		.4byte	.LFE83-.LFB83
 7455 0198 00000000 		.4byte	.LFB84
 7456 019c 38000000 		.4byte	.LFE84-.LFB84
 7457 01a0 00000000 		.4byte	.LFB85
 7458 01a4 40000000 		.4byte	.LFE85-.LFB85
 7459 01a8 00000000 		.4byte	.LFB86
 7460 01ac 38000000 		.4byte	.LFE86-.LFB86
 7461 01b0 00000000 		.4byte	.LFB87
 7462 01b4 36000000 		.4byte	.LFE87-.LFB87
 7463 01b8 00000000 		.4byte	0
 7464 01bc 00000000 		.4byte	0
 7465              		.section	.debug_ranges,"",%progbits
 7466              	.Ldebug_ranges0:
 7467 0000 00000000 		.4byte	.LFB35
 7468 0004 A8000000 		.4byte	.LFE35
 7469 0008 00000000 		.4byte	.LFB36
 7470 000c 22000000 		.4byte	.LFE36
 7471 0010 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 156


 7472 0014 50000000 		.4byte	.LFE37
 7473 0018 00000000 		.4byte	.LFB38
 7474 001c 3C020000 		.4byte	.LFE38
 7475 0020 00000000 		.4byte	.LFB39
 7476 0024 14000000 		.4byte	.LFE39
 7477 0028 00000000 		.4byte	.LFB40
 7478 002c 14000000 		.4byte	.LFE40
 7479 0030 00000000 		.4byte	.LFB41
 7480 0034 5C000000 		.4byte	.LFE41
 7481 0038 00000000 		.4byte	.LFB42
 7482 003c 6A000000 		.4byte	.LFE42
 7483 0040 00000000 		.4byte	.LFB43
 7484 0044 D8000000 		.4byte	.LFE43
 7485 0048 00000000 		.4byte	.LFB44
 7486 004c 8A000000 		.4byte	.LFE44
 7487 0050 00000000 		.4byte	.LFB45
 7488 0054 88000000 		.4byte	.LFE45
 7489 0058 00000000 		.4byte	.LFB46
 7490 005c 7C000000 		.4byte	.LFE46
 7491 0060 00000000 		.4byte	.LFB47
 7492 0064 34000000 		.4byte	.LFE47
 7493 0068 00000000 		.4byte	.LFB48
 7494 006c 40000000 		.4byte	.LFE48
 7495 0070 00000000 		.4byte	.LFB49
 7496 0074 5A000000 		.4byte	.LFE49
 7497 0078 00000000 		.4byte	.LFB50
 7498 007c 48000000 		.4byte	.LFE50
 7499 0080 00000000 		.4byte	.LFB51
 7500 0084 1C000000 		.4byte	.LFE51
 7501 0088 00000000 		.4byte	.LFB52
 7502 008c 96000000 		.4byte	.LFE52
 7503 0090 00000000 		.4byte	.LFB53
 7504 0094 38010000 		.4byte	.LFE53
 7505 0098 00000000 		.4byte	.LFB54
 7506 009c 5A000000 		.4byte	.LFE54
 7507 00a0 00000000 		.4byte	.LFB55
 7508 00a4 5A000000 		.4byte	.LFE55
 7509 00a8 00000000 		.4byte	.LFB56
 7510 00ac 6A000000 		.4byte	.LFE56
 7511 00b0 00000000 		.4byte	.LFB57
 7512 00b4 6A000000 		.4byte	.LFE57
 7513 00b8 00000000 		.4byte	.LFB58
 7514 00bc 44000000 		.4byte	.LFE58
 7515 00c0 00000000 		.4byte	.LFB59
 7516 00c4 4E000000 		.4byte	.LFE59
 7517 00c8 00000000 		.4byte	.LFB60
 7518 00cc 4E000000 		.4byte	.LFE60
 7519 00d0 00000000 		.4byte	.LFB61
 7520 00d4 6C000000 		.4byte	.LFE61
 7521 00d8 00000000 		.4byte	.LFB62
 7522 00dc 6C000000 		.4byte	.LFE62
 7523 00e0 00000000 		.4byte	.LFB63
 7524 00e4 58000000 		.4byte	.LFE63
 7525 00e8 00000000 		.4byte	.LFB64
 7526 00ec 58000000 		.4byte	.LFE64
 7527 00f0 00000000 		.4byte	.LFB65
 7528 00f4 60000000 		.4byte	.LFE65
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 157


 7529 00f8 00000000 		.4byte	.LFB66
 7530 00fc 60000000 		.4byte	.LFE66
 7531 0100 00000000 		.4byte	.LFB67
 7532 0104 02010000 		.4byte	.LFE67
 7533 0108 00000000 		.4byte	.LFB68
 7534 010c 4A010000 		.4byte	.LFE68
 7535 0110 00000000 		.4byte	.LFB69
 7536 0114 A6010000 		.4byte	.LFE69
 7537 0118 00000000 		.4byte	.LFB70
 7538 011c 4A010000 		.4byte	.LFE70
 7539 0120 00000000 		.4byte	.LFB71
 7540 0124 7A010000 		.4byte	.LFE71
 7541 0128 00000000 		.4byte	.LFB72
 7542 012c 2E000000 		.4byte	.LFE72
 7543 0130 00000000 		.4byte	.LFB73
 7544 0134 20000000 		.4byte	.LFE73
 7545 0138 00000000 		.4byte	.LFB74
 7546 013c 20000000 		.4byte	.LFE74
 7547 0140 00000000 		.4byte	.LFB75
 7548 0144 54000000 		.4byte	.LFE75
 7549 0148 00000000 		.4byte	.LFB76
 7550 014c 54000000 		.4byte	.LFE76
 7551 0150 00000000 		.4byte	.LFB77
 7552 0154 90000000 		.4byte	.LFE77
 7553 0158 00000000 		.4byte	.LFB78
 7554 015c 1E000000 		.4byte	.LFE78
 7555 0160 00000000 		.4byte	.LFB79
 7556 0164 BA000000 		.4byte	.LFE79
 7557 0168 00000000 		.4byte	.LFB80
 7558 016c 2E000000 		.4byte	.LFE80
 7559 0170 00000000 		.4byte	.LFB81
 7560 0174 2E000000 		.4byte	.LFE81
 7561 0178 00000000 		.4byte	.LFB82
 7562 017c 2E000000 		.4byte	.LFE82
 7563 0180 00000000 		.4byte	.LFB83
 7564 0184 24000000 		.4byte	.LFE83
 7565 0188 00000000 		.4byte	.LFB84
 7566 018c 38000000 		.4byte	.LFE84
 7567 0190 00000000 		.4byte	.LFB85
 7568 0194 40000000 		.4byte	.LFE85
 7569 0198 00000000 		.4byte	.LFB86
 7570 019c 38000000 		.4byte	.LFE86
 7571 01a0 00000000 		.4byte	.LFB87
 7572 01a4 36000000 		.4byte	.LFE87
 7573 01a8 00000000 		.4byte	0
 7574 01ac 00000000 		.4byte	0
 7575              		.section	.debug_line,"",%progbits
 7576              	.Ldebug_line0:
 7577 0000 E1060000 		.section	.debug_str,"MS",%progbits,1
 7577      02005F01 
 7577      00000201 
 7577      FB0E0D00 
 7577      01010101 
 7578              	.LASF63:
 7579 0000 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BLOB_RSP\000"
 7579      455F4556 
 7579      545F4741 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 158


 7579      5454435F 
 7579      52454144 
 7580              	.LASF131:
 7581 001e 7363616C 		.ascii	"scale\000"
 7581      6500
 7582              	.LASF139:
 7583 0024 73657458 		.ascii	"setXY\000"
 7583      5900
 7584              	.LASF39:
 7585 002a 4359424C 		.ascii	"CYBLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 7585      455F4556 
 7585      545F4741 
 7585      505F434F 
 7585      4E4E4543 
 7586              	.LASF84:
 7587 0053 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 7587      455F4556 
 7587      545F4C32 
 7587      4341505F 
 7587      43424643 
 7588              	.LASF27:
 7589 0074 4359424C 		.ascii	"CYBLE_EVT_STACK_BUSY_STATUS\000"
 7589      455F4556 
 7589      545F5354 
 7589      41434B5F 
 7589      42555359 
 7590              	.LASF125:
 7591 0090 74657874 		.ascii	"textSetCursor\000"
 7591      53657443 
 7591      7572736F 
 7591      7200
 7592              	.LASF2:
 7593 009e 5F5F7569 		.ascii	"__uint8_t\000"
 7593      6E74385F 
 7593      7400
 7594              	.LASF180:
 7595 00a8 736C6565 		.ascii	"sleep\000"
 7595      7000
 7596              	.LASF165:
 7597 00ae 72656374 		.ascii	"rectHelper\000"
 7597      48656C70 
 7597      657200
 7598              	.LASF24:
 7599 00b9 4359424C 		.ascii	"CYBLE_EVT_TIMEOUT\000"
 7599      455F4556 
 7599      545F5449 
 7599      4D454F55 
 7599      5400
 7600              	.LASF7:
 7601 00cb 6C6F6E67 		.ascii	"long int\000"
 7601      20696E74 
 7601      00
 7602              	.LASF11:
 7603 00d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 7603      206C6F6E 
 7603      6720756E 
 7603      7369676E 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 159


 7603      65642069 
 7604              	.LASF119:
 7605 00eb 7673796E 		.ascii	"vsync_start\000"
 7605      635F7374 
 7605      61727400 
 7606              	.LASF26:
 7607 00f7 4359424C 		.ascii	"CYBLE_EVT_HCI_STATUS\000"
 7607      455F4556 
 7607      545F4843 
 7607      495F5354 
 7607      41545553 
 7608              	.LASF192:
 7609 010c 7370695F 		.ascii	"spi_speed\000"
 7609      73706565 
 7609      6400
 7610              	.LASF132:
 7611 0116 74657874 		.ascii	"textWrite\000"
 7611      57726974 
 7611      6500
 7612              	.LASF89:
 7613 0120 4359424C 		.ascii	"CYBLE_EVT_PENDING_FLASH_WRITE\000"
 7613      455F4556 
 7613      545F5045 
 7613      4E44494E 
 7613      475F464C 
 7614              	.LASF78:
 7615 013e 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 7615      455F4556 
 7615      545F4C32 
 7615      4341505F 
 7615      434F4E4E 
 7616              	.LASF37:
 7617 0164 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 7617      455F4556 
 7617      545F4741 
 7617      505F4445 
 7617      56494345 
 7618              	.LASF155:
 7619 0186 7843656E 		.ascii	"xCenter\000"
 7619      74657200 
 7620              	.LASF42:
 7621 018e 4359424C 		.ascii	"CYBLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 7621      455F4556 
 7621      545F4741 
 7621      505F4E55 
 7621      4D455249 
 7622              	.LASF87:
 7623 01b7 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 7623      455F4556 
 7623      545F4C32 
 7623      4341505F 
 7623      43424643 
 7624              	.LASF14:
 7625 01da 696E7431 		.ascii	"int16_t\000"
 7625      365F7400 
 7626              	.LASF136:
 7627 01e2 77616974 		.ascii	"waitPoll\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 160


 7627      506F6C6C 
 7627      00
 7628              	.LASF10:
 7629 01eb 6C6F6E67 		.ascii	"long long int\000"
 7629      206C6F6E 
 7629      6720696E 
 7629      7400
 7630              	.LASF0:
 7631 01f9 7369676E 		.ascii	"signed char\000"
 7631      65642063 
 7631      68617200 
 7632              	.LASF23:
 7633 0205 4359424C 		.ascii	"CYBLE_EVT_STACK_ON\000"
 7633      455F4556 
 7633      545F5354 
 7633      41434B5F 
 7633      4F4E00
 7634              	.LASF40:
 7635 0218 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_START_STOP\000"
 7635      455F4556 
 7635      545F4741 
 7635      50435F53 
 7635      43414E5F 
 7636              	.LASF190:
 7637 0237 5F746578 		.ascii	"_textScale\000"
 7637      74536361 
 7637      6C6500
 7638              	.LASF30:
 7639 0242 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ\000"
 7639      455F4556 
 7639      545F4741 
 7639      505F4155 
 7639      54485F52 
 7640              	.LASF62:
 7641 0259 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_RSP\000"
 7641      455F4556 
 7641      545F4741 
 7641      5454435F 
 7641      52454144 
 7642              	.LASF117:
 7643 0272 7673796E 		.ascii	"vsync_pw\000"
 7643      635F7077 
 7643      00
 7644              	.LASF157:
 7645 027b 6C6F6E67 		.ascii	"longAxis\000"
 7645      41786973 
 7645      00
 7646              	.LASF172:
 7647 0284 50574D31 		.ascii	"PWM1config\000"
 7647      636F6E66 
 7647      696700
 7648              	.LASF110:
 7649 028f 736F6674 		.ascii	"softReset\000"
 7649      52657365 
 7649      7400
 7650              	.LASF35:
 7651 0299 4359424C 		.ascii	"CYBLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 161


 7651      455F4556 
 7651      545F4741 
 7651      50505F41 
 7651      44564552 
 7652              	.LASF182:
 7653 02c1 72656164 		.ascii	"readReg\000"
 7653      52656700 
 7654              	.LASF137:
 7655 02c9 7265676E 		.ascii	"regname\000"
 7655      616D6500 
 7656              	.LASF15:
 7657 02d1 75696E74 		.ascii	"uint16_t\000"
 7657      31365F74 
 7657      00
 7658              	.LASF164:
 7659 02da 66696C6C 		.ascii	"filled\000"
 7659      656400
 7660              	.LASF18:
 7661 02e1 646F7562 		.ascii	"double\000"
 7661      6C6500
 7662              	.LASF133:
 7663 02e8 62756666 		.ascii	"buffer\000"
 7663      657200
 7664              	.LASF176:
 7665 02ef 61646343 		.ascii	"adcClk\000"
 7665      6C6B00
 7666              	.LASF144:
 7667 02f6 64726177 		.ascii	"drawLine\000"
 7667      4C696E65 
 7667      00
 7668              	.LASF98:
 7669 02ff 4359424C 		.ascii	"CYBLE_DIS_FIRMWARE_REV\000"
 7669      455F4449 
 7669      535F4649 
 7669      524D5741 
 7669      52455F52 
 7670              	.LASF153:
 7671 0316 66696C6C 		.ascii	"fillTriangle\000"
 7671      54726961 
 7671      6E676C65 
 7671      00
 7672              	.LASF151:
 7673 0323 66696C6C 		.ascii	"fillCircle\000"
 7673      43697263 
 7673      6C6500
 7674              	.LASF97:
 7675 032e 4359424C 		.ascii	"CYBLE_DIS_HARDWARE_REV\000"
 7675      455F4449 
 7675      535F4841 
 7675      52445741 
 7675      52455F52 
 7676              	.LASF93:
 7677 0345 4359424C 		.ascii	"CYBLE_EVT_MAX\000"
 7677      455F4556 
 7677      545F4D41 
 7677      5800
 7678              	.LASF8:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 162


 7679 0353 5F5F7569 		.ascii	"__uint32_t\000"
 7679      6E743332 
 7679      5F7400
 7680              	.LASF159:
 7681 035e 66696C6C 		.ascii	"fillEllipse\000"
 7681      456C6C69 
 7681      70736500 
 7682              	.LASF3:
 7683 036a 5F5F696E 		.ascii	"__int16_t\000"
 7683      7431365F 
 7683      7400
 7684              	.LASF88:
 7685 0374 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 7685      455F4556 
 7685      545F4C32 
 7685      4341505F 
 7685      43424643 
 7686              	.LASF50:
 7687 0398 4359424C 		.ascii	"CYBLE_EVT_GAP_SCAN_REQ_RECVD\000"
 7687      455F4556 
 7687      545F4741 
 7687      505F5343 
 7687      414E5F52 
 7688              	.LASF124:
 7689 03b5 74656D70 		.ascii	"temp\000"
 7689      00
 7690              	.LASF145:
 7691 03ba 64726177 		.ascii	"drawFastVLine\000"
 7691      46617374 
 7691      564C696E 
 7691      6500
 7692              	.LASF77:
 7693 03c8 4359424C 		.ascii	"CYBLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 7693      455F4556 
 7693      545F4741 
 7693      5454435F 
 7693      4C4F4E47 
 7694              	.LASF75:
 7695 03eb 4359424C 		.ascii	"CYBLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 7695      455F4556 
 7695      545F4741 
 7695      5454435F 
 7695      53544F50 
 7696              	.LASF12:
 7697 040d 756E7369 		.ascii	"unsigned int\000"
 7697      676E6564 
 7697      20696E74 
 7697      00
 7698              	.LASF90:
 7699 041a 4359424C 		.ascii	"CYBLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 7699      455F4556 
 7699      545F4C45 
 7699      5F50494E 
 7699      475F4155 
 7700              	.LASF59:
 7701 0439 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 7701      455F4556 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 163


 7701      545F4741 
 7701      5454435F 
 7701      52454144 
 7702              	.LASF135:
 7703 045a 62656769 		.ascii	"begin\000"
 7703      6E00
 7704              	.LASF160:
 7705 0460 64726177 		.ascii	"drawCurve\000"
 7705      43757276 
 7705      6500
 7706              	.LASF185:
 7707 046a 77726974 		.ascii	"writeCommand\000"
 7707      65436F6D 
 7707      6D616E64 
 7707      00
 7708              	.LASF9:
 7709 0477 6C6F6E67 		.ascii	"long unsigned int\000"
 7709      20756E73 
 7709      69676E65 
 7709      6420696E 
 7709      7400
 7710              	.LASF49:
 7711 0489 4359424C 		.ascii	"CYBLE_EVT_GAP_CONN_ESTB\000"
 7711      455F4556 
 7711      545F4741 
 7711      505F434F 
 7711      4E4E5F45 
 7712              	.LASF167:
 7713 04a1 656C6C69 		.ascii	"ellipseHelper\000"
 7713      70736548 
 7713      656C7065 
 7713      7200
 7714              	.LASF57:
 7715 04af 4359424C 		.ascii	"CYBLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 7715      455F4556 
 7715      545F4741 
 7715      5454435F 
 7715      5843484E 
 7716              	.LASF74:
 7717 04cd 4359424C 		.ascii	"CYBLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 7717      455F4556 
 7717      545F4741 
 7717      5454535F 
 7717      44415441 
 7718              	.LASF161:
 7719 04f1 63757276 		.ascii	"curvePart\000"
 7719      65506172 
 7719      7400
 7720              	.LASF188:
 7721 04fb 5F776964 		.ascii	"_width\000"
 7721      746800
 7722              	.LASF168:
 7723 0502 63757276 		.ascii	"curveHelper\000"
 7723      6548656C 
 7723      70657200 
 7724              	.LASF120:
 7725 050e 77696474 		.ascii	"width\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 164


 7725      6800
 7726              	.LASF141:
 7727 0514 66696C6C 		.ascii	"fillRect1\000"
 7727      52656374 
 7727      3100
 7728              	.LASF111:
 7729 051e 504C4C69 		.ascii	"PLLinit\000"
 7729      6E697400 
 7730              	.LASF6:
 7731 0526 73686F72 		.ascii	"short unsigned int\000"
 7731      7420756E 
 7731      7369676E 
 7731      65642069 
 7731      6E7400
 7732              	.LASF22:
 7733 0539 4359424C 		.ascii	"CYBLE_EVT_HOST_INVALID\000"
 7733      455F4556 
 7733      545F484F 
 7733      53545F49 
 7733      4E56414C 
 7734              	.LASF60:
 7735 0550 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_INFO_RSP\000"
 7735      455F4556 
 7735      545F4741 
 7735      5454435F 
 7735      46494E44 
 7736              	.LASF28:
 7737 056e 4359424C 		.ascii	"CYBLE_EVT_MEMORY_REQUEST\000"
 7737      455F4556 
 7737      545F4D45 
 7737      4D4F5259 
 7737      5F524551 
 7738              	.LASF69:
 7739 0587 4359424C 		.ascii	"CYBLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 7739      455F4556 
 7739      545F4741 
 7739      5454535F 
 7739      45584543 
 7740              	.LASF31:
 7741 05a6 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 7741      455F4556 
 7741      545F4741 
 7741      505F5041 
 7741      53534B45 
 7742              	.LASF36:
 7743 05ca 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_CONNECTED\000"
 7743      455F4556 
 7743      545F4741 
 7743      505F4445 
 7743      56494345 
 7744              	.LASF134:
 7745 05e9 67726170 		.ascii	"graphicsMode\000"
 7745      68696373 
 7745      4D6F6465 
 7745      00
 7746              	.LASF72:
 7747 05f6 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_IND\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 165


 7747      455F4556 
 7747      545F4741 
 7747      5454435F 
 7747      48414E44 
 7748              	.LASF65:
 7749 0617 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_REQ\000"
 7749      455F4556 
 7749      545F4741 
 7749      5454535F 
 7749      57524954 
 7750              	.LASF51:
 7751 0631 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ_REPLY_ERR\000"
 7751      455F4556 
 7751      545F4741 
 7751      505F4155 
 7751      54485F52 
 7752              	.LASF109:
 7753 0652 626F6F6C 		.ascii	"bool\000"
 7753      00
 7754              	.LASF52:
 7755 0657 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_LOC_P256_KEYS_GEN_AND_SET_COMPLET"
 7755      455F4556 
 7755      545F4741 
 7755      505F534D 
 7755      505F4C4F 
 7756 068a 4500     		.ascii	"E\000"
 7757              	.LASF67:
 7758 068c 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_CMD_REQ\000"
 7758      455F4556 
 7758      545F4741 
 7758      5454535F 
 7758      57524954 
 7759              	.LASF102:
 7760 06aa 4359424C 		.ascii	"CYBLE_DIS_PNP_ID\000"
 7760      455F4449 
 7760      535F504E 
 7760      505F4944 
 7760      00
 7761              	.LASF127:
 7762 06bb 666F7265 		.ascii	"foreColor\000"
 7762      436F6C6F 
 7762      7200
 7763              	.LASF193:
 7764 06c5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7764      43313120 
 7764      352E342E 
 7764      31203230 
 7764      31363036 
 7765 06f8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 7765      20726576 
 7765      6973696F 
 7765      6E203233 
 7765      37373135 
 7766 072b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7766      66756E63 
 7766      74696F6E 
 7766      2D736563 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 166


 7766      74696F6E 
 7767              	.LASF154:
 7768 0753 64726177 		.ascii	"drawEllipse\000"
 7768      456C6C69 
 7768      70736500 
 7769              	.LASF143:
 7770 075f 636F6C6F 		.ascii	"color\000"
 7770      7200
 7771              	.LASF80:
 7772 0765 4359424C 		.ascii	"CYBLE_EVT_L2CAP_COMMAND_REJ\000"
 7772      455F4556 
 7772      545F4C32 
 7772      4341505F 
 7772      434F4D4D 
 7773              	.LASF105:
 7774 0781 52413838 		.ascii	"RA8875_800x480\000"
 7774      37355F38 
 7774      30307834 
 7774      383000
 7775              	.LASF179:
 7776 0790 64697370 		.ascii	"displayOn\000"
 7776      6C61794F 
 7776      6E00
 7777              	.LASF29:
 7778 079a 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 7778      455F4556 
 7778      545F4741 
 7778      50435F53 
 7778      43414E5F 
 7779              	.LASF100:
 7780 07be 4359424C 		.ascii	"CYBLE_DIS_SYSTEM_ID\000"
 7780      455F4449 
 7780      535F5359 
 7780      5354454D 
 7780      5F494400 
 7781              	.LASF162:
 7782 07d2 66696C6C 		.ascii	"fillCurve\000"
 7782      43757276 
 7782      6500
 7783              	.LASF54:
 7784 07dc 4359424C 		.ascii	"CYBLE_EVT_GATT_CONNECT_IND\000"
 7784      455F4556 
 7784      545F4741 
 7784      54545F43 
 7784      4F4E4E45 
 7785              	.LASF81:
 7786 07f7 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_IND\000"
 7786      455F4556 
 7786      545F4C32 
 7786      4341505F 
 7786      43424643 
 7787              	.LASF128:
 7788 0815 6267436F 		.ascii	"bgColor\000"
 7788      6C6F7200 
 7789              	.LASF183:
 7790 081d 77726974 		.ascii	"writeData\000"
 7790      65446174 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 167


 7790      6100
 7791              	.LASF146:
 7792 0827 64726177 		.ascii	"drawFastHLine\000"
 7792      46617374 
 7792      484C696E 
 7792      6500
 7793              	.LASF34:
 7794 0835 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_FAILED\000"
 7794      455F4556 
 7794      545F4741 
 7794      505F4155 
 7794      54485F46 
 7795              	.LASF66:
 7796 084f 4359424C 		.ascii	"CYBLE_EVT_GATTC_WRITE_RSP\000"
 7796      455F4556 
 7796      545F4741 
 7796      5454435F 
 7796      57524954 
 7797              	.LASF47:
 7798 0869 4359424C 		.ascii	"CYBLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 7798      455F4556 
 7798      545F4741 
 7798      50435F44 
 7798      49524543 
 7799              	.LASF45:
 7800 088a 4359424C 		.ascii	"CYBLE_EVT_GAP_DATA_LENGTH_CHANGE\000"
 7800      455F4556 
 7800      545F4741 
 7800      505F4441 
 7800      54415F4C 
 7801              	.LASF197:
 7802 08ab 636F6D70 		.ascii	"compare\000"
 7802      61726500 
 7803              	.LASF175:
 7804 08b3 746F7563 		.ascii	"touchEnable\000"
 7804      68456E61 
 7804      626C6500 
 7805              	.LASF123:
 7806 08bf 74657874 		.ascii	"textMode\000"
 7806      4D6F6465 
 7806      00
 7807              	.LASF33:
 7808 08c8 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_COMPLETE\000"
 7808      455F4556 
 7808      545F4741 
 7808      505F4155 
 7808      54485F43 
 7809              	.LASF32:
 7810 08e4 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 7810      455F4556 
 7810      545F4741 
 7810      505F5041 
 7810      53534B45 
 7811              	.LASF71:
 7812 090a 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 7812      455F4556 
 7812      545F4741 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 168


 7812      5454435F 
 7812      48414E44 
 7813              	.LASF126:
 7814 092b 74657874 		.ascii	"textColor\000"
 7814      436F6C6F 
 7814      7200
 7815              	.LASF101:
 7816 0935 4359424C 		.ascii	"CYBLE_DIS_REG_CERT_DATA\000"
 7816      455F4449 
 7816      535F5245 
 7816      475F4345 
 7816      52545F44 
 7817              	.LASF82:
 7818 094d 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 7818      455F4556 
 7818      545F4C32 
 7818      4341505F 
 7818      43424643 
 7819              	.LASF58:
 7820 096b 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 7820      455F4556 
 7820      545F4741 
 7820      5454435F 
 7820      52454144 
 7821              	.LASF17:
 7822 0992 666C6F61 		.ascii	"float\000"
 7822      7400
 7823              	.LASF150:
 7824 0998 64726177 		.ascii	"drawCircle\000"
 7824      43697263 
 7824      6C6500
 7825              	.LASF113:
 7826 09a3 6873796E 		.ascii	"hsync_start\000"
 7826      635F7374 
 7826      61727400 
 7827              	.LASF96:
 7828 09af 4359424C 		.ascii	"CYBLE_DIS_SERIAL_NUMBER\000"
 7828      455F4449 
 7828      535F5345 
 7828      5249414C 
 7828      5F4E554D 
 7829              	.LASF169:
 7830 09c7 4750494F 		.ascii	"GPIOX\000"
 7830      5800
 7831              	.LASF112:
 7832 09cd 70697863 		.ascii	"pixclk\000"
 7832      6C6B00
 7833              	.LASF156:
 7834 09d4 7943656E 		.ascii	"yCenter\000"
 7834      74657200 
 7835              	.LASF1:
 7836 09dc 756E7369 		.ascii	"unsigned char\000"
 7836      676E6564 
 7836      20636861 
 7836      7200
 7837              	.LASF103:
 7838 09ea 4359424C 		.ascii	"CYBLE_DIS_CHAR_COUNT\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 169


 7838      455F4449 
 7838      535F4348 
 7838      41525F43 
 7838      4F554E54 
 7839              	.LASF41:
 7840 09ff 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 7840      455F4556 
 7840      545F4741 
 7840      505F4B45 
 7840      59494E46 
 7841              	.LASF177:
 7842 0a23 746F7563 		.ascii	"touched\000"
 7842      68656400 
 7843              	.LASF118:
 7844 0a2b 7673796E 		.ascii	"vsync_nondisp\000"
 7844      635F6E6F 
 7844      6E646973 
 7844      7000
 7845              	.LASF158:
 7846 0a39 73686F72 		.ascii	"shortAxis\000"
 7846      74417869 
 7846      7300
 7847              	.LASF4:
 7848 0a43 73686F72 		.ascii	"short int\000"
 7848      7420696E 
 7848      7400
 7849              	.LASF178:
 7850 0a4d 746F7563 		.ascii	"touchRead\000"
 7850      68526561 
 7850      6400
 7851              	.LASF106:
 7852 0a57 66616C73 		.ascii	"false\000"
 7852      6500
 7853              	.LASF91:
 7854 0a5d 4359424C 		.ascii	"CYBLE_EVT_HCI_PKT\000"
 7854      455F4556 
 7854      545F4843 
 7854      495F504B 
 7854      5400
 7855              	.LASF99:
 7856 0a6f 4359424C 		.ascii	"CYBLE_DIS_SOFTWARE_REV\000"
 7856      455F4449 
 7856      535F534F 
 7856      46545741 
 7856      52455F52 
 7857              	.LASF149:
 7858 0a86 66696C6C 		.ascii	"fillScreen\000"
 7858      53637265 
 7858      656E00
 7859              	.LASF166:
 7860 0a91 74726961 		.ascii	"triangleHelper\000"
 7860      6E676C65 
 7860      48656C70 
 7860      657200
 7861              	.LASF122:
 7862 0aa0 696E6974 		.ascii	"initialize\000"
 7862      69616C69 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 170


 7862      7A6500
 7863              	.LASF68:
 7864 0aab 4359424C 		.ascii	"CYBLE_EVT_GATTS_PREP_WRITE_REQ\000"
 7864      455F4556 
 7864      545F4741 
 7864      5454535F 
 7864      50524550 
 7865              	.LASF38:
 7866 0aca 4359424C 		.ascii	"CYBLE_EVT_GAP_ENCRYPT_CHANGE\000"
 7866      455F4556 
 7866      545F4741 
 7866      505F454E 
 7866      43525950 
 7867              	.LASF194:
 7868 0ae7 52413838 		.ascii	"RA8875.c\000"
 7868      37352E63 
 7868      00
 7869              	.LASF171:
 7870 0af0 50574D32 		.ascii	"PWM2out\000"
 7870      6F757400 
 7871              	.LASF140:
 7872 0af8 70757368 		.ascii	"pushPixels\000"
 7872      50697865 
 7872      6C7300
 7873              	.LASF73:
 7874 0b03 4359424C 		.ascii	"CYBLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 7874      455F4556 
 7874      545F4741 
 7874      5454535F 
 7874      48414E44 
 7875              	.LASF53:
 7876 0b24 4359424C 		.ascii	"CYBLE_EVT_GATTC_ERROR_RSP\000"
 7876      455F4556 
 7876      545F4741 
 7876      5454435F 
 7876      4552524F 
 7877              	.LASF48:
 7878 0b3e 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 7878      455F4556 
 7878      545F4741 
 7878      505F534D 
 7878      505F4E45 
 7879              	.LASF174:
 7880 0b65 50574D32 		.ascii	"PWM2config\000"
 7880      636F6E66 
 7880      696700
 7881              	.LASF195:
 7882 0b70 433A5C55 		.ascii	"C:\\Users\\megan\\Google Drive\\College\\S10 - Fall"
 7882      73657273 
 7882      5C6D6567 
 7882      616E5C47 
 7882      6F6F676C 
 7883 0b9e 20323031 		.ascii	" 2017\\ECEN 4350 - Embedded uC Design\\Github\\ECEN"
 7883      375C4543 
 7883      454E2034 
 7883      33353020 
 7883      2D20456D 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 171


 7884 0bce 34333530 		.ascii	"4350-EmbeddedMicrocontrollerDesign\\BinMonitorPart1"
 7884      2D456D62 
 7884      65646465 
 7884      644D6963 
 7884      726F636F 
 7885 0c00 5C42696E 		.ascii	"\\BinMonitorPart1\\BinMonitorPart1.cydsn\000"
 7885      4D6F6E69 
 7885      746F7250 
 7885      61727431 
 7885      5C42696E 
 7886              	.LASF20:
 7887 0c27 6C6F6E67 		.ascii	"long double\000"
 7887      20646F75 
 7887      626C6500 
 7888              	.LASF19:
 7889 0c33 63686172 		.ascii	"char\000"
 7889      00
 7890              	.LASF64:
 7891 0c38 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_MULTI_RSP\000"
 7891      455F4556 
 7891      545F4741 
 7891      5454435F 
 7891      52454144 
 7892              	.LASF104:
 7893 0c57 52413838 		.ascii	"RA8875_480x272\000"
 7893      37355F34 
 7893      38307832 
 7893      373200
 7894              	.LASF187:
 7895 0c66 5F727374 		.ascii	"_rst\000"
 7895      00
 7896              	.LASF191:
 7897 0c6b 5F73697A 		.ascii	"_size\000"
 7897      6500
 7898              	.LASF186:
 7899 0c71 72656164 		.ascii	"readStatus\000"
 7899      53746174 
 7899      757300
 7900              	.LASF5:
 7901 0c7c 5F5F7569 		.ascii	"__uint16_t\000"
 7901      6E743136 
 7901      5F7400
 7902              	.LASF76:
 7903 0c87 4359424C 		.ascii	"CYBLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 7903      455F4556 
 7903      545F4741 
 7903      5454535F 
 7903      52454144 
 7904              	.LASF108:
 7905 0cb0 626F6F6C 		.ascii	"boolean\000"
 7905      65616E00 
 7906              	.LASF43:
 7907 0cb8 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 7907      455F4556 
 7907      545F4741 
 7907      505F4B45 
 7907      59505245 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 172


 7908              	.LASF86:
 7909 0cdc 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 7909      455F4556 
 7909      545F4C32 
 7909      4341505F 
 7909      43424643 
 7910              	.LASF184:
 7911 0cff 72656164 		.ascii	"readData\000"
 7911      44617461 
 7911      00
 7912              	.LASF85:
 7913 0d08 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_READ\000"
 7913      455F4556 
 7913      545F4C32 
 7913      4341505F 
 7913      43424643 
 7914              	.LASF114:
 7915 0d27 6873796E 		.ascii	"hsync_pw\000"
 7915      635F7077 
 7915      00
 7916              	.LASF170:
 7917 0d30 50574D31 		.ascii	"PWM1out\000"
 7917      6F757400 
 7918              	.LASF25:
 7919 0d38 4359424C 		.ascii	"CYBLE_EVT_HARDWARE_ERROR\000"
 7919      455F4556 
 7919      545F4841 
 7919      52445741 
 7919      52455F45 
 7920              	.LASF44:
 7921 0d51 4359424C 		.ascii	"CYBLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 7921      455F4556 
 7921      545F4741 
 7921      505F4F4F 
 7921      425F4745 
 7922              	.LASF116:
 7923 0d7a 6873796E 		.ascii	"hsync_nondisp\000"
 7923      635F6E6F 
 7923      6E646973 
 7923      7000
 7924              	.LASF61:
 7925 0d88 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 7925      455F4556 
 7925      545F4741 
 7925      5454435F 
 7925      46494E44 
 7926              	.LASF196:
 7927 0daf 52413838 		.ascii	"RA8875sizes\000"
 7927      37357369 
 7927      7A657300 
 7928              	.LASF181:
 7929 0dbb 77726974 		.ascii	"writeReg\000"
 7929      65526567 
 7929      00
 7930              	.LASF56:
 7931 0dc4 4359424C 		.ascii	"CYBLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 7931      455F4556 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 173


 7931      545F4741 
 7931      5454535F 
 7931      58434E48 
 7932              	.LASF189:
 7933 0de2 5F686569 		.ascii	"_height\000"
 7933      67687400 
 7934              	.LASF152:
 7935 0dea 64726177 		.ascii	"drawTriangle\000"
 7935      54726961 
 7935      6E676C65 
 7935      00
 7936              	.LASF129:
 7937 0df7 74657874 		.ascii	"textTransparent\000"
 7937      5472616E 
 7937      73706172 
 7937      656E7400 
 7938              	.LASF142:
 7939 0e07 64726177 		.ascii	"drawPixel\000"
 7939      50697865 
 7939      6C00
 7940              	.LASF147:
 7941 0e11 64726177 		.ascii	"drawRect\000"
 7941      52656374 
 7941      00
 7942              	.LASF13:
 7943 0e1a 75696E74 		.ascii	"uint8_t\000"
 7943      385F7400 
 7944              	.LASF130:
 7945 0e22 74657874 		.ascii	"textEnlarge\000"
 7945      456E6C61 
 7945      72676500 
 7946              	.LASF70:
 7947 0e2e 4359424C 		.ascii	"CYBLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 7947      455F4556 
 7947      545F4741 
 7947      5454435F 
 7947      45584543 
 7948              	.LASF95:
 7949 0e4d 4359424C 		.ascii	"CYBLE_DIS_MODEL_NUMBER\000"
 7949      455F4449 
 7949      535F4D4F 
 7949      44454C5F 
 7949      4E554D42 
 7950              	.LASF21:
 7951 0e64 73697A65 		.ascii	"sizetype\000"
 7951      74797065 
 7951      00
 7952              	.LASF163:
 7953 0e6d 63697263 		.ascii	"circleHelper\000"
 7953      6C654865 
 7953      6C706572 
 7953      00
 7954              	.LASF115:
 7955 0e7a 6873796E 		.ascii	"hsync_finetune\000"
 7955      635F6669 
 7955      6E657475 
 7955      6E6500
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 174


 7956              	.LASF138:
 7957 0e89 77616974 		.ascii	"waitflag\000"
 7957      666C6167 
 7957      00
 7958              	.LASF83:
 7959 0e92 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 7959      455F4556 
 7959      545F4C32 
 7959      4341505F 
 7959      43424643 
 7960              	.LASF173:
 7961 0eb3 636C6F63 		.ascii	"clock\000"
 7961      6B00
 7962              	.LASF121:
 7963 0eb9 68656967 		.ascii	"height\000"
 7963      687400
 7964              	.LASF79:
 7965 0ec0 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 7965      455F4556 
 7965      545F4C32 
 7965      4341505F 
 7965      434F4E4E 
 7966              	.LASF46:
 7967 0ee6 4359424C 		.ascii	"CYBLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 7967      455F4556 
 7967      545F4741 
 7967      505F454E 
 7967      48414E43 
 7968              	.LASF94:
 7969 0f0a 4359424C 		.ascii	"CYBLE_DIS_MANUFACTURER_NAME\000"
 7969      455F4449 
 7969      535F4D41 
 7969      4E554641 
 7969      43545552 
 7970              	.LASF55:
 7971 0f26 4359424C 		.ascii	"CYBLE_EVT_GATT_DISCONNECT_IND\000"
 7971      455F4556 
 7971      545F4741 
 7971      54545F44 
 7971      4953434F 
 7972              	.LASF16:
 7973 0f44 75696E74 		.ascii	"uint32_t\000"
 7973      33325F74 
 7973      00
 7974              	.LASF92:
 7975 0f4d 4359424C 		.ascii	"CYBLE_EVT_FLASH_CORRUPT\000"
 7975      455F4556 
 7975      545F464C 
 7975      4153485F 
 7975      434F5252 
 7976              	.LASF148:
 7977 0f65 66696C6C 		.ascii	"fillRect\000"
 7977      52656374 
 7977      00
 7978              	.LASF107:
 7979 0f6e 74727565 		.ascii	"true\000"
 7979      00
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccmrZjBX.s 			page 175


 7980              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
