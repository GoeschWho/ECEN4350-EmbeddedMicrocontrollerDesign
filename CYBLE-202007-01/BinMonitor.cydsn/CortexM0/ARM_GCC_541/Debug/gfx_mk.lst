ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"gfx_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	gfxInitDone:
  21 0000 00       		.space	1
  22              		.section	.text.gfxInit,"ax",%progbits
  23              		.align	2
  24              		.global	gfxInit
  25              		.code	16
  26              		.thumb_func
  27              		.type	gfxInit, %function
  28              	gfxInit:
  29              	.LFB0:
  30              		.file 1 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gfx.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** /**
   9:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  * @file    src/gfx.c
  10:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  * @brief   GFX common routines.
  11:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c ****  */
  12:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  13:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** /* Display various warnings from gfx_rules.h */
  14:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #define GFX_DISPLAY_RULE_WARNINGS	TRUE
  15:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  16:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #include "../gfx.h"
  17:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  18:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** static bool_t gfxInitDone = FALSE;
  19:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  20:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** /* These init functions are defined by each module but not published */
  21:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** extern void _gosInit(void);
  22:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** extern void _gosDeinit(void);
  23:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #ifdef GFX_OS_PRE_INIT_FUNCTION
  24:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		extern void GFX_OS_PRE_INIT_FUNCTION(void);
  25:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  26:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #ifdef GFX_OS_EXTRA_INIT_FUNCTION
  27:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		extern void GFX_OS_EXTRA_INIT_FUNCTION(void);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 2


  28:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  29:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #ifdef GFX_OS_EXTRA_DEINIT_FUNCTION
  30:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		extern void GFX_OS_EXTRA_DEINIT_FUNCTION(void);
  31:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  32:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GDRIVER
  33:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gdriverInit(void);
  34:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gdriverDeinit(void);
  35:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  36:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GFILE
  37:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gfileInit(void);
  38:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gfileDeinit(void);
  39:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  40:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GDISP
  41:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gdispInit(void);
  42:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gdispDeinit(void);
  43:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  44:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GWIN
  45:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gwinInit(void);
  46:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gwinDeinit(void);
  47:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  48:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GEVENT
  49:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _geventInit(void);
  50:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _geventDeinit(void);
  51:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  52:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GTIMER
  53:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gtimerInit(void);
  54:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gtimerDeinit(void);
  55:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  56:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GINPUT
  57:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _ginputInit(void);
  58:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _ginputDeinit(void);
  59:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  60:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GADC
  61:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gadcInit(void);
  62:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gadcDeinit(void);
  63:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  64:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GAUDIO
  65:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gaudioInit(void);
  66:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gaudioDeinit(void);
  67:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  68:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GQUEUE
  69:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gqueueInit(void);
  70:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gqueueDeinit(void);
  71:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  72:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GMISC
  73:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gmiscInit(void);
  74:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gmiscDeinit(void);
  75:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  76:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #if GFX_USE_GTRANS
  77:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gtransInit(void);
  78:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	extern void _gtransDeinit(void);
  79:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** #endif
  80:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  81:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** void gfxInit(void)
  82:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** {
  31              		.loc 1 82 0
  32              		.cfi_startproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 3


  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  83:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	/* Ensure we only initialise once */
  84:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	if (gfxInitDone)
  41              		.loc 1 84 0
  42 0004 084B     		ldr	r3, .L5
  43 0006 1B78     		ldrb	r3, [r3]
  44 0008 002B     		cmp	r3, #0
  45 000a 09D1     		bne	.L4
  85:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		return;
  86:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	gfxInitDone = TRUE;
  46              		.loc 1 86 0
  47 000c 064B     		ldr	r3, .L5
  48 000e FF22     		movs	r2, #255
  49 0010 1A70     		strb	r2, [r3]
  87:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  88:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	// These must be initialised in the order of their dependancies
  89:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
  90:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#ifdef GFX_OS_PRE_INIT_FUNCTION
  91:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		GFX_OS_PRE_INIT_FUNCTION();
  92:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
  93:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	_gosInit();
  50              		.loc 1 93 0
  51 0012 FFF7FEFF 		bl	_gosInit
  94:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#ifdef GFX_OS_EXTRA_INIT_FUNCTION
  95:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		GFX_OS_EXTRA_INIT_FUNCTION();
  96:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
  97:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GQUEUE
  98:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gqueueInit();
  99:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 100:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GMISC
 101:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gmiscInit();
 102:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 103:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GTRANS
 104:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gtransInit();
 105:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 106:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GEVENT
 107:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_geventInit();
 108:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 109:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GTIMER
 110:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gtimerInit();
 111:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 112:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GDRIVER
 113:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gdriverInit();
  52              		.loc 1 113 0
  53 0016 FFF7FEFF 		bl	_gdriverInit
 114:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 115:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GFILE
 116:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gfileInit();
 117:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 118:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GDISP
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 4


 119:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gdispInit();
  54              		.loc 1 119 0
  55 001a FFF7FEFF 		bl	_gdispInit
  56 001e 00E0     		b	.L1
  57              	.L4:
  85:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	gfxInitDone = TRUE;
  58              		.loc 1 85 0
  59 0020 C046     		nop
  60              	.L1:
 120:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 121:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GINPUT
 122:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_ginputInit();
 123:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 124:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GADC
 125:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gadcInit();
 126:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 127:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GAUDIO
 128:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gaudioInit();
 129:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 130:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GWIN
 131:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gwinInit();
 132:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 133:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** }
  61              		.loc 1 133 0
  62 0022 BD46     		mov	sp, r7
  63              		@ sp needed
  64 0024 80BD     		pop	{r7, pc}
  65              	.L6:
  66 0026 C046     		.align	2
  67              	.L5:
  68 0028 00000000 		.word	gfxInitDone
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	gfxInit, .-gfxInit
  72              		.section	.text.gfxDeinit,"ax",%progbits
  73              		.align	2
  74              		.global	gfxDeinit
  75              		.code	16
  76              		.thumb_func
  77              		.type	gfxDeinit, %function
  78              	gfxDeinit:
  79              	.LFB1:
 134:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
 135:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** void gfxDeinit(void)
 136:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** {
  80              		.loc 1 136 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
 137:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	if (!gfxInitDone)
  90              		.loc 1 137 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 5


  91 0004 084B     		ldr	r3, .L11
  92 0006 1B78     		ldrb	r3, [r3]
  93 0008 002B     		cmp	r3, #0
  94 000a 09D0     		beq	.L10
 138:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		return;
 139:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	gfxInitDone = FALSE;
  95              		.loc 1 139 0
  96 000c 064B     		ldr	r3, .L11
  97 000e 0022     		movs	r2, #0
  98 0010 1A70     		strb	r2, [r3]
 140:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 
 141:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	// We deinitialise the opposite way as we initialised
 142:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GWIN
 143:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gwinDeinit();
 144:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 145:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GAUDIO
 146:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gaudioDeinit();
 147:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 148:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GADC
 149:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gadcDeinit();
 150:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 151:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GINPUT
 152:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_ginputDeinit();
 153:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 154:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GDISP
 155:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gdispDeinit();
  99              		.loc 1 155 0
 100 0012 FFF7FEFF 		bl	_gdispDeinit
 156:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 157:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GFILE
 158:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gfileDeinit();
 159:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 160:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GDRIVER
 161:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gdriverDeinit();
 101              		.loc 1 161 0
 102 0016 FFF7FEFF 		bl	_gdriverDeinit
 162:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 163:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GTIMER
 164:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gtimerDeinit();
 165:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 166:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GEVENT
 167:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_geventDeinit();
 168:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 169:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GTRANS
 170:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gtransDeinit();
 171:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 172:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GMISC
 173:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gmiscDeinit();
 174:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 175:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#if GFX_USE_GQUEUE
 176:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		_gqueueDeinit();
 177:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 178:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#ifdef GFX_OS_EXTRA_DEINIT_FUNCTION
 179:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 		GFX_OS_EXTRA_DEINIT_FUNCTION();
 180:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	#endif
 181:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	_gosDeinit();
 103              		.loc 1 181 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 6


 104 001a FFF7FEFF 		bl	_gosDeinit
 105 001e 00E0     		b	.L7
 106              	.L10:
 138:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** 	gfxInitDone = FALSE;
 107              		.loc 1 138 0
 108 0020 C046     		nop
 109              	.L7:
 182:..\..\ugfx_2.7\ugfx_2.7\src/gfx.c **** }
 110              		.loc 1 182 0
 111 0022 BD46     		mov	sp, r7
 112              		@ sp needed
 113 0024 80BD     		pop	{r7, pc}
 114              	.L12:
 115 0026 C046     		.align	2
 116              	.L11:
 117 0028 00000000 		.word	gfxInitDone
 118              		.cfi_endproc
 119              	.LFE1:
 120              		.size	gfxDeinit, .-gfxDeinit
 121              		.section	.text._gosInit,"ax",%progbits
 122              		.align	2
 123              		.global	_gosInit
 124              		.code	16
 125              		.thumb_func
 126              		.type	_gosInit, %function
 127              	_gosInit:
 128              	.LFB2:
 129              		.file 2 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gos/gos_raw32.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** // We need to include stdio.h below for Win32 emulation. Turn off GFILE_NEED_STDIO just for this fi
   9:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** #define GFILE_NEED_STDIO_MUST_BE_OFF
  10:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  11:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** #include "../../gfx.h"
  12:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  13:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** #if GFX_USE_OS_RAW32
  14:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  15:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void _gosHeapInit(void);
  16:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void _gosThreadsInit(void);
  17:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  18:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** /*********************************************************
  19:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * Initialise
  20:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  *********************************************************/
  21:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  22:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void _gosInit(void)
  23:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** {
 130              		.loc 2 23 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 7


 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
  24:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	/* No initialization of the operating system itself is needed as there isn't one.
  25:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	 * On the other hand the C runtime should still already be initialized before
  26:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	 * getting here!
  27:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	 */
  28:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#if !GFX_OS_INIT_NO_WARNING
  29:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		#warning "GOS: Raw32 - Make sure you initialize your hardware and the C runtime before calling gf
  30:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#endif
  31:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  32:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	// Set up the heap allocator
  33:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	_gosHeapInit();
 140              		.loc 2 33 0
 141 0004 FFF7FEFF 		bl	_gosHeapInit
  34:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  35:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	// Start the scheduler
  36:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	_gosThreadsInit();
 142              		.loc 2 36 0
 143 0008 FFF7FEFF 		bl	_gosThreadsInit
  37:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** }
 144              		.loc 2 37 0
 145 000c C046     		nop
 146 000e BD46     		mov	sp, r7
 147              		@ sp needed
 148 0010 80BD     		pop	{r7, pc}
 149              		.cfi_endproc
 150              	.LFE2:
 151              		.size	_gosInit, .-_gosInit
 152 0012 C046     		.section	.text._gosDeinit,"ax",%progbits
 153              		.align	2
 154              		.global	_gosDeinit
 155              		.code	16
 156              		.thumb_func
 157              		.type	_gosDeinit, %function
 158              	_gosDeinit:
 159              	.LFB3:
  38:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  39:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void _gosDeinit(void)
  40:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** {
 160              		.loc 2 40 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 00AF     		add	r7, sp, #0
 169              		.cfi_def_cfa_register 7
  41:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	/* ToDo */
  42:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** }
 170              		.loc 2 42 0
 171 0004 C046     		nop
 172 0006 BD46     		mov	sp, r7
 173              		@ sp needed
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 8


 174 0008 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE3:
 177              		.size	_gosDeinit, .-_gosDeinit
 178              		.section	.text.gfxHalt,"ax",%progbits
 179              		.align	2
 180              		.global	gfxHalt
 181              		.code	16
 182              		.thumb_func
 183              		.type	gfxHalt, %function
 184              	gfxHalt:
 185              	.LFB4:
  43:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  44:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** /*********************************************************
  45:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * For Win32 emulation - automatically add the tick functions
  46:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * the user would normally have to provide for bare metal.
  47:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  *********************************************************/
  48:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  49:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** #if defined(WIN32)
  50:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	// Win32 nasty stuff - we have conflicting definitions for Red, Green & Blue
  51:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#ifndef _WIN32_WINNT
  52:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		#define _WIN32_WINNT 0x0501			// Windows XP and up
  53:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#endif
  54:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#undef Red
  55:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#undef Green
  56:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#undef Blue
  57:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#define WIN32_LEAN_AND_MEAN
  58:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#include <windows.h>
  59:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#undef WIN32_LEAN_AND_MEAN
  60:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#define Blue			HTML2COLOR(0x0000FF)
  61:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#define Red				HTML2COLOR(0xFF0000)
  62:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#define Green			HTML2COLOR(0x008000)
  63:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  64:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#include <stdio.h>
  65:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	systemticks_t gfxSystemTicks(void)						{ return GetTickCount(); }
  66:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	systemticks_t gfxMillisecondsToTicks(delaytime_t ms)	{ return ms; }
  67:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** #endif
  68:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  69:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** /*********************************************************
  70:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  * Exit everything functions
  71:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c ****  *********************************************************/
  72:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  73:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void gfxHalt(const char *msg) {
 186              		.loc 2 73 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 16
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190 0000 80B5     		push	{r7, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 0002 84B0     		sub	sp, sp, #16
 195              		.cfi_def_cfa_offset 24
 196 0004 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
 199              	.L16:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 9


  74:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#if defined(WIN32)
  75:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		fprintf(stderr, "%s\n", msg);
  76:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		ExitProcess(1);
  77:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#else
  78:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		volatile uint32_t	dummy;
  79:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		(void)				msg;
  80:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  81:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		while(1)
  82:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 			dummy++;
 200              		.loc 2 82 0 discriminator 1
 201 0008 FB68     		ldr	r3, [r7, #12]
 202 000a 0133     		adds	r3, r3, #1
 203 000c FB60     		str	r3, [r7, #12]
 204 000e FBE7     		b	.L16
 205              		.cfi_endproc
 206              	.LFE4:
 207              		.size	gfxHalt, .-gfxHalt
 208              		.section	.text.gfxExit,"ax",%progbits
 209              		.align	2
 210              		.global	gfxExit
 211              		.code	16
 212              		.thumb_func
 213              		.type	gfxExit, %function
 214              	gfxExit:
 215              	.LFB5:
  83:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#endif
  84:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** }
  85:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  86:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** void gfxExit(void) {
 216              		.loc 2 86 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 228              	.L18:
  87:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#if defined(WIN32)
  88:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		ExitProcess(0);
  89:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 	#else
  90:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		volatile uint32_t	dummy;
  91:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 
  92:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 		while(1)
  93:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_raw32.c **** 			dummy++;
 229              		.loc 2 93 0 discriminator 1
 230 0006 7B68     		ldr	r3, [r7, #4]
 231 0008 0133     		adds	r3, r3, #1
 232 000a 7B60     		str	r3, [r7, #4]
 233 000c FBE7     		b	.L18
 234              		.cfi_endproc
 235              	.LFE5:
 236              		.size	gfxExit, .-gfxExit
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 10


 237 000e C046     		.section	.text.gfxSystemLock,"ax",%progbits
 238              		.align	2
 239              		.global	gfxSystemLock
 240              		.code	16
 241              		.thumb_func
 242              		.type	gfxSystemLock, %function
 243              	gfxSystemLock:
 244              	.LFB6:
 245              		.file 3 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gos/gos_x_threads.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #include "../../gfx.h"
   9:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  10:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #if GOS_NEED_X_THREADS
  11:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  12:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** /*********************************************************
  13:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * Semaphores and critical region functions
  14:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *********************************************************/
  15:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  16:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #if !defined(INTERRUPTS_OFF) || !defined(INTERRUPTS_ON)
  17:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#define INTERRUPTS_OFF()
  18:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#define INTERRUPTS_ON()
  19:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #endif
  20:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  21:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSystemLock(void) {
 246              		.loc 3 21 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  22:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_OFF();
  23:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 256              		.loc 3 23 0
 257 0004 C046     		nop
 258 0006 BD46     		mov	sp, r7
 259              		@ sp needed
 260 0008 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE6:
 263              		.size	gfxSystemLock, .-gfxSystemLock
 264 000a C046     		.section	.text.gfxSystemUnlock,"ax",%progbits
 265              		.align	2
 266              		.global	gfxSystemUnlock
 267              		.code	16
 268              		.thumb_func
 269              		.type	gfxSystemUnlock, %function
 270              	gfxSystemUnlock:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 11


 271              	.LFB7:
  24:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  25:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSystemUnlock(void) {
 272              		.loc 3 25 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
  26:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_ON();
  27:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 282              		.loc 3 27 0
 283 0004 C046     		nop
 284 0006 BD46     		mov	sp, r7
 285              		@ sp needed
 286 0008 80BD     		pop	{r7, pc}
 287              		.cfi_endproc
 288              	.LFE7:
 289              		.size	gfxSystemUnlock, .-gfxSystemUnlock
 290              		.section	.text.gfxMutexInit,"ax",%progbits
 291              		.align	2
 292              		.global	gfxMutexInit
 293              		.code	16
 294              		.thumb_func
 295              		.type	gfxMutexInit, %function
 296              	gfxMutexInit:
 297              	.LFB8:
  28:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  29:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxMutexInit(gfxMutex *pmutex) {
 298              		.loc 3 29 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 82B0     		sub	sp, sp, #8
 307              		.cfi_def_cfa_offset 16
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
  30:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	pmutex[0] = 0;
 311              		.loc 3 30 0
 312 0008 7B68     		ldr	r3, [r7, #4]
 313 000a 0022     		movs	r2, #0
 314 000c 1A60     		str	r2, [r3]
  31:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 315              		.loc 3 31 0
 316 000e C046     		nop
 317 0010 BD46     		mov	sp, r7
 318 0012 02B0     		add	sp, sp, #8
 319              		@ sp needed
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 12


 320 0014 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE8:
 323              		.size	gfxMutexInit, .-gfxMutexInit
 324 0016 C046     		.section	.text.gfxMutexEnter,"ax",%progbits
 325              		.align	2
 326              		.global	gfxMutexEnter
 327              		.code	16
 328              		.thumb_func
 329              		.type	gfxMutexEnter, %function
 330              	gfxMutexEnter:
 331              	.LFB9:
  32:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  33:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxMutexEnter(gfxMutex *pmutex) {
 332              		.loc 3 33 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 82B0     		sub	sp, sp, #8
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
  34:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_OFF();
  35:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	while (pmutex[0]) {
 345              		.loc 3 35 0
 346 0008 01E0     		b	.L23
 347              	.L24:
  36:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_ON();
  37:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 348              		.loc 3 37 0
 349 000a FFF7FEFF 		bl	gfxYield
 350              	.L23:
  35:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_ON();
 351              		.loc 3 35 0
 352 000e 7B68     		ldr	r3, [r7, #4]
 353 0010 1B68     		ldr	r3, [r3]
 354 0012 002B     		cmp	r3, #0
 355 0014 F9D1     		bne	.L24
  38:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_OFF();
  39:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
  40:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	pmutex[0] = 1;
 356              		.loc 3 40 0
 357 0016 7B68     		ldr	r3, [r7, #4]
 358 0018 0122     		movs	r2, #1
 359 001a 1A60     		str	r2, [r3]
  41:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_ON();
  42:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 360              		.loc 3 42 0
 361 001c C046     		nop
 362 001e BD46     		mov	sp, r7
 363 0020 02B0     		add	sp, sp, #8
 364              		@ sp needed
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 13


 365 0022 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE9:
 368              		.size	gfxMutexEnter, .-gfxMutexEnter
 369              		.section	.text.gfxMutexExit,"ax",%progbits
 370              		.align	2
 371              		.global	gfxMutexExit
 372              		.code	16
 373              		.thumb_func
 374              		.type	gfxMutexExit, %function
 375              	gfxMutexExit:
 376              	.LFB10:
  43:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  44:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxMutexExit(gfxMutex *pmutex) {
 377              		.loc 3 44 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 82B0     		sub	sp, sp, #8
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
  45:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	pmutex[0] = 0;
 390              		.loc 3 45 0
 391 0008 7B68     		ldr	r3, [r7, #4]
 392 000a 0022     		movs	r2, #0
 393 000c 1A60     		str	r2, [r3]
  46:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 394              		.loc 3 46 0
 395 000e C046     		nop
 396 0010 BD46     		mov	sp, r7
 397 0012 02B0     		add	sp, sp, #8
 398              		@ sp needed
 399 0014 80BD     		pop	{r7, pc}
 400              		.cfi_endproc
 401              	.LFE10:
 402              		.size	gfxMutexExit, .-gfxMutexExit
 403 0016 C046     		.section	.text.gfxSemInit,"ax",%progbits
 404              		.align	2
 405              		.global	gfxSemInit
 406              		.code	16
 407              		.thumb_func
 408              		.type	gfxSemInit, %function
 409              	gfxSemInit:
 410              	.LFB11:
  47:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  48:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSemInit(gfxSem *psem, semcount_t val, semcount_t limit) {
 411              		.loc 3 48 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 14


 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 82B0     		sub	sp, sp, #8
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 423 0006 7860     		str	r0, [r7, #4]
 424 0008 0800     		movs	r0, r1
 425 000a 1100     		movs	r1, r2
 426 000c BB1C     		adds	r3, r7, #2
 427 000e 021C     		adds	r2, r0, #0
 428 0010 1A80     		strh	r2, [r3]
 429 0012 3B00     		movs	r3, r7
 430 0014 0A1C     		adds	r2, r1, #0
 431 0016 1A80     		strh	r2, [r3]
  49:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	psem->cnt = val;
 432              		.loc 3 49 0
 433 0018 7B68     		ldr	r3, [r7, #4]
 434 001a BA1C     		adds	r2, r7, #2
 435 001c 1288     		ldrh	r2, [r2]
 436 001e 1A80     		strh	r2, [r3]
  50:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	psem->limit = limit;
 437              		.loc 3 50 0
 438 0020 7B68     		ldr	r3, [r7, #4]
 439 0022 3A00     		movs	r2, r7
 440 0024 1288     		ldrh	r2, [r2]
 441 0026 5A80     		strh	r2, [r3, #2]
  51:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 442              		.loc 3 51 0
 443 0028 C046     		nop
 444 002a BD46     		mov	sp, r7
 445 002c 02B0     		add	sp, sp, #8
 446              		@ sp needed
 447 002e 80BD     		pop	{r7, pc}
 448              		.cfi_endproc
 449              	.LFE11:
 450              		.size	gfxSemInit, .-gfxSemInit
 451              		.section	.text.gfxSemWait,"ax",%progbits
 452              		.align	2
 453              		.global	gfxSemWait
 454              		.code	16
 455              		.thumb_func
 456              		.type	gfxSemWait, %function
 457              	gfxSemWait:
 458              	.LFB12:
  52:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  53:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** bool_t gfxSemWait(gfxSem *psem, delaytime_t ms) {
 459              		.loc 3 53 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 16
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 15


 468              		.cfi_def_cfa_offset 24
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 7860     		str	r0, [r7, #4]
 472 0008 3960     		str	r1, [r7]
  54:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	systemticks_t	starttm, delay;
  55:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  56:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Convert our delay to ticks
  57:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	starttm = 0;
 473              		.loc 3 57 0
 474 000a 0023     		movs	r3, #0
 475 000c FB60     		str	r3, [r7, #12]
  58:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	switch (ms) {
 476              		.loc 3 58 0
 477 000e 3B68     		ldr	r3, [r7]
 478 0010 002B     		cmp	r3, #0
 479 0012 02D0     		beq	.L29
 480 0014 0133     		adds	r3, r3, #1
 481 0016 03D0     		beq	.L30
 482 0018 06E0     		b	.L41
 483              	.L29:
  59:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_IMMEDIATE:
  60:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		delay = TIME_IMMEDIATE;
 484              		.loc 3 60 0
 485 001a 0023     		movs	r3, #0
 486 001c BB60     		str	r3, [r7, #8]
  61:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		break;
 487              		.loc 3 61 0
 488 001e 12E0     		b	.L31
 489              	.L30:
  62:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_INFINITE:
  63:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		delay = TIME_INFINITE;
 490              		.loc 3 63 0
 491 0020 0123     		movs	r3, #1
 492 0022 5B42     		rsbs	r3, r3, #0
 493 0024 BB60     		str	r3, [r7, #8]
  64:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		break;
 494              		.loc 3 64 0
 495 0026 0EE0     		b	.L31
 496              	.L41:
  65:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	default:
  66:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		delay = gfxMillisecondsToTicks(ms);
 497              		.loc 3 66 0
 498 0028 3B68     		ldr	r3, [r7]
 499 002a 1800     		movs	r0, r3
 500 002c FFF7FEFF 		bl	gfxMillisecondsToTicks
 501 0030 0300     		movs	r3, r0
 502 0032 BB60     		str	r3, [r7, #8]
  67:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		if (!delay) delay = 1;
 503              		.loc 3 67 0
 504 0034 BB68     		ldr	r3, [r7, #8]
 505 0036 002B     		cmp	r3, #0
 506 0038 01D1     		bne	.L32
 507              		.loc 3 67 0 is_stmt 0 discriminator 1
 508 003a 0123     		movs	r3, #1
 509 003c BB60     		str	r3, [r7, #8]
 510              	.L32:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 16


  68:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		starttm = gfxSystemTicks();
 511              		.loc 3 68 0 is_stmt 1
 512 003e FFF7FEFF 		bl	gfxSystemTicks
 513 0042 0300     		movs	r3, r0
 514 0044 FB60     		str	r3, [r7, #12]
 515              	.L31:
  69:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
  70:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  71:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_OFF();
  72:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	while (psem->cnt <= 0) {
 516              		.loc 3 72 0
 517 0046 16E0     		b	.L33
 518              	.L40:
  73:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_ON();
  74:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Check if we have exceeded the defined delay
  75:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		switch (delay) {
 519              		.loc 3 75 0
 520 0048 BB68     		ldr	r3, [r7, #8]
 521 004a 002B     		cmp	r3, #0
 522 004c 02D0     		beq	.L35
 523 004e 0133     		adds	r3, r3, #1
 524 0050 0CD0     		beq	.L43
 525 0052 01E0     		b	.L42
 526              	.L35:
  76:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		case TIME_IMMEDIATE:
  77:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			return FALSE;
 527              		.loc 3 77 0
 528 0054 0023     		movs	r3, #0
 529 0056 1DE0     		b	.L37
 530              	.L42:
  78:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		case TIME_INFINITE:
  79:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			break;
  80:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		default:
  81:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if (gfxSystemTicks() - starttm >= delay)
 531              		.loc 3 81 0
 532 0058 FFF7FEFF 		bl	gfxSystemTicks
 533 005c 0200     		movs	r2, r0
 534 005e FB68     		ldr	r3, [r7, #12]
 535 0060 D21A     		subs	r2, r2, r3
 536 0062 BB68     		ldr	r3, [r7, #8]
 537 0064 9A42     		cmp	r2, r3
 538 0066 03D3     		bcc	.L44
  82:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				return FALSE;
 539              		.loc 3 82 0
 540 0068 0023     		movs	r3, #0
 541 006a 13E0     		b	.L37
 542              	.L43:
  79:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		default:
 543              		.loc 3 79 0
 544 006c C046     		nop
 545 006e 00E0     		b	.L38
 546              	.L44:
  83:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			break;
 547              		.loc 3 83 0
 548 0070 C046     		nop
 549              	.L38:
  84:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 17


  85:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 550              		.loc 3 85 0
 551 0072 FFF7FEFF 		bl	gfxYield
 552              	.L33:
  72:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_ON();
 553              		.loc 3 72 0
 554 0076 7B68     		ldr	r3, [r7, #4]
 555 0078 0022     		movs	r2, #0
 556 007a 9B5E     		ldrsh	r3, [r3, r2]
 557 007c 002B     		cmp	r3, #0
 558 007e E3DD     		ble	.L40
  86:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		INTERRUPTS_OFF();
  87:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
  88:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	psem->cnt--;
 559              		.loc 3 88 0
 560 0080 7B68     		ldr	r3, [r7, #4]
 561 0082 0022     		movs	r2, #0
 562 0084 9B5E     		ldrsh	r3, [r3, r2]
 563 0086 9BB2     		uxth	r3, r3
 564 0088 013B     		subs	r3, r3, #1
 565 008a 9BB2     		uxth	r3, r3
 566 008c 1AB2     		sxth	r2, r3
 567 008e 7B68     		ldr	r3, [r7, #4]
 568 0090 1A80     		strh	r2, [r3]
  89:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_ON();
  90:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return TRUE;
 569              		.loc 3 90 0
 570 0092 FF23     		movs	r3, #255
 571              	.L37:
  91:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 572              		.loc 3 91 0
 573 0094 1800     		movs	r0, r3
 574 0096 BD46     		mov	sp, r7
 575 0098 04B0     		add	sp, sp, #16
 576              		@ sp needed
 577 009a 80BD     		pop	{r7, pc}
 578              		.cfi_endproc
 579              	.LFE12:
 580              		.size	gfxSemWait, .-gfxSemWait
 581              		.section	.text.gfxSemWaitI,"ax",%progbits
 582              		.align	2
 583              		.global	gfxSemWaitI
 584              		.code	16
 585              		.thumb_func
 586              		.type	gfxSemWaitI, %function
 587              	gfxSemWaitI:
 588              	.LFB13:
  92:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
  93:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** bool_t gfxSemWaitI(gfxSem *psem) {
 589              		.loc 3 93 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 8
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593 0000 80B5     		push	{r7, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 18


 597 0002 82B0     		sub	sp, sp, #8
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
  94:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (psem->cnt <= 0)
 602              		.loc 3 94 0
 603 0008 7B68     		ldr	r3, [r7, #4]
 604 000a 0022     		movs	r2, #0
 605 000c 9B5E     		ldrsh	r3, [r3, r2]
 606 000e 002B     		cmp	r3, #0
 607 0010 01DC     		bgt	.L46
  95:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return FALSE;
 608              		.loc 3 95 0
 609 0012 0023     		movs	r3, #0
 610 0014 09E0     		b	.L47
 611              	.L46:
  96:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	psem->cnt--;
 612              		.loc 3 96 0
 613 0016 7B68     		ldr	r3, [r7, #4]
 614 0018 0022     		movs	r2, #0
 615 001a 9B5E     		ldrsh	r3, [r3, r2]
 616 001c 9BB2     		uxth	r3, r3
 617 001e 013B     		subs	r3, r3, #1
 618 0020 9BB2     		uxth	r3, r3
 619 0022 1AB2     		sxth	r2, r3
 620 0024 7B68     		ldr	r3, [r7, #4]
 621 0026 1A80     		strh	r2, [r3]
  97:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return TRUE;
 622              		.loc 3 97 0
 623 0028 FF23     		movs	r3, #255
 624              	.L47:
  98:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 625              		.loc 3 98 0
 626 002a 1800     		movs	r0, r3
 627 002c BD46     		mov	sp, r7
 628 002e 02B0     		add	sp, sp, #8
 629              		@ sp needed
 630 0030 80BD     		pop	{r7, pc}
 631              		.cfi_endproc
 632              	.LFE13:
 633              		.size	gfxSemWaitI, .-gfxSemWaitI
 634 0032 C046     		.section	.text.gfxSemSignal,"ax",%progbits
 635              		.align	2
 636              		.global	gfxSemSignal
 637              		.code	16
 638              		.thumb_func
 639              		.type	gfxSemSignal, %function
 640              	gfxSemSignal:
 641              	.LFB14:
  99:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 100:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSemSignal(gfxSem *psem) {
 642              		.loc 3 100 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 19


 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 82B0     		sub	sp, sp, #8
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 101:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_OFF();
 102:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	gfxSemSignalI(psem);
 655              		.loc 3 102 0
 656 0008 7B68     		ldr	r3, [r7, #4]
 657 000a 1800     		movs	r0, r3
 658 000c FFF7FEFF 		bl	gfxSemSignalI
 103:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	INTERRUPTS_ON();
 104:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 659              		.loc 3 104 0
 660 0010 C046     		nop
 661 0012 BD46     		mov	sp, r7
 662 0014 02B0     		add	sp, sp, #8
 663              		@ sp needed
 664 0016 80BD     		pop	{r7, pc}
 665              		.cfi_endproc
 666              	.LFE14:
 667              		.size	gfxSemSignal, .-gfxSemSignal
 668              		.section	.text.gfxSemSignalI,"ax",%progbits
 669              		.align	2
 670              		.global	gfxSemSignalI
 671              		.code	16
 672              		.thumb_func
 673              		.type	gfxSemSignalI, %function
 674              	gfxSemSignalI:
 675              	.LFB15:
 105:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 106:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSemSignalI(gfxSem *psem) {
 676              		.loc 3 106 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 8
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680 0000 80B5     		push	{r7, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 0002 82B0     		sub	sp, sp, #8
 685              		.cfi_def_cfa_offset 16
 686 0004 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 107:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (psem->cnt < psem->limit)
 689              		.loc 3 107 0
 690 0008 7B68     		ldr	r3, [r7, #4]
 691 000a 0022     		movs	r2, #0
 692 000c 9A5E     		ldrsh	r2, [r3, r2]
 693 000e 7B68     		ldr	r3, [r7, #4]
 694 0010 0221     		movs	r1, #2
 695 0012 5B5E     		ldrsh	r3, [r3, r1]
 696 0014 9A42     		cmp	r2, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 20


 697 0016 08DA     		bge	.L51
 108:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		psem->cnt++;
 698              		.loc 3 108 0
 699 0018 7B68     		ldr	r3, [r7, #4]
 700 001a 0022     		movs	r2, #0
 701 001c 9B5E     		ldrsh	r3, [r3, r2]
 702 001e 9BB2     		uxth	r3, r3
 703 0020 0133     		adds	r3, r3, #1
 704 0022 9BB2     		uxth	r3, r3
 705 0024 1AB2     		sxth	r2, r3
 706 0026 7B68     		ldr	r3, [r7, #4]
 707 0028 1A80     		strh	r2, [r3]
 708              	.L51:
 109:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 709              		.loc 3 109 0
 710 002a C046     		nop
 711 002c BD46     		mov	sp, r7
 712 002e 02B0     		add	sp, sp, #8
 713              		@ sp needed
 714 0030 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE15:
 717              		.size	gfxSemSignalI, .-gfxSemSignalI
 718 0032 C046     		.section	.text.gfxSleepMilliseconds,"ax",%progbits
 719              		.align	2
 720              		.global	gfxSleepMilliseconds
 721              		.code	16
 722              		.thumb_func
 723              		.type	gfxSleepMilliseconds, %function
 724              	gfxSleepMilliseconds:
 725              	.LFB16:
 110:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 111:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** /*********************************************************
 112:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * Sleep functions
 113:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *********************************************************/
 114:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 115:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSleepMilliseconds(delaytime_t ms) {
 726              		.loc 3 115 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 84B0     		sub	sp, sp, #16
 735              		.cfi_def_cfa_offset 24
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 116:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	systemticks_t	starttm, delay;
 117:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 118:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Safety first
 119:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	switch (ms) {
 739              		.loc 3 119 0
 740 0008 7B68     		ldr	r3, [r7, #4]
 741 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 21


 742 000c 19D0     		beq	.L59
 743 000e 0133     		adds	r3, r3, #1
 744 0010 02D1     		bne	.L58
 745              	.L55:
 120:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_IMMEDIATE:
 121:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 122:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_INFINITE:
 123:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		while(1)
 124:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			gfxYield();
 746              		.loc 3 124 0 discriminator 1
 747 0012 FFF7FEFF 		bl	gfxYield
 748 0016 FCE7     		b	.L55
 749              	.L58:
 125:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 126:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 127:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 128:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Convert our delay to ticks
 129:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	delay = gfxMillisecondsToTicks(ms);
 750              		.loc 3 129 0
 751 0018 7B68     		ldr	r3, [r7, #4]
 752 001a 1800     		movs	r0, r3
 753 001c FFF7FEFF 		bl	gfxMillisecondsToTicks
 754 0020 0300     		movs	r3, r0
 755 0022 FB60     		str	r3, [r7, #12]
 130:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	starttm = gfxSystemTicks();
 756              		.loc 3 130 0
 757 0024 FFF7FEFF 		bl	gfxSystemTicks
 758 0028 0300     		movs	r3, r0
 759 002a BB60     		str	r3, [r7, #8]
 760              	.L57:
 131:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 132:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	do {
 133:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 761              		.loc 3 133 0 discriminator 1
 762 002c FFF7FEFF 		bl	gfxYield
 134:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	} while (gfxSystemTicks() - starttm < delay);
 763              		.loc 3 134 0 discriminator 1
 764 0030 FFF7FEFF 		bl	gfxSystemTicks
 765 0034 0200     		movs	r2, r0
 766 0036 BB68     		ldr	r3, [r7, #8]
 767 0038 D21A     		subs	r2, r2, r3
 768 003a FB68     		ldr	r3, [r7, #12]
 769 003c 9A42     		cmp	r2, r3
 770 003e F5D3     		bcc	.L57
 771 0040 00E0     		b	.L52
 772              	.L59:
 121:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_INFINITE:
 773              		.loc 3 121 0
 774 0042 C046     		nop
 775              	.L52:
 135:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 776              		.loc 3 135 0
 777 0044 BD46     		mov	sp, r7
 778 0046 04B0     		add	sp, sp, #16
 779              		@ sp needed
 780 0048 80BD     		pop	{r7, pc}
 781              		.cfi_endproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 22


 782              	.LFE16:
 783              		.size	gfxSleepMilliseconds, .-gfxSleepMilliseconds
 784              		.global	__aeabi_uidiv
 785 004a C046     		.section	.text.gfxSleepMicroseconds,"ax",%progbits
 786              		.align	2
 787              		.global	gfxSleepMicroseconds
 788              		.code	16
 789              		.thumb_func
 790              		.type	gfxSleepMicroseconds, %function
 791              	gfxSleepMicroseconds:
 792              	.LFB17:
 136:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 137:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxSleepMicroseconds(delaytime_t ms) {
 793              		.loc 3 137 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 84B0     		sub	sp, sp, #16
 802              		.cfi_def_cfa_offset 24
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 138:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	systemticks_t	starttm, delay;
 139:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 140:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Safety first
 141:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	switch (ms) {
 806              		.loc 3 141 0
 807 0008 7B68     		ldr	r3, [r7, #4]
 808 000a 002B     		cmp	r3, #0
 809 000c 1FD0     		beq	.L67
 810 000e 0133     		adds	r3, r3, #1
 811 0010 02D1     		bne	.L66
 812              	.L63:
 142:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_IMMEDIATE:
 143:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 144:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_INFINITE:
 145:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		while(1)
 146:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			gfxYield();
 813              		.loc 3 146 0 discriminator 1
 814 0012 FFF7FEFF 		bl	gfxYield
 815 0016 FCE7     		b	.L63
 816              	.L66:
 147:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 148:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 149:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 150:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Convert our delay to ticks
 151:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	delay = gfxMillisecondsToTicks(ms/1000);
 817              		.loc 3 151 0
 818 0018 7A68     		ldr	r2, [r7, #4]
 819 001a FA23     		movs	r3, #250
 820 001c 9900     		lsls	r1, r3, #2
 821 001e 1000     		movs	r0, r2
 822 0020 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 23


 823 0024 0300     		movs	r3, r0
 824 0026 1800     		movs	r0, r3
 825 0028 FFF7FEFF 		bl	gfxMillisecondsToTicks
 826 002c 0300     		movs	r3, r0
 827 002e FB60     		str	r3, [r7, #12]
 152:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	starttm = gfxSystemTicks();
 828              		.loc 3 152 0
 829 0030 FFF7FEFF 		bl	gfxSystemTicks
 830 0034 0300     		movs	r3, r0
 831 0036 BB60     		str	r3, [r7, #8]
 832              	.L65:
 153:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 154:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	do {
 155:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 833              		.loc 3 155 0 discriminator 1
 834 0038 FFF7FEFF 		bl	gfxYield
 156:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	} while (gfxSystemTicks() - starttm < delay);
 835              		.loc 3 156 0 discriminator 1
 836 003c FFF7FEFF 		bl	gfxSystemTicks
 837 0040 0200     		movs	r2, r0
 838 0042 BB68     		ldr	r3, [r7, #8]
 839 0044 D21A     		subs	r2, r2, r3
 840 0046 FB68     		ldr	r3, [r7, #12]
 841 0048 9A42     		cmp	r2, r3
 842 004a F5D3     		bcc	.L65
 843 004c 00E0     		b	.L60
 844              	.L67:
 143:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	case TIME_INFINITE:
 845              		.loc 3 143 0
 846 004e C046     		nop
 847              	.L60:
 157:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 848              		.loc 3 157 0
 849 0050 BD46     		mov	sp, r7
 850 0052 04B0     		add	sp, sp, #16
 851              		@ sp needed
 852 0054 80BD     		pop	{r7, pc}
 853              		.cfi_endproc
 854              	.LFE17:
 855              		.size	gfxSleepMicroseconds, .-gfxSleepMicroseconds
 856 0056 C046     		.bss
 857 0001 000000   		.align	2
 858              	readyQ:
 859 0004 00000000 		.space	8
 859      00000000 
 860              		.align	2
 861              	deadQ:
 862 000c 00000000 		.space	8
 862      00000000 
 863              		.comm	_gfxCurrentThread,4,4
 864              		.align	2
 865              	mainthread:
 866 0014 00000000 		.space	24
 866      00000000 
 866      00000000 
 866      00000000 
 866      00000000 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 24


 867              		.align	2
 868              	maincxt:
 869 002c 00000000 		.space	92
 869      00000000 
 869      00000000 
 869      00000000 
 869      00000000 
 870              	stackdirup:
 871 0088 00       		.space	1
 872 0089 000000   		.align	2
 873              	jmpmask1:
 874 008c 00000000 		.space	4
 875              		.align	2
 876              	jmpmask2:
 877 0090 00000000 		.space	4
 878              		.align	2
 879              	stackbase:
 880 0094 00000000 		.space	4
 881              		.align	2
 882              	pframeinfo:
 883 0098 00000000 		.space	4
 884              		.section	.text._gfxGetStackState,"ax",%progbits
 885              		.align	2
 886              		.global	_gfxGetStackState
 887              		.code	16
 888              		.thumb_func
 889              		.type	_gfxGetStackState, %function
 890              	_gfxGetStackState:
 891              	.LFB18:
 158:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 159:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** /*********************************************************
 160:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * Threading functions
 161:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *********************************************************/
 162:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 163:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** /** For each scheduler the following need to be defined...
 164:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *
 165:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * void _gfxThreadsInit(void);								- Initialise the scheduler
 166:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * void _gfxStartThread(thread *oldt, thread *newt);		- Start a new thread
 167:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  * void _gfxTaskSwitch(thread *oldt, thread *newt);			- Switch to a different thread
 168:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  *
 169:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c ****  */
 170:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 171:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** typedef struct thread {
 172:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	struct thread *	next;					// Next thread
 173:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	int				flags;					// Flags
 174:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define FLG_THD_ALLOC	0x0001
 175:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define FLG_THD_MAIN	0x0002
 176:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define FLG_THD_DEAD	0x0004
 177:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define FLG_THD_WAIT	0x0008
 178:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	size_t			size;					// Size of the thread stack (including this structure)
 179:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	threadreturn_t	(*fn)(void *param);		// Thread function
 180:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	void *			param;					// Parameter for the thread function
 181:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	void *			cxt;					// The current thread context.
 182:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	} thread;
 183:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 184:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** typedef struct threadQ {
 185:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *head;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 25


 186:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *tail;
 187:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** } threadQ;
 188:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 189:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static threadQ		readyQ;					// The list of ready threads
 190:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static threadQ		deadQ;					// Where we put threads waiting to be deallocated
 191:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** thread *			_gfxCurrentThread;		// The current running thread - unfortunately this has to be non-sta
 192:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static thread		mainthread;				// The main thread context
 193:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 194:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #undef GFX_THREADS_DONE
 195:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 196:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #if GFX_CPU == GFX_CPU_CORTEX_M0 || GFX_CPU == GFX_CPU_CORTEX_M1
 197:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#include "gos_x_threads_cortexm01.h"
 198:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #elif GFX_CPU == GFX_CPU_CORTEX_M3 || GFX_CPU == GFX_CPU_CORTEX_M4 || GFX_CPU == GFX_CPU_CORTEX_M7
 199:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#include "gos_x_threads_cortexm347.h"
 200:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #elif GFX_CPU == GFX_CPU_CORTEX_M4_FP || GFX_CPU == GFX_CPU_CORTEX_M7_FP
 201:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#include "gos_x_threads_cortexm47fp.h"
 202:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #endif
 203:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 204:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #ifndef GFX_THREADS_DONE
 205:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#define GFX_THREADS_DONE
 206:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 207:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#include <string.h>				// Prototype for memcpy()
 208:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#include <setjmp.h>
 209:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 210:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	/**
 211:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * Some compilers define a _setjmp() and a setjmp().
 212:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * The difference between them is that setjmp() saves the signal masks.
 213:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * That is of no use to us so we prefer to use the _setjmp() methods.
 214:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * If they don't exist compile them to be the standard setjmp() function.
 215:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * Similarly for longjmp().
 216:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 */
 217:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#if (!defined(setjmp) && !defined(_setjmp)) || GFX_COMPILER == GFX_COMPILER_KEIL || GFX_COMPILER =
 218:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define CXT_SAVE 		setjmp
 219:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#else
 220:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define CXT_SAVE 		_setjmp
 221:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#endif
 222:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#if (!defined(longjmp) && !defined(_longjmp)) || GFX_COMPILER == GFX_COMPILER_KEIL || GFX_COMPILER
 223:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define CXT_RESTORE 	longjmp
 224:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#else
 225:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define CXT_RESTORE 	_longjmp
 226:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#endif
 227:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 228:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// A place to store the main thread context.
 229:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// All other threads will store the context directly after the thread structure (as part of the st
 230:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	static jmp_buf				maincxt;
 231:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 232:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	/**
 233:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * There are some compilers we know how they store the jmpbuf. For those
 234:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * we can use the constant macro definitions. For others we have to "auto-detect".
 235:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * Auto-detection is hairy and there is no guarantee it will work on all architectures.
 236:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * For those it doesn't - read the compiler manuals and the library source code to
 237:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * work out the correct macro values.
 238:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * You can use the debugger to work out the values for your compiler and put them here.
 239:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * Defining these macros as constant values makes the system behaviour guaranteed but also
 240:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * makes your code compiler and cpu architecture dependent. It also saves a heap of code
 241:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * and a few bytes of RAM.
 242:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 26


 243:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 * MACROS:
 244:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *
 245:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	AUTO_DETECT_STACKFRAME	TRUE/FALSE			- TRUE to auto-detect stack frame structure
 246:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	STACK_DIR_UP			Macro/bool_t		- TRUE if the stack grows up instead of down
 247:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	MASK1					Macro/uint32_t		- The 1st mask of jmp_buf elements that need relocation
 248:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	MASK2					Macro/uint32_t		- The 2nd mask of jmp_buf elements that need relocation
 249:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	STACK_BASE				Macro/size_t		- The base of the stack frame relative to the local variables
 250:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *	_gfxThreadsInit()		Macro/Function		- Initialise the scheduler
 251:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 *
 252:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	 */
 253:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#if GFX_COMPILER == GFX_COMPILER_MINGW32
 254:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 255:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define AUTO_DETECT_STACKFRAME	FALSE
 256:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define STACK_DIR_UP		FALSE
 257:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define MASK1				0x00000011
 258:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define MASK2				0x00000000
 259:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define STACK_BASE			12
 260:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define _gfxThreadsInit()	mainthread.cxt = maincxt
 261:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 262:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#else
 263:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 264:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Use auto-detection of the stack frame format
 265:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Assumes all the relevant stuff to be relocated is in the first 256 bytes of the jmpbuf.
 266:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define AUTO_DETECT_STACKFRAME	TRUE
 267:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define STACK_DIR_UP		stackdirup			// TRUE if the stack grow up instead of down
 268:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define MASK1				jmpmask1			// The 1st mask of jmp_buf elements that need relocation
 269:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define MASK2				jmpmask2			// The 2nd mask of jmp_buf elements that need relocation
 270:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#define STACK_BASE			stackbase			// The base of the stack frame relative to the local variables
 271:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 272:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// The structure for the saved stack frame information
 273:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		typedef struct saveloc {
 274:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			char *		localptr;
 275:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			jmp_buf		cxt;
 276:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		} saveloc;
 277:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 278:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static bool_t		stackdirup;
 279:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static uint32_t		jmpmask1;
 280:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static uint32_t		jmpmask2;
 281:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static size_t		stackbase;
 282:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static saveloc		*pframeinfo;
 283:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 284:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// These two functions are not static to prevent the compiler removing them as functions
 285:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		void _gfxGetStackState(void) {
 892              		.loc 3 285 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 8
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0000 80B5     		push	{r7, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 7, -8
 899              		.cfi_offset 14, -4
 900 0002 82B0     		sub	sp, sp, #8
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 286:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			char *c;
 287:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pframeinfo->localptr = (char *)&c;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 27


 904              		.loc 3 287 0
 905 0006 074B     		ldr	r3, .L69
 906 0008 1B68     		ldr	r3, [r3]
 907 000a 3A1D     		adds	r2, r7, #4
 908 000c 1A60     		str	r2, [r3]
 288:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			CXT_SAVE(pframeinfo->cxt);
 909              		.loc 3 288 0
 910 000e 054B     		ldr	r3, .L69
 911 0010 1B68     		ldr	r3, [r3]
 912 0012 0433     		adds	r3, r3, #4
 913 0014 1800     		movs	r0, r3
 914 0016 FFF7FEFF 		bl	setjmp
 289:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
 915              		.loc 3 289 0
 916 001a C046     		nop
 917 001c BD46     		mov	sp, r7
 918 001e 02B0     		add	sp, sp, #8
 919              		@ sp needed
 920 0020 80BD     		pop	{r7, pc}
 921              	.L70:
 922 0022 C046     		.align	2
 923              	.L69:
 924 0024 98000000 		.word	pframeinfo
 925              		.cfi_endproc
 926              	.LFE18:
 927              		.size	_gfxGetStackState, .-_gfxGetStackState
 928              		.section	.text._gfxGetStackStateInFn,"ax",%progbits
 929              		.align	2
 930              		.global	_gfxGetStackStateInFn
 931              		.code	16
 932              		.thumb_func
 933              		.type	_gfxGetStackStateInFn, %function
 934              	_gfxGetStackStateInFn:
 935              	.LFB19:
 290:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		void _gfxGetStackStateInFn(void) {
 936              		.loc 3 290 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 1, uses_anonymous_args = 0
 940 0000 80B5     		push	{r7, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 291:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pframeinfo++;
 946              		.loc 3 291 0
 947 0004 084B     		ldr	r3, .L72
 948 0006 1B68     		ldr	r3, [r3]
 949 0008 6033     		adds	r3, r3, #96
 950 000a 1A00     		movs	r2, r3
 951 000c 064B     		ldr	r3, .L72
 952 000e 1A60     		str	r2, [r3]
 292:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			_gfxGetStackState();
 953              		.loc 3 292 0
 954 0010 FFF7FEFF 		bl	_gfxGetStackState
 293:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pframeinfo--;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 28


 955              		.loc 3 293 0
 956 0014 044B     		ldr	r3, .L72
 957 0016 1B68     		ldr	r3, [r3]
 958 0018 603B     		subs	r3, r3, #96
 959 001a 1A00     		movs	r2, r3
 960 001c 024B     		ldr	r3, .L72
 961 001e 1A60     		str	r2, [r3]
 294:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
 962              		.loc 3 294 0
 963 0020 C046     		nop
 964 0022 BD46     		mov	sp, r7
 965              		@ sp needed
 966 0024 80BD     		pop	{r7, pc}
 967              	.L73:
 968 0026 C046     		.align	2
 969              	.L72:
 970 0028 98000000 		.word	pframeinfo
 971              		.cfi_endproc
 972              	.LFE19:
 973              		.size	_gfxGetStackStateInFn, .-_gfxGetStackStateInFn
 974              		.section	.text._gfxThreadsInit,"ax",%progbits
 975              		.align	2
 976              		.code	16
 977              		.thumb_func
 978              		.type	_gfxThreadsInit, %function
 979              	_gfxThreadsInit:
 980              	.LFB20:
 295:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		static void _gfxThreadsInit(void) {
 981              		.loc 3 295 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 216
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 B6B0     		sub	sp, sp, #216
 990              		.cfi_def_cfa_offset 224
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 296:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			uint32_t	i;
 297:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			char **		pout;
 298:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			char **		pin;
 299:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			size_t		diff;
 300:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			char *		framebase;
 301:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			saveloc		tmpsaveloc[2];
 302:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 303:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Create the main thread context
 304:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			mainthread.cxt = maincxt;
 993              		.loc 3 304 0
 994 0006 664B     		ldr	r3, .L84
 995 0008 664A     		ldr	r2, .L84+4
 996 000a 5A61     		str	r2, [r3, #20]
 305:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 306:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Allocate a buffer to store our test data
 307:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pframeinfo = tmpsaveloc;
 997              		.loc 3 307 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 29


 998 000c 664B     		ldr	r3, .L84+8
 999 000e 3A1D     		adds	r2, r7, #4
 1000 0010 1A60     		str	r2, [r3]
 308:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 309:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Get details of the stack frame from within a function
 310:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			_gfxGetStackStateInFn();
 1001              		.loc 3 310 0
 1002 0012 FFF7FEFF 		bl	_gfxGetStackStateInFn
 311:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 312:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Get details of the stack frame outside the function
 313:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			_gfxGetStackState();
 1003              		.loc 3 313 0
 1004 0016 FFF7FEFF 		bl	_gfxGetStackState
 314:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 315:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			/* Work out the frame entries to relocate by treating the jump buffer as an array of pointers */
 316:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			stackdirup =  pframeinfo[1].localptr > pframeinfo[0].localptr;
 1005              		.loc 3 316 0
 1006 001a 634B     		ldr	r3, .L84+8
 1007 001c 1B68     		ldr	r3, [r3]
 1008 001e 6033     		adds	r3, r3, #96
 1009 0020 1A68     		ldr	r2, [r3]
 1010 0022 614B     		ldr	r3, .L84+8
 1011 0024 1B68     		ldr	r3, [r3]
 1012 0026 1B68     		ldr	r3, [r3]
 1013 0028 9342     		cmp	r3, r2
 1014 002a 9B41     		sbcs	r3, r3, r3
 1015 002c 5B42     		rsbs	r3, r3, #0
 1016 002e DBB2     		uxtb	r3, r3
 1017 0030 1A00     		movs	r2, r3
 1018 0032 5E4B     		ldr	r3, .L84+12
 1019 0034 1A70     		strb	r2, [r3]
 317:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pout = (char **)pframeinfo[0].cxt;
 1020              		.loc 3 317 0
 1021 0036 5C4B     		ldr	r3, .L84+8
 1022 0038 1B68     		ldr	r3, [r3]
 1023 003a 0433     		adds	r3, r3, #4
 1024 003c D022     		movs	r2, #208
 1025 003e BA18     		adds	r2, r7, r2
 1026 0040 1360     		str	r3, [r2]
 318:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			pin =  (char **)pframeinfo[1].cxt;
 1027              		.loc 3 318 0
 1028 0042 594B     		ldr	r3, .L84+8
 1029 0044 1B68     		ldr	r3, [r3]
 1030 0046 6033     		adds	r3, r3, #96
 1031 0048 0433     		adds	r3, r3, #4
 1032 004a CC22     		movs	r2, #204
 1033 004c BA18     		adds	r2, r7, r2
 1034 004e 1360     		str	r3, [r2]
 319:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			diff = pframeinfo[0].localptr - pframeinfo[1].localptr;
 1035              		.loc 3 319 0
 1036 0050 554B     		ldr	r3, .L84+8
 1037 0052 1B68     		ldr	r3, [r3]
 1038 0054 1B68     		ldr	r3, [r3]
 1039 0056 1A00     		movs	r2, r3
 1040 0058 534B     		ldr	r3, .L84+8
 1041 005a 1B68     		ldr	r3, [r3]
 1042 005c 6033     		adds	r3, r3, #96
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 30


 1043 005e 1B68     		ldr	r3, [r3]
 1044 0060 D31A     		subs	r3, r2, r3
 1045 0062 C422     		movs	r2, #196
 1046 0064 BA18     		adds	r2, r7, r2
 1047 0066 1360     		str	r3, [r2]
 320:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			framebase = pframeinfo[0].localptr;
 1048              		.loc 3 320 0
 1049 0068 4F4B     		ldr	r3, .L84+8
 1050 006a 1B68     		ldr	r3, [r3]
 1051 006c 1B68     		ldr	r3, [r3]
 1052 006e C822     		movs	r2, #200
 1053 0070 BA18     		adds	r2, r7, r2
 1054 0072 1360     		str	r3, [r2]
 321:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			jmpmask1 = jmpmask2 = 0;
 1055              		.loc 3 321 0
 1056 0074 4E4B     		ldr	r3, .L84+16
 1057 0076 0022     		movs	r2, #0
 1058 0078 1A60     		str	r2, [r3]
 1059 007a 4D4B     		ldr	r3, .L84+16
 1060 007c 1A68     		ldr	r2, [r3]
 1061 007e 4D4B     		ldr	r3, .L84+20
 1062 0080 1A60     		str	r2, [r3]
 322:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			for (i = 0; i < sizeof(jmp_buf)/sizeof(char *); i++, pout++, pin++) {
 1063              		.loc 3 322 0
 1064 0082 0023     		movs	r3, #0
 1065 0084 D422     		movs	r2, #212
 1066 0086 BA18     		adds	r2, r7, r2
 1067 0088 1360     		str	r3, [r2]
 1068 008a 68E0     		b	.L75
 1069              	.L81:
 323:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				if ((size_t)(*pout - *pin) == diff) {
 1070              		.loc 3 323 0
 1071 008c D023     		movs	r3, #208
 1072 008e FB18     		adds	r3, r7, r3
 1073 0090 1B68     		ldr	r3, [r3]
 1074 0092 1B68     		ldr	r3, [r3]
 1075 0094 1A00     		movs	r2, r3
 1076 0096 CC23     		movs	r3, #204
 1077 0098 FB18     		adds	r3, r7, r3
 1078 009a 1B68     		ldr	r3, [r3]
 1079 009c 1B68     		ldr	r3, [r3]
 1080 009e D31A     		subs	r3, r2, r3
 1081 00a0 1A00     		movs	r2, r3
 1082 00a2 C423     		movs	r3, #196
 1083 00a4 FB18     		adds	r3, r7, r3
 1084 00a6 1B68     		ldr	r3, [r3]
 1085 00a8 9A42     		cmp	r2, r3
 1086 00aa 43D1     		bne	.L76
 324:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					if (i < 32)
 1087              		.loc 3 324 0
 1088 00ac D423     		movs	r3, #212
 1089 00ae FB18     		adds	r3, r7, r3
 1090 00b0 1B68     		ldr	r3, [r3]
 1091 00b2 1F2B     		cmp	r3, #31
 1092 00b4 0CD8     		bhi	.L77
 325:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 						jmpmask1 |= 1 << i;
 1093              		.loc 3 325 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 31


 1094 00b6 0122     		movs	r2, #1
 1095 00b8 D423     		movs	r3, #212
 1096 00ba FB18     		adds	r3, r7, r3
 1097 00bc 1B68     		ldr	r3, [r3]
 1098 00be 9A40     		lsls	r2, r2, r3
 1099 00c0 1300     		movs	r3, r2
 1100 00c2 1A00     		movs	r2, r3
 1101 00c4 3B4B     		ldr	r3, .L84+20
 1102 00c6 1B68     		ldr	r3, [r3]
 1103 00c8 1A43     		orrs	r2, r3
 1104 00ca 3A4B     		ldr	r3, .L84+20
 1105 00cc 1A60     		str	r2, [r3]
 1106 00ce 0CE0     		b	.L78
 1107              	.L77:
 326:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					else
 327:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 						jmpmask2 |= 1 << (i-32);
 1108              		.loc 3 327 0
 1109 00d0 D423     		movs	r3, #212
 1110 00d2 FB18     		adds	r3, r7, r3
 1111 00d4 1B68     		ldr	r3, [r3]
 1112 00d6 203B     		subs	r3, r3, #32
 1113 00d8 0122     		movs	r2, #1
 1114 00da 9A40     		lsls	r2, r2, r3
 1115 00dc 1300     		movs	r3, r2
 1116 00de 1A00     		movs	r2, r3
 1117 00e0 334B     		ldr	r3, .L84+16
 1118 00e2 1B68     		ldr	r3, [r3]
 1119 00e4 1A43     		orrs	r2, r3
 1120 00e6 324B     		ldr	r3, .L84+16
 1121 00e8 1A60     		str	r2, [r3]
 1122              	.L78:
 328:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 329:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					if (stackdirup) {
 1123              		.loc 3 329 0
 1124 00ea 304B     		ldr	r3, .L84+12
 1125 00ec 1B78     		ldrb	r3, [r3]
 1126 00ee 002B     		cmp	r3, #0
 1127 00f0 10D0     		beq	.L79
 330:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 						if (framebase > *pout)
 1128              		.loc 3 330 0
 1129 00f2 D023     		movs	r3, #208
 1130 00f4 FB18     		adds	r3, r7, r3
 1131 00f6 1B68     		ldr	r3, [r3]
 1132 00f8 1A68     		ldr	r2, [r3]
 1133 00fa C823     		movs	r3, #200
 1134 00fc FB18     		adds	r3, r7, r3
 1135 00fe 1B68     		ldr	r3, [r3]
 1136 0100 9A42     		cmp	r2, r3
 1137 0102 17D2     		bcs	.L76
 331:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 							framebase = *pout;
 1138              		.loc 3 331 0
 1139 0104 D023     		movs	r3, #208
 1140 0106 FB18     		adds	r3, r7, r3
 1141 0108 1B68     		ldr	r3, [r3]
 1142 010a 1B68     		ldr	r3, [r3]
 1143 010c C822     		movs	r2, #200
 1144 010e BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 32


 1145 0110 1360     		str	r3, [r2]
 1146 0112 0FE0     		b	.L76
 1147              	.L79:
 332:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					} else {
 333:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 						if (framebase < *pout)
 1148              		.loc 3 333 0
 1149 0114 D023     		movs	r3, #208
 1150 0116 FB18     		adds	r3, r7, r3
 1151 0118 1B68     		ldr	r3, [r3]
 1152 011a 1A68     		ldr	r2, [r3]
 1153 011c C823     		movs	r3, #200
 1154 011e FB18     		adds	r3, r7, r3
 1155 0120 1B68     		ldr	r3, [r3]
 1156 0122 9A42     		cmp	r2, r3
 1157 0124 06D9     		bls	.L76
 334:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 							framebase = *pout;
 1158              		.loc 3 334 0
 1159 0126 D023     		movs	r3, #208
 1160 0128 FB18     		adds	r3, r7, r3
 1161 012a 1B68     		ldr	r3, [r3]
 1162 012c 1B68     		ldr	r3, [r3]
 1163 012e C822     		movs	r2, #200
 1164 0130 BA18     		adds	r2, r7, r2
 1165 0132 1360     		str	r3, [r2]
 1166              	.L76:
 322:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				if ((size_t)(*pout - *pin) == diff) {
 1167              		.loc 3 322 0 discriminator 2
 1168 0134 D423     		movs	r3, #212
 1169 0136 FB18     		adds	r3, r7, r3
 1170 0138 1B68     		ldr	r3, [r3]
 1171 013a 0133     		adds	r3, r3, #1
 1172 013c D422     		movs	r2, #212
 1173 013e BA18     		adds	r2, r7, r2
 1174 0140 1360     		str	r3, [r2]
 1175 0142 D023     		movs	r3, #208
 1176 0144 FB18     		adds	r3, r7, r3
 1177 0146 1B68     		ldr	r3, [r3]
 1178 0148 0433     		adds	r3, r3, #4
 1179 014a D022     		movs	r2, #208
 1180 014c BA18     		adds	r2, r7, r2
 1181 014e 1360     		str	r3, [r2]
 1182 0150 CC23     		movs	r3, #204
 1183 0152 FB18     		adds	r3, r7, r3
 1184 0154 1B68     		ldr	r3, [r3]
 1185 0156 0433     		adds	r3, r3, #4
 1186 0158 CC22     		movs	r2, #204
 1187 015a BA18     		adds	r2, r7, r2
 1188 015c 1360     		str	r3, [r2]
 1189              	.L75:
 322:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				if ((size_t)(*pout - *pin) == diff) {
 1190              		.loc 3 322 0 is_stmt 0 discriminator 1
 1191 015e D423     		movs	r3, #212
 1192 0160 FB18     		adds	r3, r7, r3
 1193 0162 1B68     		ldr	r3, [r3]
 1194 0164 162B     		cmp	r3, #22
 1195 0166 91D9     		bls	.L81
 335:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 33


 336:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				}
 337:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			}
 338:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			stackbase = stackdirup ? (pframeinfo[0].localptr - framebase) : (framebase - pframeinfo[0].local
 1196              		.loc 3 338 0 is_stmt 1
 1197 0168 104B     		ldr	r3, .L84+12
 1198 016a 1B78     		ldrb	r3, [r3]
 1199 016c 002B     		cmp	r3, #0
 1200 016e 09D0     		beq	.L82
 1201              		.loc 3 338 0 is_stmt 0 discriminator 1
 1202 0170 0D4B     		ldr	r3, .L84+8
 1203 0172 1B68     		ldr	r3, [r3]
 1204 0174 1B68     		ldr	r3, [r3]
 1205 0176 1A00     		movs	r2, r3
 1206 0178 C823     		movs	r3, #200
 1207 017a FB18     		adds	r3, r7, r3
 1208 017c 1B68     		ldr	r3, [r3]
 1209 017e D31A     		subs	r3, r2, r3
 1210 0180 1A00     		movs	r2, r3
 1211 0182 07E0     		b	.L83
 1212              	.L82:
 1213              		.loc 3 338 0 discriminator 2
 1214 0184 C823     		movs	r3, #200
 1215 0186 FB18     		adds	r3, r7, r3
 1216 0188 1A68     		ldr	r2, [r3]
 1217 018a 074B     		ldr	r3, .L84+8
 1218 018c 1B68     		ldr	r3, [r3]
 1219 018e 1B68     		ldr	r3, [r3]
 1220 0190 D31A     		subs	r3, r2, r3
 1221 0192 1A00     		movs	r2, r3
 1222              	.L83:
 1223              		.loc 3 338 0 discriminator 4
 1224 0194 084B     		ldr	r3, .L84+24
 1225 0196 1A60     		str	r2, [r3]
 339:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
 1226              		.loc 3 339 0 is_stmt 1 discriminator 4
 1227 0198 C046     		nop
 1228 019a BD46     		mov	sp, r7
 1229 019c 36B0     		add	sp, sp, #216
 1230              		@ sp needed
 1231 019e 80BD     		pop	{r7, pc}
 1232              	.L85:
 1233              		.align	2
 1234              	.L84:
 1235 01a0 14000000 		.word	mainthread
 1236 01a4 2C000000 		.word	maincxt
 1237 01a8 98000000 		.word	pframeinfo
 1238 01ac 88000000 		.word	stackdirup
 1239 01b0 90000000 		.word	jmpmask2
 1240 01b4 8C000000 		.word	jmpmask1
 1241 01b8 94000000 		.word	stackbase
 1242              		.cfi_endproc
 1243              	.LFE20:
 1244              		.size	_gfxThreadsInit, .-_gfxThreadsInit
 1245              		.section	.text._gfxAdjustCxt,"ax",%progbits
 1246              		.align	2
 1247              		.code	16
 1248              		.thumb_func
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 34


 1249              		.type	_gfxAdjustCxt, %function
 1250              	_gfxAdjustCxt:
 1251              	.LFB21:
 340:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 341:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#endif
 342:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 343:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Move the stack frame and relocate the context data
 344:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	static void _gfxAdjustCxt(thread *t) {
 1252              		.loc 3 344 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 24
 1255              		@ frame_needed = 1, uses_anonymous_args = 0
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 86B0     		sub	sp, sp, #24
 1261              		.cfi_def_cfa_offset 32
 1262 0004 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 1264 0006 7860     		str	r0, [r7, #4]
 345:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		char **	s;
 346:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		char *	nf;
 347:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		int		diff;
 348:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		uint32_t	i;
 349:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 350:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Copy the stack frame
 351:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		s = 0;
 1265              		.loc 3 351 0
 1266 0008 0023     		movs	r3, #0
 1267 000a BB60     		str	r3, [r7, #8]
 352:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#if AUTO_DETECT_STACKFRAME
 353:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if (STACK_DIR_UP) {					// Stack grows up
 1268              		.loc 3 353 0
 1269 000c 344B     		ldr	r3, .L95
 1270 000e 1B78     		ldrb	r3, [r3]
 1271 0010 002B     		cmp	r3, #0
 1272 0012 15D0     		beq	.L87
 354:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				nf = (char *)(t) + sizeof(thread) + sizeof(jmp_buf) + STACK_BASE;
 1273              		.loc 3 354 0
 1274 0014 334B     		ldr	r3, .L95+4
 1275 0016 1B68     		ldr	r3, [r3]
 1276 0018 7433     		adds	r3, r3, #116
 1277 001a 7A68     		ldr	r2, [r7, #4]
 1278 001c D318     		adds	r3, r2, r3
 1279 001e 7B61     		str	r3, [r7, #20]
 355:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				memcpy(t+1, (char *)&s - STACK_BASE, STACK_BASE+sizeof(char *));
 1280              		.loc 3 355 0
 1281 0020 7B68     		ldr	r3, [r7, #4]
 1282 0022 1833     		adds	r3, r3, #24
 1283 0024 1800     		movs	r0, r3
 1284 0026 2F4B     		ldr	r3, .L95+4
 1285 0028 1B68     		ldr	r3, [r3]
 1286 002a 5B42     		rsbs	r3, r3, #0
 1287 002c 0822     		movs	r2, #8
 1288 002e BA18     		adds	r2, r7, r2
 1289 0030 D118     		adds	r1, r2, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 35


 1290 0032 2C4B     		ldr	r3, .L95+4
 1291 0034 1B68     		ldr	r3, [r3]
 1292 0036 0433     		adds	r3, r3, #4
 1293 0038 1A00     		movs	r2, r3
 1294 003a FFF7FEFF 		bl	memcpy
 1295 003e 11E0     		b	.L88
 1296              	.L87:
 356:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			} else {							// Stack grows down
 357:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				nf = (char *)(t) + t->size - (STACK_BASE + sizeof(char *));
 1297              		.loc 3 357 0
 1298 0040 7B68     		ldr	r3, [r7, #4]
 1299 0042 9A68     		ldr	r2, [r3, #8]
 1300 0044 274B     		ldr	r3, .L95+4
 1301 0046 1B68     		ldr	r3, [r3]
 1302 0048 D31A     		subs	r3, r2, r3
 1303 004a 043B     		subs	r3, r3, #4
 1304 004c 7A68     		ldr	r2, [r7, #4]
 1305 004e D318     		adds	r3, r2, r3
 1306 0050 7B61     		str	r3, [r7, #20]
 358:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				memcpy(nf, &s, STACK_BASE+sizeof(char *));
 1307              		.loc 3 358 0
 1308 0052 244B     		ldr	r3, .L95+4
 1309 0054 1B68     		ldr	r3, [r3]
 1310 0056 1A1D     		adds	r2, r3, #4
 1311 0058 0823     		movs	r3, #8
 1312 005a F918     		adds	r1, r7, r3
 1313 005c 7B69     		ldr	r3, [r7, #20]
 1314 005e 1800     		movs	r0, r3
 1315 0060 FFF7FEFF 		bl	memcpy
 1316              	.L88:
 359:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			}
 360:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#elif STACK_DIR_UP
 361:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Stack grows up
 362:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			nf = (char *)(t) + sizeof(thread) + sizeof(jmp_buf) + STACK_BASE;
 363:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			memcpy(t+1, (char *)&s - STACK_BASE, STACK_BASE+sizeof(char *));
 364:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#else
 365:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Stack grows down
 366:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			nf = (char *)(t) + t->size - (STACK_BASE + sizeof(char *));
 367:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			memcpy(nf, &s, STACK_BASE+sizeof(char *));
 368:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#endif
 369:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 370:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Relocate the context data
 371:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		s = (char **)(t->cxt);
 1317              		.loc 3 371 0
 1318 0064 7B68     		ldr	r3, [r7, #4]
 1319 0066 5B69     		ldr	r3, [r3, #20]
 1320 0068 BB60     		str	r3, [r7, #8]
 372:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		diff = nf - (char *)&s;
 1321              		.loc 3 372 0
 1322 006a 7A69     		ldr	r2, [r7, #20]
 1323 006c 0823     		movs	r3, #8
 1324 006e FB18     		adds	r3, r7, r3
 1325 0070 D31A     		subs	r3, r2, r3
 1326 0072 FB60     		str	r3, [r7, #12]
 373:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 374:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Relocate the elements we know need to be relocated
 375:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		for (i = MASK1; i ; i >>= 1, s++) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 36


 1327              		.loc 3 375 0
 1328 0074 1C4B     		ldr	r3, .L95+8
 1329 0076 1B68     		ldr	r3, [r3]
 1330 0078 3B61     		str	r3, [r7, #16]
 1331 007a 0FE0     		b	.L89
 1332              	.L91:
 376:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if ((i & 1))
 1333              		.loc 3 376 0
 1334 007c 3B69     		ldr	r3, [r7, #16]
 1335 007e 0122     		movs	r2, #1
 1336 0080 1340     		ands	r3, r2
 1337 0082 05D0     		beq	.L90
 377:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				*s += diff;
 1338              		.loc 3 377 0
 1339 0084 BB68     		ldr	r3, [r7, #8]
 1340 0086 BA68     		ldr	r2, [r7, #8]
 1341 0088 1168     		ldr	r1, [r2]
 1342 008a FA68     		ldr	r2, [r7, #12]
 1343 008c 8A18     		adds	r2, r1, r2
 1344 008e 1A60     		str	r2, [r3]
 1345              	.L90:
 375:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if ((i & 1))
 1346              		.loc 3 375 0 discriminator 2
 1347 0090 3B69     		ldr	r3, [r7, #16]
 1348 0092 5B08     		lsrs	r3, r3, #1
 1349 0094 3B61     		str	r3, [r7, #16]
 1350 0096 BB68     		ldr	r3, [r7, #8]
 1351 0098 0433     		adds	r3, r3, #4
 1352 009a BB60     		str	r3, [r7, #8]
 1353              	.L89:
 375:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if ((i & 1))
 1354              		.loc 3 375 0 is_stmt 0 discriminator 1
 1355 009c 3B69     		ldr	r3, [r7, #16]
 1356 009e 002B     		cmp	r3, #0
 1357 00a0 ECD1     		bne	.L91
 378:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
 379:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#ifdef MASK2
 380:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			s = (char **)(t->cxt)+32;
 1358              		.loc 3 380 0 is_stmt 1
 1359 00a2 7B68     		ldr	r3, [r7, #4]
 1360 00a4 5B69     		ldr	r3, [r3, #20]
 1361 00a6 8033     		adds	r3, r3, #128
 1362 00a8 BB60     		str	r3, [r7, #8]
 381:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			for (i = MASK2; i ; i >>= 1, s++) {
 1363              		.loc 3 381 0
 1364 00aa 104B     		ldr	r3, .L95+12
 1365 00ac 1B68     		ldr	r3, [r3]
 1366 00ae 3B61     		str	r3, [r7, #16]
 1367 00b0 0FE0     		b	.L92
 1368              	.L94:
 382:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				if ((i & 1))
 1369              		.loc 3 382 0
 1370 00b2 3B69     		ldr	r3, [r7, #16]
 1371 00b4 0122     		movs	r2, #1
 1372 00b6 1340     		ands	r3, r2
 1373 00b8 05D0     		beq	.L93
 383:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 					*s += diff;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 37


 1374              		.loc 3 383 0
 1375 00ba BB68     		ldr	r3, [r7, #8]
 1376 00bc BA68     		ldr	r2, [r7, #8]
 1377 00be 1168     		ldr	r1, [r2]
 1378 00c0 FA68     		ldr	r2, [r7, #12]
 1379 00c2 8A18     		adds	r2, r1, r2
 1380 00c4 1A60     		str	r2, [r3]
 1381              	.L93:
 381:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			for (i = MASK2; i ; i >>= 1, s++) {
 1382              		.loc 3 381 0 discriminator 2
 1383 00c6 3B69     		ldr	r3, [r7, #16]
 1384 00c8 5B08     		lsrs	r3, r3, #1
 1385 00ca 3B61     		str	r3, [r7, #16]
 1386 00cc BB68     		ldr	r3, [r7, #8]
 1387 00ce 0433     		adds	r3, r3, #4
 1388 00d0 BB60     		str	r3, [r7, #8]
 1389              	.L92:
 381:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			for (i = MASK2; i ; i >>= 1, s++) {
 1390              		.loc 3 381 0 is_stmt 0 discriminator 1
 1391 00d2 3B69     		ldr	r3, [r7, #16]
 1392 00d4 002B     		cmp	r3, #0
 1393 00d6 ECD1     		bne	.L94
 384:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			}
 385:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		#endif
 386:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 1394              		.loc 3 386 0 is_stmt 1
 1395 00d8 C046     		nop
 1396 00da BD46     		mov	sp, r7
 1397 00dc 06B0     		add	sp, sp, #24
 1398              		@ sp needed
 1399 00de 80BD     		pop	{r7, pc}
 1400              	.L96:
 1401              		.align	2
 1402              	.L95:
 1403 00e0 88000000 		.word	stackdirup
 1404 00e4 94000000 		.word	stackbase
 1405 00e8 8C000000 		.word	jmpmask1
 1406 00ec 90000000 		.word	jmpmask2
 1407              		.cfi_endproc
 1408              	.LFE21:
 1409              		.size	_gfxAdjustCxt, .-_gfxAdjustCxt
 1410              		.section	.text._gfxXSwitch,"ax",%progbits
 1411              		.align	2
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	_gfxXSwitch, %function
 1415              	_gfxXSwitch:
 1416              	.LFB22:
 387:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	static void _gfxXSwitch(thread *oldt, thread *newt, bool_t doBuildFrame) {
 1417              		.loc 3 387 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 16
 1420              		@ frame_needed = 1, uses_anonymous_args = 0
 1421 0000 80B5     		push	{r7, lr}
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 38


 1425 0002 84B0     		sub	sp, sp, #16
 1426              		.cfi_def_cfa_offset 24
 1427 0004 00AF     		add	r7, sp, #0
 1428              		.cfi_def_cfa_register 7
 1429 0006 F860     		str	r0, [r7, #12]
 1430 0008 B960     		str	r1, [r7, #8]
 1431 000a FB1D     		adds	r3, r7, #7
 1432 000c 1A70     		strb	r2, [r3]
 388:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 389:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Save the old context
 390:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		if (CXT_SAVE(oldt->cxt)) return;
 1433              		.loc 3 390 0
 1434 000e FB68     		ldr	r3, [r7, #12]
 1435 0010 5B69     		ldr	r3, [r3, #20]
 1436 0012 1800     		movs	r0, r3
 1437 0014 FFF7FEFF 		bl	setjmp
 1438 0018 031E     		subs	r3, r0, #0
 1439 001a 25D1     		bne	.L103
 391:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 392:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Do we need to build a new context?
 393:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		if (doBuildFrame) {
 1440              		.loc 3 393 0
 1441 001c FB1D     		adds	r3, r7, #7
 1442 001e 1B78     		ldrb	r3, [r3]
 1443 0020 002B     		cmp	r3, #0
 1444 0022 1BD0     		beq	.L101
 394:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 395:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Save our existing context as a starting point for the new context
 396:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			newt->cxt = newt+1;
 1445              		.loc 3 396 0
 1446 0024 BB68     		ldr	r3, [r7, #8]
 1447 0026 1833     		adds	r3, r3, #24
 1448 0028 1A00     		movs	r2, r3
 1449 002a BB68     		ldr	r3, [r7, #8]
 1450 002c 5A61     		str	r2, [r3, #20]
 397:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			if (CXT_SAVE(newt->cxt)) {
 1451              		.loc 3 397 0
 1452 002e BB68     		ldr	r3, [r7, #8]
 1453 0030 5B69     		ldr	r3, [r3, #20]
 1454 0032 1800     		movs	r0, r3
 1455 0034 FFF7FEFF 		bl	setjmp
 1456 0038 031E     		subs	r3, r0, #0
 1457 003a 0BD0     		beq	.L102
 398:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 399:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				// We are now running the new thread
 400:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 401:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				// We can't use any of the above function parameters here
 402:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				//	as we are on a different stack.
 403:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 404:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				// Run the users function.
 405:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				gfxThreadExit(_gfxCurrentThread->fn(_gfxCurrentThread->param));
 1458              		.loc 3 405 0
 1459 003c 0C4B     		ldr	r3, .L104
 1460 003e 1B68     		ldr	r3, [r3]
 1461 0040 DA68     		ldr	r2, [r3, #12]
 1462 0042 0B4B     		ldr	r3, .L104
 1463 0044 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 39


 1464 0046 1B69     		ldr	r3, [r3, #16]
 1465 0048 1800     		movs	r0, r3
 1466 004a 9047     		blx	r2
 1467 004c 0300     		movs	r3, r0
 1468 004e 1800     		movs	r0, r3
 1469 0050 FFF7FEFF 		bl	gfxThreadExit
 1470              	.L102:
 406:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 407:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 				// We never get here as gfxThreadExit() never returns
 408:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			}
 409:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 410:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			// Adjust the new context so the stack references are correct
 411:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			_gfxAdjustCxt(newt);
 1471              		.loc 3 411 0
 1472 0054 BB68     		ldr	r3, [r7, #8]
 1473 0056 1800     		movs	r0, r3
 1474 0058 FFF7FEFF 		bl	_gfxAdjustCxt
 1475              	.L101:
 412:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		}
 413:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 414:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		// Start the new context
 415:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		CXT_RESTORE(newt->cxt, 1);
 1476              		.loc 3 415 0
 1477 005c BB68     		ldr	r3, [r7, #8]
 1478 005e 5B69     		ldr	r3, [r3, #20]
 1479 0060 0121     		movs	r1, #1
 1480 0062 1800     		movs	r0, r3
 1481 0064 FFF7FEFF 		bl	longjmp
 1482              	.L103:
 390:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 1483              		.loc 3 390 0
 1484 0068 C046     		nop
 416:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 1485              		.loc 3 416 0
 1486 006a BD46     		mov	sp, r7
 1487 006c 04B0     		add	sp, sp, #16
 1488              		@ sp needed
 1489 006e 80BD     		pop	{r7, pc}
 1490              	.L105:
 1491              		.align	2
 1492              	.L104:
 1493 0070 00000000 		.word	_gfxCurrentThread
 1494              		.cfi_endproc
 1495              	.LFE22:
 1496              		.size	_gfxXSwitch, .-_gfxXSwitch
 1497              		.section	.text.Qinit,"ax",%progbits
 1498              		.align	2
 1499              		.code	16
 1500              		.thumb_func
 1501              		.type	Qinit, %function
 1502              	Qinit:
 1503              	.LFB23:
 417:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 418:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#define _gfxTaskSwitch(oldt, newt)		_gfxXSwitch(oldt, newt, FALSE)
 419:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	#define _gfxStartThread(oldt, newt)		_gfxXSwitch(oldt, newt, TRUE)
 420:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #endif
 421:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** #undef GFX_THREADS_DONE
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 40


 422:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 423:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static void Qinit(threadQ * q) {
 1504              		.loc 3 423 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 8
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508 0000 80B5     		push	{r7, lr}
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 82B0     		sub	sp, sp, #8
 1513              		.cfi_def_cfa_offset 16
 1514 0004 00AF     		add	r7, sp, #0
 1515              		.cfi_def_cfa_register 7
 1516 0006 7860     		str	r0, [r7, #4]
 424:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	q->head = q->tail = 0;
 1517              		.loc 3 424 0
 1518 0008 7B68     		ldr	r3, [r7, #4]
 1519 000a 0022     		movs	r2, #0
 1520 000c 5A60     		str	r2, [r3, #4]
 1521 000e 7B68     		ldr	r3, [r7, #4]
 1522 0010 5A68     		ldr	r2, [r3, #4]
 1523 0012 7B68     		ldr	r3, [r7, #4]
 1524 0014 1A60     		str	r2, [r3]
 425:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1525              		.loc 3 425 0
 1526 0016 C046     		nop
 1527 0018 BD46     		mov	sp, r7
 1528 001a 02B0     		add	sp, sp, #8
 1529              		@ sp needed
 1530 001c 80BD     		pop	{r7, pc}
 1531              		.cfi_endproc
 1532              	.LFE23:
 1533              		.size	Qinit, .-Qinit
 1534 001e C046     		.section	.text.Qadd,"ax",%progbits
 1535              		.align	2
 1536              		.code	16
 1537              		.thumb_func
 1538              		.type	Qadd, %function
 1539              	Qadd:
 1540              	.LFB24:
 426:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 427:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static void Qadd(threadQ * q, thread *t) {
 1541              		.loc 3 427 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 8
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545 0000 80B5     		push	{r7, lr}
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 7, -8
 1548              		.cfi_offset 14, -4
 1549 0002 82B0     		sub	sp, sp, #8
 1550              		.cfi_def_cfa_offset 16
 1551 0004 00AF     		add	r7, sp, #0
 1552              		.cfi_def_cfa_register 7
 1553 0006 7860     		str	r0, [r7, #4]
 1554 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 41


 428:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->next = 0;
 1555              		.loc 3 428 0
 1556 000a 3B68     		ldr	r3, [r7]
 1557 000c 0022     		movs	r2, #0
 1558 000e 1A60     		str	r2, [r3]
 429:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (q->head) {
 1559              		.loc 3 429 0
 1560 0010 7B68     		ldr	r3, [r7, #4]
 1561 0012 1B68     		ldr	r3, [r3]
 1562 0014 002B     		cmp	r3, #0
 1563 0016 07D0     		beq	.L108
 430:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		q->tail->next = t;
 1564              		.loc 3 430 0
 1565 0018 7B68     		ldr	r3, [r7, #4]
 1566 001a 5B68     		ldr	r3, [r3, #4]
 1567 001c 3A68     		ldr	r2, [r7]
 1568 001e 1A60     		str	r2, [r3]
 431:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		q->tail = t;
 1569              		.loc 3 431 0
 1570 0020 7B68     		ldr	r3, [r7, #4]
 1571 0022 3A68     		ldr	r2, [r7]
 1572 0024 5A60     		str	r2, [r3, #4]
 432:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	} else
 433:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		q->head = q->tail = t;
 434:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1573              		.loc 3 434 0
 1574 0026 06E0     		b	.L110
 1575              	.L108:
 433:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1576              		.loc 3 433 0
 1577 0028 7B68     		ldr	r3, [r7, #4]
 1578 002a 3A68     		ldr	r2, [r7]
 1579 002c 5A60     		str	r2, [r3, #4]
 1580 002e 7B68     		ldr	r3, [r7, #4]
 1581 0030 5A68     		ldr	r2, [r3, #4]
 1582 0032 7B68     		ldr	r3, [r7, #4]
 1583 0034 1A60     		str	r2, [r3]
 1584              	.L110:
 1585              		.loc 3 434 0
 1586 0036 C046     		nop
 1587 0038 BD46     		mov	sp, r7
 1588 003a 02B0     		add	sp, sp, #8
 1589              		@ sp needed
 1590 003c 80BD     		pop	{r7, pc}
 1591              		.cfi_endproc
 1592              	.LFE24:
 1593              		.size	Qadd, .-Qadd
 1594 003e C046     		.section	.text.Qpop,"ax",%progbits
 1595              		.align	2
 1596              		.code	16
 1597              		.thumb_func
 1598              		.type	Qpop, %function
 1599              	Qpop:
 1600              	.LFB25:
 435:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 436:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static thread *Qpop(threadQ * q) {
 1601              		.loc 3 436 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 42


 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 16
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 84B0     		sub	sp, sp, #16
 1610              		.cfi_def_cfa_offset 24
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 437:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	struct thread * t;
 438:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 439:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (!q->head)
 1614              		.loc 3 439 0
 1615 0008 7B68     		ldr	r3, [r7, #4]
 1616 000a 1B68     		ldr	r3, [r3]
 1617 000c 002B     		cmp	r3, #0
 1618 000e 01D1     		bne	.L112
 440:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return 0;
 1619              		.loc 3 440 0
 1620 0010 0023     		movs	r3, #0
 1621 0012 07E0     		b	.L113
 1622              	.L112:
 441:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t = q->head;
 1623              		.loc 3 441 0
 1624 0014 7B68     		ldr	r3, [r7, #4]
 1625 0016 1B68     		ldr	r3, [r3]
 1626 0018 FB60     		str	r3, [r7, #12]
 442:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	q->head = t->next;
 1627              		.loc 3 442 0
 1628 001a FB68     		ldr	r3, [r7, #12]
 1629 001c 1A68     		ldr	r2, [r3]
 1630 001e 7B68     		ldr	r3, [r7, #4]
 1631 0020 1A60     		str	r2, [r3]
 443:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return t;
 1632              		.loc 3 443 0
 1633 0022 FB68     		ldr	r3, [r7, #12]
 1634              	.L113:
 444:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1635              		.loc 3 444 0
 1636 0024 1800     		movs	r0, r3
 1637 0026 BD46     		mov	sp, r7
 1638 0028 04B0     		add	sp, sp, #16
 1639              		@ sp needed
 1640 002a 80BD     		pop	{r7, pc}
 1641              		.cfi_endproc
 1642              	.LFE25:
 1643              		.size	Qpop, .-Qpop
 1644              		.section	.text._gosThreadsInit,"ax",%progbits
 1645              		.align	2
 1646              		.global	_gosThreadsInit
 1647              		.code	16
 1648              		.thumb_func
 1649              		.type	_gosThreadsInit, %function
 1650              	_gosThreadsInit:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 43


 1651              	.LFB26:
 445:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 446:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void _gosThreadsInit(void) {
 1652              		.loc 3 446 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 1, uses_anonymous_args = 0
 1656 0000 80B5     		push	{r7, lr}
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 447:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	Qinit(&readyQ);
 1662              		.loc 3 447 0
 1663 0004 0D4B     		ldr	r3, .L115
 1664 0006 1800     		movs	r0, r3
 1665 0008 FFF7FEFF 		bl	Qinit
 448:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 449:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	mainthread.next = 0;
 1666              		.loc 3 449 0
 1667 000c 0C4B     		ldr	r3, .L115+4
 1668 000e 0022     		movs	r2, #0
 1669 0010 1A60     		str	r2, [r3]
 450:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	mainthread.size = sizeof(thread);
 1670              		.loc 3 450 0
 1671 0012 0B4B     		ldr	r3, .L115+4
 1672 0014 1822     		movs	r2, #24
 1673 0016 9A60     		str	r2, [r3, #8]
 451:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	mainthread.flags = FLG_THD_MAIN;
 1674              		.loc 3 451 0
 1675 0018 094B     		ldr	r3, .L115+4
 1676 001a 0222     		movs	r2, #2
 1677 001c 5A60     		str	r2, [r3, #4]
 452:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	mainthread.fn = 0;
 1678              		.loc 3 452 0
 1679 001e 084B     		ldr	r3, .L115+4
 1680 0020 0022     		movs	r2, #0
 1681 0022 DA60     		str	r2, [r3, #12]
 453:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	mainthread.param = 0;
 1682              		.loc 3 453 0
 1683 0024 064B     		ldr	r3, .L115+4
 1684 0026 0022     		movs	r2, #0
 1685 0028 1A61     		str	r2, [r3, #16]
 454:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 455:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxThreadsInit();
 1686              		.loc 3 455 0
 1687 002a FFF7FEFF 		bl	_gfxThreadsInit
 456:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 457:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxCurrentThread = &mainthread;
 1688              		.loc 3 457 0
 1689 002e 054B     		ldr	r3, .L115+8
 1690 0030 034A     		ldr	r2, .L115+4
 1691 0032 1A60     		str	r2, [r3]
 458:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1692              		.loc 3 458 0
 1693 0034 C046     		nop
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 44


 1694 0036 BD46     		mov	sp, r7
 1695              		@ sp needed
 1696 0038 80BD     		pop	{r7, pc}
 1697              	.L116:
 1698 003a C046     		.align	2
 1699              	.L115:
 1700 003c 04000000 		.word	readyQ
 1701 0040 14000000 		.word	mainthread
 1702 0044 00000000 		.word	_gfxCurrentThread
 1703              		.cfi_endproc
 1704              	.LFE26:
 1705              		.size	_gosThreadsInit, .-_gosThreadsInit
 1706              		.section	.text.gfxThreadMe,"ax",%progbits
 1707              		.align	2
 1708              		.global	gfxThreadMe
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	gfxThreadMe, %function
 1712              	gfxThreadMe:
 1713              	.LFB27:
 459:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 460:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** gfxThreadHandle gfxThreadMe(void) {
 1714              		.loc 3 460 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 1, uses_anonymous_args = 0
 1718 0000 80B5     		push	{r7, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 7, -8
 1721              		.cfi_offset 14, -4
 1722 0002 00AF     		add	r7, sp, #0
 1723              		.cfi_def_cfa_register 7
 461:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return (gfxThreadHandle)_gfxCurrentThread;
 1724              		.loc 3 461 0
 1725 0004 024B     		ldr	r3, .L119
 1726 0006 1B68     		ldr	r3, [r3]
 462:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1727              		.loc 3 462 0
 1728 0008 1800     		movs	r0, r3
 1729 000a BD46     		mov	sp, r7
 1730              		@ sp needed
 1731 000c 80BD     		pop	{r7, pc}
 1732              	.L120:
 1733 000e C046     		.align	2
 1734              	.L119:
 1735 0010 00000000 		.word	_gfxCurrentThread
 1736              		.cfi_endproc
 1737              	.LFE27:
 1738              		.size	gfxThreadMe, .-gfxThreadMe
 1739              		.section	.text.cleanUpDeadThreads,"ax",%progbits
 1740              		.align	2
 1741              		.code	16
 1742              		.thumb_func
 1743              		.type	cleanUpDeadThreads, %function
 1744              	cleanUpDeadThreads:
 1745              	.LFB28:
 463:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 45


 464:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** // Check if there are dead processes to deallocate
 465:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** static void cleanUpDeadThreads(void) {
 1746              		.loc 3 465 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 8
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 80B5     		push	{r7, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 82B0     		sub	sp, sp, #8
 1755              		.cfi_def_cfa_offset 16
 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 466:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *p;
 467:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 468:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	while ((p = Qpop(&deadQ)))
 1758              		.loc 3 468 0
 1759 0006 03E0     		b	.L122
 1760              	.L123:
 469:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxFree(p);
 1761              		.loc 3 469 0
 1762 0008 7B68     		ldr	r3, [r7, #4]
 1763 000a 1800     		movs	r0, r3
 1764 000c FFF7FEFF 		bl	gfxFree
 1765              	.L122:
 468:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxFree(p);
 1766              		.loc 3 468 0
 1767 0010 064B     		ldr	r3, .L124
 1768 0012 1800     		movs	r0, r3
 1769 0014 FFF7FEFF 		bl	Qpop
 1770 0018 0300     		movs	r3, r0
 1771 001a 7B60     		str	r3, [r7, #4]
 1772 001c 7B68     		ldr	r3, [r7, #4]
 1773 001e 002B     		cmp	r3, #0
 1774 0020 F2D1     		bne	.L123
 470:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1775              		.loc 3 470 0
 1776 0022 C046     		nop
 1777 0024 BD46     		mov	sp, r7
 1778 0026 02B0     		add	sp, sp, #8
 1779              		@ sp needed
 1780 0028 80BD     		pop	{r7, pc}
 1781              	.L125:
 1782 002a C046     		.align	2
 1783              	.L124:
 1784 002c 0C000000 		.word	deadQ
 1785              		.cfi_endproc
 1786              	.LFE28:
 1787              		.size	cleanUpDeadThreads, .-cleanUpDeadThreads
 1788              		.section	.text.gfxYield,"ax",%progbits
 1789              		.align	2
 1790              		.global	gfxYield
 1791              		.code	16
 1792              		.thumb_func
 1793              		.type	gfxYield, %function
 1794              	gfxYield:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 46


 1795              	.LFB29:
 471:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 472:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxYield(void) {
 1796              		.loc 3 472 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 8
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 82B0     		sub	sp, sp, #8
 1805              		.cfi_def_cfa_offset 16
 1806 0004 00AF     		add	r7, sp, #0
 1807              		.cfi_def_cfa_register 7
 473:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread	*me;
 474:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 475:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Clean up zombies
 476:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	cleanUpDeadThreads();
 1808              		.loc 3 476 0
 1809 0006 FFF7FEFF 		bl	cleanUpDeadThreads
 477:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 478:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Is there another thread to run?
 479:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (!readyQ.head)
 1810              		.loc 3 479 0
 1811 000a 104B     		ldr	r3, .L130
 1812 000c 1B68     		ldr	r3, [r3]
 1813 000e 002B     		cmp	r3, #0
 1814 0010 17D0     		beq	.L129
 480:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 481:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 482:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	Qadd(&readyQ, me = _gfxCurrentThread);
 1815              		.loc 3 482 0
 1816 0012 0F4B     		ldr	r3, .L130+4
 1817 0014 1B68     		ldr	r3, [r3]
 1818 0016 7B60     		str	r3, [r7, #4]
 1819 0018 7A68     		ldr	r2, [r7, #4]
 1820 001a 0C4B     		ldr	r3, .L130
 1821 001c 1100     		movs	r1, r2
 1822 001e 1800     		movs	r0, r3
 1823 0020 FFF7FEFF 		bl	Qadd
 483:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxCurrentThread = Qpop(&readyQ);
 1824              		.loc 3 483 0
 1825 0024 094B     		ldr	r3, .L130
 1826 0026 1800     		movs	r0, r3
 1827 0028 FFF7FEFF 		bl	Qpop
 1828 002c 0200     		movs	r2, r0
 1829 002e 084B     		ldr	r3, .L130+4
 1830 0030 1A60     		str	r2, [r3]
 484:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxTaskSwitch(me, _gfxCurrentThread);
 1831              		.loc 3 484 0
 1832 0032 074B     		ldr	r3, .L130+4
 1833 0034 1968     		ldr	r1, [r3]
 1834 0036 7B68     		ldr	r3, [r7, #4]
 1835 0038 0022     		movs	r2, #0
 1836 003a 1800     		movs	r0, r3
 1837 003c FFF7FEFF 		bl	_gfxXSwitch
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 47


 1838 0040 00E0     		b	.L126
 1839              	.L129:
 480:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return;
 1840              		.loc 3 480 0
 1841 0042 C046     		nop
 1842              	.L126:
 485:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1843              		.loc 3 485 0
 1844 0044 BD46     		mov	sp, r7
 1845 0046 02B0     		add	sp, sp, #8
 1846              		@ sp needed
 1847 0048 80BD     		pop	{r7, pc}
 1848              	.L131:
 1849 004a C046     		.align	2
 1850              	.L130:
 1851 004c 04000000 		.word	readyQ
 1852 0050 00000000 		.word	_gfxCurrentThread
 1853              		.cfi_endproc
 1854              	.LFE29:
 1855              		.size	gfxYield, .-gfxYield
 1856              		.section	.text.gfxThreadExit,"ax",%progbits
 1857              		.align	2
 1858              		.global	gfxThreadExit
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	gfxThreadExit, %function
 1862              	gfxThreadExit:
 1863              	.LFB30:
 486:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 487:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** // This routine is not currently public - but it could be.
 488:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** void gfxThreadExit(threadreturn_t ret) {
 1864              		.loc 3 488 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 16
 1867              		@ frame_needed = 1, uses_anonymous_args = 0
 1868 0000 80B5     		push	{r7, lr}
 1869              		.cfi_def_cfa_offset 8
 1870              		.cfi_offset 7, -8
 1871              		.cfi_offset 14, -4
 1872 0002 84B0     		sub	sp, sp, #16
 1873              		.cfi_def_cfa_offset 24
 1874 0004 00AF     		add	r7, sp, #0
 1875              		.cfi_def_cfa_register 7
 1876 0006 7860     		str	r0, [r7, #4]
 489:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread	*me;
 490:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 491:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Save the results in case someone is waiting
 492:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	me = _gfxCurrentThread;
 1877              		.loc 3 492 0
 1878 0008 174B     		ldr	r3, .L135
 1879 000a 1B68     		ldr	r3, [r3]
 1880 000c FB60     		str	r3, [r7, #12]
 493:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	me->param = (void *)ret;
 1881              		.loc 3 493 0
 1882 000e 7A68     		ldr	r2, [r7, #4]
 1883 0010 FB68     		ldr	r3, [r7, #12]
 1884 0012 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 48


 494:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	me->flags |= FLG_THD_DEAD;
 1885              		.loc 3 494 0
 1886 0014 FB68     		ldr	r3, [r7, #12]
 1887 0016 5B68     		ldr	r3, [r3, #4]
 1888 0018 0422     		movs	r2, #4
 1889 001a 1A43     		orrs	r2, r3
 1890 001c FB68     		ldr	r3, [r7, #12]
 1891 001e 5A60     		str	r2, [r3, #4]
 495:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 496:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Add us to the dead list if we need deallocation as we can't free ourselves.
 497:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// If someone is waiting on the thread they will do the cleanup.
 498:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if ((me->flags & (FLG_THD_ALLOC|FLG_THD_WAIT)) == FLG_THD_ALLOC)
 1892              		.loc 3 498 0
 1893 0020 FB68     		ldr	r3, [r7, #12]
 1894 0022 5B68     		ldr	r3, [r3, #4]
 1895 0024 0922     		movs	r2, #9
 1896 0026 1340     		ands	r3, r2
 1897 0028 012B     		cmp	r3, #1
 1898 002a 05D1     		bne	.L133
 499:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		Qadd(&deadQ, me);
 1899              		.loc 3 499 0
 1900 002c FA68     		ldr	r2, [r7, #12]
 1901 002e 0F4B     		ldr	r3, .L135+4
 1902 0030 1100     		movs	r1, r2
 1903 0032 1800     		movs	r0, r3
 1904 0034 FFF7FEFF 		bl	Qadd
 1905              	.L133:
 500:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 501:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Set the next thread. Exit if it was the last thread
 502:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (!(_gfxCurrentThread = Qpop(&readyQ)))
 1906              		.loc 3 502 0
 1907 0038 0D4B     		ldr	r3, .L135+8
 1908 003a 1800     		movs	r0, r3
 1909 003c FFF7FEFF 		bl	Qpop
 1910 0040 0200     		movs	r2, r0
 1911 0042 094B     		ldr	r3, .L135
 1912 0044 1A60     		str	r2, [r3]
 1913 0046 084B     		ldr	r3, .L135
 1914 0048 1B68     		ldr	r3, [r3]
 1915 004a 002B     		cmp	r3, #0
 1916 004c 01D1     		bne	.L134
 503:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxExit();
 1917              		.loc 3 503 0
 1918 004e FFF7FEFF 		bl	gfxExit
 1919              	.L134:
 504:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 505:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Switch to the new thread
 506:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxTaskSwitch(me, _gfxCurrentThread);
 1920              		.loc 3 506 0
 1921 0052 054B     		ldr	r3, .L135
 1922 0054 1968     		ldr	r1, [r3]
 1923 0056 FB68     		ldr	r3, [r7, #12]
 1924 0058 0022     		movs	r2, #0
 1925 005a 1800     		movs	r0, r3
 1926 005c FFF7FEFF 		bl	_gfxXSwitch
 507:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 508:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// We never get back here as we didn't re-queue ourselves
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 49


 509:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 1927              		.loc 3 509 0
 1928 0060 C046     		nop
 1929 0062 BD46     		mov	sp, r7
 1930 0064 04B0     		add	sp, sp, #16
 1931              		@ sp needed
 1932 0066 80BD     		pop	{r7, pc}
 1933              	.L136:
 1934              		.align	2
 1935              	.L135:
 1936 0068 00000000 		.word	_gfxCurrentThread
 1937 006c 0C000000 		.word	deadQ
 1938 0070 04000000 		.word	readyQ
 1939              		.cfi_endproc
 1940              	.LFE30:
 1941              		.size	gfxThreadExit, .-gfxThreadExit
 1942              		.section	.text.gfxThreadCreate,"ax",%progbits
 1943              		.align	2
 1944              		.global	gfxThreadCreate
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	gfxThreadCreate, %function
 1948              	gfxThreadCreate:
 1949              	.LFB31:
 510:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 511:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** gfxThreadHandle gfxThreadCreate(void *stackarea, size_t stacksz, threadpriority_t prio, DECLARE_THR
 1950              		.loc 3 511 0
 1951              		.cfi_startproc
 1952              		@ args = 4, pretend = 0, frame = 24
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 80B5     		push	{r7, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 86B0     		sub	sp, sp, #24
 1959              		.cfi_def_cfa_offset 32
 1960 0004 00AF     		add	r7, sp, #0
 1961              		.cfi_def_cfa_register 7
 1962 0006 F860     		str	r0, [r7, #12]
 1963 0008 B960     		str	r1, [r7, #8]
 1964 000a 7A60     		str	r2, [r7, #4]
 1965 000c 3B60     		str	r3, [r7]
 512:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *	t;
 513:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *	me;
 514:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	(void)		prio;
 515:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 516:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Ensure we have a minimum stack size
 517:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (stacksz < sizeof(thread)+64) {
 1966              		.loc 3 517 0
 1967 000e BB68     		ldr	r3, [r7, #8]
 1968 0010 572B     		cmp	r3, #87
 1969 0012 03D8     		bhi	.L138
 518:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		stacksz = sizeof(thread)+64;
 1970              		.loc 3 518 0
 1971 0014 5823     		movs	r3, #88
 1972 0016 BB60     		str	r3, [r7, #8]
 519:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		stackarea = 0;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 50


 1973              		.loc 3 519 0
 1974 0018 0023     		movs	r3, #0
 1975 001a FB60     		str	r3, [r7, #12]
 1976              	.L138:
 520:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 521:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 522:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (stackarea) {
 1977              		.loc 3 522 0
 1978 001c FB68     		ldr	r3, [r7, #12]
 1979 001e 002B     		cmp	r3, #0
 1980 0020 05D0     		beq	.L139
 523:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		t = (thread *)stackarea;
 1981              		.loc 3 523 0
 1982 0022 FB68     		ldr	r3, [r7, #12]
 1983 0024 7B61     		str	r3, [r7, #20]
 524:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		t->flags = 0;
 1984              		.loc 3 524 0
 1985 0026 7B69     		ldr	r3, [r7, #20]
 1986 0028 0022     		movs	r2, #0
 1987 002a 5A60     		str	r2, [r3, #4]
 1988 002c 0DE0     		b	.L140
 1989              	.L139:
 525:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	} else {
 526:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		t = (thread *)gfxAlloc(stacksz);
 1990              		.loc 3 526 0
 1991 002e BB68     		ldr	r3, [r7, #8]
 1992 0030 1800     		movs	r0, r3
 1993 0032 FFF7FEFF 		bl	gfxAlloc
 1994 0036 0300     		movs	r3, r0
 1995 0038 7B61     		str	r3, [r7, #20]
 527:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		if (!t)
 1996              		.loc 3 527 0
 1997 003a 7B69     		ldr	r3, [r7, #20]
 1998 003c 002B     		cmp	r3, #0
 1999 003e 01D1     		bne	.L141
 528:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 			return 0;
 2000              		.loc 3 528 0
 2001 0040 0023     		movs	r3, #0
 2002 0042 1EE0     		b	.L142
 2003              	.L141:
 529:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		t->flags = FLG_THD_ALLOC;
 2004              		.loc 3 529 0
 2005 0044 7B69     		ldr	r3, [r7, #20]
 2006 0046 0122     		movs	r2, #1
 2007 0048 5A60     		str	r2, [r3, #4]
 2008              	.L140:
 530:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	}
 531:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->size = stacksz;
 2009              		.loc 3 531 0
 2010 004a 7B69     		ldr	r3, [r7, #20]
 2011 004c BA68     		ldr	r2, [r7, #8]
 2012 004e 9A60     		str	r2, [r3, #8]
 532:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->fn = fn;
 2013              		.loc 3 532 0
 2014 0050 7B69     		ldr	r3, [r7, #20]
 2015 0052 3A68     		ldr	r2, [r7]
 2016 0054 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 51


 533:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->param = param;
 2017              		.loc 3 533 0
 2018 0056 7B69     		ldr	r3, [r7, #20]
 2019 0058 3A6A     		ldr	r2, [r7, #32]
 2020 005a 1A61     		str	r2, [r3, #16]
 534:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 535:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Add the current thread to the queue because we are starting a new thread.
 536:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	me = _gfxCurrentThread;
 2021              		.loc 3 536 0
 2022 005c 0B4B     		ldr	r3, .L143
 2023 005e 1B68     		ldr	r3, [r3]
 2024 0060 3B61     		str	r3, [r7, #16]
 537:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	Qadd(&readyQ, me);
 2025              		.loc 3 537 0
 2026 0062 3A69     		ldr	r2, [r7, #16]
 2027 0064 0A4B     		ldr	r3, .L143+4
 2028 0066 1100     		movs	r1, r2
 2029 0068 1800     		movs	r0, r3
 2030 006a FFF7FEFF 		bl	Qadd
 538:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxCurrentThread = t;
 2031              		.loc 3 538 0
 2032 006e 074B     		ldr	r3, .L143
 2033 0070 7A69     		ldr	r2, [r7, #20]
 2034 0072 1A60     		str	r2, [r3]
 539:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 540:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	_gfxStartThread(me, t);
 2035              		.loc 3 540 0
 2036 0074 7969     		ldr	r1, [r7, #20]
 2037 0076 3B69     		ldr	r3, [r7, #16]
 2038 0078 FF22     		movs	r2, #255
 2039 007a 1800     		movs	r0, r3
 2040 007c FFF7FEFF 		bl	_gfxXSwitch
 541:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 542:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Return the new thread handle
 543:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return t;
 2041              		.loc 3 543 0
 2042 0080 7B69     		ldr	r3, [r7, #20]
 2043              	.L142:
 544:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 2044              		.loc 3 544 0
 2045 0082 1800     		movs	r0, r3
 2046 0084 BD46     		mov	sp, r7
 2047 0086 06B0     		add	sp, sp, #24
 2048              		@ sp needed
 2049 0088 80BD     		pop	{r7, pc}
 2050              	.L144:
 2051 008a C046     		.align	2
 2052              	.L143:
 2053 008c 00000000 		.word	_gfxCurrentThread
 2054 0090 04000000 		.word	readyQ
 2055              		.cfi_endproc
 2056              	.LFE31:
 2057              		.size	gfxThreadCreate, .-gfxThreadCreate
 2058              		.section	.text.gfxThreadWait,"ax",%progbits
 2059              		.align	2
 2060              		.global	gfxThreadWait
 2061              		.code	16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 52


 2062              		.thumb_func
 2063              		.type	gfxThreadWait, %function
 2064              	gfxThreadWait:
 2065              	.LFB32:
 545:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 546:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** threadreturn_t gfxThreadWait(gfxThreadHandle th) {
 2066              		.loc 3 546 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 16
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 84B0     		sub	sp, sp, #16
 2075              		.cfi_def_cfa_offset 24
 2076 0004 00AF     		add	r7, sp, #0
 2077              		.cfi_def_cfa_register 7
 2078 0006 7860     		str	r0, [r7, #4]
 547:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	thread *		t;
 548:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 549:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t = th;
 2079              		.loc 3 549 0
 2080 0008 7B68     		ldr	r3, [r7, #4]
 2081 000a FB60     		str	r3, [r7, #12]
 550:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (t == _gfxCurrentThread)
 2082              		.loc 3 550 0
 2083 000c 154B     		ldr	r3, .L151
 2084 000e 1B68     		ldr	r3, [r3]
 2085 0010 FA68     		ldr	r2, [r7, #12]
 2086 0012 9A42     		cmp	r2, r3
 2087 0014 02D1     		bne	.L146
 551:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		return -1;
 2088              		.loc 3 551 0
 2089 0016 0123     		movs	r3, #1
 2090 0018 5B42     		rsbs	r3, r3, #0
 2091 001a 1FE0     		b	.L147
 2092              	.L146:
 552:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 553:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Mark that we are waiting
 554:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->flags |= FLG_THD_WAIT;
 2093              		.loc 3 554 0
 2094 001c FB68     		ldr	r3, [r7, #12]
 2095 001e 5B68     		ldr	r3, [r3, #4]
 2096 0020 0822     		movs	r2, #8
 2097 0022 1A43     		orrs	r2, r3
 2098 0024 FB68     		ldr	r3, [r7, #12]
 2099 0026 5A60     		str	r2, [r3, #4]
 555:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 556:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Wait for the thread to die
 557:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	while(!(t->flags & FLG_THD_DEAD))
 2100              		.loc 3 557 0
 2101 0028 01E0     		b	.L148
 2102              	.L149:
 558:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 2103              		.loc 3 558 0
 2104 002a FFF7FEFF 		bl	gfxYield
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 53


 2105              	.L148:
 557:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxYield();
 2106              		.loc 3 557 0
 2107 002e FB68     		ldr	r3, [r7, #12]
 2108 0030 5B68     		ldr	r3, [r3, #4]
 2109 0032 0422     		movs	r2, #4
 2110 0034 1340     		ands	r3, r2
 2111 0036 F8D0     		beq	.L149
 559:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 560:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Unmark
 561:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	t->flags &= ~FLG_THD_WAIT;
 2112              		.loc 3 561 0
 2113 0038 FB68     		ldr	r3, [r7, #12]
 2114 003a 5B68     		ldr	r3, [r3, #4]
 2115 003c 0822     		movs	r2, #8
 2116 003e 9343     		bics	r3, r2
 2117 0040 1A00     		movs	r2, r3
 2118 0042 FB68     		ldr	r3, [r7, #12]
 2119 0044 5A60     		str	r2, [r3, #4]
 562:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 563:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Clean up resources if needed
 564:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	if (t->flags & FLG_THD_ALLOC)
 2120              		.loc 3 564 0
 2121 0046 FB68     		ldr	r3, [r7, #12]
 2122 0048 5B68     		ldr	r3, [r3, #4]
 2123 004a 0122     		movs	r2, #1
 2124 004c 1340     		ands	r3, r2
 2125 004e 03D0     		beq	.L150
 565:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 		gfxFree(t);
 2126              		.loc 3 565 0
 2127 0050 FB68     		ldr	r3, [r7, #12]
 2128 0052 1800     		movs	r0, r3
 2129 0054 FFF7FEFF 		bl	gfxFree
 2130              	.L150:
 566:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 
 567:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	// Return the status left by the dead process
 568:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** 	return (threadreturn_t)t->param;
 2131              		.loc 3 568 0
 2132 0058 FB68     		ldr	r3, [r7, #12]
 2133 005a 1B69     		ldr	r3, [r3, #16]
 2134              	.L147:
 569:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_threads.c **** }
 2135              		.loc 3 569 0
 2136 005c 1800     		movs	r0, r3
 2137 005e BD46     		mov	sp, r7
 2138 0060 04B0     		add	sp, sp, #16
 2139              		@ sp needed
 2140 0062 80BD     		pop	{r7, pc}
 2141              	.L152:
 2142              		.align	2
 2143              	.L151:
 2144 0064 00000000 		.word	_gfxCurrentThread
 2145              		.cfi_endproc
 2146              	.LFE32:
 2147              		.size	gfxThreadWait, .-gfxThreadWait
 2148              		.section	.text._gosHeapInit,"ax",%progbits
 2149              		.align	2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 54


 2150              		.global	_gosHeapInit
 2151              		.code	16
 2152              		.thumb_func
 2153              		.type	_gosHeapInit, %function
 2154              	_gosHeapInit:
 2155              	.LFB33:
 2156              		.file 4 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gos/gos_x_heap.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** #include "../../gfx.h"
   9:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  10:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** #if GOS_NEED_X_HEAP
  11:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  12:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** #include <string.h>				// Prototype for memcpy()
  13:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  14:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  15:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** #if GFX_OS_HEAP_SIZE == 0
  16:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	#include <stdlib.h>				// Prototype for malloc(), realloc() and free()
  17:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  18:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	void _gosHeapInit(void) {
 2157              		.loc 4 18 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161 0000 80B5     		push	{r7, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 7, -8
 2164              		.cfi_offset 14, -4
 2165 0002 00AF     		add	r7, sp, #0
 2166              		.cfi_def_cfa_register 7
  19:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	}
 2167              		.loc 4 19 0
 2168 0004 C046     		nop
 2169 0006 BD46     		mov	sp, r7
 2170              		@ sp needed
 2171 0008 80BD     		pop	{r7, pc}
 2172              		.cfi_endproc
 2173              	.LFE33:
 2174              		.size	_gosHeapInit, .-_gosHeapInit
 2175 000a C046     		.section	.text.gfxAlloc,"ax",%progbits
 2176              		.align	2
 2177              		.global	gfxAlloc
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	gfxAlloc, %function
 2181              	gfxAlloc:
 2182              	.LFB34:
  20:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	void *gfxAlloc(size_t sz) {
 2183              		.loc 4 20 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 8
 2186              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 55


 2187 0000 80B5     		push	{r7, lr}
 2188              		.cfi_def_cfa_offset 8
 2189              		.cfi_offset 7, -8
 2190              		.cfi_offset 14, -4
 2191 0002 82B0     		sub	sp, sp, #8
 2192              		.cfi_def_cfa_offset 16
 2193 0004 00AF     		add	r7, sp, #0
 2194              		.cfi_def_cfa_register 7
 2195 0006 7860     		str	r0, [r7, #4]
  21:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 		return malloc(sz);
 2196              		.loc 4 21 0
 2197 0008 7B68     		ldr	r3, [r7, #4]
 2198 000a 1800     		movs	r0, r3
 2199 000c FFF7FEFF 		bl	malloc
 2200 0010 0300     		movs	r3, r0
  22:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	}
 2201              		.loc 4 22 0
 2202 0012 1800     		movs	r0, r3
 2203 0014 BD46     		mov	sp, r7
 2204 0016 02B0     		add	sp, sp, #8
 2205              		@ sp needed
 2206 0018 80BD     		pop	{r7, pc}
 2207              		.cfi_endproc
 2208              	.LFE34:
 2209              		.size	gfxAlloc, .-gfxAlloc
 2210 001a C046     		.section	.text.gfxRealloc,"ax",%progbits
 2211              		.align	2
 2212              		.global	gfxRealloc
 2213              		.code	16
 2214              		.thumb_func
 2215              		.type	gfxRealloc, %function
 2216              	gfxRealloc:
 2217              	.LFB35:
  23:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  24:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	void *gfxRealloc(void *ptr, size_t oldsz, size_t newsz) {
 2218              		.loc 4 24 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 16
 2221              		@ frame_needed = 1, uses_anonymous_args = 0
 2222 0000 80B5     		push	{r7, lr}
 2223              		.cfi_def_cfa_offset 8
 2224              		.cfi_offset 7, -8
 2225              		.cfi_offset 14, -4
 2226 0002 84B0     		sub	sp, sp, #16
 2227              		.cfi_def_cfa_offset 24
 2228 0004 00AF     		add	r7, sp, #0
 2229              		.cfi_def_cfa_register 7
 2230 0006 F860     		str	r0, [r7, #12]
 2231 0008 B960     		str	r1, [r7, #8]
 2232 000a 7A60     		str	r2, [r7, #4]
  25:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 		(void) oldsz;
  26:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 		return realloc(ptr, newsz);
 2233              		.loc 4 26 0
 2234 000c 7A68     		ldr	r2, [r7, #4]
 2235 000e FB68     		ldr	r3, [r7, #12]
 2236 0010 1100     		movs	r1, r2
 2237 0012 1800     		movs	r0, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 56


 2238 0014 FFF7FEFF 		bl	realloc
 2239 0018 0300     		movs	r3, r0
  27:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	}
 2240              		.loc 4 27 0
 2241 001a 1800     		movs	r0, r3
 2242 001c BD46     		mov	sp, r7
 2243 001e 04B0     		add	sp, sp, #16
 2244              		@ sp needed
 2245 0020 80BD     		pop	{r7, pc}
 2246              		.cfi_endproc
 2247              	.LFE35:
 2248              		.size	gfxRealloc, .-gfxRealloc
 2249 0022 C046     		.section	.text.gfxFree,"ax",%progbits
 2250              		.align	2
 2251              		.global	gfxFree
 2252              		.code	16
 2253              		.thumb_func
 2254              		.type	gfxFree, %function
 2255              	gfxFree:
 2256              	.LFB36:
  28:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 
  29:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	void gfxFree(void *ptr) {
 2257              		.loc 4 29 0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 8
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261 0000 80B5     		push	{r7, lr}
 2262              		.cfi_def_cfa_offset 8
 2263              		.cfi_offset 7, -8
 2264              		.cfi_offset 14, -4
 2265 0002 82B0     		sub	sp, sp, #8
 2266              		.cfi_def_cfa_offset 16
 2267 0004 00AF     		add	r7, sp, #0
 2268              		.cfi_def_cfa_register 7
 2269 0006 7860     		str	r0, [r7, #4]
  30:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 		free(ptr);
 2270              		.loc 4 30 0
 2271 0008 7B68     		ldr	r3, [r7, #4]
 2272 000a 1800     		movs	r0, r3
 2273 000c FFF7FEFF 		bl	free
  31:..\..\ugfx_2.7\ugfx_2.7\src\gos/gos_x_heap.c **** 	}
 2274              		.loc 4 31 0
 2275 0010 C046     		nop
 2276 0012 BD46     		mov	sp, r7
 2277 0014 02B0     		add	sp, sp, #8
 2278              		@ sp needed
 2279 0016 80BD     		pop	{r7, pc}
 2280              		.cfi_endproc
 2281              	.LFE36:
 2282              		.size	gfxFree, .-gfxFree
 2283              		.bss
 2284              		.align	2
 2285              	dhead:
 2286 009c 00000000 		.space	4
 2287              		.align	2
 2288              	dtail:
 2289 00a0 00000000 		.space	4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 57


 2290              		.section	.text._gdriverInit,"ax",%progbits
 2291              		.align	2
 2292              		.global	_gdriverInit
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	_gdriverInit, %function
 2296              	_gdriverInit:
 2297              	.LFB37:
 2298              		.file 5 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gdriver/gdriver.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** #include "../../gfx.h"
   9:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  10:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** #if GFX_USE_GDRIVER
  11:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  12:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** #include "gdriver.h"
  13:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  14:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** #include <string.h>         // For memset
  15:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  16:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** // Define the tables to hold the driver instances.
  17:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** static GDriver *dhead;
  18:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** static GDriver *dtail;
  19:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  20:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** // The system initialization.
  21:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** void _gdriverInit(void) {
 2299              		.loc 5 21 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 00AF     		add	r7, sp, #0
 2308              		.cfi_def_cfa_register 7
  22:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2309              		.loc 5 22 0
 2310 0004 C046     		nop
 2311 0006 BD46     		mov	sp, r7
 2312              		@ sp needed
 2313 0008 80BD     		pop	{r7, pc}
 2314              		.cfi_endproc
 2315              	.LFE37:
 2316              		.size	_gdriverInit, .-_gdriverInit
 2317 000a C046     		.section	.text._gdriverDeinit,"ax",%progbits
 2318              		.align	2
 2319              		.global	_gdriverDeinit
 2320              		.code	16
 2321              		.thumb_func
 2322              		.type	_gdriverDeinit, %function
 2323              	_gdriverDeinit:
 2324              	.LFB38:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 58


  23:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  24:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** // The system de-initialization.
  25:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** void _gdriverDeinit(void) {
 2325              		.loc 5 25 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 1, uses_anonymous_args = 0
 2329 0000 80B5     		push	{r7, lr}
 2330              		.cfi_def_cfa_offset 8
 2331              		.cfi_offset 7, -8
 2332              		.cfi_offset 14, -4
 2333 0002 00AF     		add	r7, sp, #0
 2334              		.cfi_def_cfa_register 7
  26:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	while(dhead)
 2335              		.loc 5 26 0
 2336 0004 04E0     		b	.L161
 2337              	.L162:
  27:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		gdriverUnRegister(dhead);
 2338              		.loc 5 27 0
 2339 0006 064B     		ldr	r3, .L163
 2340 0008 1B68     		ldr	r3, [r3]
 2341 000a 1800     		movs	r0, r3
 2342 000c FFF7FEFF 		bl	gdriverUnRegister
 2343              	.L161:
  26:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	while(dhead)
 2344              		.loc 5 26 0
 2345 0010 034B     		ldr	r3, .L163
 2346 0012 1B68     		ldr	r3, [r3]
 2347 0014 002B     		cmp	r3, #0
 2348 0016 F6D1     		bne	.L162
  28:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2349              		.loc 5 28 0
 2350 0018 C046     		nop
 2351 001a BD46     		mov	sp, r7
 2352              		@ sp needed
 2353 001c 80BD     		pop	{r7, pc}
 2354              	.L164:
 2355 001e C046     		.align	2
 2356              	.L163:
 2357 0020 9C000000 		.word	dhead
 2358              		.cfi_endproc
 2359              	.LFE38:
 2360              		.size	_gdriverDeinit, .-_gdriverDeinit
 2361              		.section	.text.gdriverRegister,"ax",%progbits
 2362              		.align	2
 2363              		.global	gdriverRegister
 2364              		.code	16
 2365              		.thumb_func
 2366              		.type	gdriverRegister, %function
 2367              	gdriverRegister:
 2368              	.LFB39:
  29:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  30:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  31:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** GDriver *gdriverRegister(const GDriverVMT *vmt, void *param) {
 2369              		.loc 5 31 0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 59


 2372              		@ frame_needed = 1, uses_anonymous_args = 0
 2373 0000 90B5     		push	{r4, r7, lr}
 2374              		.cfi_def_cfa_offset 12
 2375              		.cfi_offset 4, -12
 2376              		.cfi_offset 7, -8
 2377              		.cfi_offset 14, -4
 2378 0002 87B0     		sub	sp, sp, #28
 2379              		.cfi_def_cfa_offset 40
 2380 0004 00AF     		add	r7, sp, #0
 2381              		.cfi_def_cfa_register 7
 2382 0006 7860     		str	r0, [r7, #4]
 2383 0008 3960     		str	r1, [r7]
  32:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	GDriver *	pd;
  33:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	unsigned	dinstance, sinstance;
  34:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  35:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Loop to find the driver instance and the system instance numbers
  36:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	dinstance = sinstance = 0;
 2384              		.loc 5 36 0
 2385 000a 0023     		movs	r3, #0
 2386 000c FB60     		str	r3, [r7, #12]
 2387 000e FB68     		ldr	r3, [r7, #12]
 2388 0010 3B61     		str	r3, [r7, #16]
  37:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2389              		.loc 5 37 0
 2390 0012 314B     		ldr	r3, .L176
 2391 0014 1B68     		ldr	r3, [r3]
 2392 0016 7B61     		str	r3, [r7, #20]
 2393 0018 14E0     		b	.L166
 2394              	.L169:
  38:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt == vmt)
 2395              		.loc 5 38 0
 2396 001a 7B69     		ldr	r3, [r7, #20]
 2397 001c 5A68     		ldr	r2, [r3, #4]
 2398 001e 7B68     		ldr	r3, [r7, #4]
 2399 0020 9A42     		cmp	r2, r3
 2400 0022 02D1     		bne	.L167
  39:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			dinstance++;
 2401              		.loc 5 39 0
 2402 0024 3B69     		ldr	r3, [r7, #16]
 2403 0026 0133     		adds	r3, r3, #1
 2404 0028 3B61     		str	r3, [r7, #16]
 2405              	.L167:
  40:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == vmt->type)
 2406              		.loc 5 40 0
 2407 002a 7B69     		ldr	r3, [r7, #20]
 2408 002c 5B68     		ldr	r3, [r3, #4]
 2409 002e 1A88     		ldrh	r2, [r3]
 2410 0030 7B68     		ldr	r3, [r7, #4]
 2411 0032 1B88     		ldrh	r3, [r3]
 2412 0034 9A42     		cmp	r2, r3
 2413 0036 02D1     		bne	.L168
  41:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			sinstance++;
 2414              		.loc 5 41 0
 2415 0038 FB68     		ldr	r3, [r7, #12]
 2416 003a 0133     		adds	r3, r3, #1
 2417 003c FB60     		str	r3, [r7, #12]
 2418              	.L168:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 60


  37:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt == vmt)
 2419              		.loc 5 37 0 discriminator 2
 2420 003e 7B69     		ldr	r3, [r7, #20]
 2421 0040 1B68     		ldr	r3, [r3]
 2422 0042 7B61     		str	r3, [r7, #20]
 2423              	.L166:
  37:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt == vmt)
 2424              		.loc 5 37 0 is_stmt 0 discriminator 1
 2425 0044 7B69     		ldr	r3, [r7, #20]
 2426 0046 002B     		cmp	r3, #0
 2427 0048 E7D1     		bne	.L169
  42:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
  43:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  44:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Get a new driver instance of the correct size and initialize it
  45:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	pd = gfxAlloc(vmt->objsize);
 2428              		.loc 5 45 0 is_stmt 1
 2429 004a 7B68     		ldr	r3, [r7, #4]
 2430 004c 5B68     		ldr	r3, [r3, #4]
 2431 004e 1800     		movs	r0, r3
 2432 0050 FFF7FEFF 		bl	gfxAlloc
 2433 0054 0300     		movs	r3, r0
 2434 0056 7B61     		str	r3, [r7, #20]
  46:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (!pd)
 2435              		.loc 5 46 0
 2436 0058 7B69     		ldr	r3, [r7, #20]
 2437 005a 002B     		cmp	r3, #0
 2438 005c 01D1     		bne	.L170
  47:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		return 0;
 2439              		.loc 5 47 0
 2440 005e 0023     		movs	r3, #0
 2441 0060 35E0     		b	.L171
 2442              	.L170:
  48:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c ****     memset(pd, 0, vmt->objsize);
 2443              		.loc 5 48 0
 2444 0062 7B68     		ldr	r3, [r7, #4]
 2445 0064 5A68     		ldr	r2, [r3, #4]
 2446 0066 7B69     		ldr	r3, [r7, #20]
 2447 0068 0021     		movs	r1, #0
 2448 006a 1800     		movs	r0, r3
 2449 006c FFF7FEFF 		bl	memset
  49:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	pd->vmt = vmt;
 2450              		.loc 5 49 0
 2451 0070 7B69     		ldr	r3, [r7, #20]
 2452 0072 7A68     		ldr	r2, [r7, #4]
 2453 0074 5A60     		str	r2, [r3, #4]
  50:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (vmt->init && !vmt->init(pd, param, dinstance, sinstance)) {
 2454              		.loc 5 50 0
 2455 0076 7B68     		ldr	r3, [r7, #4]
 2456 0078 9B68     		ldr	r3, [r3, #8]
 2457 007a 002B     		cmp	r3, #0
 2458 007c 0ED0     		beq	.L172
 2459              		.loc 5 50 0 is_stmt 0 discriminator 1
 2460 007e 7B68     		ldr	r3, [r7, #4]
 2461 0080 9C68     		ldr	r4, [r3, #8]
 2462 0082 FB68     		ldr	r3, [r7, #12]
 2463 0084 3A69     		ldr	r2, [r7, #16]
 2464 0086 3968     		ldr	r1, [r7]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 61


 2465 0088 7869     		ldr	r0, [r7, #20]
 2466 008a A047     		blx	r4
 2467 008c 031E     		subs	r3, r0, #0
 2468 008e 05D1     		bne	.L172
  51:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		gfxFree(pd);
 2469              		.loc 5 51 0 is_stmt 1
 2470 0090 7B69     		ldr	r3, [r7, #20]
 2471 0092 1800     		movs	r0, r3
 2472 0094 FFF7FEFF 		bl	gfxFree
  52:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		return 0;
 2473              		.loc 5 52 0
 2474 0098 0023     		movs	r3, #0
 2475 009a 18E0     		b	.L171
 2476              	.L172:
  53:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
  54:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  55:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Add it to the driver chain (at the end)
  56:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (dhead)
 2477              		.loc 5 56 0
 2478 009c 0E4B     		ldr	r3, .L176
 2479 009e 1B68     		ldr	r3, [r3]
 2480 00a0 002B     		cmp	r3, #0
 2481 00a2 04D0     		beq	.L173
  57:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		dtail->driverchain = pd;
 2482              		.loc 5 57 0
 2483 00a4 0D4B     		ldr	r3, .L176+4
 2484 00a6 1B68     		ldr	r3, [r3]
 2485 00a8 7A69     		ldr	r2, [r7, #20]
 2486 00aa 1A60     		str	r2, [r3]
 2487 00ac 02E0     		b	.L174
 2488              	.L173:
  58:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	else
  59:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		dhead = pd;
 2489              		.loc 5 59 0
 2490 00ae 0A4B     		ldr	r3, .L176
 2491 00b0 7A69     		ldr	r2, [r7, #20]
 2492 00b2 1A60     		str	r2, [r3]
 2493              	.L174:
  60:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	dtail = pd;
 2494              		.loc 5 60 0
 2495 00b4 094B     		ldr	r3, .L176+4
 2496 00b6 7A69     		ldr	r2, [r7, #20]
 2497 00b8 1A60     		str	r2, [r3]
  61:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  62:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Do the post init
  63:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (vmt->postinit)
 2498              		.loc 5 63 0
 2499 00ba 7B68     		ldr	r3, [r7, #4]
 2500 00bc DB68     		ldr	r3, [r3, #12]
 2501 00be 002B     		cmp	r3, #0
 2502 00c0 04D0     		beq	.L175
  64:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		vmt->postinit(pd);
 2503              		.loc 5 64 0
 2504 00c2 7B68     		ldr	r3, [r7, #4]
 2505 00c4 DB68     		ldr	r3, [r3, #12]
 2506 00c6 7A69     		ldr	r2, [r7, #20]
 2507 00c8 1000     		movs	r0, r2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 62


 2508 00ca 9847     		blx	r3
 2509              	.L175:
  65:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  66:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	return pd;
 2510              		.loc 5 66 0
 2511 00cc 7B69     		ldr	r3, [r7, #20]
 2512              	.L171:
  67:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2513              		.loc 5 67 0
 2514 00ce 1800     		movs	r0, r3
 2515 00d0 BD46     		mov	sp, r7
 2516 00d2 07B0     		add	sp, sp, #28
 2517              		@ sp needed
 2518 00d4 90BD     		pop	{r4, r7, pc}
 2519              	.L177:
 2520 00d6 C046     		.align	2
 2521              	.L176:
 2522 00d8 9C000000 		.word	dhead
 2523 00dc A0000000 		.word	dtail
 2524              		.cfi_endproc
 2525              	.LFE39:
 2526              		.size	gdriverRegister, .-gdriverRegister
 2527              		.section	.text.gdriverUnRegister,"ax",%progbits
 2528              		.align	2
 2529              		.global	gdriverUnRegister
 2530              		.code	16
 2531              		.thumb_func
 2532              		.type	gdriverUnRegister, %function
 2533              	gdriverUnRegister:
 2534              	.LFB40:
  68:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  69:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** void gdriverUnRegister(GDriver *driver) {
 2535              		.loc 5 69 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 16
 2538              		@ frame_needed = 1, uses_anonymous_args = 0
 2539 0000 80B5     		push	{r7, lr}
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
 2543 0002 84B0     		sub	sp, sp, #16
 2544              		.cfi_def_cfa_offset 24
 2545 0004 00AF     		add	r7, sp, #0
 2546              		.cfi_def_cfa_register 7
 2547 0006 7860     		str	r0, [r7, #4]
  70:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	GDriver		*pd;
  71:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  72:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Safety
  73:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (!driver)
 2548              		.loc 5 73 0
 2549 0008 7B68     		ldr	r3, [r7, #4]
 2550 000a 002B     		cmp	r3, #0
 2551 000c 37D0     		beq	.L188
  74:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		return;
  75:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  76:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Remove it from the list of drivers
  77:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (dhead == driver)
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 63


 2552              		.loc 5 77 0
 2553 000e 1E4B     		ldr	r3, .L190
 2554 0010 1A68     		ldr	r2, [r3]
 2555 0012 7B68     		ldr	r3, [r7, #4]
 2556 0014 9A42     		cmp	r2, r3
 2557 0016 04D1     		bne	.L181
  78:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		dhead = driver->driverchain;
 2558              		.loc 5 78 0
 2559 0018 7B68     		ldr	r3, [r7, #4]
 2560 001a 1A68     		ldr	r2, [r3]
 2561 001c 1A4B     		ldr	r3, .L190
 2562 001e 1A60     		str	r2, [r3]
 2563 0020 1DE0     		b	.L182
 2564              	.L181:
  79:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	else {
  80:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		for(pd = dhead; pd->driverchain; pd = pd->driverchain) {
 2565              		.loc 5 80 0
 2566 0022 194B     		ldr	r3, .L190
 2567 0024 1B68     		ldr	r3, [r3]
 2568 0026 FB60     		str	r3, [r7, #12]
 2569 0028 13E0     		b	.L183
 2570              	.L186:
  81:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			if (pd->driverchain == driver) {
 2571              		.loc 5 81 0
 2572 002a FB68     		ldr	r3, [r7, #12]
 2573 002c 1A68     		ldr	r2, [r3]
 2574 002e 7B68     		ldr	r3, [r7, #4]
 2575 0030 9A42     		cmp	r2, r3
 2576 0032 0BD1     		bne	.L184
  82:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 				pd->driverchain = driver->driverchain;
 2577              		.loc 5 82 0
 2578 0034 7B68     		ldr	r3, [r7, #4]
 2579 0036 1A68     		ldr	r2, [r3]
 2580 0038 FB68     		ldr	r3, [r7, #12]
 2581 003a 1A60     		str	r2, [r3]
  83:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 				if (!pd->driverchain)
 2582              		.loc 5 83 0
 2583 003c FB68     		ldr	r3, [r7, #12]
 2584 003e 1B68     		ldr	r3, [r3]
 2585 0040 002B     		cmp	r3, #0
 2586 0042 0BD1     		bne	.L189
  84:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 					dtail = pd;
 2587              		.loc 5 84 0
 2588 0044 114B     		ldr	r3, .L190+4
 2589 0046 FA68     		ldr	r2, [r7, #12]
 2590 0048 1A60     		str	r2, [r3]
  85:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 				break;
 2591              		.loc 5 85 0
 2592 004a 07E0     		b	.L189
 2593              	.L184:
  80:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			if (pd->driverchain == driver) {
 2594              		.loc 5 80 0 discriminator 2
 2595 004c FB68     		ldr	r3, [r7, #12]
 2596 004e 1B68     		ldr	r3, [r3]
 2597 0050 FB60     		str	r3, [r7, #12]
 2598              	.L183:
  80:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			if (pd->driverchain == driver) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 64


 2599              		.loc 5 80 0 is_stmt 0 discriminator 1
 2600 0052 FB68     		ldr	r3, [r7, #12]
 2601 0054 1B68     		ldr	r3, [r3]
 2602 0056 002B     		cmp	r3, #0
 2603 0058 E7D1     		bne	.L186
 2604 005a 00E0     		b	.L182
 2605              	.L189:
 2606              		.loc 5 85 0 is_stmt 1
 2607 005c C046     		nop
 2608              	.L182:
  86:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			}
  87:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		}
  88:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
  89:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  90:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Call the deinit()
  91:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	if (driver->vmt->deinit)
 2609              		.loc 5 91 0
 2610 005e 7B68     		ldr	r3, [r7, #4]
 2611 0060 5B68     		ldr	r3, [r3, #4]
 2612 0062 1B69     		ldr	r3, [r3, #16]
 2613 0064 002B     		cmp	r3, #0
 2614 0066 05D0     		beq	.L187
  92:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		driver->vmt->deinit(driver);
 2615              		.loc 5 92 0
 2616 0068 7B68     		ldr	r3, [r7, #4]
 2617 006a 5B68     		ldr	r3, [r3, #4]
 2618 006c 1B69     		ldr	r3, [r3, #16]
 2619 006e 7A68     		ldr	r2, [r7, #4]
 2620 0070 1000     		movs	r0, r2
 2621 0072 9847     		blx	r3
 2622              	.L187:
  93:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  94:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Cleanup
  95:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	gfxFree(driver);
 2623              		.loc 5 95 0
 2624 0074 7B68     		ldr	r3, [r7, #4]
 2625 0076 1800     		movs	r0, r3
 2626 0078 FFF7FEFF 		bl	gfxFree
 2627 007c 00E0     		b	.L178
 2628              	.L188:
  74:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 2629              		.loc 5 74 0
 2630 007e C046     		nop
 2631              	.L178:
  96:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2632              		.loc 5 96 0
 2633 0080 BD46     		mov	sp, r7
 2634 0082 04B0     		add	sp, sp, #16
 2635              		@ sp needed
 2636 0084 80BD     		pop	{r7, pc}
 2637              	.L191:
 2638 0086 C046     		.align	2
 2639              	.L190:
 2640 0088 9C000000 		.word	dhead
 2641 008c A0000000 		.word	dtail
 2642              		.cfi_endproc
 2643              	.LFE40:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 65


 2644              		.size	gdriverUnRegister, .-gdriverUnRegister
 2645              		.section	.text.gdriverGetInstance,"ax",%progbits
 2646              		.align	2
 2647              		.global	gdriverGetInstance
 2648              		.code	16
 2649              		.thumb_func
 2650              		.type	gdriverGetInstance, %function
 2651              	gdriverGetInstance:
 2652              	.LFB41:
  97:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
  98:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** GDriver *gdriverGetInstance(uint16_t type, unsigned instance) {
 2653              		.loc 5 98 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 16
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657 0000 80B5     		push	{r7, lr}
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 7, -8
 2660              		.cfi_offset 14, -4
 2661 0002 84B0     		sub	sp, sp, #16
 2662              		.cfi_def_cfa_offset 24
 2663 0004 00AF     		add	r7, sp, #0
 2664              		.cfi_def_cfa_register 7
 2665 0006 0200     		movs	r2, r0
 2666 0008 3960     		str	r1, [r7]
 2667 000a BB1D     		adds	r3, r7, #6
 2668 000c 1A80     		strh	r2, [r3]
  99:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	GDriver		*pd;
 100:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	unsigned	sinstance;
 101:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 102:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Loop to find the system instance
 103:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	sinstance = 0;
 2669              		.loc 5 103 0
 2670 000e 0023     		movs	r3, #0
 2671 0010 BB60     		str	r3, [r7, #8]
 104:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2672              		.loc 5 104 0
 2673 0012 0F4B     		ldr	r3, .L198
 2674 0014 1B68     		ldr	r3, [r3]
 2675 0016 FB60     		str	r3, [r7, #12]
 2676 0018 12E0     		b	.L193
 2677              	.L197:
 105:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == type) {
 2678              		.loc 5 105 0
 2679 001a FB68     		ldr	r3, [r7, #12]
 2680 001c 5B68     		ldr	r3, [r3, #4]
 2681 001e 1B88     		ldrh	r3, [r3]
 2682 0020 BA1D     		adds	r2, r7, #6
 2683 0022 1288     		ldrh	r2, [r2]
 2684 0024 9A42     		cmp	r2, r3
 2685 0026 08D1     		bne	.L194
 106:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			if (sinstance == instance)
 2686              		.loc 5 106 0
 2687 0028 BA68     		ldr	r2, [r7, #8]
 2688 002a 3B68     		ldr	r3, [r7]
 2689 002c 9A42     		cmp	r2, r3
 2690 002e 01D1     		bne	.L195
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 66


 107:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 				return pd;
 2691              		.loc 5 107 0
 2692 0030 FB68     		ldr	r3, [r7, #12]
 2693 0032 09E0     		b	.L196
 2694              	.L195:
 108:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			sinstance++;
 2695              		.loc 5 108 0
 2696 0034 BB68     		ldr	r3, [r7, #8]
 2697 0036 0133     		adds	r3, r3, #1
 2698 0038 BB60     		str	r3, [r7, #8]
 2699              	.L194:
 104:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == type) {
 2700              		.loc 5 104 0 discriminator 2
 2701 003a FB68     		ldr	r3, [r7, #12]
 2702 003c 1B68     		ldr	r3, [r3]
 2703 003e FB60     		str	r3, [r7, #12]
 2704              	.L193:
 104:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == type) {
 2705              		.loc 5 104 0 is_stmt 0 discriminator 1
 2706 0040 FB68     		ldr	r3, [r7, #12]
 2707 0042 002B     		cmp	r3, #0
 2708 0044 E9D1     		bne	.L197
 109:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		}
 110:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
 111:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	return 0;
 2709              		.loc 5 111 0 is_stmt 1
 2710 0046 0023     		movs	r3, #0
 2711              	.L196:
 112:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2712              		.loc 5 112 0
 2713 0048 1800     		movs	r0, r3
 2714 004a BD46     		mov	sp, r7
 2715 004c 04B0     		add	sp, sp, #16
 2716              		@ sp needed
 2717 004e 80BD     		pop	{r7, pc}
 2718              	.L199:
 2719              		.align	2
 2720              	.L198:
 2721 0050 9C000000 		.word	dhead
 2722              		.cfi_endproc
 2723              	.LFE41:
 2724              		.size	gdriverGetInstance, .-gdriverGetInstance
 2725              		.section	.text.gdriverInstanceCount,"ax",%progbits
 2726              		.align	2
 2727              		.global	gdriverInstanceCount
 2728              		.code	16
 2729              		.thumb_func
 2730              		.type	gdriverInstanceCount, %function
 2731              	gdriverInstanceCount:
 2732              	.LFB42:
 113:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 114:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** unsigned gdriverInstanceCount(uint16_t type) {
 2733              		.loc 5 114 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 16
 2736              		@ frame_needed = 1, uses_anonymous_args = 0
 2737 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 67


 2738              		.cfi_def_cfa_offset 8
 2739              		.cfi_offset 7, -8
 2740              		.cfi_offset 14, -4
 2741 0002 84B0     		sub	sp, sp, #16
 2742              		.cfi_def_cfa_offset 24
 2743 0004 00AF     		add	r7, sp, #0
 2744              		.cfi_def_cfa_register 7
 2745 0006 0200     		movs	r2, r0
 2746 0008 BB1D     		adds	r3, r7, #6
 2747 000a 1A80     		strh	r2, [r3]
 115:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	GDriver		*pd;
 116:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	unsigned	sinstance;
 117:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 118:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Loop to count the system instances
 119:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	sinstance = 0;
 2748              		.loc 5 119 0
 2749 000c 0023     		movs	r3, #0
 2750 000e BB60     		str	r3, [r7, #8]
 120:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2751              		.loc 5 120 0
 2752 0010 0C4B     		ldr	r3, .L205
 2753 0012 1B68     		ldr	r3, [r3]
 2754 0014 FB60     		str	r3, [r7, #12]
 2755 0016 0CE0     		b	.L201
 2756              	.L203:
 121:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == type)
 2757              		.loc 5 121 0
 2758 0018 FB68     		ldr	r3, [r7, #12]
 2759 001a 5B68     		ldr	r3, [r3, #4]
 2760 001c 1B88     		ldrh	r3, [r3]
 2761 001e BA1D     		adds	r2, r7, #6
 2762 0020 1288     		ldrh	r2, [r2]
 2763 0022 9A42     		cmp	r2, r3
 2764 0024 02D1     		bne	.L202
 122:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			sinstance++;
 2765              		.loc 5 122 0
 2766 0026 BB68     		ldr	r3, [r7, #8]
 2767 0028 0133     		adds	r3, r3, #1
 2768 002a BB60     		str	r3, [r7, #8]
 2769              	.L202:
 120:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2770              		.loc 5 120 0 discriminator 2
 2771 002c FB68     		ldr	r3, [r7, #12]
 2772 002e 1B68     		ldr	r3, [r3]
 2773 0030 FB60     		str	r3, [r7, #12]
 2774              	.L201:
 120:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2775              		.loc 5 120 0 is_stmt 0 discriminator 1
 2776 0032 FB68     		ldr	r3, [r7, #12]
 2777 0034 002B     		cmp	r3, #0
 2778 0036 EFD1     		bne	.L203
 123:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
 124:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	return sinstance;
 2779              		.loc 5 124 0 is_stmt 1
 2780 0038 BB68     		ldr	r3, [r7, #8]
 125:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2781              		.loc 5 125 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 68


 2782 003a 1800     		movs	r0, r3
 2783 003c BD46     		mov	sp, r7
 2784 003e 04B0     		add	sp, sp, #16
 2785              		@ sp needed
 2786 0040 80BD     		pop	{r7, pc}
 2787              	.L206:
 2788 0042 C046     		.align	2
 2789              	.L205:
 2790 0044 9C000000 		.word	dhead
 2791              		.cfi_endproc
 2792              	.LFE42:
 2793              		.size	gdriverInstanceCount, .-gdriverInstanceCount
 2794              		.section	.text.gdriverGetNext,"ax",%progbits
 2795              		.align	2
 2796              		.global	gdriverGetNext
 2797              		.code	16
 2798              		.thumb_func
 2799              		.type	gdriverGetNext, %function
 2800              	gdriverGetNext:
 2801              	.LFB43:
 126:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 127:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** GDriver *gdriverGetNext(uint16_t type, GDriver *driver) {
 2802              		.loc 5 127 0
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 8
 2805              		@ frame_needed = 1, uses_anonymous_args = 0
 2806 0000 80B5     		push	{r7, lr}
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 7, -8
 2809              		.cfi_offset 14, -4
 2810 0002 82B0     		sub	sp, sp, #8
 2811              		.cfi_def_cfa_offset 16
 2812 0004 00AF     		add	r7, sp, #0
 2813              		.cfi_def_cfa_register 7
 2814 0006 0200     		movs	r2, r0
 2815 0008 3960     		str	r1, [r7]
 2816 000a BB1D     		adds	r3, r7, #6
 2817 000c 1A80     		strh	r2, [r3]
 128:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	driver = driver ? driver->driverchain : dhead;
 2818              		.loc 5 128 0
 2819 000e 3B68     		ldr	r3, [r7]
 2820 0010 002B     		cmp	r3, #0
 2821 0012 02D0     		beq	.L208
 2822              		.loc 5 128 0 is_stmt 0 discriminator 1
 2823 0014 3B68     		ldr	r3, [r7]
 2824 0016 1B68     		ldr	r3, [r3]
 2825 0018 01E0     		b	.L209
 2826              	.L208:
 2827              		.loc 5 128 0 discriminator 2
 2828 001a 0B4B     		ldr	r3, .L214
 2829 001c 1B68     		ldr	r3, [r3]
 2830              	.L209:
 2831              		.loc 5 128 0 discriminator 4
 2832 001e 3B60     		str	r3, [r7]
 129:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 130:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	while(driver && driver->vmt->type != type)
 2833              		.loc 5 130 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 69


 2834 0020 02E0     		b	.L210
 2835              	.L212:
 131:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		driver = driver->driverchain;
 2836              		.loc 5 131 0
 2837 0022 3B68     		ldr	r3, [r7]
 2838 0024 1B68     		ldr	r3, [r3]
 2839 0026 3B60     		str	r3, [r7]
 2840              	.L210:
 130:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		driver = driver->driverchain;
 2841              		.loc 5 130 0
 2842 0028 3B68     		ldr	r3, [r7]
 2843 002a 002B     		cmp	r3, #0
 2844 002c 06D0     		beq	.L211
 130:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		driver = driver->driverchain;
 2845              		.loc 5 130 0 is_stmt 0 discriminator 1
 2846 002e 3B68     		ldr	r3, [r7]
 2847 0030 5B68     		ldr	r3, [r3, #4]
 2848 0032 1B88     		ldrh	r3, [r3]
 2849 0034 BA1D     		adds	r2, r7, #6
 2850 0036 1288     		ldrh	r2, [r2]
 2851 0038 9A42     		cmp	r2, r3
 2852 003a F2D1     		bne	.L212
 2853              	.L211:
 132:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 133:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	return driver;
 2854              		.loc 5 133 0 is_stmt 1
 2855 003c 3B68     		ldr	r3, [r7]
 134:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2856              		.loc 5 134 0
 2857 003e 1800     		movs	r0, r3
 2858 0040 BD46     		mov	sp, r7
 2859 0042 02B0     		add	sp, sp, #8
 2860              		@ sp needed
 2861 0044 80BD     		pop	{r7, pc}
 2862              	.L215:
 2863 0046 C046     		.align	2
 2864              	.L214:
 2865 0048 9C000000 		.word	dhead
 2866              		.cfi_endproc
 2867              	.LFE43:
 2868              		.size	gdriverGetNext, .-gdriverGetNext
 2869              		.section	.text.gdriverGetDriverInstanceNumber,"ax",%progbits
 2870              		.align	2
 2871              		.global	gdriverGetDriverInstanceNumber
 2872              		.code	16
 2873              		.thumb_func
 2874              		.type	gdriverGetDriverInstanceNumber, %function
 2875              	gdriverGetDriverInstanceNumber:
 2876              	.LFB44:
 135:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 136:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** unsigned gdriverGetDriverInstanceNumber(GDriver *driver) {
 2877              		.loc 5 136 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 16
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 80B5     		push	{r7, lr}
 2882              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 70


 2883              		.cfi_offset 7, -8
 2884              		.cfi_offset 14, -4
 2885 0002 84B0     		sub	sp, sp, #16
 2886              		.cfi_def_cfa_offset 24
 2887 0004 00AF     		add	r7, sp, #0
 2888              		.cfi_def_cfa_register 7
 2889 0006 7860     		str	r0, [r7, #4]
 137:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	GDriver		*pd;
 138:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	unsigned	instance;
 139:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 
 140:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	// Loop to find the system instance
 141:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	instance = 0;
 2890              		.loc 5 141 0
 2891 0008 0023     		movs	r3, #0
 2892 000a BB60     		str	r3, [r7, #8]
 142:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	for(pd = dhead; pd; pd = pd->driverchain) {
 2893              		.loc 5 142 0
 2894 000c 104B     		ldr	r3, .L222
 2895 000e 1B68     		ldr	r3, [r3]
 2896 0010 FB60     		str	r3, [r7, #12]
 2897 0012 13E0     		b	.L217
 2898              	.L221:
 143:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd == driver)
 2899              		.loc 5 143 0
 2900 0014 FA68     		ldr	r2, [r7, #12]
 2901 0016 7B68     		ldr	r3, [r7, #4]
 2902 0018 9A42     		cmp	r2, r3
 2903 001a 01D1     		bne	.L218
 144:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			return instance;
 2904              		.loc 5 144 0
 2905 001c BB68     		ldr	r3, [r7, #8]
 2906 001e 12E0     		b	.L219
 2907              	.L218:
 145:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd->vmt->type == driver->vmt->type)
 2908              		.loc 5 145 0
 2909 0020 FB68     		ldr	r3, [r7, #12]
 2910 0022 5B68     		ldr	r3, [r3, #4]
 2911 0024 1A88     		ldrh	r2, [r3]
 2912 0026 7B68     		ldr	r3, [r7, #4]
 2913 0028 5B68     		ldr	r3, [r3, #4]
 2914 002a 1B88     		ldrh	r3, [r3]
 2915 002c 9A42     		cmp	r2, r3
 2916 002e 02D1     		bne	.L220
 146:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 			instance++;
 2917              		.loc 5 146 0
 2918 0030 BB68     		ldr	r3, [r7, #8]
 2919 0032 0133     		adds	r3, r3, #1
 2920 0034 BB60     		str	r3, [r7, #8]
 2921              	.L220:
 142:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd == driver)
 2922              		.loc 5 142 0 discriminator 2
 2923 0036 FB68     		ldr	r3, [r7, #12]
 2924 0038 1B68     		ldr	r3, [r3]
 2925 003a FB60     		str	r3, [r7, #12]
 2926              	.L217:
 142:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 		if (pd == driver)
 2927              		.loc 5 142 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 71


 2928 003c FB68     		ldr	r3, [r7, #12]
 2929 003e 002B     		cmp	r3, #0
 2930 0040 E8D1     		bne	.L221
 147:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	}
 148:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** 	return (unsigned)-1;
 2931              		.loc 5 148 0 is_stmt 1
 2932 0042 0123     		movs	r3, #1
 2933 0044 5B42     		rsbs	r3, r3, #0
 2934              	.L219:
 149:..\..\ugfx_2.7\ugfx_2.7\src\gdriver/gdriver.c **** }
 2935              		.loc 5 149 0
 2936 0046 1800     		movs	r0, r3
 2937 0048 BD46     		mov	sp, r7
 2938 004a 04B0     		add	sp, sp, #16
 2939              		@ sp needed
 2940 004c 80BD     		pop	{r7, pc}
 2941              	.L223:
 2942 004e C046     		.align	2
 2943              	.L222:
 2944 0050 9C000000 		.word	dhead
 2945              		.cfi_endproc
 2946              	.LFE44:
 2947              		.size	gdriverGetDriverInstanceNumber, .-gdriverGetDriverInstanceNumber
 2948              		.comm	GDISP,4,4
 2949              		.section	.text.setglobalwindow,"ax",%progbits
 2950              		.align	2
 2951              		.code	16
 2952              		.thumb_func
 2953              		.type	setglobalwindow, %function
 2954              	setglobalwindow:
 2955              	.LFB45:
 2956              		.file 6 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gdisp/gdisp.c"
   1:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*
   2:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c ****  * This file is subject to the terms of the GFX License. If a copy of
   3:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c ****  * the license was not distributed with this file, you can obtain one at:
   4:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c ****  *
   5:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c ****  *              http://ugfx.org/license.html
   6:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c ****  */
   7:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
   8:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #include "../../gfx.h"
   9:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  10:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GFX_USE_GDISP
  11:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  12:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /* Include the low level driver information */
  13:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #include "gdisp_driver.h"
  14:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  15:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Number of milliseconds for the startup logo - 0 means disabled.
  16:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_STARTUP_LOGO
  17:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define GDISP_STARTUP_LOGO_TIMEOUT		1000
  18:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define GDISP_STARTUP_LOGO_COLOR		White
  19:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
  20:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define GDISP_STARTUP_LOGO_TIMEOUT		0
  21:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  22:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  23:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // For internal use only.
  24:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_TEXT_WORDWRAP
  25:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	typedef struct wrapParameters {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 72


  26:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		GDisplay* g;
  27:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t x;
  28:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t y;
  29:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		font_t font;
  30:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		justify_t justify;
  31:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	} wrapParameters_t;
  32:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  33:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  34:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
  35:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /* Driver local variables.                                                   */
  36:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
  37:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  38:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_TIMERFLUSH
  39:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static GTimer	FlushTimer;
  40:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  41:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  42:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** GDisplay	*GDISP;
  43:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  44:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_MULTITHREAD
  45:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_INIT(g)		gfxMutexInit(&(g)->mutex)
  46:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_ENTER(g)		gfxMutexEnter(&(g)->mutex)
  47:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_EXIT(g)		gfxMutexExit(&(g)->mutex)
  48:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_DEINIT(g)		gfxMutexDestroy(&(g)->mutex)
  49:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
  50:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_INIT(g)
  51:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_ENTER(g)
  52:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_EXIT(g)
  53:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define MUTEX_DEINIT(g)
  54:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  55:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  56:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #define NEED_CLIPPING	(GDISP_HARDWARE_CLIP != TRUE && (GDISP_NEED_VALIDATION || GDISP_NEED_CLIP))
  57:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  58:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if !NEED_CLIPPING
  59:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define TEST_CLIP_AREA(g)
  60:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #elif GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
  61:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define TEST_CLIP_AREA(g)																					\
  62:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!gvmt(g)->setclip) {																				\
  63:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g)->p.x < (g)->clipx0) { (g)->p.cx -= (g)->clipx0 - (g)->p.x; (g)->p.x = (g)->clipx0; }	\
  64:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g)->p.y < (g)->clipy0) { (g)->p.cy -= (g)->clipy0 - (g)->p.y; (g)->p.y = (g)->clipy0; }	\
  65:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g)->p.x + (g)->p.cx > (g)->clipx1)	(g)->p.cx = (g)->clipx1 - (g)->p.x;						\
  66:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g)->p.y + (g)->p.cy > (g)->clipy1)	(g)->p.cy = (g)->clipy1 - (g)->p.y;						\
  67:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}																									\
  68:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.cx > 0 && (g)->p.cy > 0)
  69:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
  70:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define TEST_CLIP_AREA(g)																				\
  71:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.x < (g)->clipx0) { (g)->p.cx -= (g)->clipx0 - (g)->p.x; (g)->p.x = (g)->clipx0; }	\
  72:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.y < (g)->clipy0) { (g)->p.cy -= (g)->clipy0 - (g)->p.y; (g)->p.y = (g)->clipy0; }	\
  73:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.x + (g)->p.cx > (g)->clipx1)	(g)->p.cx = (g)->clipx1 - (g)->p.x;						\
  74:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.y + (g)->p.cy > (g)->clipy1)	(g)->p.cy = (g)->clipy1 - (g)->p.y;						\
  75:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((g)->p.cx > 0 && (g)->p.cy > 0)
  76:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  77:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  78:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*==========================================================================*/
  79:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /* Internal functions.														*/
  80:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*==========================================================================*/
  81:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  82:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_HARDWARE_STREAM_POS && GDISP_HARDWARE_STREAM_WRITE
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 73


  83:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static GFXINLINE void setglobalwindow(GDisplay *g) {
 2957              		.loc 6 83 0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 16
 2960              		@ frame_needed = 1, uses_anonymous_args = 0
 2961 0000 80B5     		push	{r7, lr}
 2962              		.cfi_def_cfa_offset 8
 2963              		.cfi_offset 7, -8
 2964              		.cfi_offset 14, -4
 2965 0002 84B0     		sub	sp, sp, #16
 2966              		.cfi_def_cfa_offset 24
 2967 0004 00AF     		add	r7, sp, #0
 2968              		.cfi_def_cfa_register 7
 2969 0006 7860     		str	r0, [r7, #4]
  84:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t	x, y;
  85:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		x = g->p.x; y = g->p.y;
 2970              		.loc 6 85 0
 2971 0008 0E23     		movs	r3, #14
 2972 000a FB18     		adds	r3, r7, r3
 2973 000c 7A68     		ldr	r2, [r7, #4]
 2974 000e 128D     		ldrh	r2, [r2, #40]
 2975 0010 1A80     		strh	r2, [r3]
 2976 0012 0C23     		movs	r3, #12
 2977 0014 FB18     		adds	r3, r7, r3
 2978 0016 7A68     		ldr	r2, [r7, #4]
 2979 0018 528D     		ldrh	r2, [r2, #42]
 2980 001a 1A80     		strh	r2, [r3]
  86:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = g->p.y = 0;
 2981              		.loc 6 86 0
 2982 001c 7B68     		ldr	r3, [r7, #4]
 2983 001e 0022     		movs	r2, #0
 2984 0020 5A85     		strh	r2, [r3, #42]
 2985 0022 7B68     		ldr	r3, [r7, #4]
 2986 0024 2A22     		movs	r2, #42
 2987 0026 9A5E     		ldrsh	r2, [r3, r2]
 2988 0028 7B68     		ldr	r3, [r7, #4]
 2989 002a 1A85     		strh	r2, [r3, #40]
  87:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = g->g.Width; g->p.cy = g->g.Height;
 2990              		.loc 6 87 0
 2991 002c 7B68     		ldr	r3, [r7, #4]
 2992 002e 0822     		movs	r2, #8
 2993 0030 9A5E     		ldrsh	r2, [r3, r2]
 2994 0032 7B68     		ldr	r3, [r7, #4]
 2995 0034 9A85     		strh	r2, [r3, #44]
 2996 0036 7B68     		ldr	r3, [r7, #4]
 2997 0038 0A22     		movs	r2, #10
 2998 003a 9A5E     		ldrsh	r2, [r3, r2]
 2999 003c 7B68     		ldr	r3, [r7, #4]
 3000 003e DA85     		strh	r2, [r3, #46]
  88:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdisp_lld_write_start(g);
 3001              		.loc 6 88 0
 3002 0040 7B68     		ldr	r3, [r7, #4]
 3003 0042 1800     		movs	r0, r3
 3004 0044 FFF7FEFF 		bl	gdisp_lld_write_start
  89:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x; g->p.y = y;
 3005              		.loc 6 89 0
 3006 0048 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 74


 3007 004a 0E22     		movs	r2, #14
 3008 004c BA18     		adds	r2, r7, r2
 3009 004e 1288     		ldrh	r2, [r2]
 3010 0050 1A85     		strh	r2, [r3, #40]
 3011 0052 7B68     		ldr	r3, [r7, #4]
 3012 0054 0C22     		movs	r2, #12
 3013 0056 BA18     		adds	r2, r7, r2
 3014 0058 1288     		ldrh	r2, [r2]
 3015 005a 5A85     		strh	r2, [r3, #42]
  90:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->flags |= GDISP_FLG_SCRSTREAM;
 3016              		.loc 6 90 0
 3017 005c 7B68     		ldr	r3, [r7, #4]
 3018 005e DB8B     		ldrh	r3, [r3, #30]
 3019 0060 0222     		movs	r2, #2
 3020 0062 1343     		orrs	r3, r2
 3021 0064 9AB2     		uxth	r2, r3
 3022 0066 7B68     		ldr	r3, [r7, #4]
 3023 0068 DA83     		strh	r2, [r3, #30]
  91:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 3024              		.loc 6 91 0
 3025 006a C046     		nop
 3026 006c BD46     		mov	sp, r7
 3027 006e 04B0     		add	sp, sp, #16
 3028              		@ sp needed
 3029 0070 80BD     		pop	{r7, pc}
 3030              		.cfi_endproc
 3031              	.LFE45:
 3032              		.size	setglobalwindow, .-setglobalwindow
 3033 0072 C046     		.section	.text.drawpixel,"ax",%progbits
 3034              		.align	2
 3035              		.code	16
 3036              		.thumb_func
 3037              		.type	drawpixel, %function
 3038              	drawpixel:
 3039              	.LFB46:
  92:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
  93:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
  94:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_AUTOFLUSH && GDISP_HARDWARE_FLUSH == HARDWARE_AUTODETECT
  95:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define autoflush_stopdone(g)	if (gvmt(g)->flush) gdisp_lld_flush(g)
  96:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #elif GDISP_NEED_AUTOFLUSH && GDISP_HARDWARE_FLUSH
  97:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define autoflush_stopdone(g)	gdisp_lld_flush(g)
  98:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
  99:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define autoflush_stopdone(g)
 100:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
 101:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 102:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_HARDWARE_STREAM_POS && GDISP_HARDWARE_STREAM_WRITE
 103:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define autoflush(g)									\
 104:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{												\
 105:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g->flags & GDISP_FLG_SCRSTREAM)) {		\
 106:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_stop(g);				\
 107:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->flags &= ~GDISP_FLG_SCRSTREAM;		\
 108:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}											\
 109:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush_stopdone(g);						\
 110:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 111:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
 112:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define autoflush(g)		autoflush_stopdone(g)
 113:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 75


 114:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 115:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // drawpixel(g)
 116:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y
 117:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		cx, cy (if using streaming)
 118:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Does not clip
 119:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** static GFXINLINE void drawpixel(GDisplay *g) {
 3040              		.loc 6 119 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 8
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 0000 80B5     		push	{r7, lr}
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 82B0     		sub	sp, sp, #8
 3049              		.cfi_def_cfa_offset 16
 3050 0004 00AF     		add	r7, sp, #0
 3051              		.cfi_def_cfa_register 7
 3052 0006 7860     		str	r0, [r7, #4]
 120:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 121:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware accelerated pixel draw
 122:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_DRAWPIXEL
 123:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 124:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->pixel)
 125:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 126:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 127:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_draw_pixel(g);
 128:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 129:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 130:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 131:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 132:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is cursor based streaming
 133:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_DRAWPIXEL != TRUE && GDISP_HARDWARE_STREAM_POS && GDISP_HARDWARE_STREAM_WRITE
 134:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
 135:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writepos)
 136:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 137:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 138:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!(g->flags & GDISP_FLG_SCRSTREAM))
 3053              		.loc 6 138 0
 3054 0008 7B68     		ldr	r3, [r7, #4]
 3055 000a DB8B     		ldrh	r3, [r3, #30]
 3056 000c 1A00     		movs	r2, r3
 3057 000e 0223     		movs	r3, #2
 3058 0010 1340     		ands	r3, r2
 3059 0012 03D1     		bne	.L226
 139:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				setglobalwindow(g);
 3060              		.loc 6 139 0
 3061 0014 7B68     		ldr	r3, [r7, #4]
 3062 0016 1800     		movs	r0, r3
 3063 0018 FFF7FEFF 		bl	setglobalwindow
 3064              	.L226:
 140:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_pos(g);
 3065              		.loc 6 140 0
 3066 001c 7B68     		ldr	r3, [r7, #4]
 3067 001e 1800     		movs	r0, r3
 3068 0020 FFF7FEFF 		bl	gdisp_lld_write_pos
 141:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_color(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 76


 3069              		.loc 6 141 0
 3070 0024 7B68     		ldr	r3, [r7, #4]
 3071 0026 1800     		movs	r0, r3
 3072 0028 FFF7FEFF 		bl	gdisp_lld_write_color
 142:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 3073              		.loc 6 142 0
 3074 002c C046     		nop
 143:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 144:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 145:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 146:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is general streaming
 147:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_DRAWPIXEL != TRUE && GDISP_HARDWARE_STREAM_POS != TRUE && GDISP_HARDWARE_STREAM
 148:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have streaming if we don't have dr
 149:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 150:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->writestart)
 151:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
 152:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 153:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->p.cy = 1;
 154:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 155:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_color(g);
 156:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 157:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 158:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 159:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 160:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 3075              		.loc 6 160 0
 3076 002e BD46     		mov	sp, r7
 3077 0030 02B0     		add	sp, sp, #8
 3078              		@ sp needed
 3079 0032 80BD     		pop	{r7, pc}
 3080              		.cfi_endproc
 3081              	.LFE46:
 3082              		.size	drawpixel, .-drawpixel
 3083              		.section	.text.drawpixel_clip,"ax",%progbits
 3084              		.align	2
 3085              		.code	16
 3086              		.thumb_func
 3087              		.type	drawpixel_clip, %function
 3088              	drawpixel_clip:
 3089              	.LFB47:
 161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // drawpixel_clip(g)
 163:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y
 164:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		cx, cy (if using streaming)
 165:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if NEED_CLIPPING
 166:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static GFXINLINE void drawpixel_clip(GDisplay *g) {
 3090              		.loc 6 166 0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 8
 3093              		@ frame_needed = 1, uses_anonymous_args = 0
 3094 0000 80B5     		push	{r7, lr}
 3095              		.cfi_def_cfa_offset 8
 3096              		.cfi_offset 7, -8
 3097              		.cfi_offset 14, -4
 3098 0002 82B0     		sub	sp, sp, #8
 3099              		.cfi_def_cfa_offset 16
 3100 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 77


 3101              		.cfi_def_cfa_register 7
 3102 0006 7860     		str	r0, [r7, #4]
 167:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
 168:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!gvmt(g)->setclip)
 169:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 170:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 171:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x < g->clipx0 || g->p.x >= g->clipx1 || g->p.y < g->clipy0 || g->p.y >= g->clipy1)
 3103              		.loc 6 171 0
 3104 0008 7B68     		ldr	r3, [r7, #4]
 3105 000a 2822     		movs	r2, #40
 3106 000c 9A5E     		ldrsh	r2, [r3, r2]
 3107 000e 7B68     		ldr	r3, [r7, #4]
 3108 0010 2021     		movs	r1, #32
 3109 0012 5B5E     		ldrsh	r3, [r3, r1]
 3110 0014 9A42     		cmp	r2, r3
 3111 0016 1CDB     		blt	.L232
 3112              		.loc 6 171 0 is_stmt 0 discriminator 1
 3113 0018 7B68     		ldr	r3, [r7, #4]
 3114 001a 2822     		movs	r2, #40
 3115 001c 9A5E     		ldrsh	r2, [r3, r2]
 3116 001e 7B68     		ldr	r3, [r7, #4]
 3117 0020 2421     		movs	r1, #36
 3118 0022 5B5E     		ldrsh	r3, [r3, r1]
 3119 0024 9A42     		cmp	r2, r3
 3120 0026 14DA     		bge	.L232
 3121              		.loc 6 171 0 discriminator 2
 3122 0028 7B68     		ldr	r3, [r7, #4]
 3123 002a 2A22     		movs	r2, #42
 3124 002c 9A5E     		ldrsh	r2, [r3, r2]
 3125 002e 7B68     		ldr	r3, [r7, #4]
 3126 0030 2221     		movs	r1, #34
 3127 0032 5B5E     		ldrsh	r3, [r3, r1]
 3128 0034 9A42     		cmp	r2, r3
 3129 0036 0CDB     		blt	.L232
 3130              		.loc 6 171 0 discriminator 3
 3131 0038 7B68     		ldr	r3, [r7, #4]
 3132 003a 2A22     		movs	r2, #42
 3133 003c 9A5E     		ldrsh	r2, [r3, r2]
 3134 003e 7B68     		ldr	r3, [r7, #4]
 3135 0040 2621     		movs	r1, #38
 3136 0042 5B5E     		ldrsh	r3, [r3, r1]
 3137 0044 9A42     		cmp	r2, r3
 3138 0046 04DA     		bge	.L232
 172:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 173:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 174:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		drawpixel(g);
 3139              		.loc 6 174 0 is_stmt 1
 3140 0048 7B68     		ldr	r3, [r7, #4]
 3141 004a 1800     		movs	r0, r3
 3142 004c FFF7FEFF 		bl	drawpixel
 3143 0050 00E0     		b	.L228
 3144              	.L232:
 172:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 3145              		.loc 6 172 0
 3146 0052 C046     		nop
 3147              	.L228:
 175:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 78


 3148              		.loc 6 175 0
 3149 0054 BD46     		mov	sp, r7
 3150 0056 02B0     		add	sp, sp, #8
 3151              		@ sp needed
 3152 0058 80BD     		pop	{r7, pc}
 3153              		.cfi_endproc
 3154              	.LFE47:
 3155              		.size	drawpixel_clip, .-drawpixel_clip
 3156 005a C046     		.section	.text.fillarea,"ax",%progbits
 3157              		.align	2
 3158              		.code	16
 3159              		.thumb_func
 3160              		.type	fillarea, %function
 3161              	fillarea:
 3162              	.LFB48:
 176:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #else
 177:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define drawpixel_clip(g)		drawpixel(g)
 178:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
 179:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 180:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // fillarea(g)
 181:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y cx,cy and color
 182:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		nothing
 183:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Note:		This is not clipped
 184:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Resets the streaming area if GDISP_HARDWARE_STREAM_WRITE and GDISP_HARDWARE_STREAM_POS is set.
 185:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** static GFXINLINE void fillarea(GDisplay *g) {
 3163              		.loc 6 185 0
 3164              		.cfi_startproc
 3165              		@ args = 0, pretend = 0, frame = 16
 3166              		@ frame_needed = 1, uses_anonymous_args = 0
 3167 0000 80B5     		push	{r7, lr}
 3168              		.cfi_def_cfa_offset 8
 3169              		.cfi_offset 7, -8
 3170              		.cfi_offset 14, -4
 3171 0002 84B0     		sub	sp, sp, #16
 3172              		.cfi_def_cfa_offset 24
 3173 0004 00AF     		add	r7, sp, #0
 3174              		.cfi_def_cfa_register 7
 3175 0006 7860     		str	r0, [r7, #4]
 3176              	.LBB2:
 186:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 187:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware accelerated area fill
 188:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS
 189:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
 190:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->fill)
 191:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 192:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 193:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_fill_area(g);
 194:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 195:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 196:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 197:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 198:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is hardware streaming
 199:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE
 200:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 201:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writestart)
 202:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 203:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 79


 204:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			uint32_t	area;
 205:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 206:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
 207:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g->flags & GDISP_FLG_SCRSTREAM)) {
 3177              		.loc 6 207 0
 3178 0008 7B68     		ldr	r3, [r7, #4]
 3179 000a DB8B     		ldrh	r3, [r3, #30]
 3180 000c 1A00     		movs	r2, r3
 3181 000e 0223     		movs	r3, #2
 3182 0010 1340     		ands	r3, r2
 3183 0012 0AD0     		beq	.L234
 208:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_stop(g);
 3184              		.loc 6 208 0
 3185 0014 7B68     		ldr	r3, [r7, #4]
 3186 0016 1800     		movs	r0, r3
 3187 0018 FFF7FEFF 		bl	gdisp_lld_write_stop
 209:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->flags &= ~GDISP_FLG_SCRSTREAM;
 3188              		.loc 6 209 0
 3189 001c 7B68     		ldr	r3, [r7, #4]
 3190 001e DB8B     		ldrh	r3, [r3, #30]
 3191 0020 0222     		movs	r2, #2
 3192 0022 9343     		bics	r3, r2
 3193 0024 9AB2     		uxth	r2, r3
 3194 0026 7B68     		ldr	r3, [r7, #4]
 3195 0028 DA83     		strh	r2, [r3, #30]
 3196              	.L234:
 210:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 211:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 212:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 213:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			area = (uint32_t)g->p.cx * g->p.cy;
 3197              		.loc 6 213 0
 3198 002a 7B68     		ldr	r3, [r7, #4]
 3199 002c 2C22     		movs	r2, #44
 3200 002e 9B5E     		ldrsh	r3, [r3, r2]
 3201 0030 1A00     		movs	r2, r3
 3202 0032 7B68     		ldr	r3, [r7, #4]
 3203 0034 2E21     		movs	r1, #46
 3204 0036 5B5E     		ldrsh	r3, [r3, r1]
 3205 0038 5343     		muls	r3, r2
 3206 003a FB60     		str	r3, [r7, #12]
 214:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 3207              		.loc 6 214 0
 3208 003c 7B68     		ldr	r3, [r7, #4]
 3209 003e 1800     		movs	r0, r3
 3210 0040 FFF7FEFF 		bl	gdisp_lld_write_start
 215:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
 216:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
 217:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (gvmt(g)->writepos)
 218:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
 219:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_pos(g);
 3211              		.loc 6 219 0
 3212 0044 7B68     		ldr	r3, [r7, #4]
 3213 0046 1800     		movs	r0, r3
 3214 0048 FFF7FEFF 		bl	gdisp_lld_write_pos
 220:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; area; area--)
 3215              		.loc 6 221 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 80


 3216 004c 06E0     		b	.L235
 3217              	.L236:
 222:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 3218              		.loc 6 222 0 discriminator 2
 3219 004e 7B68     		ldr	r3, [r7, #4]
 3220 0050 1800     		movs	r0, r3
 3221 0052 FFF7FEFF 		bl	gdisp_lld_write_color
 221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 3222              		.loc 6 221 0 discriminator 2
 3223 0056 FB68     		ldr	r3, [r7, #12]
 3224 0058 013B     		subs	r3, r3, #1
 3225 005a FB60     		str	r3, [r7, #12]
 3226              	.L235:
 221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 3227              		.loc 6 221 0 is_stmt 0 discriminator 1
 3228 005c FB68     		ldr	r3, [r7, #12]
 3229 005e 002B     		cmp	r3, #0
 3230 0060 F5D1     		bne	.L236
 223:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 3231              		.loc 6 223 0 is_stmt 1
 3232 0062 7B68     		ldr	r3, [r7, #4]
 3233 0064 1800     		movs	r0, r3
 3234 0066 FFF7FEFF 		bl	gdisp_lld_write_stop
 224:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 3235              		.loc 6 224 0
 3236 006a C046     		nop
 3237              	.LBE2:
 225:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 226:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 227:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 228:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is pixel drawing
 229:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_DRAWPIXE
 230:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have draw pixel if we don't have s
 231:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 232:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->pixel)
 233:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
 234:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 235:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			coord_t x0, y0, x1, y1;
 236:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 237:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x0 = g->p.x;
 238:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y0 = g->p.y;
 239:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x1 = g->p.x + g->p.cx;
 240:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y1 = g->p.y + g->p.cy;
 241:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; g->p.y < y1; g->p.y++, g->p.x = x0)
 242:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(; g->p.x < x1; g->p.x++)
 243:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_draw_pixel(g);
 244:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y0;
 245:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 246:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 247:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 248:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 3238              		.loc 6 248 0
 3239 006c BD46     		mov	sp, r7
 3240 006e 04B0     		add	sp, sp, #16
 3241              		@ sp needed
 3242 0070 80BD     		pop	{r7, pc}
 3243              		.cfi_endproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 81


 3244              	.LFE48:
 3245              		.size	fillarea, .-fillarea
 3246 0072 C046     		.section	.text.hline_clip,"ax",%progbits
 3247              		.align	2
 3248              		.code	16
 3249              		.thumb_func
 3250              		.type	hline_clip, %function
 3251              	hline_clip:
 3252              	.LFB49:
 249:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 250:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y and x1
 251:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		x,y x1,y1 cx,cy
 252:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Assumes the window covers the screen and a write_stop() will occur later
 253:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** //	if GDISP_HARDWARE_STREAM_WRITE and GDISP_HARDWARE_STREAM_POS is set.
 254:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** static void hline_clip(GDisplay *g) {
 3253              		.loc 6 254 0
 3254              		.cfi_startproc
 3255              		@ args = 0, pretend = 0, frame = 8
 3256              		@ frame_needed = 1, uses_anonymous_args = 0
 3257 0000 80B5     		push	{r7, lr}
 3258              		.cfi_def_cfa_offset 8
 3259              		.cfi_offset 7, -8
 3260              		.cfi_offset 14, -4
 3261 0002 82B0     		sub	sp, sp, #8
 3262              		.cfi_def_cfa_offset 16
 3263 0004 00AF     		add	r7, sp, #0
 3264              		.cfi_def_cfa_register 7
 3265 0006 7860     		str	r0, [r7, #4]
 255:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Swap the points if necessary so it always goes from x to x1
 256:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.x1 < g->p.x) {
 3266              		.loc 6 256 0
 3267 0008 7B68     		ldr	r3, [r7, #4]
 3268 000a 3022     		movs	r2, #48
 3269 000c 9A5E     		ldrsh	r2, [r3, r2]
 3270 000e 7B68     		ldr	r3, [r7, #4]
 3271 0010 2821     		movs	r1, #40
 3272 0012 5B5E     		ldrsh	r3, [r3, r1]
 3273 0014 9A42     		cmp	r2, r3
 3274 0016 0EDA     		bge	.L239
 257:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = g->p.x; g->p.x = g->p.x1; g->p.x1 = g->p.cx;
 3275              		.loc 6 257 0
 3276 0018 7B68     		ldr	r3, [r7, #4]
 3277 001a 2822     		movs	r2, #40
 3278 001c 9A5E     		ldrsh	r2, [r3, r2]
 3279 001e 7B68     		ldr	r3, [r7, #4]
 3280 0020 9A85     		strh	r2, [r3, #44]
 3281 0022 7B68     		ldr	r3, [r7, #4]
 3282 0024 3022     		movs	r2, #48
 3283 0026 9A5E     		ldrsh	r2, [r3, r2]
 3284 0028 7B68     		ldr	r3, [r7, #4]
 3285 002a 1A85     		strh	r2, [r3, #40]
 3286 002c 7B68     		ldr	r3, [r7, #4]
 3287 002e 2C22     		movs	r2, #44
 3288 0030 9A5E     		ldrsh	r2, [r3, r2]
 3289 0032 7B68     		ldr	r3, [r7, #4]
 3290 0034 1A86     		strh	r2, [r3, #48]
 3291              	.L239:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 82


 258:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 259:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 260:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Clipping
 261:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if NEED_CLIPPING
 262:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
 263:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!gvmt(g)->setclip)
 264:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 265:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 266:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.y < g->clipy0 || g->p.y >= g->clipy1) return;
 3292              		.loc 6 266 0
 3293 0036 7B68     		ldr	r3, [r7, #4]
 3294 0038 2A22     		movs	r2, #42
 3295 003a 9A5E     		ldrsh	r2, [r3, r2]
 3296 003c 7B68     		ldr	r3, [r7, #4]
 3297 003e 2221     		movs	r1, #34
 3298 0040 5B5E     		ldrsh	r3, [r3, r1]
 3299 0042 9A42     		cmp	r2, r3
 3300 0044 5EDB     		blt	.L248
 3301              		.loc 6 266 0 is_stmt 0 discriminator 1
 3302 0046 7B68     		ldr	r3, [r7, #4]
 3303 0048 2A22     		movs	r2, #42
 3304 004a 9A5E     		ldrsh	r2, [r3, r2]
 3305 004c 7B68     		ldr	r3, [r7, #4]
 3306 004e 2621     		movs	r1, #38
 3307 0050 5B5E     		ldrsh	r3, [r3, r1]
 3308 0052 9A42     		cmp	r2, r3
 3309 0054 56DA     		bge	.L248
 267:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x < g->clipx0) g->p.x = g->clipx0;
 3310              		.loc 6 267 0 is_stmt 1
 3311 0056 7B68     		ldr	r3, [r7, #4]
 3312 0058 2822     		movs	r2, #40
 3313 005a 9A5E     		ldrsh	r2, [r3, r2]
 3314 005c 7B68     		ldr	r3, [r7, #4]
 3315 005e 2021     		movs	r1, #32
 3316 0060 5B5E     		ldrsh	r3, [r3, r1]
 3317 0062 9A42     		cmp	r2, r3
 3318 0064 04DA     		bge	.L243
 3319              		.loc 6 267 0 is_stmt 0 discriminator 1
 3320 0066 7B68     		ldr	r3, [r7, #4]
 3321 0068 2022     		movs	r2, #32
 3322 006a 9A5E     		ldrsh	r2, [r3, r2]
 3323 006c 7B68     		ldr	r3, [r7, #4]
 3324 006e 1A85     		strh	r2, [r3, #40]
 3325              	.L243:
 268:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x1 >= g->clipx1) g->p.x1 = g->clipx1 - 1;
 3326              		.loc 6 268 0 is_stmt 1
 3327 0070 7B68     		ldr	r3, [r7, #4]
 3328 0072 3022     		movs	r2, #48
 3329 0074 9A5E     		ldrsh	r2, [r3, r2]
 3330 0076 7B68     		ldr	r3, [r7, #4]
 3331 0078 2421     		movs	r1, #36
 3332 007a 5B5E     		ldrsh	r3, [r3, r1]
 3333 007c 9A42     		cmp	r2, r3
 3334 007e 08DB     		blt	.L244
 3335              		.loc 6 268 0 is_stmt 0 discriminator 1
 3336 0080 7B68     		ldr	r3, [r7, #4]
 3337 0082 2422     		movs	r2, #36
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 83


 3338 0084 9B5E     		ldrsh	r3, [r3, r2]
 3339 0086 9BB2     		uxth	r3, r3
 3340 0088 013B     		subs	r3, r3, #1
 3341 008a 9BB2     		uxth	r3, r3
 3342 008c 1AB2     		sxth	r2, r3
 3343 008e 7B68     		ldr	r3, [r7, #4]
 3344 0090 1A86     		strh	r2, [r3, #48]
 3345              	.L244:
 269:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x1 < g->p.x) return;
 3346              		.loc 6 269 0 is_stmt 1
 3347 0092 7B68     		ldr	r3, [r7, #4]
 3348 0094 3022     		movs	r2, #48
 3349 0096 9A5E     		ldrsh	r2, [r3, r2]
 3350 0098 7B68     		ldr	r3, [r7, #4]
 3351 009a 2821     		movs	r1, #40
 3352 009c 5B5E     		ldrsh	r3, [r3, r1]
 3353 009e 9A42     		cmp	r2, r3
 3354 00a0 32DB     		blt	.L249
 270:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 271:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 272:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 273:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// This is an optimization for the point case. It is only worthwhile however if we
 274:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// have hardware fills or if we support both hardware pixel drawing and hardware streaming
 275:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS || (GDISP_HARDWARE_DRAWPIXEL && GDISP_HARDWARE_STREAM_WRITE)
 276:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Is this a point
 277:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (g->p.x == g->p.x1) {
 278:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel(g);
 279:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 280:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 281:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 282:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 283:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware accelerated area fill
 284:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS
 285:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
 286:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->fill)
 287:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 288:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 289:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->p.x1 - g->p.x + 1;
 290:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = 1;
 291:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_fill_area(g);
 292:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 293:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 294:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 295:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 296:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is cursor based streaming
 297:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_POS && GDISP_HARDWARE_STREAM_WRITE
 298:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
 299:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writepos)
 300:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 301:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 302:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!(g->flags & GDISP_FLG_SCRSTREAM))
 3355              		.loc 6 302 0
 3356 00a2 7B68     		ldr	r3, [r7, #4]
 3357 00a4 DB8B     		ldrh	r3, [r3, #30]
 3358 00a6 1A00     		movs	r2, r3
 3359 00a8 0223     		movs	r3, #2
 3360 00aa 1340     		ands	r3, r2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 84


 3361 00ac 03D1     		bne	.L246
 303:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				setglobalwindow(g);
 3362              		.loc 6 303 0
 3363 00ae 7B68     		ldr	r3, [r7, #4]
 3364 00b0 1800     		movs	r0, r3
 3365 00b2 FFF7FEFF 		bl	setglobalwindow
 3366              	.L246:
 304:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->p.x1 - g->p.x + 1;
 3367              		.loc 6 304 0
 3368 00b6 7B68     		ldr	r3, [r7, #4]
 3369 00b8 3022     		movs	r2, #48
 3370 00ba 9B5E     		ldrsh	r3, [r3, r2]
 3371 00bc 9AB2     		uxth	r2, r3
 3372 00be 7B68     		ldr	r3, [r7, #4]
 3373 00c0 2821     		movs	r1, #40
 3374 00c2 5B5E     		ldrsh	r3, [r3, r1]
 3375 00c4 9BB2     		uxth	r3, r3
 3376 00c6 D31A     		subs	r3, r2, r3
 3377 00c8 9BB2     		uxth	r3, r3
 3378 00ca 0133     		adds	r3, r3, #1
 3379 00cc 9BB2     		uxth	r3, r3
 3380 00ce 1AB2     		sxth	r2, r3
 3381 00d0 7B68     		ldr	r3, [r7, #4]
 3382 00d2 9A85     		strh	r2, [r3, #44]
 305:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_pos(g);
 3383              		.loc 6 305 0
 3384 00d4 7B68     		ldr	r3, [r7, #4]
 3385 00d6 1800     		movs	r0, r3
 3386 00d8 FFF7FEFF 		bl	gdisp_lld_write_pos
 3387              	.L247:
 306:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do { gdisp_lld_write_color(g); } while(--g->p.cx);
 3388              		.loc 6 306 0 discriminator 1
 3389 00dc 7B68     		ldr	r3, [r7, #4]
 3390 00de 1800     		movs	r0, r3
 3391 00e0 FFF7FEFF 		bl	gdisp_lld_write_color
 3392 00e4 7B68     		ldr	r3, [r7, #4]
 3393 00e6 2C22     		movs	r2, #44
 3394 00e8 9B5E     		ldrsh	r3, [r3, r2]
 3395 00ea 9BB2     		uxth	r3, r3
 3396 00ec 013B     		subs	r3, r3, #1
 3397 00ee 9BB2     		uxth	r3, r3
 3398 00f0 1AB2     		sxth	r2, r3
 3399 00f2 7B68     		ldr	r3, [r7, #4]
 3400 00f4 9A85     		strh	r2, [r3, #44]
 3401 00f6 7B68     		ldr	r3, [r7, #4]
 3402 00f8 2C22     		movs	r2, #44
 3403 00fa 9B5E     		ldrsh	r3, [r3, r2]
 3404 00fc 002B     		cmp	r3, #0
 3405 00fe EDD1     		bne	.L247
 307:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 3406              		.loc 6 307 0 discriminator 3
 3407 0100 C046     		nop
 3408 0102 02E0     		b	.L238
 3409              	.L248:
 266:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x < g->clipx0) g->p.x = g->clipx0;
 3410              		.loc 6 266 0
 3411 0104 C046     		nop
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 85


 3412 0106 00E0     		b	.L238
 3413              	.L249:
 269:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 3414              		.loc 6 269 0
 3415 0108 C046     		nop
 3416              	.L238:
 308:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 309:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 310:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 311:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is streaming
 312:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_POS != TRUE && GDISP_HARDWARE_STREAM_WRI
 313:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 314:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writestart)
 315:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 316:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 317:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->p.x1 - g->p.x + 1;
 318:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = 1;
 319:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 320:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do { gdisp_lld_write_color(g); } while(--g->p.cx);
 321:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 322:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 323:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 324:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 325:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 326:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is drawing pixels
 327:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_DRAWPIXE
 328:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have draw pixel if we don't have s
 329:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 330:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->pixel)
 331:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
 332:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 333:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; g->p.x <= g->p.x1; g->p.x++)
 334:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_draw_pixel(g);
 335:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 336:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 337:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 338:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 3417              		.loc 6 338 0
 3418 010a BD46     		mov	sp, r7
 3419 010c 02B0     		add	sp, sp, #8
 3420              		@ sp needed
 3421 010e 80BD     		pop	{r7, pc}
 3422              		.cfi_endproc
 3423              	.LFE49:
 3424              		.size	hline_clip, .-hline_clip
 3425              		.section	.text.vline_clip,"ax",%progbits
 3426              		.align	2
 3427              		.code	16
 3428              		.thumb_func
 3429              		.type	vline_clip, %function
 3430              	vline_clip:
 3431              	.LFB50:
 339:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 340:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y and y1
 341:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		x,y x1,y1 cx,cy
 342:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** static void vline_clip(GDisplay *g) {
 3432              		.loc 6 342 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 86


 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 8
 3435              		@ frame_needed = 1, uses_anonymous_args = 0
 3436 0000 80B5     		push	{r7, lr}
 3437              		.cfi_def_cfa_offset 8
 3438              		.cfi_offset 7, -8
 3439              		.cfi_offset 14, -4
 3440 0002 82B0     		sub	sp, sp, #8
 3441              		.cfi_def_cfa_offset 16
 3442 0004 00AF     		add	r7, sp, #0
 3443              		.cfi_def_cfa_register 7
 3444 0006 7860     		str	r0, [r7, #4]
 343:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Swap the points if necessary so it always goes from y to y1
 344:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.y1 < g->p.y) {
 3445              		.loc 6 344 0
 3446 0008 7B68     		ldr	r3, [r7, #4]
 3447 000a 3222     		movs	r2, #50
 3448 000c 9A5E     		ldrsh	r2, [r3, r2]
 3449 000e 7B68     		ldr	r3, [r7, #4]
 3450 0010 2A21     		movs	r1, #42
 3451 0012 5B5E     		ldrsh	r3, [r3, r1]
 3452 0014 9A42     		cmp	r2, r3
 3453 0016 0EDA     		bge	.L251
 345:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cy = g->p.y; g->p.y = g->p.y1; g->p.y1 = g->p.cy;
 3454              		.loc 6 345 0
 3455 0018 7B68     		ldr	r3, [r7, #4]
 3456 001a 2A22     		movs	r2, #42
 3457 001c 9A5E     		ldrsh	r2, [r3, r2]
 3458 001e 7B68     		ldr	r3, [r7, #4]
 3459 0020 DA85     		strh	r2, [r3, #46]
 3460 0022 7B68     		ldr	r3, [r7, #4]
 3461 0024 3222     		movs	r2, #50
 3462 0026 9A5E     		ldrsh	r2, [r3, r2]
 3463 0028 7B68     		ldr	r3, [r7, #4]
 3464 002a 5A85     		strh	r2, [r3, #42]
 3465 002c 7B68     		ldr	r3, [r7, #4]
 3466 002e 2E22     		movs	r2, #46
 3467 0030 9A5E     		ldrsh	r2, [r3, r2]
 3468 0032 7B68     		ldr	r3, [r7, #4]
 3469 0034 5A86     		strh	r2, [r3, #50]
 3470              	.L251:
 346:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 347:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 348:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Clipping
 349:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if NEED_CLIPPING
 350:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
 351:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!gvmt(g)->setclip)
 352:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 353:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 354:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.x < g->clipx0 || g->p.x >= g->clipx1) return;
 3471              		.loc 6 354 0
 3472 0036 7B68     		ldr	r3, [r7, #4]
 3473 0038 2822     		movs	r2, #40
 3474 003a 9A5E     		ldrsh	r2, [r3, r2]
 3475 003c 7B68     		ldr	r3, [r7, #4]
 3476 003e 2021     		movs	r1, #32
 3477 0040 5B5E     		ldrsh	r3, [r3, r1]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 87


 3478 0042 9A42     		cmp	r2, r3
 3479 0044 00DA     		bge	.LCB2945
 3480 0046 7EE0     		b	.L261	@long jump
 3481              	.LCB2945:
 3482              		.loc 6 354 0 is_stmt 0 discriminator 1
 3483 0048 7B68     		ldr	r3, [r7, #4]
 3484 004a 2822     		movs	r2, #40
 3485 004c 9A5E     		ldrsh	r2, [r3, r2]
 3486 004e 7B68     		ldr	r3, [r7, #4]
 3487 0050 2421     		movs	r1, #36
 3488 0052 5B5E     		ldrsh	r3, [r3, r1]
 3489 0054 9A42     		cmp	r2, r3
 3490 0056 00DB     		blt	.LCB2951
 3491 0058 75E0     		b	.L261	@long jump
 3492              	.LCB2951:
 355:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.y < g->clipy0) g->p.y = g->clipy0;
 3493              		.loc 6 355 0 is_stmt 1
 3494 005a 7B68     		ldr	r3, [r7, #4]
 3495 005c 2A22     		movs	r2, #42
 3496 005e 9A5E     		ldrsh	r2, [r3, r2]
 3497 0060 7B68     		ldr	r3, [r7, #4]
 3498 0062 2221     		movs	r1, #34
 3499 0064 5B5E     		ldrsh	r3, [r3, r1]
 3500 0066 9A42     		cmp	r2, r3
 3501 0068 04DA     		bge	.L255
 3502              		.loc 6 355 0 is_stmt 0 discriminator 1
 3503 006a 7B68     		ldr	r3, [r7, #4]
 3504 006c 2222     		movs	r2, #34
 3505 006e 9A5E     		ldrsh	r2, [r3, r2]
 3506 0070 7B68     		ldr	r3, [r7, #4]
 3507 0072 5A85     		strh	r2, [r3, #42]
 3508              	.L255:
 356:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.y1 >= g->clipy1) g->p.y1 = g->clipy1 - 1;
 3509              		.loc 6 356 0 is_stmt 1
 3510 0074 7B68     		ldr	r3, [r7, #4]
 3511 0076 3222     		movs	r2, #50
 3512 0078 9A5E     		ldrsh	r2, [r3, r2]
 3513 007a 7B68     		ldr	r3, [r7, #4]
 3514 007c 2621     		movs	r1, #38
 3515 007e 5B5E     		ldrsh	r3, [r3, r1]
 3516 0080 9A42     		cmp	r2, r3
 3517 0082 08DB     		blt	.L256
 3518              		.loc 6 356 0 is_stmt 0 discriminator 1
 3519 0084 7B68     		ldr	r3, [r7, #4]
 3520 0086 2622     		movs	r2, #38
 3521 0088 9B5E     		ldrsh	r3, [r3, r2]
 3522 008a 9BB2     		uxth	r3, r3
 3523 008c 013B     		subs	r3, r3, #1
 3524 008e 9BB2     		uxth	r3, r3
 3525 0090 1AB2     		sxth	r2, r3
 3526 0092 7B68     		ldr	r3, [r7, #4]
 3527 0094 5A86     		strh	r2, [r3, #50]
 3528              	.L256:
 357:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.y1 < g->p.y) return;
 3529              		.loc 6 357 0 is_stmt 1
 3530 0096 7B68     		ldr	r3, [r7, #4]
 3531 0098 3222     		movs	r2, #50
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 88


 3532 009a 9A5E     		ldrsh	r2, [r3, r2]
 3533 009c 7B68     		ldr	r3, [r7, #4]
 3534 009e 2A21     		movs	r1, #42
 3535 00a0 5B5E     		ldrsh	r3, [r3, r1]
 3536 00a2 9A42     		cmp	r2, r3
 3537 00a4 51DB     		blt	.L262
 358:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 359:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 360:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 361:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// This is an optimization for the point case. It is only worthwhile however if we
 362:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// have hardware fills or if we support both hardware pixel drawing and hardware streaming
 363:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS || (GDISP_HARDWARE_DRAWPIXEL && GDISP_HARDWARE_STREAM_WRITE) || (GDISP_HA
 364:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Is this a point
 365:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (g->p.y == g->p.y1) {
 3538              		.loc 6 365 0
 3539 00a6 7B68     		ldr	r3, [r7, #4]
 3540 00a8 2A22     		movs	r2, #42
 3541 00aa 9A5E     		ldrsh	r2, [r3, r2]
 3542 00ac 7B68     		ldr	r3, [r7, #4]
 3543 00ae 3221     		movs	r1, #50
 3544 00b0 5B5E     		ldrsh	r3, [r3, r1]
 3545 00b2 9A42     		cmp	r2, r3
 3546 00b4 04D1     		bne	.L258
 366:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel(g);
 3547              		.loc 6 366 0
 3548 00b6 7B68     		ldr	r3, [r7, #4]
 3549 00b8 1800     		movs	r0, r3
 3550 00ba FFF7FEFF 		bl	drawpixel
 367:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 3551              		.loc 6 367 0
 3552 00be 45E0     		b	.L250
 3553              	.L258:
 368:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 369:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 370:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 371:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware accelerated area fill
 372:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS
 373:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
 374:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->fill)
 375:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 376:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 377:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = g->p.y1 - g->p.y + 1;
 378:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = 1;
 379:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_fill_area(g);
 380:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 381:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 382:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 383:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 384:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is streaming
 385:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE
 386:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 387:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writestart)
 388:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 389:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 390:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
 391:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((g->flags & GDISP_FLG_SCRSTREAM)) {
 3554              		.loc 6 391 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 89


 3555 00c0 7B68     		ldr	r3, [r7, #4]
 3556 00c2 DB8B     		ldrh	r3, [r3, #30]
 3557 00c4 1A00     		movs	r2, r3
 3558 00c6 0223     		movs	r3, #2
 3559 00c8 1340     		ands	r3, r2
 3560 00ca 0AD0     		beq	.L259
 392:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_stop(g);
 3561              		.loc 6 392 0
 3562 00cc 7B68     		ldr	r3, [r7, #4]
 3563 00ce 1800     		movs	r0, r3
 3564 00d0 FFF7FEFF 		bl	gdisp_lld_write_stop
 393:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->flags &= ~GDISP_FLG_SCRSTREAM;
 3565              		.loc 6 393 0
 3566 00d4 7B68     		ldr	r3, [r7, #4]
 3567 00d6 DB8B     		ldrh	r3, [r3, #30]
 3568 00d8 0222     		movs	r2, #2
 3569 00da 9343     		bics	r3, r2
 3570 00dc 9AB2     		uxth	r2, r3
 3571 00de 7B68     		ldr	r3, [r7, #4]
 3572 00e0 DA83     		strh	r2, [r3, #30]
 3573              	.L259:
 394:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 395:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 396:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = g->p.y1 - g->p.y + 1;
 3574              		.loc 6 396 0
 3575 00e2 7B68     		ldr	r3, [r7, #4]
 3576 00e4 3222     		movs	r2, #50
 3577 00e6 9B5E     		ldrsh	r3, [r3, r2]
 3578 00e8 9AB2     		uxth	r2, r3
 3579 00ea 7B68     		ldr	r3, [r7, #4]
 3580 00ec 2A21     		movs	r1, #42
 3581 00ee 5B5E     		ldrsh	r3, [r3, r1]
 3582 00f0 9BB2     		uxth	r3, r3
 3583 00f2 D31A     		subs	r3, r2, r3
 3584 00f4 9BB2     		uxth	r3, r3
 3585 00f6 0133     		adds	r3, r3, #1
 3586 00f8 9BB2     		uxth	r3, r3
 3587 00fa 1AB2     		sxth	r2, r3
 3588 00fc 7B68     		ldr	r3, [r7, #4]
 3589 00fe DA85     		strh	r2, [r3, #46]
 397:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = 1;
 3590              		.loc 6 397 0
 3591 0100 7B68     		ldr	r3, [r7, #4]
 3592 0102 0122     		movs	r2, #1
 3593 0104 9A85     		strh	r2, [r3, #44]
 398:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 3594              		.loc 6 398 0
 3595 0106 7B68     		ldr	r3, [r7, #4]
 3596 0108 1800     		movs	r0, r3
 3597 010a FFF7FEFF 		bl	gdisp_lld_write_start
 399:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
 400:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
 401:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (gvmt(g)->writepos)
 402:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
 403:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_pos(g);
 3598              		.loc 6 403 0
 3599 010e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 90


 3600 0110 1800     		movs	r0, r3
 3601 0112 FFF7FEFF 		bl	gdisp_lld_write_pos
 3602              	.L260:
 404:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 405:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do { gdisp_lld_write_color(g); } while(--g->p.cy);
 3603              		.loc 6 405 0 discriminator 1
 3604 0116 7B68     		ldr	r3, [r7, #4]
 3605 0118 1800     		movs	r0, r3
 3606 011a FFF7FEFF 		bl	gdisp_lld_write_color
 3607 011e 7B68     		ldr	r3, [r7, #4]
 3608 0120 2E22     		movs	r2, #46
 3609 0122 9B5E     		ldrsh	r3, [r3, r2]
 3610 0124 9BB2     		uxth	r3, r3
 3611 0126 013B     		subs	r3, r3, #1
 3612 0128 9BB2     		uxth	r3, r3
 3613 012a 1AB2     		sxth	r2, r3
 3614 012c 7B68     		ldr	r3, [r7, #4]
 3615 012e DA85     		strh	r2, [r3, #46]
 3616 0130 7B68     		ldr	r3, [r7, #4]
 3617 0132 2E22     		movs	r2, #46
 3618 0134 9B5E     		ldrsh	r3, [r3, r2]
 3619 0136 002B     		cmp	r3, #0
 3620 0138 EDD1     		bne	.L260
 406:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 3621              		.loc 6 406 0
 3622 013a 7B68     		ldr	r3, [r7, #4]
 3623 013c 1800     		movs	r0, r3
 3624 013e FFF7FEFF 		bl	gdisp_lld_write_stop
 407:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 3625              		.loc 6 407 0
 3626 0142 C046     		nop
 3627 0144 02E0     		b	.L250
 3628              	.L261:
 354:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (g->p.y < g->clipy0) g->p.y = g->clipy0;
 3629              		.loc 6 354 0
 3630 0146 C046     		nop
 3631 0148 00E0     		b	.L250
 3632              	.L262:
 357:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 3633              		.loc 6 357 0
 3634 014a C046     		nop
 3635              	.L250:
 408:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 409:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 410:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 411:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is drawing pixels
 412:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_DRAWPIXE
 413:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have draw pixel if we don't have s
 414:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 415:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->pixel)
 416:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
 417:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 418:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; g->p.y <= g->p.y1; g->p.y++)
 419:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_draw_pixel(g);
 420:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 421:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 422:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 91


 423:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 3636              		.loc 6 423 0
 3637 014c BD46     		mov	sp, r7
 3638 014e 02B0     		add	sp, sp, #8
 3639              		@ sp needed
 3640 0150 80BD     		pop	{r7, pc}
 3641              		.cfi_endproc
 3642              	.LFE50:
 3643              		.size	vline_clip, .-vline_clip
 3644 0152 C046     		.section	.text.line_clip,"ax",%progbits
 3645              		.align	2
 3646              		.code	16
 3647              		.thumb_func
 3648              		.type	line_clip, %function
 3649              	line_clip:
 3650              	.LFB51:
 424:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 425:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Parameters:	x,y and x1,y1
 426:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** // Alters:		x,y x1,y1 cx,cy
 427:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** static void line_clip(GDisplay *g) {
 3651              		.loc 6 427 0
 3652              		.cfi_startproc
 3653              		@ args = 0, pretend = 0, frame = 24
 3654              		@ frame_needed = 1, uses_anonymous_args = 0
 3655 0000 80B5     		push	{r7, lr}
 3656              		.cfi_def_cfa_offset 8
 3657              		.cfi_offset 7, -8
 3658              		.cfi_offset 14, -4
 3659 0002 86B0     		sub	sp, sp, #24
 3660              		.cfi_def_cfa_offset 32
 3661 0004 00AF     		add	r7, sp, #0
 3662              		.cfi_def_cfa_register 7
 3663 0006 7860     		str	r0, [r7, #4]
 428:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	int16_t dy, dx;
 429:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	int16_t addx, addy;
 430:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	int16_t P, diff, i;
 431:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 432:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Is this a horizontal line (or a point)
 433:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.y == g->p.y1) {
 3664              		.loc 6 433 0
 3665 0008 7B68     		ldr	r3, [r7, #4]
 3666 000a 2A22     		movs	r2, #42
 3667 000c 9A5E     		ldrsh	r2, [r3, r2]
 3668 000e 7B68     		ldr	r3, [r7, #4]
 3669 0010 3221     		movs	r1, #50
 3670 0012 5B5E     		ldrsh	r3, [r3, r1]
 3671 0014 9A42     		cmp	r2, r3
 3672 0016 04D1     		bne	.L264
 434:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		hline_clip(g);
 3673              		.loc 6 434 0
 3674 0018 7B68     		ldr	r3, [r7, #4]
 3675 001a 1800     		movs	r0, r3
 3676 001c FFF7FEFF 		bl	hline_clip
 435:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return;
 3677              		.loc 6 435 0
 3678 0020 64E1     		b	.L263
 3679              	.L264:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 92


 436:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 437:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 438:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Is this a vertical line (or a point)
 439:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.x == g->p.x1) {
 3680              		.loc 6 439 0
 3681 0022 7B68     		ldr	r3, [r7, #4]
 3682 0024 2822     		movs	r2, #40
 3683 0026 9A5E     		ldrsh	r2, [r3, r2]
 3684 0028 7B68     		ldr	r3, [r7, #4]
 3685 002a 3021     		movs	r1, #48
 3686 002c 5B5E     		ldrsh	r3, [r3, r1]
 3687 002e 9A42     		cmp	r2, r3
 3688 0030 04D1     		bne	.L266
 440:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		vline_clip(g);
 3689              		.loc 6 440 0
 3690 0032 7B68     		ldr	r3, [r7, #4]
 3691 0034 1800     		movs	r0, r3
 3692 0036 FFF7FEFF 		bl	vline_clip
 441:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return;
 3693              		.loc 6 441 0
 3694 003a 57E1     		b	.L263
 3695              	.L266:
 442:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 443:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 444:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Not horizontal or vertical
 445:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 446:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Use Bresenham's line drawing algorithm.
 447:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	//	This should be replaced with fixed point slope based line drawing
 448:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	//	which is more efficient on modern processors as it branches less.
 449:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	//	When clipping is needed, all the clipping could also be done up front
 450:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	//	instead of on each pixel.
 451:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 452:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.x1 >= g->p.x) {
 3696              		.loc 6 452 0
 3697 003c 7B68     		ldr	r3, [r7, #4]
 3698 003e 3022     		movs	r2, #48
 3699 0040 9A5E     		ldrsh	r2, [r3, r2]
 3700 0042 7B68     		ldr	r3, [r7, #4]
 3701 0044 2821     		movs	r1, #40
 3702 0046 5B5E     		ldrsh	r3, [r3, r1]
 3703 0048 9A42     		cmp	r2, r3
 3704 004a 11DB     		blt	.L267
 453:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx = g->p.x1 - g->p.x;
 3705              		.loc 6 453 0
 3706 004c 7B68     		ldr	r3, [r7, #4]
 3707 004e 3022     		movs	r2, #48
 3708 0050 9B5E     		ldrsh	r3, [r3, r2]
 3709 0052 9AB2     		uxth	r2, r3
 3710 0054 7B68     		ldr	r3, [r7, #4]
 3711 0056 2821     		movs	r1, #40
 3712 0058 5B5E     		ldrsh	r3, [r3, r1]
 3713 005a 9BB2     		uxth	r3, r3
 3714 005c D31A     		subs	r3, r2, r3
 3715 005e 9AB2     		uxth	r2, r3
 3716 0060 1423     		movs	r3, #20
 3717 0062 FB18     		adds	r3, r7, r3
 3718 0064 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 93


 454:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		addx = 1;
 3719              		.loc 6 454 0
 3720 0066 1223     		movs	r3, #18
 3721 0068 FB18     		adds	r3, r7, r3
 3722 006a 0122     		movs	r2, #1
 3723 006c 1A80     		strh	r2, [r3]
 3724 006e 11E0     		b	.L268
 3725              	.L267:
 455:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	} else {
 456:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx = g->p.x - g->p.x1;
 3726              		.loc 6 456 0
 3727 0070 7B68     		ldr	r3, [r7, #4]
 3728 0072 2822     		movs	r2, #40
 3729 0074 9B5E     		ldrsh	r3, [r3, r2]
 3730 0076 9AB2     		uxth	r2, r3
 3731 0078 7B68     		ldr	r3, [r7, #4]
 3732 007a 3021     		movs	r1, #48
 3733 007c 5B5E     		ldrsh	r3, [r3, r1]
 3734 007e 9BB2     		uxth	r3, r3
 3735 0080 D31A     		subs	r3, r2, r3
 3736 0082 9AB2     		uxth	r2, r3
 3737 0084 1423     		movs	r3, #20
 3738 0086 FB18     		adds	r3, r7, r3
 3739 0088 1A80     		strh	r2, [r3]
 457:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		addx = -1;
 3740              		.loc 6 457 0
 3741 008a 1223     		movs	r3, #18
 3742 008c FB18     		adds	r3, r7, r3
 3743 008e 0122     		movs	r2, #1
 3744 0090 5242     		rsbs	r2, r2, #0
 3745 0092 1A80     		strh	r2, [r3]
 3746              	.L268:
 458:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 459:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g->p.y1 >= g->p.y) {
 3747              		.loc 6 459 0
 3748 0094 7B68     		ldr	r3, [r7, #4]
 3749 0096 3222     		movs	r2, #50
 3750 0098 9A5E     		ldrsh	r2, [r3, r2]
 3751 009a 7B68     		ldr	r3, [r7, #4]
 3752 009c 2A21     		movs	r1, #42
 3753 009e 5B5E     		ldrsh	r3, [r3, r1]
 3754 00a0 9A42     		cmp	r2, r3
 3755 00a2 11DB     		blt	.L269
 460:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy = g->p.y1 - g->p.y;
 3756              		.loc 6 460 0
 3757 00a4 7B68     		ldr	r3, [r7, #4]
 3758 00a6 3222     		movs	r2, #50
 3759 00a8 9B5E     		ldrsh	r3, [r3, r2]
 3760 00aa 9AB2     		uxth	r2, r3
 3761 00ac 7B68     		ldr	r3, [r7, #4]
 3762 00ae 2A21     		movs	r1, #42
 3763 00b0 5B5E     		ldrsh	r3, [r3, r1]
 3764 00b2 9BB2     		uxth	r3, r3
 3765 00b4 D31A     		subs	r3, r2, r3
 3766 00b6 9AB2     		uxth	r2, r3
 3767 00b8 1623     		movs	r3, #22
 3768 00ba FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 94


 3769 00bc 1A80     		strh	r2, [r3]
 461:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		addy = 1;
 3770              		.loc 6 461 0
 3771 00be 1023     		movs	r3, #16
 3772 00c0 FB18     		adds	r3, r7, r3
 3773 00c2 0122     		movs	r2, #1
 3774 00c4 1A80     		strh	r2, [r3]
 3775 00c6 11E0     		b	.L270
 3776              	.L269:
 462:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	} else {
 463:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy = g->p.y - g->p.y1;
 3777              		.loc 6 463 0
 3778 00c8 7B68     		ldr	r3, [r7, #4]
 3779 00ca 2A22     		movs	r2, #42
 3780 00cc 9B5E     		ldrsh	r3, [r3, r2]
 3781 00ce 9AB2     		uxth	r2, r3
 3782 00d0 7B68     		ldr	r3, [r7, #4]
 3783 00d2 3221     		movs	r1, #50
 3784 00d4 5B5E     		ldrsh	r3, [r3, r1]
 3785 00d6 9BB2     		uxth	r3, r3
 3786 00d8 D31A     		subs	r3, r2, r3
 3787 00da 9AB2     		uxth	r2, r3
 3788 00dc 1623     		movs	r3, #22
 3789 00de FB18     		adds	r3, r7, r3
 3790 00e0 1A80     		strh	r2, [r3]
 464:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		addy = -1;
 3791              		.loc 6 464 0
 3792 00e2 1023     		movs	r3, #16
 3793 00e4 FB18     		adds	r3, r7, r3
 3794 00e6 0122     		movs	r2, #1
 3795 00e8 5242     		rsbs	r2, r2, #0
 3796 00ea 1A80     		strh	r2, [r3]
 3797              	.L270:
 465:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 466:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 467:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (dx >= dy) {
 3798              		.loc 6 467 0
 3799 00ec 1423     		movs	r3, #20
 3800 00ee FA18     		adds	r2, r7, r3
 3801 00f0 1623     		movs	r3, #22
 3802 00f2 FB18     		adds	r3, r7, r3
 3803 00f4 0021     		movs	r1, #0
 3804 00f6 525E     		ldrsh	r2, [r2, r1]
 3805 00f8 0021     		movs	r1, #0
 3806 00fa 5B5E     		ldrsh	r3, [r3, r1]
 3807 00fc 9A42     		cmp	r2, r3
 3808 00fe 00DA     		bge	.LCB3214
 3809 0100 7AE0     		b	.L271	@long jump
 3810              	.LCB3214:
 468:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy <<= 1;
 3811              		.loc 6 468 0
 3812 0102 1623     		movs	r3, #22
 3813 0104 FB18     		adds	r3, r7, r3
 3814 0106 0022     		movs	r2, #0
 3815 0108 9B5E     		ldrsh	r3, [r3, r2]
 3816 010a 5A00     		lsls	r2, r3, #1
 3817 010c 1623     		movs	r3, #22
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 95


 3818 010e FB18     		adds	r3, r7, r3
 3819 0110 1A80     		strh	r2, [r3]
 469:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = dy - dx;
 3820              		.loc 6 469 0
 3821 0112 1623     		movs	r3, #22
 3822 0114 FB18     		adds	r3, r7, r3
 3823 0116 1A88     		ldrh	r2, [r3]
 3824 0118 1423     		movs	r3, #20
 3825 011a FB18     		adds	r3, r7, r3
 3826 011c 1B88     		ldrh	r3, [r3]
 3827 011e D31A     		subs	r3, r2, r3
 3828 0120 9AB2     		uxth	r2, r3
 3829 0122 0E23     		movs	r3, #14
 3830 0124 FB18     		adds	r3, r7, r3
 3831 0126 1A80     		strh	r2, [r3]
 470:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		diff = P - dx;
 3832              		.loc 6 470 0
 3833 0128 0E23     		movs	r3, #14
 3834 012a FB18     		adds	r3, r7, r3
 3835 012c 1A88     		ldrh	r2, [r3]
 3836 012e 1423     		movs	r3, #20
 3837 0130 FB18     		adds	r3, r7, r3
 3838 0132 1B88     		ldrh	r3, [r3]
 3839 0134 D31A     		subs	r3, r2, r3
 3840 0136 9AB2     		uxth	r2, r3
 3841 0138 0A23     		movs	r3, #10
 3842 013a FB18     		adds	r3, r7, r3
 3843 013c 1A80     		strh	r2, [r3]
 471:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(i=0; i<=dx; ++i) {
 3844              		.loc 6 472 0
 3845 013e 0C23     		movs	r3, #12
 3846 0140 FB18     		adds	r3, r7, r3
 3847 0142 0022     		movs	r2, #0
 3848 0144 1A80     		strh	r2, [r3]
 3849 0146 4CE0     		b	.L272
 3850              	.L275:
 473:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 3851              		.loc 6 473 0
 3852 0148 7B68     		ldr	r3, [r7, #4]
 3853 014a 1800     		movs	r0, r3
 3854 014c FFF7FEFF 		bl	drawpixel_clip
 474:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0) {
 3855              		.loc 6 474 0
 3856 0150 0E23     		movs	r3, #14
 3857 0152 FB18     		adds	r3, r7, r3
 3858 0154 0022     		movs	r2, #0
 3859 0156 9B5E     		ldrsh	r3, [r3, r2]
 3860 0158 002B     		cmp	r3, #0
 3861 015a 17DA     		bge	.L273
 475:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P  += dy;
 3862              		.loc 6 475 0
 3863 015c 0E23     		movs	r3, #14
 3864 015e FB18     		adds	r3, r7, r3
 3865 0160 1A88     		ldrh	r2, [r3]
 3866 0162 1623     		movs	r3, #22
 3867 0164 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 96


 3868 0166 1B88     		ldrh	r3, [r3]
 3869 0168 D318     		adds	r3, r2, r3
 3870 016a 9AB2     		uxth	r2, r3
 3871 016c 0E23     		movs	r3, #14
 3872 016e FB18     		adds	r3, r7, r3
 3873 0170 1A80     		strh	r2, [r3]
 476:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x += addx;
 3874              		.loc 6 476 0
 3875 0172 7B68     		ldr	r3, [r7, #4]
 3876 0174 2822     		movs	r2, #40
 3877 0176 9B5E     		ldrsh	r3, [r3, r2]
 3878 0178 9AB2     		uxth	r2, r3
 3879 017a 1223     		movs	r3, #18
 3880 017c FB18     		adds	r3, r7, r3
 3881 017e 1B88     		ldrh	r3, [r3]
 3882 0180 D318     		adds	r3, r2, r3
 3883 0182 9BB2     		uxth	r3, r3
 3884 0184 1AB2     		sxth	r2, r3
 3885 0186 7B68     		ldr	r3, [r7, #4]
 3886 0188 1A85     		strh	r2, [r3, #40]
 3887 018a 22E0     		b	.L274
 3888              	.L273:
 477:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
 478:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P  += diff;
 3889              		.loc 6 478 0
 3890 018c 0E23     		movs	r3, #14
 3891 018e FB18     		adds	r3, r7, r3
 3892 0190 1A88     		ldrh	r2, [r3]
 3893 0192 0A23     		movs	r3, #10
 3894 0194 FB18     		adds	r3, r7, r3
 3895 0196 1B88     		ldrh	r3, [r3]
 3896 0198 D318     		adds	r3, r2, r3
 3897 019a 9AB2     		uxth	r2, r3
 3898 019c 0E23     		movs	r3, #14
 3899 019e FB18     		adds	r3, r7, r3
 3900 01a0 1A80     		strh	r2, [r3]
 479:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x += addx;
 3901              		.loc 6 479 0
 3902 01a2 7B68     		ldr	r3, [r7, #4]
 3903 01a4 2822     		movs	r2, #40
 3904 01a6 9B5E     		ldrsh	r3, [r3, r2]
 3905 01a8 9AB2     		uxth	r2, r3
 3906 01aa 1223     		movs	r3, #18
 3907 01ac FB18     		adds	r3, r7, r3
 3908 01ae 1B88     		ldrh	r3, [r3]
 3909 01b0 D318     		adds	r3, r2, r3
 3910 01b2 9BB2     		uxth	r3, r3
 3911 01b4 1AB2     		sxth	r2, r3
 3912 01b6 7B68     		ldr	r3, [r7, #4]
 3913 01b8 1A85     		strh	r2, [r3, #40]
 480:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y += addy;
 3914              		.loc 6 480 0
 3915 01ba 7B68     		ldr	r3, [r7, #4]
 3916 01bc 2A22     		movs	r2, #42
 3917 01be 9B5E     		ldrsh	r3, [r3, r2]
 3918 01c0 9AB2     		uxth	r2, r3
 3919 01c2 1023     		movs	r3, #16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 97


 3920 01c4 FB18     		adds	r3, r7, r3
 3921 01c6 1B88     		ldrh	r3, [r3]
 3922 01c8 D318     		adds	r3, r2, r3
 3923 01ca 9BB2     		uxth	r3, r3
 3924 01cc 1AB2     		sxth	r2, r3
 3925 01ce 7B68     		ldr	r3, [r7, #4]
 3926 01d0 5A85     		strh	r2, [r3, #42]
 3927              	.L274:
 472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 3928              		.loc 6 472 0 discriminator 2
 3929 01d2 0C23     		movs	r3, #12
 3930 01d4 FB18     		adds	r3, r7, r3
 3931 01d6 1B88     		ldrh	r3, [r3]
 3932 01d8 0133     		adds	r3, r3, #1
 3933 01da 9AB2     		uxth	r2, r3
 3934 01dc 0C23     		movs	r3, #12
 3935 01de FB18     		adds	r3, r7, r3
 3936 01e0 1A80     		strh	r2, [r3]
 3937              	.L272:
 472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 3938              		.loc 6 472 0 is_stmt 0 discriminator 1
 3939 01e2 0C23     		movs	r3, #12
 3940 01e4 FA18     		adds	r2, r7, r3
 3941 01e6 1423     		movs	r3, #20
 3942 01e8 FB18     		adds	r3, r7, r3
 3943 01ea 0021     		movs	r1, #0
 3944 01ec 525E     		ldrsh	r2, [r2, r1]
 3945 01ee 0021     		movs	r1, #0
 3946 01f0 5B5E     		ldrsh	r3, [r3, r1]
 3947 01f2 9A42     		cmp	r2, r3
 3948 01f4 A8DD     		ble	.L275
 3949 01f6 79E0     		b	.L263
 3950              	.L271:
 481:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 482:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 483:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	} else {
 484:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx <<= 1;
 3951              		.loc 6 484 0 is_stmt 1
 3952 01f8 1423     		movs	r3, #20
 3953 01fa FB18     		adds	r3, r7, r3
 3954 01fc 0022     		movs	r2, #0
 3955 01fe 9B5E     		ldrsh	r3, [r3, r2]
 3956 0200 5A00     		lsls	r2, r3, #1
 3957 0202 1423     		movs	r3, #20
 3958 0204 FB18     		adds	r3, r7, r3
 3959 0206 1A80     		strh	r2, [r3]
 485:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = dx - dy;
 3960              		.loc 6 485 0
 3961 0208 1423     		movs	r3, #20
 3962 020a FB18     		adds	r3, r7, r3
 3963 020c 1A88     		ldrh	r2, [r3]
 3964 020e 1623     		movs	r3, #22
 3965 0210 FB18     		adds	r3, r7, r3
 3966 0212 1B88     		ldrh	r3, [r3]
 3967 0214 D31A     		subs	r3, r2, r3
 3968 0216 9AB2     		uxth	r2, r3
 3969 0218 0E23     		movs	r3, #14
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 98


 3970 021a FB18     		adds	r3, r7, r3
 3971 021c 1A80     		strh	r2, [r3]
 486:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		diff = P - dy;
 3972              		.loc 6 486 0
 3973 021e 0E23     		movs	r3, #14
 3974 0220 FB18     		adds	r3, r7, r3
 3975 0222 1A88     		ldrh	r2, [r3]
 3976 0224 1623     		movs	r3, #22
 3977 0226 FB18     		adds	r3, r7, r3
 3978 0228 1B88     		ldrh	r3, [r3]
 3979 022a D31A     		subs	r3, r2, r3
 3980 022c 9AB2     		uxth	r2, r3
 3981 022e 0A23     		movs	r3, #10
 3982 0230 FB18     		adds	r3, r7, r3
 3983 0232 1A80     		strh	r2, [r3]
 487:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(i=0; i<=dy; ++i) {
 3984              		.loc 6 488 0
 3985 0234 0C23     		movs	r3, #12
 3986 0236 FB18     		adds	r3, r7, r3
 3987 0238 0022     		movs	r2, #0
 3988 023a 1A80     		strh	r2, [r3]
 3989 023c 4CE0     		b	.L276
 3990              	.L279:
 489:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 3991              		.loc 6 489 0
 3992 023e 7B68     		ldr	r3, [r7, #4]
 3993 0240 1800     		movs	r0, r3
 3994 0242 FFF7FEFF 		bl	drawpixel_clip
 490:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0) {
 3995              		.loc 6 490 0
 3996 0246 0E23     		movs	r3, #14
 3997 0248 FB18     		adds	r3, r7, r3
 3998 024a 0022     		movs	r2, #0
 3999 024c 9B5E     		ldrsh	r3, [r3, r2]
 4000 024e 002B     		cmp	r3, #0
 4001 0250 17DA     		bge	.L277
 491:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P  += dx;
 4002              		.loc 6 491 0
 4003 0252 0E23     		movs	r3, #14
 4004 0254 FB18     		adds	r3, r7, r3
 4005 0256 1A88     		ldrh	r2, [r3]
 4006 0258 1423     		movs	r3, #20
 4007 025a FB18     		adds	r3, r7, r3
 4008 025c 1B88     		ldrh	r3, [r3]
 4009 025e D318     		adds	r3, r2, r3
 4010 0260 9AB2     		uxth	r2, r3
 4011 0262 0E23     		movs	r3, #14
 4012 0264 FB18     		adds	r3, r7, r3
 4013 0266 1A80     		strh	r2, [r3]
 492:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y += addy;
 4014              		.loc 6 492 0
 4015 0268 7B68     		ldr	r3, [r7, #4]
 4016 026a 2A22     		movs	r2, #42
 4017 026c 9B5E     		ldrsh	r3, [r3, r2]
 4018 026e 9AB2     		uxth	r2, r3
 4019 0270 1023     		movs	r3, #16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 99


 4020 0272 FB18     		adds	r3, r7, r3
 4021 0274 1B88     		ldrh	r3, [r3]
 4022 0276 D318     		adds	r3, r2, r3
 4023 0278 9BB2     		uxth	r3, r3
 4024 027a 1AB2     		sxth	r2, r3
 4025 027c 7B68     		ldr	r3, [r7, #4]
 4026 027e 5A85     		strh	r2, [r3, #42]
 4027 0280 22E0     		b	.L278
 4028              	.L277:
 493:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
 494:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P  += diff;
 4029              		.loc 6 494 0
 4030 0282 0E23     		movs	r3, #14
 4031 0284 FB18     		adds	r3, r7, r3
 4032 0286 1A88     		ldrh	r2, [r3]
 4033 0288 0A23     		movs	r3, #10
 4034 028a FB18     		adds	r3, r7, r3
 4035 028c 1B88     		ldrh	r3, [r3]
 4036 028e D318     		adds	r3, r2, r3
 4037 0290 9AB2     		uxth	r2, r3
 4038 0292 0E23     		movs	r3, #14
 4039 0294 FB18     		adds	r3, r7, r3
 4040 0296 1A80     		strh	r2, [r3]
 495:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x += addx;
 4041              		.loc 6 495 0
 4042 0298 7B68     		ldr	r3, [r7, #4]
 4043 029a 2822     		movs	r2, #40
 4044 029c 9B5E     		ldrsh	r3, [r3, r2]
 4045 029e 9AB2     		uxth	r2, r3
 4046 02a0 1223     		movs	r3, #18
 4047 02a2 FB18     		adds	r3, r7, r3
 4048 02a4 1B88     		ldrh	r3, [r3]
 4049 02a6 D318     		adds	r3, r2, r3
 4050 02a8 9BB2     		uxth	r3, r3
 4051 02aa 1AB2     		sxth	r2, r3
 4052 02ac 7B68     		ldr	r3, [r7, #4]
 4053 02ae 1A85     		strh	r2, [r3, #40]
 496:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y += addy;
 4054              		.loc 6 496 0
 4055 02b0 7B68     		ldr	r3, [r7, #4]
 4056 02b2 2A22     		movs	r2, #42
 4057 02b4 9B5E     		ldrsh	r3, [r3, r2]
 4058 02b6 9AB2     		uxth	r2, r3
 4059 02b8 1023     		movs	r3, #16
 4060 02ba FB18     		adds	r3, r7, r3
 4061 02bc 1B88     		ldrh	r3, [r3]
 4062 02be D318     		adds	r3, r2, r3
 4063 02c0 9BB2     		uxth	r3, r3
 4064 02c2 1AB2     		sxth	r2, r3
 4065 02c4 7B68     		ldr	r3, [r7, #4]
 4066 02c6 5A85     		strh	r2, [r3, #42]
 4067              	.L278:
 488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 4068              		.loc 6 488 0 discriminator 2
 4069 02c8 0C23     		movs	r3, #12
 4070 02ca FB18     		adds	r3, r7, r3
 4071 02cc 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 100


 4072 02ce 0133     		adds	r3, r3, #1
 4073 02d0 9AB2     		uxth	r2, r3
 4074 02d2 0C23     		movs	r3, #12
 4075 02d4 FB18     		adds	r3, r7, r3
 4076 02d6 1A80     		strh	r2, [r3]
 4077              	.L276:
 488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			drawpixel_clip(g);
 4078              		.loc 6 488 0 is_stmt 0 discriminator 1
 4079 02d8 0C23     		movs	r3, #12
 4080 02da FA18     		adds	r2, r7, r3
 4081 02dc 1623     		movs	r3, #22
 4082 02de FB18     		adds	r3, r7, r3
 4083 02e0 0021     		movs	r1, #0
 4084 02e2 525E     		ldrsh	r2, [r2, r1]
 4085 02e4 0021     		movs	r1, #0
 4086 02e6 5B5E     		ldrsh	r3, [r3, r1]
 4087 02e8 9A42     		cmp	r2, r3
 4088 02ea A8DD     		ble	.L279
 4089              	.L263:
 497:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 498:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 499:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 500:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4090              		.loc 6 500 0 is_stmt 1
 4091 02ec BD46     		mov	sp, r7
 4092 02ee 06B0     		add	sp, sp, #24
 4093              		@ sp needed
 4094 02f0 80BD     		pop	{r7, pc}
 4095              		.cfi_endproc
 4096              	.LFE51:
 4097              		.size	line_clip, .-line_clip
 4098 02f2 C046     		.bss
 4099              	gdispInitDone:
 4100 00a4 00       		.space	1
 4101              		.section	.text.StartupLogoDisplay,"ax",%progbits
 4102              		.align	2
 4103              		.code	16
 4104              		.thumb_func
 4105              		.type	StartupLogoDisplay, %function
 4106              	StartupLogoDisplay:
 4107              	.LFB52:
 501:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 502:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_STARTUP_LOGO_TIMEOUT > 0
 503:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static bool_t	gdispInitDone;
 504:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static void StartupLogoDisplay(GDisplay *g) {
 4108              		.loc 6 504 0
 4109              		.cfi_startproc
 4110              		@ args = 0, pretend = 0, frame = 24
 4111              		@ frame_needed = 1, uses_anonymous_args = 0
 4112 0000 B0B5     		push	{r4, r5, r7, lr}
 4113              		.cfi_def_cfa_offset 16
 4114              		.cfi_offset 4, -16
 4115              		.cfi_offset 5, -12
 4116              		.cfi_offset 7, -8
 4117              		.cfi_offset 14, -4
 4118 0002 88B0     		sub	sp, sp, #32
 4119              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 101


 4120 0004 02AF     		add	r7, sp, #8
 4121              		.cfi_def_cfa 7, 40
 4122 0006 7860     		str	r0, [r7, #4]
 505:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t			x, y, w;
 506:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		const coord_t *	p;
 507:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static const coord_t blks[] = {
 508:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// u
 509:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				2, 6, 1, 10,
 510:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				3, 11, 4, 1,
 511:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				6, 6, 1, 6,
 512:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// G
 513:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				8, 0, 1, 12,
 514:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				9, 0, 6, 1,
 515:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				9, 11, 6, 1,
 516:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				14, 6, 1, 5,
 517:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				12, 6, 2, 1,
 518:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// F
 519:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				16, 0, 1, 12,
 520:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				17, 0, 6, 1,
 521:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				17, 6, 3, 1,
 522:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// X
 523:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				22, 6, 7, 1,
 524:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				24, 0, 1, 6,
 525:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				22, 7, 1, 5,
 526:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				28, 0, 1, 6,
 527:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				26, 7, 1, 5,
 528:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		};
 529:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 530:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Get a starting position and a scale
 531:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Work on a 8x16 grid for each char, 4 chars (uGFX) in 1 line, using half the screen
 532:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		w = g->g.Width/(8*4*2);
 4123              		.loc 6 532 0
 4124 0008 7B68     		ldr	r3, [r7, #4]
 4125 000a 0822     		movs	r2, #8
 4126 000c 9B5E     		ldrsh	r3, [r3, r2]
 4127 000e 1622     		movs	r2, #22
 4128 0010 BA18     		adds	r2, r7, r2
 4129 0012 002B     		cmp	r3, #0
 4130 0014 00DA     		bge	.L281
 4131 0016 3F33     		adds	r3, r3, #63
 4132              	.L281:
 4133 0018 9B11     		asrs	r3, r3, #6
 4134 001a 1380     		strh	r3, [r2]
 533:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!w) w = 1;
 4135              		.loc 6 533 0
 4136 001c 1623     		movs	r3, #22
 4137 001e FB18     		adds	r3, r7, r3
 4138 0020 0022     		movs	r2, #0
 4139 0022 9B5E     		ldrsh	r3, [r3, r2]
 4140 0024 002B     		cmp	r3, #0
 4141 0026 03D1     		bne	.L282
 4142              		.loc 6 533 0 is_stmt 0 discriminator 1
 4143 0028 1623     		movs	r3, #22
 4144 002a FB18     		adds	r3, r7, r3
 4145 002c 0122     		movs	r2, #1
 4146 002e 1A80     		strh	r2, [r3]
 4147              	.L282:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 102


 534:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		x = (g->g.Width - (8*4)*w)/2;
 4148              		.loc 6 534 0 is_stmt 1
 4149 0030 7B68     		ldr	r3, [r7, #4]
 4150 0032 0822     		movs	r2, #8
 4151 0034 9B5E     		ldrsh	r3, [r3, r2]
 4152 0036 1A00     		movs	r2, r3
 4153 0038 1623     		movs	r3, #22
 4154 003a FB18     		adds	r3, r7, r3
 4155 003c 0021     		movs	r1, #0
 4156 003e 5B5E     		ldrsh	r3, [r3, r1]
 4157 0040 5B01     		lsls	r3, r3, #5
 4158 0042 D31A     		subs	r3, r2, r3
 4159 0044 00D5     		bpl	.L283
 4160 0046 0133     		adds	r3, r3, #1
 4161              	.L283:
 4162 0048 5B10     		asrs	r3, r3, #1
 4163 004a 1A00     		movs	r2, r3
 4164 004c 0E23     		movs	r3, #14
 4165 004e FB18     		adds	r3, r7, r3
 4166 0050 1A80     		strh	r2, [r3]
 535:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		y = (g->g.Height - (16*1)*w)/2;
 4167              		.loc 6 535 0
 4168 0052 7B68     		ldr	r3, [r7, #4]
 4169 0054 0A22     		movs	r2, #10
 4170 0056 9B5E     		ldrsh	r3, [r3, r2]
 4171 0058 1A00     		movs	r2, r3
 4172 005a 1623     		movs	r3, #22
 4173 005c FB18     		adds	r3, r7, r3
 4174 005e 0021     		movs	r1, #0
 4175 0060 5B5E     		ldrsh	r3, [r3, r1]
 4176 0062 1B01     		lsls	r3, r3, #4
 4177 0064 D31A     		subs	r3, r2, r3
 4178 0066 00D5     		bpl	.L284
 4179 0068 0133     		adds	r3, r3, #1
 4180              	.L284:
 4181 006a 5B10     		asrs	r3, r3, #1
 4182 006c 1A00     		movs	r2, r3
 4183 006e 0C23     		movs	r3, #12
 4184 0070 FB18     		adds	r3, r7, r3
 4185 0072 1A80     		strh	r2, [r3]
 536:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 537:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Simple but crude!
 538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(p = blks; p < blks+sizeof(blks)/sizeof(blks[0]); p+=4)
 4186              		.loc 6 538 0
 4187 0074 254B     		ldr	r3, .L287
 4188 0076 3B61     		str	r3, [r7, #16]
 4189 0078 3FE0     		b	.L285
 4190              	.L286:
 539:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArea(g, x+p[0]*w, y+p[1]*w, p[2]*w, p[3]*w, GDISP_STARTUP_LOGO_COLOR);
 4191              		.loc 6 539 0 discriminator 3
 4192 007a 3B69     		ldr	r3, [r7, #16]
 4193 007c 0022     		movs	r2, #0
 4194 007e 9B5E     		ldrsh	r3, [r3, r2]
 4195 0080 9BB2     		uxth	r3, r3
 4196 0082 1622     		movs	r2, #22
 4197 0084 BA18     		adds	r2, r7, r2
 4198 0086 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 103


 4199 0088 5343     		muls	r3, r2
 4200 008a 9AB2     		uxth	r2, r3
 4201 008c 0E23     		movs	r3, #14
 4202 008e FB18     		adds	r3, r7, r3
 4203 0090 1B88     		ldrh	r3, [r3]
 4204 0092 D318     		adds	r3, r2, r3
 4205 0094 9BB2     		uxth	r3, r3
 4206 0096 19B2     		sxth	r1, r3
 4207 0098 3B69     		ldr	r3, [r7, #16]
 4208 009a 0233     		adds	r3, r3, #2
 4209 009c 0022     		movs	r2, #0
 4210 009e 9B5E     		ldrsh	r3, [r3, r2]
 4211 00a0 9BB2     		uxth	r3, r3
 4212 00a2 1622     		movs	r2, #22
 4213 00a4 BA18     		adds	r2, r7, r2
 4214 00a6 1288     		ldrh	r2, [r2]
 4215 00a8 5343     		muls	r3, r2
 4216 00aa 9AB2     		uxth	r2, r3
 4217 00ac 0C23     		movs	r3, #12
 4218 00ae FB18     		adds	r3, r7, r3
 4219 00b0 1B88     		ldrh	r3, [r3]
 4220 00b2 D318     		adds	r3, r2, r3
 4221 00b4 9BB2     		uxth	r3, r3
 4222 00b6 1CB2     		sxth	r4, r3
 4223 00b8 3B69     		ldr	r3, [r7, #16]
 4224 00ba 0433     		adds	r3, r3, #4
 4225 00bc 0022     		movs	r2, #0
 4226 00be 9B5E     		ldrsh	r3, [r3, r2]
 4227 00c0 9BB2     		uxth	r3, r3
 4228 00c2 1622     		movs	r2, #22
 4229 00c4 BA18     		adds	r2, r7, r2
 4230 00c6 1288     		ldrh	r2, [r2]
 4231 00c8 5343     		muls	r3, r2
 4232 00ca 9BB2     		uxth	r3, r3
 4233 00cc 1DB2     		sxth	r5, r3
 4234 00ce 3B69     		ldr	r3, [r7, #16]
 4235 00d0 0633     		adds	r3, r3, #6
 4236 00d2 0022     		movs	r2, #0
 4237 00d4 9B5E     		ldrsh	r3, [r3, r2]
 4238 00d6 9BB2     		uxth	r3, r3
 4239 00d8 1622     		movs	r2, #22
 4240 00da BA18     		adds	r2, r7, r2
 4241 00dc 1288     		ldrh	r2, [r2]
 4242 00de 5343     		muls	r3, r2
 4243 00e0 9BB2     		uxth	r3, r3
 4244 00e2 1BB2     		sxth	r3, r3
 4245 00e4 7868     		ldr	r0, [r7, #4]
 4246 00e6 0A4A     		ldr	r2, .L287+4
 4247 00e8 0192     		str	r2, [sp, #4]
 4248 00ea 0093     		str	r3, [sp]
 4249 00ec 2B00     		movs	r3, r5
 4250 00ee 2200     		movs	r2, r4
 4251 00f0 FFF7FEFF 		bl	gdispGFillArea
 538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArea(g, x+p[0]*w, y+p[1]*w, p[2]*w, p[3]*w, GDISP_STARTUP_LOGO_COLOR);
 4252              		.loc 6 538 0 discriminator 3
 4253 00f4 3B69     		ldr	r3, [r7, #16]
 4254 00f6 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 104


 4255 00f8 3B61     		str	r3, [r7, #16]
 4256              	.L285:
 538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArea(g, x+p[0]*w, y+p[1]*w, p[2]*w, p[3]*w, GDISP_STARTUP_LOGO_COLOR);
 4257              		.loc 6 538 0 is_stmt 0 discriminator 1
 4258 00fa 064B     		ldr	r3, .L287+8
 4259 00fc 3A69     		ldr	r2, [r7, #16]
 4260 00fe 9A42     		cmp	r2, r3
 4261 0100 BBD3     		bcc	.L286
 540:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 4262              		.loc 6 540 0 is_stmt 1
 4263 0102 C046     		nop
 4264 0104 BD46     		mov	sp, r7
 4265 0106 06B0     		add	sp, sp, #24
 4266              		@ sp needed
 4267 0108 B0BD     		pop	{r4, r5, r7, pc}
 4268              	.L288:
 4269 010a C046     		.align	2
 4270              	.L287:
 4271 010c 00000000 		.word	blks.5782
 4272 0110 FFFF0000 		.word	65535
 4273 0114 80000000 		.word	blks.5782+128
 4274              		.cfi_endproc
 4275              	.LFE52:
 4276              		.size	StartupLogoDisplay, .-StartupLogoDisplay
 4277              		.section	.text._gdispInit,"ax",%progbits
 4278              		.align	2
 4279              		.global	_gdispInit
 4280              		.code	16
 4281              		.thumb_func
 4282              		.type	_gdispInit, %function
 4283              	_gdispInit:
 4284              	.LFB53:
 541:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
 542:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 543:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_TIMERFLUSH
 544:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static void FlushTimerFn(void *param) {
 545:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		GDisplay *	g;
 546:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		(void)		param;
 547:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 548:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(g = (GDisplay *)gdriverGetNext(GDRIVER_TYPE_DISPLAY, 0); g; g = (GDisplay *)gdriverGetNext(GD
 549:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFlush(g);
 550:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 551:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
 552:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 553:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
 554:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /* Driver exported functions.                                                */
 555:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
 556:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 557:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void _gdispInit(void)
 558:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** {
 4285              		.loc 6 558 0
 4286              		.cfi_startproc
 4287              		@ args = 0, pretend = 0, frame = 8
 4288              		@ frame_needed = 1, uses_anonymous_args = 0
 4289 0000 80B5     		push	{r7, lr}
 4290              		.cfi_def_cfa_offset 8
 4291              		.cfi_offset 7, -8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 105


 4292              		.cfi_offset 14, -4
 4293 0002 82B0     		sub	sp, sp, #8
 4294              		.cfi_def_cfa_offset 16
 4295 0004 00AF     		add	r7, sp, #0
 4296              		.cfi_def_cfa_register 7
 4297              	.LBB3:
 559:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// GDISP_DRIVER_LIST is defined - create each driver instance
 560:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if defined(GDISP_DRIVER_LIST)
 561:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 562:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			unsigned	i;
 563:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			typedef const GDISPVMT const GDISPVMTLIST[1];
 564:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 565:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			extern GDISPVMTLIST						  GDISP_DRIVER_LIST;
 566:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			static const GDISPVMT * const dclist[] = {GDISP_DRIVER_LIST};
 567:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 568:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(i = 0; i < sizeof(dclist)/sizeof(dclist[0]); i++) {
 569:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!(dclist[i]->d.flags & GDISP_VFLG_DYNAMICONLY))
 570:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdriverRegister(&dclist[i]->d, 0);
 571:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 572:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 573:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#elif GDISP_TOTAL_DISPLAYS > 1
 574:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 575:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			unsigned	i;
 576:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			extern const GDISPVMT const		GDISPVMT_OnlyOne[1];
 577:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 578:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!(GDISPVMT_OnlyOne->d.flags & GDISP_VFLG_DYNAMICONLY)) {
 579:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(i = 0; i < GDISP_TOTAL_DISPLAYS; i++)
 580:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdriverRegister(&GDISPVMT_OnlyOne->d, 0);
 581:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 582:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 583:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
 584:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 585:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			extern const GDISPVMT const		GDISPVMT_OnlyOne[1];
 586:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 587:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!(GDISPVMT_OnlyOne->d.flags & GDISP_VFLG_DYNAMICONLY))
 4298              		.loc 6 587 0
 4299 0006 164B     		ldr	r3, .L293
 4300 0008 5B88     		ldrh	r3, [r3, #2]
 4301 000a 1A00     		movs	r2, r3
 4302 000c 0123     		movs	r3, #1
 4303 000e 1340     		ands	r3, r2
 4304 0010 04D1     		bne	.L290
 588:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdriverRegister(&GDISPVMT_OnlyOne->d, 0);
 4305              		.loc 6 588 0
 4306 0012 134B     		ldr	r3, .L293
 4307 0014 0021     		movs	r1, #0
 4308 0016 1800     		movs	r0, r3
 4309 0018 FFF7FEFF 		bl	gdriverRegister
 4310              	.L290:
 4311              	.LBE3:
 4312              	.LBB4:
 589:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 590:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 591:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 592:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Re-clear the display after the timeout if we added the logo
 593:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_STARTUP_LOGO_TIMEOUT > 0
 594:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 106


 595:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			GDisplay	*g;
 596:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 597:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gfxSleepMilliseconds(GDISP_STARTUP_LOGO_TIMEOUT);
 4313              		.loc 6 597 0
 4314 001c FA23     		movs	r3, #250
 4315 001e 9B00     		lsls	r3, r3, #2
 4316 0020 1800     		movs	r0, r3
 4317 0022 FFF7FEFF 		bl	gfxSleepMilliseconds
 598:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(g = (GDisplay *)gdriverGetNext(GDRIVER_TYPE_DISPLAY, 0); g; g = (GDisplay *)gdriverGetNext(G
 4318              		.loc 6 599 0
 4319 0026 0021     		movs	r1, #0
 4320 0028 6720     		movs	r0, #103
 4321 002a FFF7FEFF 		bl	gdriverGetNext
 4322 002e 0300     		movs	r3, r0
 4323 0030 7B60     		str	r3, [r7, #4]
 4324 0032 0BE0     		b	.L291
 4325              	.L292:
 600:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdispGClear(g, GDISP_STARTUP_COLOR);
 4326              		.loc 6 600 0 discriminator 3
 4327 0034 7B68     		ldr	r3, [r7, #4]
 4328 0036 0021     		movs	r1, #0
 4329 0038 1800     		movs	r0, r3
 4330 003a FFF7FEFF 		bl	gdispGClear
 599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdispGClear(g, GDISP_STARTUP_COLOR);
 4331              		.loc 6 599 0 discriminator 3
 4332 003e 7B68     		ldr	r3, [r7, #4]
 4333 0040 1900     		movs	r1, r3
 4334 0042 6720     		movs	r0, #103
 4335 0044 FFF7FEFF 		bl	gdriverGetNext
 4336 0048 0300     		movs	r3, r0
 4337 004a 7B60     		str	r3, [r7, #4]
 4338              	.L291:
 599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdispGClear(g, GDISP_STARTUP_COLOR);
 4339              		.loc 6 599 0 is_stmt 0 discriminator 1
 4340 004c 7B68     		ldr	r3, [r7, #4]
 4341 004e 002B     		cmp	r3, #0
 4342 0050 F0D1     		bne	.L292
 601:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_FLUSH
 602:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdispGFlush(g);
 603:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
 604:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 605:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 606:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispInitDone = TRUE;
 4343              		.loc 6 606 0 is_stmt 1
 4344 0052 044B     		ldr	r3, .L293+4
 4345 0054 FF22     		movs	r2, #255
 4346 0056 1A70     		strb	r2, [r3]
 4347              	.LBE4:
 607:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 608:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 609:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 610:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Start the automatic timer flush (if required)
 611:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_NEED_TIMERFLUSH
 612:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gtimerInit(&FlushTimer);
 613:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gtimerStart(&FlushTimer, FlushTimerFn, 0, TRUE, GDISP_NEED_TIMERFLUSH);
 614:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 107


 615:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4348              		.loc 6 615 0
 4349 0058 C046     		nop
 4350 005a BD46     		mov	sp, r7
 4351 005c 02B0     		add	sp, sp, #8
 4352              		@ sp needed
 4353 005e 80BD     		pop	{r7, pc}
 4354              	.L294:
 4355              		.align	2
 4356              	.L293:
 4357 0060 00000000 		.word	GDISPVMT_OnlyOne
 4358 0064 A4000000 		.word	gdispInitDone
 4359              		.cfi_endproc
 4360              	.LFE53:
 4361              		.size	_gdispInit, .-_gdispInit
 4362              		.section	.text._gdispDeinit,"ax",%progbits
 4363              		.align	2
 4364              		.global	_gdispDeinit
 4365              		.code	16
 4366              		.thumb_func
 4367              		.type	_gdispDeinit, %function
 4368              	_gdispDeinit:
 4369              	.LFB54:
 616:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 617:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void _gdispDeinit(void)
 618:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** {
 4370              		.loc 6 618 0
 4371              		.cfi_startproc
 4372              		@ args = 0, pretend = 0, frame = 0
 4373              		@ frame_needed = 1, uses_anonymous_args = 0
 4374 0000 80B5     		push	{r7, lr}
 4375              		.cfi_def_cfa_offset 8
 4376              		.cfi_offset 7, -8
 4377              		.cfi_offset 14, -4
 4378 0002 00AF     		add	r7, sp, #0
 4379              		.cfi_def_cfa_register 7
 619:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	/* ToDo */
 620:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4380              		.loc 6 620 0
 4381 0004 C046     		nop
 4382 0006 BD46     		mov	sp, r7
 4383              		@ sp needed
 4384 0008 80BD     		pop	{r7, pc}
 4385              		.cfi_endproc
 4386              	.LFE54:
 4387              		.size	_gdispDeinit, .-_gdispDeinit
 4388              		.section	.text._gdispInitDriver,"ax",%progbits
 4389              		.align	2
 4390              		.global	_gdispInitDriver
 4391              		.code	16
 4392              		.thumb_func
 4393              		.type	_gdispInitDriver, %function
 4394              	_gdispInitDriver:
 4395              	.LFB55:
 621:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 622:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** bool_t _gdispInitDriver(GDriver *g, void *param, unsigned driverinstance, unsigned systeminstance) 
 4396              		.loc 6 622 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 108


 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 24
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400 0000 90B5     		push	{r4, r7, lr}
 4401              		.cfi_def_cfa_offset 12
 4402              		.cfi_offset 4, -12
 4403              		.cfi_offset 7, -8
 4404              		.cfi_offset 14, -4
 4405 0002 87B0     		sub	sp, sp, #28
 4406              		.cfi_def_cfa_offset 40
 4407 0004 00AF     		add	r7, sp, #0
 4408              		.cfi_def_cfa_register 7
 4409 0006 F860     		str	r0, [r7, #12]
 4410 0008 B960     		str	r1, [r7, #8]
 4411 000a 7A60     		str	r2, [r7, #4]
 4412 000c 3B60     		str	r3, [r7]
 623:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define		gd		((GDisplay *)g)
 624:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	bool_t		ret;
 625:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 626:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Intialise fields
 627:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	gd->systemdisplay = systeminstance;
 4413              		.loc 6 627 0
 4414 000e 3B68     		ldr	r3, [r7]
 4415 0010 DAB2     		uxtb	r2, r3
 4416 0012 FB68     		ldr	r3, [r7, #12]
 4417 0014 1A77     		strb	r2, [r3, #28]
 628:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	gd->controllerdisplay = driverinstance;
 4418              		.loc 6 628 0
 4419 0016 7B68     		ldr	r3, [r7, #4]
 4420 0018 DAB2     		uxtb	r2, r3
 4421 001a FB68     		ldr	r3, [r7, #12]
 4422 001c 5A77     		strb	r2, [r3, #29]
 629:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	gd->flags = 0;
 4423              		.loc 6 629 0
 4424 001e FB68     		ldr	r3, [r7, #12]
 4425 0020 0022     		movs	r2, #0
 4426 0022 DA83     		strh	r2, [r3, #30]
 630:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	gd->priv = param;
 4427              		.loc 6 630 0
 4428 0024 FB68     		ldr	r3, [r7, #12]
 4429 0026 BA68     		ldr	r2, [r7, #8]
 4430 0028 5A61     		str	r2, [r3, #20]
 631:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_INIT(gd);
 632:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 633:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Call the driver init
 634:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(gd);
 635:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	ret = gdisp_lld_init(gd);
 4431              		.loc 6 635 0
 4432 002a 1723     		movs	r3, #23
 4433 002c FC18     		adds	r4, r7, r3
 4434 002e FB68     		ldr	r3, [r7, #12]
 4435 0030 1800     		movs	r0, r3
 4436 0032 FFF7FEFF 		bl	gdisp_lld_init
 4437 0036 0300     		movs	r3, r0
 4438 0038 2370     		strb	r3, [r4]
 636:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_EXIT(gd);
 637:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	return ret;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 109


 4439              		.loc 6 637 0
 4440 003a 1723     		movs	r3, #23
 4441 003c FB18     		adds	r3, r7, r3
 4442 003e 1B78     		ldrb	r3, [r3]
 638:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 639:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#undef gd
 640:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4443              		.loc 6 640 0
 4444 0040 1800     		movs	r0, r3
 4445 0042 BD46     		mov	sp, r7
 4446 0044 07B0     		add	sp, sp, #28
 4447              		@ sp needed
 4448 0046 90BD     		pop	{r4, r7, pc}
 4449              		.cfi_endproc
 4450              	.LFE55:
 4451              		.size	_gdispInitDriver, .-_gdispInitDriver
 4452              		.section	.text._gdispPostInitDriver,"ax",%progbits
 4453              		.align	2
 4454              		.global	_gdispPostInitDriver
 4455              		.code	16
 4456              		.thumb_func
 4457              		.type	_gdispPostInitDriver, %function
 4458              	_gdispPostInitDriver:
 4459              	.LFB56:
 641:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 642:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void _gdispPostInitDriver(GDriver *g) {
 4460              		.loc 6 642 0
 4461              		.cfi_startproc
 4462              		@ args = 0, pretend = 0, frame = 8
 4463              		@ frame_needed = 1, uses_anonymous_args = 0
 4464 0000 80B5     		push	{r7, lr}
 4465              		.cfi_def_cfa_offset 8
 4466              		.cfi_offset 7, -8
 4467              		.cfi_offset 14, -4
 4468 0002 84B0     		sub	sp, sp, #16
 4469              		.cfi_def_cfa_offset 24
 4470 0004 02AF     		add	r7, sp, #8
 4471              		.cfi_def_cfa 7, 16
 4472 0006 7860     		str	r0, [r7, #4]
 643:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define		gd		((GDisplay *)g)
 644:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 645:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Set orientation, clip
 646:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if defined(GDISP_DEFAULT_ORIENTATION) && GDISP_NEED_CONTROL && GDISP_HARDWARE_CONTROL
 647:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_PIXMAP
 648:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Pixmaps should stay in their created orientation (at least initially)
 649:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!(gvmt(gd)->d.flags & GDISP_VFLG_PIXMAP))
 650:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 651:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGControl(gd, GDISP_CONTROL_ORIENTATION, (void *)GDISP_DEFAULT_ORIENTATION);
 652:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 653:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_NEED_VALIDATION || GDISP_NEED_CLIP
 654:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGSetClip(gd, 0, 0, gd->g.Width, gd->g.Height);
 4473              		.loc 6 654 0
 4474 0008 7B68     		ldr	r3, [r7, #4]
 4475 000a 0822     		movs	r2, #8
 4476 000c 9A5E     		ldrsh	r2, [r3, r2]
 4477 000e 7B68     		ldr	r3, [r7, #4]
 4478 0010 0A21     		movs	r1, #10
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 110


 4479 0012 5B5E     		ldrsh	r3, [r3, r1]
 4480 0014 7868     		ldr	r0, [r7, #4]
 4481 0016 0093     		str	r3, [sp]
 4482 0018 1300     		movs	r3, r2
 4483 001a 0022     		movs	r2, #0
 4484 001c 0021     		movs	r1, #0
 4485 001e FFF7FEFF 		bl	gdispGSetClip
 655:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 656:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 657:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Clear the Screen
 658:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	gdispGClear(gd, GDISP_STARTUP_COLOR);
 4486              		.loc 6 658 0
 4487 0022 7B68     		ldr	r3, [r7, #4]
 4488 0024 0021     		movs	r1, #0
 4489 0026 1800     		movs	r0, r3
 4490 0028 FFF7FEFF 		bl	gdispGClear
 659:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 660:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Display the startup logo if this is a static initialised display
 661:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_STARTUP_LOGO_TIMEOUT > 0
 662:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!gdispInitDone)
 4491              		.loc 6 662 0
 4492 002c 094B     		ldr	r3, .L302
 4493 002e 1B78     		ldrb	r3, [r3]
 4494 0030 002B     		cmp	r3, #0
 4495 0032 03D1     		bne	.L299
 663:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			StartupLogoDisplay(gd);
 4496              		.loc 6 663 0
 4497 0034 7B68     		ldr	r3, [r7, #4]
 4498 0036 1800     		movs	r0, r3
 4499 0038 FFF7FEFF 		bl	StartupLogoDisplay
 4500              	.L299:
 664:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 665:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 666:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Flush
 667:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FLUSH
 668:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGFlush(gd);
 669:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 670:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 671:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// If this is the first driver set GDISP
 672:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (!GDISP)
 4501              		.loc 6 672 0
 4502 003c 064B     		ldr	r3, .L302+4
 4503 003e 1B68     		ldr	r3, [r3]
 4504 0040 002B     		cmp	r3, #0
 4505 0042 02D1     		bne	.L301
 673:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		GDISP = gd;
 4506              		.loc 6 673 0
 4507 0044 044B     		ldr	r3, .L302+4
 4508 0046 7A68     		ldr	r2, [r7, #4]
 4509 0048 1A60     		str	r2, [r3]
 4510              	.L301:
 674:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 675:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#undef gd
 676:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4511              		.loc 6 676 0
 4512 004a C046     		nop
 4513 004c BD46     		mov	sp, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 111


 4514 004e 02B0     		add	sp, sp, #8
 4515              		@ sp needed
 4516 0050 80BD     		pop	{r7, pc}
 4517              	.L303:
 4518 0052 C046     		.align	2
 4519              	.L302:
 4520 0054 A4000000 		.word	gdispInitDone
 4521 0058 00000000 		.word	GDISP
 4522              		.cfi_endproc
 4523              	.LFE56:
 4524              		.size	_gdispPostInitDriver, .-_gdispPostInitDriver
 4525              		.section	.text._gdispDeInitDriver,"ax",%progbits
 4526              		.align	2
 4527              		.global	_gdispDeInitDriver
 4528              		.code	16
 4529              		.thumb_func
 4530              		.type	_gdispDeInitDriver, %function
 4531              	_gdispDeInitDriver:
 4532              	.LFB57:
 677:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 678:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void _gdispDeInitDriver(GDriver *g) {
 4533              		.loc 6 678 0
 4534              		.cfi_startproc
 4535              		@ args = 0, pretend = 0, frame = 8
 4536              		@ frame_needed = 1, uses_anonymous_args = 0
 4537 0000 80B5     		push	{r7, lr}
 4538              		.cfi_def_cfa_offset 8
 4539              		.cfi_offset 7, -8
 4540              		.cfi_offset 14, -4
 4541 0002 82B0     		sub	sp, sp, #8
 4542              		.cfi_def_cfa_offset 16
 4543 0004 00AF     		add	r7, sp, #0
 4544              		.cfi_def_cfa_register 7
 4545 0006 7860     		str	r0, [r7, #4]
 679:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define		gd		((GDisplay *)g)
 680:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 681:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (GDISP == gd)
 4546              		.loc 6 681 0
 4547 0008 074B     		ldr	r3, .L307
 4548 000a 1A68     		ldr	r2, [r3]
 4549 000c 7B68     		ldr	r3, [r7, #4]
 4550 000e 9A42     		cmp	r2, r3
 4551 0010 06D1     		bne	.L306
 682:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		GDISP = (GDisplay *)gdriverGetInstance(GDRIVER_TYPE_DISPLAY, 0);
 4552              		.loc 6 682 0
 4553 0012 0021     		movs	r1, #0
 4554 0014 6720     		movs	r0, #103
 4555 0016 FFF7FEFF 		bl	gdriverGetInstance
 4556 001a 0200     		movs	r2, r0
 4557 001c 024B     		ldr	r3, .L307
 4558 001e 1A60     		str	r2, [r3]
 4559              	.L306:
 683:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 684:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_DEINIT
 685:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_DEINIT == HARDWARE_AUTODETECT
 686:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(gd)->deinit)
 687:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 112


 688:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 689:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_ENTER(gd);
 690:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_deinit(gd);
 691:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(gd);
 692:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 693:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 694:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_DEINIT(gd);
 695:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 696:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#undef gd
 697:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4560              		.loc 6 697 0
 4561 0020 C046     		nop
 4562 0022 BD46     		mov	sp, r7
 4563 0024 02B0     		add	sp, sp, #8
 4564              		@ sp needed
 4565 0026 80BD     		pop	{r7, pc}
 4566              	.L308:
 4567              		.align	2
 4568              	.L307:
 4569 0028 00000000 		.word	GDISP
 4570              		.cfi_endproc
 4571              	.LFE57:
 4572              		.size	_gdispDeInitDriver, .-_gdispDeInitDriver
 4573              		.section	.text.gdispGetDisplay,"ax",%progbits
 4574              		.align	2
 4575              		.global	gdispGetDisplay
 4576              		.code	16
 4577              		.thumb_func
 4578              		.type	gdispGetDisplay, %function
 4579              	gdispGetDisplay:
 4580              	.LFB58:
 698:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 699:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** GDisplay *gdispGetDisplay(unsigned display) {
 4581              		.loc 6 699 0
 4582              		.cfi_startproc
 4583              		@ args = 0, pretend = 0, frame = 8
 4584              		@ frame_needed = 1, uses_anonymous_args = 0
 4585 0000 80B5     		push	{r7, lr}
 4586              		.cfi_def_cfa_offset 8
 4587              		.cfi_offset 7, -8
 4588              		.cfi_offset 14, -4
 4589 0002 82B0     		sub	sp, sp, #8
 4590              		.cfi_def_cfa_offset 16
 4591 0004 00AF     		add	r7, sp, #0
 4592              		.cfi_def_cfa_register 7
 4593 0006 7860     		str	r0, [r7, #4]
 700:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	return (GDisplay *)gdriverGetInstance(GDRIVER_TYPE_DISPLAY, display);
 4594              		.loc 6 700 0
 4595 0008 7B68     		ldr	r3, [r7, #4]
 4596 000a 1900     		movs	r1, r3
 4597 000c 6720     		movs	r0, #103
 4598 000e FFF7FEFF 		bl	gdriverGetInstance
 4599 0012 0300     		movs	r3, r0
 701:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4600              		.loc 6 701 0
 4601 0014 1800     		movs	r0, r3
 4602 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 113


 4603 0018 02B0     		add	sp, sp, #8
 4604              		@ sp needed
 4605 001a 80BD     		pop	{r7, pc}
 4606              		.cfi_endproc
 4607              	.LFE58:
 4608              		.size	gdispGetDisplay, .-gdispGetDisplay
 4609              		.section	.text.gdispSetDisplay,"ax",%progbits
 4610              		.align	2
 4611              		.global	gdispSetDisplay
 4612              		.code	16
 4613              		.thumb_func
 4614              		.type	gdispSetDisplay, %function
 4615              	gdispSetDisplay:
 4616              	.LFB59:
 702:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 703:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispSetDisplay(GDisplay *g) {
 4617              		.loc 6 703 0
 4618              		.cfi_startproc
 4619              		@ args = 0, pretend = 0, frame = 8
 4620              		@ frame_needed = 1, uses_anonymous_args = 0
 4621 0000 80B5     		push	{r7, lr}
 4622              		.cfi_def_cfa_offset 8
 4623              		.cfi_offset 7, -8
 4624              		.cfi_offset 14, -4
 4625 0002 82B0     		sub	sp, sp, #8
 4626              		.cfi_def_cfa_offset 16
 4627 0004 00AF     		add	r7, sp, #0
 4628              		.cfi_def_cfa_register 7
 4629 0006 7860     		str	r0, [r7, #4]
 704:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (g) GDISP = g;
 4630              		.loc 6 704 0
 4631 0008 7B68     		ldr	r3, [r7, #4]
 4632 000a 002B     		cmp	r3, #0
 4633 000c 02D0     		beq	.L313
 4634              		.loc 6 704 0 is_stmt 0 discriminator 1
 4635 000e 034B     		ldr	r3, .L314
 4636 0010 7A68     		ldr	r2, [r7, #4]
 4637 0012 1A60     		str	r2, [r3]
 4638              	.L313:
 705:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4639              		.loc 6 705 0 is_stmt 1
 4640 0014 C046     		nop
 4641 0016 BD46     		mov	sp, r7
 4642 0018 02B0     		add	sp, sp, #8
 4643              		@ sp needed
 4644 001a 80BD     		pop	{r7, pc}
 4645              	.L315:
 4646              		.align	2
 4647              	.L314:
 4648 001c 00000000 		.word	GDISP
 4649              		.cfi_endproc
 4650              	.LFE59:
 4651              		.size	gdispSetDisplay, .-gdispSetDisplay
 4652              		.section	.text.gdispGetDisplayCount,"ax",%progbits
 4653              		.align	2
 4654              		.global	gdispGetDisplayCount
 4655              		.code	16
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 114


 4656              		.thumb_func
 4657              		.type	gdispGetDisplayCount, %function
 4658              	gdispGetDisplayCount:
 4659              	.LFB60:
 706:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 707:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** unsigned gdispGetDisplayCount(void) {
 4660              		.loc 6 707 0
 4661              		.cfi_startproc
 4662              		@ args = 0, pretend = 0, frame = 0
 4663              		@ frame_needed = 1, uses_anonymous_args = 0
 4664 0000 80B5     		push	{r7, lr}
 4665              		.cfi_def_cfa_offset 8
 4666              		.cfi_offset 7, -8
 4667              		.cfi_offset 14, -4
 4668 0002 00AF     		add	r7, sp, #0
 4669              		.cfi_def_cfa_register 7
 708:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	return gdriverInstanceCount(GDRIVER_TYPE_DISPLAY);
 4670              		.loc 6 708 0
 4671 0004 6720     		movs	r0, #103
 4672 0006 FFF7FEFF 		bl	gdriverInstanceCount
 4673 000a 0300     		movs	r3, r0
 709:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4674              		.loc 6 709 0
 4675 000c 1800     		movs	r0, r3
 4676 000e BD46     		mov	sp, r7
 4677              		@ sp needed
 4678 0010 80BD     		pop	{r7, pc}
 4679              		.cfi_endproc
 4680              	.LFE60:
 4681              		.size	gdispGetDisplayCount, .-gdispGetDisplayCount
 4682 0012 C046     		.section	.text.gdispGGetWidth,"ax",%progbits
 4683              		.align	2
 4684              		.global	gdispGGetWidth
 4685              		.code	16
 4686              		.thumb_func
 4687              		.type	gdispGGetWidth, %function
 4688              	gdispGGetWidth:
 4689              	.LFB61:
 710:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 711:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** coord_t gdispGGetWidth(GDisplay *g)				{ return g->g.Width; }
 4690              		.loc 6 711 0
 4691              		.cfi_startproc
 4692              		@ args = 0, pretend = 0, frame = 8
 4693              		@ frame_needed = 1, uses_anonymous_args = 0
 4694 0000 80B5     		push	{r7, lr}
 4695              		.cfi_def_cfa_offset 8
 4696              		.cfi_offset 7, -8
 4697              		.cfi_offset 14, -4
 4698 0002 82B0     		sub	sp, sp, #8
 4699              		.cfi_def_cfa_offset 16
 4700 0004 00AF     		add	r7, sp, #0
 4701              		.cfi_def_cfa_register 7
 4702 0006 7860     		str	r0, [r7, #4]
 4703              		.loc 6 711 0
 4704 0008 7B68     		ldr	r3, [r7, #4]
 4705 000a 0822     		movs	r2, #8
 4706 000c 9B5E     		ldrsh	r3, [r3, r2]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 115


 4707 000e 1800     		movs	r0, r3
 4708 0010 BD46     		mov	sp, r7
 4709 0012 02B0     		add	sp, sp, #8
 4710              		@ sp needed
 4711 0014 80BD     		pop	{r7, pc}
 4712              		.cfi_endproc
 4713              	.LFE61:
 4714              		.size	gdispGGetWidth, .-gdispGGetWidth
 4715 0016 C046     		.section	.text.gdispGGetHeight,"ax",%progbits
 4716              		.align	2
 4717              		.global	gdispGGetHeight
 4718              		.code	16
 4719              		.thumb_func
 4720              		.type	gdispGGetHeight, %function
 4721              	gdispGGetHeight:
 4722              	.LFB62:
 712:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** coord_t gdispGGetHeight(GDisplay *g)			{ return g->g.Height; }
 4723              		.loc 6 712 0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 8
 4726              		@ frame_needed = 1, uses_anonymous_args = 0
 4727 0000 80B5     		push	{r7, lr}
 4728              		.cfi_def_cfa_offset 8
 4729              		.cfi_offset 7, -8
 4730              		.cfi_offset 14, -4
 4731 0002 82B0     		sub	sp, sp, #8
 4732              		.cfi_def_cfa_offset 16
 4733 0004 00AF     		add	r7, sp, #0
 4734              		.cfi_def_cfa_register 7
 4735 0006 7860     		str	r0, [r7, #4]
 4736              		.loc 6 712 0
 4737 0008 7B68     		ldr	r3, [r7, #4]
 4738 000a 0A22     		movs	r2, #10
 4739 000c 9B5E     		ldrsh	r3, [r3, r2]
 4740 000e 1800     		movs	r0, r3
 4741 0010 BD46     		mov	sp, r7
 4742 0012 02B0     		add	sp, sp, #8
 4743              		@ sp needed
 4744 0014 80BD     		pop	{r7, pc}
 4745              		.cfi_endproc
 4746              	.LFE62:
 4747              		.size	gdispGGetHeight, .-gdispGGetHeight
 4748 0016 C046     		.section	.text.gdispGGetPowerMode,"ax",%progbits
 4749              		.align	2
 4750              		.global	gdispGGetPowerMode
 4751              		.code	16
 4752              		.thumb_func
 4753              		.type	gdispGGetPowerMode, %function
 4754              	gdispGGetPowerMode:
 4755              	.LFB63:
 713:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** powermode_t gdispGGetPowerMode(GDisplay *g)		{ return g->g.Powermode; }
 4756              		.loc 6 713 0
 4757              		.cfi_startproc
 4758              		@ args = 0, pretend = 0, frame = 8
 4759              		@ frame_needed = 1, uses_anonymous_args = 0
 4760 0000 80B5     		push	{r7, lr}
 4761              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 116


 4762              		.cfi_offset 7, -8
 4763              		.cfi_offset 14, -4
 4764 0002 82B0     		sub	sp, sp, #8
 4765              		.cfi_def_cfa_offset 16
 4766 0004 00AF     		add	r7, sp, #0
 4767              		.cfi_def_cfa_register 7
 4768 0006 7860     		str	r0, [r7, #4]
 4769              		.loc 6 713 0
 4770 0008 7B68     		ldr	r3, [r7, #4]
 4771 000a 9B7B     		ldrb	r3, [r3, #14]
 4772 000c 1800     		movs	r0, r3
 4773 000e BD46     		mov	sp, r7
 4774 0010 02B0     		add	sp, sp, #8
 4775              		@ sp needed
 4776 0012 80BD     		pop	{r7, pc}
 4777              		.cfi_endproc
 4778              	.LFE63:
 4779              		.size	gdispGGetPowerMode, .-gdispGGetPowerMode
 4780              		.section	.text.gdispGGetOrientation,"ax",%progbits
 4781              		.align	2
 4782              		.global	gdispGGetOrientation
 4783              		.code	16
 4784              		.thumb_func
 4785              		.type	gdispGGetOrientation, %function
 4786              	gdispGGetOrientation:
 4787              	.LFB64:
 714:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** orientation_t gdispGGetOrientation(GDisplay *g)	{ return g->g.Orientation; }
 4788              		.loc 6 714 0
 4789              		.cfi_startproc
 4790              		@ args = 0, pretend = 0, frame = 8
 4791              		@ frame_needed = 1, uses_anonymous_args = 0
 4792 0000 80B5     		push	{r7, lr}
 4793              		.cfi_def_cfa_offset 8
 4794              		.cfi_offset 7, -8
 4795              		.cfi_offset 14, -4
 4796 0002 82B0     		sub	sp, sp, #8
 4797              		.cfi_def_cfa_offset 16
 4798 0004 00AF     		add	r7, sp, #0
 4799              		.cfi_def_cfa_register 7
 4800 0006 7860     		str	r0, [r7, #4]
 4801              		.loc 6 714 0
 4802 0008 7B68     		ldr	r3, [r7, #4]
 4803 000a 9B89     		ldrh	r3, [r3, #12]
 4804 000c 1800     		movs	r0, r3
 4805 000e BD46     		mov	sp, r7
 4806 0010 02B0     		add	sp, sp, #8
 4807              		@ sp needed
 4808 0012 80BD     		pop	{r7, pc}
 4809              		.cfi_endproc
 4810              	.LFE64:
 4811              		.size	gdispGGetOrientation, .-gdispGGetOrientation
 4812              		.section	.text.gdispGGetBacklight,"ax",%progbits
 4813              		.align	2
 4814              		.global	gdispGGetBacklight
 4815              		.code	16
 4816              		.thumb_func
 4817              		.type	gdispGGetBacklight, %function
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 117


 4818              	gdispGGetBacklight:
 4819              	.LFB65:
 715:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** uint8_t gdispGGetBacklight(GDisplay *g)			{ return g->g.Backlight; }
 4820              		.loc 6 715 0
 4821              		.cfi_startproc
 4822              		@ args = 0, pretend = 0, frame = 8
 4823              		@ frame_needed = 1, uses_anonymous_args = 0
 4824 0000 80B5     		push	{r7, lr}
 4825              		.cfi_def_cfa_offset 8
 4826              		.cfi_offset 7, -8
 4827              		.cfi_offset 14, -4
 4828 0002 82B0     		sub	sp, sp, #8
 4829              		.cfi_def_cfa_offset 16
 4830 0004 00AF     		add	r7, sp, #0
 4831              		.cfi_def_cfa_register 7
 4832 0006 7860     		str	r0, [r7, #4]
 4833              		.loc 6 715 0
 4834 0008 7B68     		ldr	r3, [r7, #4]
 4835 000a DB7B     		ldrb	r3, [r3, #15]
 4836 000c 1800     		movs	r0, r3
 4837 000e BD46     		mov	sp, r7
 4838 0010 02B0     		add	sp, sp, #8
 4839              		@ sp needed
 4840 0012 80BD     		pop	{r7, pc}
 4841              		.cfi_endproc
 4842              	.LFE65:
 4843              		.size	gdispGGetBacklight, .-gdispGGetBacklight
 4844              		.section	.text.gdispGGetContrast,"ax",%progbits
 4845              		.align	2
 4846              		.global	gdispGGetContrast
 4847              		.code	16
 4848              		.thumb_func
 4849              		.type	gdispGGetContrast, %function
 4850              	gdispGGetContrast:
 4851              	.LFB66:
 716:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** uint8_t gdispGGetContrast(GDisplay *g)			{ return g->g.Contrast; }
 4852              		.loc 6 716 0
 4853              		.cfi_startproc
 4854              		@ args = 0, pretend = 0, frame = 8
 4855              		@ frame_needed = 1, uses_anonymous_args = 0
 4856 0000 80B5     		push	{r7, lr}
 4857              		.cfi_def_cfa_offset 8
 4858              		.cfi_offset 7, -8
 4859              		.cfi_offset 14, -4
 4860 0002 82B0     		sub	sp, sp, #8
 4861              		.cfi_def_cfa_offset 16
 4862 0004 00AF     		add	r7, sp, #0
 4863              		.cfi_def_cfa_register 7
 4864 0006 7860     		str	r0, [r7, #4]
 4865              		.loc 6 716 0
 4866 0008 7B68     		ldr	r3, [r7, #4]
 4867 000a 1B7C     		ldrb	r3, [r3, #16]
 4868 000c 1800     		movs	r0, r3
 4869 000e BD46     		mov	sp, r7
 4870 0010 02B0     		add	sp, sp, #8
 4871              		@ sp needed
 4872 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 118


 4873              		.cfi_endproc
 4874              	.LFE66:
 4875              		.size	gdispGGetContrast, .-gdispGGetContrast
 4876              		.section	.text.gdispGFlush,"ax",%progbits
 4877              		.align	2
 4878              		.global	gdispGFlush
 4879              		.code	16
 4880              		.thumb_func
 4881              		.type	gdispGFlush, %function
 4882              	gdispGFlush:
 4883              	.LFB67:
 717:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 718:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGFlush(GDisplay *g) {
 4884              		.loc 6 718 0
 4885              		.cfi_startproc
 4886              		@ args = 0, pretend = 0, frame = 8
 4887              		@ frame_needed = 1, uses_anonymous_args = 0
 4888 0000 80B5     		push	{r7, lr}
 4889              		.cfi_def_cfa_offset 8
 4890              		.cfi_offset 7, -8
 4891              		.cfi_offset 14, -4
 4892 0002 82B0     		sub	sp, sp, #8
 4893              		.cfi_def_cfa_offset 16
 4894 0004 00AF     		add	r7, sp, #0
 4895              		.cfi_def_cfa_register 7
 4896 0006 7860     		str	r0, [r7, #4]
 719:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_FLUSH
 720:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FLUSH == HARDWARE_AUTODETECT
 721:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->flush)
 722:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 723:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
 724:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_ENTER(g);
 725:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_flush(g);
 726:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
 727:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 728:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
 729:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		(void) g;
 730:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
 731:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4897              		.loc 6 731 0
 4898 0008 C046     		nop
 4899 000a BD46     		mov	sp, r7
 4900 000c 02B0     		add	sp, sp, #8
 4901              		@ sp needed
 4902 000e 80BD     		pop	{r7, pc}
 4903              		.cfi_endproc
 4904              	.LFE67:
 4905              		.size	gdispGFlush, .-gdispGFlush
 4906              		.section	.text.gdispGDrawPixel,"ax",%progbits
 4907              		.align	2
 4908              		.global	gdispGDrawPixel
 4909              		.code	16
 4910              		.thumb_func
 4911              		.type	gdispGDrawPixel, %function
 4912              	gdispGDrawPixel:
 4913              	.LFB68:
 732:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 119


 733:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_STREAMING
 734:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGStreamStart(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy) {
 735:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
 736:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 737:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if NEED_CLIPPING
 738:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
 739:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!gvmt(g)->setclip)
 740:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 741:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Test if the area is valid - if not then exit
 742:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x < g->clipx0 || x+cx > g->clipx1 || y < g->clipy0 || y+cy > g->clipy1) {
 743:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
 744:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 745:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 746:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 747:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 748:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->flags |= GDISP_FLG_INSTREAM;
 749:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 750:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Best is hardware streaming
 751:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE
 752:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 753:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->writestart)
 754:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 755:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 756:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x;
 757:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y;
 758:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cx = cx;
 759:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cy = cy;
 760:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_start(g);
 761:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_STREAM_POS
 762:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
 763:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						if (gvmt(g)->writepos)
 764:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#endif
 765:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_pos(g);
 766:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
 767:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 768:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 769:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 770:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 771:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Worst - save the parameters and use pixel drawing and/or area fills
 772:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_DRAWPIXEL
 773:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// The following test is unneeded because we are guaranteed to have draw pixel if we don't have 
 774:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 775:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//	if (gvmt(g)->pixel)
 776:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//#endif
 777:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 778:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Use x,y as the current position, x1,y1 as the save position and x2,y2 as the end position, c
 779:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x1 = g->p.x = x;
 780:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y1 = g->p.y = y;
 781:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x2 = x + cx;
 782:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y2 = y + cy;
 783:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if (GDISP_LINEBUF_SIZE != 0 && GDISP_HARDWARE_BITFILLS) || GDISP_HARDWARE_FILLS
 784:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx = 0;
 785:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cy = 1;
 786:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
 787:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 788:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 789:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 120


 790:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 791:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Don't release the mutex as gdispStreamEnd() will do that.
 792:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 793:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 794:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGStreamColor(GDisplay *g, color_t color) {
 795:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if !GDISP_HARDWARE_STREAM_WRITE && GDISP_LINEBUF_SIZE != 0 && GDISP_HARDWARE_BITFILLS
 796:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			coord_t	 sx1, sy1;
 797:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 798:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 799:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Don't touch the mutex as we should already own it
 800:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 801:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Ignore this call if we are not streaming
 802:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!(g->flags & GDISP_FLG_INSTREAM))
 803:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 804:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 805:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Best is hardware streaming
 806:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE
 807:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 808:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->writestart)
 809:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 810:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 811:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.color = color;
 812:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 813:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 814:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 815:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 816:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 817:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Next best is to use bitfills with our line buffer
 818:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_LINEBUF_SIZE != 0 && GDISP_HARDWARE_BITFILLS
 819:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_BITFILLS == HARDWARE_AUTODETECT
 820:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->blit)
 821:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 822:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 823:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->linebuf[g->p.cx++] = color;
 824:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (g->p.cx >= GDISP_LINEBUF_SIZE) {
 825:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sx1 = g->p.x1;
 826:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sy1 = g->p.y1;
 827:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x1 = 0;
 828:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y1 = 0;
 829:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.ptr = (void *)g->linebuf;
 830:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_blit_area(g);
 831:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x1 = sx1;
 832:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y1 = sy1;
 833:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x += g->p.cx;
 834:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx = 0;
 835:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 836:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 837:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Just wrap at end-of-line and end-of-buffer
 838:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (g->p.x+g->p.cx >= g->p.x2) {
 839:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (g->p.cx) {
 840:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sx1 = g->p.x1;
 841:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sy1 = g->p.y1;
 842:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.x1 = 0;
 843:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y1 = 0;
 844:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.ptr = (void *)g->linebuf;
 845:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_blit_area(g);
 846:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.x1 = sx1;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 121


 847:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y1 = sy1;
 848:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.cx = 0;
 849:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
 850:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x = g->p.x1;
 851:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (++g->p.y >= g->p.y2)
 852:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = g->p.y1;
 853:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 854:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 855:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 856:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 857:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Only slightly better than drawing pixels is to look for runs and use fillarea
 858:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && (GDISP_LINEBUF_SIZE == 0 || GDISP_HARDWARE_BITFILLS !=
 859:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// We don't need to test for auto-detect on drawpixel as we know we have it because we don't hav
 860:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
 861:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->fill)
 862:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 863:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 864:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!g->p.cx || g->p.color == color) {
 865:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx++;
 866:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = color;
 867:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
 868:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (g->p.cx == 1)
 869:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_draw_pixel(g);
 870:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					else
 871:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_fill_area(g);
 872:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x += g->p.cx;
 873:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = color;
 874:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx = 1;
 875:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 876:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Just wrap at end-of-line and end-of-buffer
 877:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (g->p.x+g->p.cx >= g->p.x2) {
 878:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (g->p.cx) {
 879:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						if (g->p.cx == 1)
 880:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							gdisp_lld_draw_pixel(g);
 881:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						else
 882:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							gdisp_lld_fill_area(g);
 883:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.cx = 0;
 884:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
 885:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x = g->p.x1;
 886:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (++g->p.y >= g->p.y2)
 887:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = g->p.y1;
 888:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 889:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 890:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 891:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 892:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 893:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Worst is using pixel drawing
 894:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && (GDISP_LINEBUF_SIZE == 0 || GDISP_HARDWARE_BITFILLS !=
 895:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// The following test is unneeded because we are guaranteed to have draw pixel if we don't have 
 896:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
 897:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//	if (gvmt(g)->pixel)
 898:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			//#endif
 899:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 900:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.color = color;
 901:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_draw_pixel(g);
 902:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 903:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Just wrap at end-of-line and end-of-buffer
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 122


 904:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (++g->p.x >= g->p.x2) {
 905:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x = g->p.x1;
 906:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (++g->p.y >= g->p.y2)
 907:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = g->p.y1;
 908:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 909:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 910:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 911:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 912:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 913:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 914:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGStreamStop(GDisplay *g) {
 915:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Only release the mutex and end the stream if we are actually streaming.
 916:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!(g->flags & GDISP_FLG_INSTREAM))
 917:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 918:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 919:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Clear the flag
 920:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->flags &= ~GDISP_FLG_INSTREAM;
 921:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 922:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The cleanup below must match the streaming code above.
 923:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 924:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE
 925:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
 926:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->writestart)
 927:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 928:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 929:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_stop(g);
 930:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					autoflush_stopdone(g);
 931:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					MUTEX_EXIT(g);
 932:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					return;
 933:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 934:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 935:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 936:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_LINEBUF_SIZE != 0 && GDISP_HARDWARE_BITFILLS
 937:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_BITFILLS == HARDWARE_AUTODETECT
 938:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->blit)
 939:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 940:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 941:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (g->p.cx) {
 942:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x1 = 0;
 943:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y1 = 0;
 944:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.ptr = (void *)g->linebuf;
 945:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_blit_area(g);
 946:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 947:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush_stopdone(g);
 948:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
 949:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 950:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 951:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 952:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 953:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && (GDISP_LINEBUF_SIZE == 0 || GDISP_HARDWARE_BITFILLS !=
 954:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// We don't need to test for auto-detect on drawpixel as we know we have it because we don't hav
 955:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
 956:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->fill)
 957:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
 958:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 959:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (g->p.cx) {
 960:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (g->p.cx == 1)
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 123


 961:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_draw_pixel(g);
 962:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					else
 963:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_fill_area(g);
 964:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
 965:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush_stopdone(g);
 966:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
 967:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
 968:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 969:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 970:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 971:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE != TRUE && (GDISP_LINEBUF_SIZE == 0 || GDISP_HARDWARE_BITFILLS !=
 972:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
 973:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush_stopdone(g);
 974:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
 975:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
 976:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
 977:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 978:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
 979:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
 980:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGDrawPixel(GDisplay *g, coord_t x, coord_t y, color_t color) {
 4914              		.loc 6 980 0
 4915              		.cfi_startproc
 4916              		@ args = 0, pretend = 0, frame = 16
 4917              		@ frame_needed = 1, uses_anonymous_args = 0
 4918 0000 90B5     		push	{r4, r7, lr}
 4919              		.cfi_def_cfa_offset 12
 4920              		.cfi_offset 4, -12
 4921              		.cfi_offset 7, -8
 4922              		.cfi_offset 14, -4
 4923 0002 85B0     		sub	sp, sp, #20
 4924              		.cfi_def_cfa_offset 32
 4925 0004 00AF     		add	r7, sp, #0
 4926              		.cfi_def_cfa_register 7
 4927 0006 F860     		str	r0, [r7, #12]
 4928 0008 0C00     		movs	r4, r1
 4929 000a 1000     		movs	r0, r2
 4930 000c 1900     		movs	r1, r3
 4931 000e 0A23     		movs	r3, #10
 4932 0010 FB18     		adds	r3, r7, r3
 4933 0012 221C     		adds	r2, r4, #0
 4934 0014 1A80     		strh	r2, [r3]
 4935 0016 0823     		movs	r3, #8
 4936 0018 FB18     		adds	r3, r7, r3
 4937 001a 021C     		adds	r2, r0, #0
 4938 001c 1A80     		strh	r2, [r3]
 4939 001e BB1D     		adds	r3, r7, #6
 4940 0020 0A1C     		adds	r2, r1, #0
 4941 0022 1A80     		strh	r2, [r3]
 981:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
 982:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.x		= x;
 4942              		.loc 6 982 0
 4943 0024 FB68     		ldr	r3, [r7, #12]
 4944 0026 0A22     		movs	r2, #10
 4945 0028 BA18     		adds	r2, r7, r2
 4946 002a 1288     		ldrh	r2, [r2]
 4947 002c 1A85     		strh	r2, [r3, #40]
 983:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.y		= y;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 124


 4948              		.loc 6 983 0
 4949 002e FB68     		ldr	r3, [r7, #12]
 4950 0030 0822     		movs	r2, #8
 4951 0032 BA18     		adds	r2, r7, r2
 4952 0034 1288     		ldrh	r2, [r2]
 4953 0036 5A85     		strh	r2, [r3, #42]
 984:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.color	= color;
 4954              		.loc 6 984 0
 4955 0038 FB68     		ldr	r3, [r7, #12]
 4956 003a BA1D     		adds	r2, r7, #6
 4957 003c 1288     		ldrh	r2, [r2]
 4958 003e 1A87     		strh	r2, [r3, #56]
 985:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	drawpixel_clip(g);
 4959              		.loc 6 985 0
 4960 0040 FB68     		ldr	r3, [r7, #12]
 4961 0042 1800     		movs	r0, r3
 4962 0044 FFF7FEFF 		bl	drawpixel_clip
 986:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	autoflush(g);
 4963              		.loc 6 986 0
 4964 0048 FB68     		ldr	r3, [r7, #12]
 4965 004a DB8B     		ldrh	r3, [r3, #30]
 4966 004c 1A00     		movs	r2, r3
 4967 004e 0223     		movs	r3, #2
 4968 0050 1340     		ands	r3, r2
 4969 0052 0AD0     		beq	.L333
 4970              		.loc 6 986 0 is_stmt 0 discriminator 1
 4971 0054 FB68     		ldr	r3, [r7, #12]
 4972 0056 1800     		movs	r0, r3
 4973 0058 FFF7FEFF 		bl	gdisp_lld_write_stop
 4974 005c FB68     		ldr	r3, [r7, #12]
 4975 005e DB8B     		ldrh	r3, [r3, #30]
 4976 0060 0222     		movs	r2, #2
 4977 0062 9343     		bics	r3, r2
 4978 0064 9AB2     		uxth	r2, r3
 4979 0066 FB68     		ldr	r3, [r7, #12]
 4980 0068 DA83     		strh	r2, [r3, #30]
 4981              	.L333:
 987:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_EXIT(g);
 988:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 4982              		.loc 6 988 0 is_stmt 1
 4983 006a C046     		nop
 4984 006c BD46     		mov	sp, r7
 4985 006e 05B0     		add	sp, sp, #20
 4986              		@ sp needed
 4987 0070 90BD     		pop	{r4, r7, pc}
 4988              		.cfi_endproc
 4989              	.LFE68:
 4990              		.size	gdispGDrawPixel, .-gdispGDrawPixel
 4991 0072 C046     		.section	.text.gdispGDrawLine,"ax",%progbits
 4992              		.align	2
 4993              		.global	gdispGDrawLine
 4994              		.code	16
 4995              		.thumb_func
 4996              		.type	gdispGDrawLine, %function
 4997              	gdispGDrawLine:
 4998              	.LFB69:
 989:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 125


 990:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGDrawLine(GDisplay *g, coord_t x0, coord_t y0, coord_t x1, coord_t y1, color_t color) {
 4999              		.loc 6 990 0
 5000              		.cfi_startproc
 5001              		@ args = 8, pretend = 0, frame = 16
 5002              		@ frame_needed = 1, uses_anonymous_args = 0
 5003 0000 90B5     		push	{r4, r7, lr}
 5004              		.cfi_def_cfa_offset 12
 5005              		.cfi_offset 4, -12
 5006              		.cfi_offset 7, -8
 5007              		.cfi_offset 14, -4
 5008 0002 85B0     		sub	sp, sp, #20
 5009              		.cfi_def_cfa_offset 32
 5010 0004 00AF     		add	r7, sp, #0
 5011              		.cfi_def_cfa_register 7
 5012 0006 F860     		str	r0, [r7, #12]
 5013 0008 0C00     		movs	r4, r1
 5014 000a 1000     		movs	r0, r2
 5015 000c 1900     		movs	r1, r3
 5016 000e 0A23     		movs	r3, #10
 5017 0010 FB18     		adds	r3, r7, r3
 5018 0012 221C     		adds	r2, r4, #0
 5019 0014 1A80     		strh	r2, [r3]
 5020 0016 0823     		movs	r3, #8
 5021 0018 FB18     		adds	r3, r7, r3
 5022 001a 021C     		adds	r2, r0, #0
 5023 001c 1A80     		strh	r2, [r3]
 5024 001e BB1D     		adds	r3, r7, #6
 5025 0020 0A1C     		adds	r2, r1, #0
 5026 0022 1A80     		strh	r2, [r3]
 991:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
 992:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.x = x0;
 5027              		.loc 6 992 0
 5028 0024 FB68     		ldr	r3, [r7, #12]
 5029 0026 0A22     		movs	r2, #10
 5030 0028 BA18     		adds	r2, r7, r2
 5031 002a 1288     		ldrh	r2, [r2]
 5032 002c 1A85     		strh	r2, [r3, #40]
 993:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.y = y0;
 5033              		.loc 6 993 0
 5034 002e FB68     		ldr	r3, [r7, #12]
 5035 0030 0822     		movs	r2, #8
 5036 0032 BA18     		adds	r2, r7, r2
 5037 0034 1288     		ldrh	r2, [r2]
 5038 0036 5A85     		strh	r2, [r3, #42]
 994:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.x1 = x1;
 5039              		.loc 6 994 0
 5040 0038 FB68     		ldr	r3, [r7, #12]
 5041 003a BA1D     		adds	r2, r7, #6
 5042 003c 1288     		ldrh	r2, [r2]
 5043 003e 1A86     		strh	r2, [r3, #48]
 995:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.y1 = y1;
 5044              		.loc 6 995 0
 5045 0040 FB68     		ldr	r3, [r7, #12]
 5046 0042 2022     		movs	r2, #32
 5047 0044 BA18     		adds	r2, r7, r2
 5048 0046 1288     		ldrh	r2, [r2]
 5049 0048 5A86     		strh	r2, [r3, #50]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 126


 996:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.color = color;
 5050              		.loc 6 996 0
 5051 004a FB68     		ldr	r3, [r7, #12]
 5052 004c 2422     		movs	r2, #36
 5053 004e BA18     		adds	r2, r7, r2
 5054 0050 1288     		ldrh	r2, [r2]
 5055 0052 1A87     		strh	r2, [r3, #56]
 997:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	line_clip(g);
 5056              		.loc 6 997 0
 5057 0054 FB68     		ldr	r3, [r7, #12]
 5058 0056 1800     		movs	r0, r3
 5059 0058 FFF7FEFF 		bl	line_clip
 998:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	autoflush(g);
 5060              		.loc 6 998 0
 5061 005c FB68     		ldr	r3, [r7, #12]
 5062 005e DB8B     		ldrh	r3, [r3, #30]
 5063 0060 1A00     		movs	r2, r3
 5064 0062 0223     		movs	r3, #2
 5065 0064 1340     		ands	r3, r2
 5066 0066 0AD0     		beq	.L336
 5067              		.loc 6 998 0 is_stmt 0 discriminator 1
 5068 0068 FB68     		ldr	r3, [r7, #12]
 5069 006a 1800     		movs	r0, r3
 5070 006c FFF7FEFF 		bl	gdisp_lld_write_stop
 5071 0070 FB68     		ldr	r3, [r7, #12]
 5072 0072 DB8B     		ldrh	r3, [r3, #30]
 5073 0074 0222     		movs	r2, #2
 5074 0076 9343     		bics	r3, r2
 5075 0078 9AB2     		uxth	r2, r3
 5076 007a FB68     		ldr	r3, [r7, #12]
 5077 007c DA83     		strh	r2, [r3, #30]
 5078              	.L336:
 999:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_EXIT(g);
1000:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 5079              		.loc 6 1000 0 is_stmt 1
 5080 007e C046     		nop
 5081 0080 BD46     		mov	sp, r7
 5082 0082 05B0     		add	sp, sp, #20
 5083              		@ sp needed
 5084 0084 90BD     		pop	{r4, r7, pc}
 5085              		.cfi_endproc
 5086              	.LFE69:
 5087              		.size	gdispGDrawLine, .-gdispGDrawLine
 5088 0086 C046     		.section	.text.gdispGClear,"ax",%progbits
 5089              		.align	2
 5090              		.global	gdispGClear
 5091              		.code	16
 5092              		.thumb_func
 5093              		.type	gdispGClear, %function
 5094              	gdispGClear:
 5095              	.LFB70:
1001:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1002:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGClear(GDisplay *g, color_t color) {
 5096              		.loc 6 1002 0
 5097              		.cfi_startproc
 5098              		@ args = 0, pretend = 0, frame = 16
 5099              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 127


 5100 0000 80B5     		push	{r7, lr}
 5101              		.cfi_def_cfa_offset 8
 5102              		.cfi_offset 7, -8
 5103              		.cfi_offset 14, -4
 5104 0002 84B0     		sub	sp, sp, #16
 5105              		.cfi_def_cfa_offset 24
 5106 0004 00AF     		add	r7, sp, #0
 5107              		.cfi_def_cfa_register 7
 5108 0006 7860     		str	r0, [r7, #4]
 5109 0008 0A00     		movs	r2, r1
 5110 000a BB1C     		adds	r3, r7, #2
 5111 000c 1A80     		strh	r2, [r3]
 5112              	.LBB5:
1003:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Note - clear() ignores the clipping area. It clears the screen.
1004:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
1005:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1006:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware accelerated clear
1007:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_CLEARS
1008:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLEARS == HARDWARE_AUTODETECT
1009:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->clear)
1010:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1011:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1012:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.color = color;
1013:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_clear(g);
1014:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1015:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1016:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1017:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1018:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1019:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1020:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is hardware accelerated area fill
1021:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_CLEARS != TRUE && GDISP_HARDWARE_FILLS
1022:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
1023:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->fill)
1024:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1025:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1026:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = g->p.y = 0;
1027:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->g.Width;
1028:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = g->g.Height;
1029:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.color = color;
1030:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_fill_area(g);
1031:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1032:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1033:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1034:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1035:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1036:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1037:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is streaming
1038:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_CLEARS != TRUE && GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE
1039:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
1040:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writestart)
1041:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1042:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1043:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			uint32_t	area;
1044:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1045:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = g->p.y = 0;
 5113              		.loc 6 1045 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 128


 5114 000e 7B68     		ldr	r3, [r7, #4]
 5115 0010 0022     		movs	r2, #0
 5116 0012 5A85     		strh	r2, [r3, #42]
 5117 0014 7B68     		ldr	r3, [r7, #4]
 5118 0016 2A22     		movs	r2, #42
 5119 0018 9A5E     		ldrsh	r2, [r3, r2]
 5120 001a 7B68     		ldr	r3, [r7, #4]
 5121 001c 1A85     		strh	r2, [r3, #40]
1046:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = g->g.Width;
 5122              		.loc 6 1046 0
 5123 001e 7B68     		ldr	r3, [r7, #4]
 5124 0020 0822     		movs	r2, #8
 5125 0022 9A5E     		ldrsh	r2, [r3, r2]
 5126 0024 7B68     		ldr	r3, [r7, #4]
 5127 0026 9A85     		strh	r2, [r3, #44]
1047:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = g->g.Height;
 5128              		.loc 6 1047 0
 5129 0028 7B68     		ldr	r3, [r7, #4]
 5130 002a 0A22     		movs	r2, #10
 5131 002c 9A5E     		ldrsh	r2, [r3, r2]
 5132 002e 7B68     		ldr	r3, [r7, #4]
 5133 0030 DA85     		strh	r2, [r3, #46]
1048:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.color = color;
 5134              		.loc 6 1048 0
 5135 0032 7B68     		ldr	r3, [r7, #4]
 5136 0034 BA1C     		adds	r2, r7, #2
 5137 0036 1288     		ldrh	r2, [r2]
 5138 0038 1A87     		strh	r2, [r3, #56]
1049:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			area = (uint32_t)g->p.cx * g->p.cy;
 5139              		.loc 6 1049 0
 5140 003a 7B68     		ldr	r3, [r7, #4]
 5141 003c 2C22     		movs	r2, #44
 5142 003e 9B5E     		ldrsh	r3, [r3, r2]
 5143 0040 1A00     		movs	r2, r3
 5144 0042 7B68     		ldr	r3, [r7, #4]
 5145 0044 2E21     		movs	r1, #46
 5146 0046 5B5E     		ldrsh	r3, [r3, r1]
 5147 0048 5343     		muls	r3, r2
 5148 004a FB60     		str	r3, [r7, #12]
1050:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1051:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 5149              		.loc 6 1051 0
 5150 004c 7B68     		ldr	r3, [r7, #4]
 5151 004e 1800     		movs	r0, r3
 5152 0050 FFF7FEFF 		bl	gdisp_lld_write_start
1052:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
1053:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
1054:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (gvmt(g)->writepos)
1055:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
1056:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_pos(g);
 5153              		.loc 6 1056 0
 5154 0054 7B68     		ldr	r3, [r7, #4]
 5155 0056 1800     		movs	r0, r3
 5156 0058 FFF7FEFF 		bl	gdisp_lld_write_pos
1057:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
1058:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; area; area--)
 5157              		.loc 6 1058 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 129


 5158 005c 06E0     		b	.L338
 5159              	.L339:
1059:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 5160              		.loc 6 1059 0 discriminator 2
 5161 005e 7B68     		ldr	r3, [r7, #4]
 5162 0060 1800     		movs	r0, r3
 5163 0062 FFF7FEFF 		bl	gdisp_lld_write_color
1058:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 5164              		.loc 6 1058 0 discriminator 2
 5165 0066 FB68     		ldr	r3, [r7, #12]
 5166 0068 013B     		subs	r3, r3, #1
 5167 006a FB60     		str	r3, [r7, #12]
 5168              	.L338:
1058:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_color(g);
 5169              		.loc 6 1058 0 is_stmt 0 discriminator 1
 5170 006c FB68     		ldr	r3, [r7, #12]
 5171 006e 002B     		cmp	r3, #0
 5172 0070 F5D1     		bne	.L339
1060:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 5173              		.loc 6 1060 0 is_stmt 1
 5174 0072 7B68     		ldr	r3, [r7, #4]
 5175 0074 1800     		movs	r0, r3
 5176 0076 FFF7FEFF 		bl	gdisp_lld_write_stop
1061:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1062:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1063:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 5177              		.loc 6 1063 0
 5178 007a C046     		nop
 5179              	.LBE5:
1064:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1065:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1066:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1067:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is drawing pixels
1068:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_CLEARS != TRUE && GDISP_HARDWARE_FILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE !
1069:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have draw pixel if we don't have s
1070:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
1071:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->pixel)
1072:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
1073:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1074:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.color = color;
1075:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(g->p.y = 0; g->p.y < g->g.Height; g->p.y++)
1076:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = 0; g->p.x < g->g.Width; g->p.x++)
1077:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_draw_pixel(g);
1078:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1079:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1080:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1081:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1082:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1083:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 5180              		.loc 6 1083 0
 5181 007c BD46     		mov	sp, r7
 5182 007e 04B0     		add	sp, sp, #16
 5183              		@ sp needed
 5184 0080 80BD     		pop	{r7, pc}
 5185              		.cfi_endproc
 5186              	.LFE70:
 5187              		.size	gdispGClear, .-gdispGClear
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 130


 5188              		.section	.text.gdispGFillArea,"ax",%progbits
 5189              		.align	2
 5190              		.global	gdispGFillArea
 5191              		.code	16
 5192              		.thumb_func
 5193              		.type	gdispGFillArea, %function
 5194              	gdispGFillArea:
 5195              	.LFB71:
1084:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1085:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGFillArea(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, color_t color) {
 5196              		.loc 6 1085 0
 5197              		.cfi_startproc
 5198              		@ args = 8, pretend = 0, frame = 16
 5199              		@ frame_needed = 1, uses_anonymous_args = 0
 5200 0000 90B5     		push	{r4, r7, lr}
 5201              		.cfi_def_cfa_offset 12
 5202              		.cfi_offset 4, -12
 5203              		.cfi_offset 7, -8
 5204              		.cfi_offset 14, -4
 5205 0002 85B0     		sub	sp, sp, #20
 5206              		.cfi_def_cfa_offset 32
 5207 0004 00AF     		add	r7, sp, #0
 5208              		.cfi_def_cfa_register 7
 5209 0006 F860     		str	r0, [r7, #12]
 5210 0008 0C00     		movs	r4, r1
 5211 000a 1000     		movs	r0, r2
 5212 000c 1900     		movs	r1, r3
 5213 000e 0A23     		movs	r3, #10
 5214 0010 FB18     		adds	r3, r7, r3
 5215 0012 221C     		adds	r2, r4, #0
 5216 0014 1A80     		strh	r2, [r3]
 5217 0016 0823     		movs	r3, #8
 5218 0018 FB18     		adds	r3, r7, r3
 5219 001a 021C     		adds	r2, r0, #0
 5220 001c 1A80     		strh	r2, [r3]
 5221 001e BB1D     		adds	r3, r7, #6
 5222 0020 0A1C     		adds	r2, r1, #0
 5223 0022 1A80     		strh	r2, [r3]
1086:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
1087:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.x = x;
 5224              		.loc 6 1087 0
 5225 0024 FB68     		ldr	r3, [r7, #12]
 5226 0026 0A22     		movs	r2, #10
 5227 0028 BA18     		adds	r2, r7, r2
 5228 002a 1288     		ldrh	r2, [r2]
 5229 002c 1A85     		strh	r2, [r3, #40]
1088:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.y = y;
 5230              		.loc 6 1088 0
 5231 002e FB68     		ldr	r3, [r7, #12]
 5232 0030 0822     		movs	r2, #8
 5233 0032 BA18     		adds	r2, r7, r2
 5234 0034 1288     		ldrh	r2, [r2]
 5235 0036 5A85     		strh	r2, [r3, #42]
1089:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.cx = cx;
 5236              		.loc 6 1089 0
 5237 0038 FB68     		ldr	r3, [r7, #12]
 5238 003a BA1D     		adds	r2, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 131


 5239 003c 1288     		ldrh	r2, [r2]
 5240 003e 9A85     		strh	r2, [r3, #44]
1090:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.cy = cy;
 5241              		.loc 6 1090 0
 5242 0040 FB68     		ldr	r3, [r7, #12]
 5243 0042 2022     		movs	r2, #32
 5244 0044 BA18     		adds	r2, r7, r2
 5245 0046 1288     		ldrh	r2, [r2]
 5246 0048 DA85     		strh	r2, [r3, #46]
1091:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.color = color;
 5247              		.loc 6 1091 0
 5248 004a FB68     		ldr	r3, [r7, #12]
 5249 004c 2422     		movs	r2, #36
 5250 004e BA18     		adds	r2, r7, r2
 5251 0050 1288     		ldrh	r2, [r2]
 5252 0052 1A87     		strh	r2, [r3, #56]
1092:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	TEST_CLIP_AREA(g) {
 5253              		.loc 6 1092 0
 5254 0054 FB68     		ldr	r3, [r7, #12]
 5255 0056 2822     		movs	r2, #40
 5256 0058 9A5E     		ldrsh	r2, [r3, r2]
 5257 005a FB68     		ldr	r3, [r7, #12]
 5258 005c 2021     		movs	r1, #32
 5259 005e 5B5E     		ldrsh	r3, [r3, r1]
 5260 0060 9A42     		cmp	r2, r3
 5261 0062 17DA     		bge	.L342
 5262              		.loc 6 1092 0 is_stmt 0 discriminator 1
 5263 0064 FB68     		ldr	r3, [r7, #12]
 5264 0066 2C22     		movs	r2, #44
 5265 0068 9B5E     		ldrsh	r3, [r3, r2]
 5266 006a 9AB2     		uxth	r2, r3
 5267 006c FB68     		ldr	r3, [r7, #12]
 5268 006e 2821     		movs	r1, #40
 5269 0070 5B5E     		ldrsh	r3, [r3, r1]
 5270 0072 99B2     		uxth	r1, r3
 5271 0074 FB68     		ldr	r3, [r7, #12]
 5272 0076 2020     		movs	r0, #32
 5273 0078 1B5E     		ldrsh	r3, [r3, r0]
 5274 007a 9BB2     		uxth	r3, r3
 5275 007c CB1A     		subs	r3, r1, r3
 5276 007e 9BB2     		uxth	r3, r3
 5277 0080 D318     		adds	r3, r2, r3
 5278 0082 9BB2     		uxth	r3, r3
 5279 0084 1AB2     		sxth	r2, r3
 5280 0086 FB68     		ldr	r3, [r7, #12]
 5281 0088 9A85     		strh	r2, [r3, #44]
 5282 008a FB68     		ldr	r3, [r7, #12]
 5283 008c 2022     		movs	r2, #32
 5284 008e 9A5E     		ldrsh	r2, [r3, r2]
 5285 0090 FB68     		ldr	r3, [r7, #12]
 5286 0092 1A85     		strh	r2, [r3, #40]
 5287              	.L342:
 5288              		.loc 6 1092 0 discriminator 3
 5289 0094 FB68     		ldr	r3, [r7, #12]
 5290 0096 2A22     		movs	r2, #42
 5291 0098 9A5E     		ldrsh	r2, [r3, r2]
 5292 009a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 132


 5293 009c 2221     		movs	r1, #34
 5294 009e 5B5E     		ldrsh	r3, [r3, r1]
 5295 00a0 9A42     		cmp	r2, r3
 5296 00a2 17DA     		bge	.L343
 5297              		.loc 6 1092 0 discriminator 4
 5298 00a4 FB68     		ldr	r3, [r7, #12]
 5299 00a6 2E22     		movs	r2, #46
 5300 00a8 9B5E     		ldrsh	r3, [r3, r2]
 5301 00aa 9AB2     		uxth	r2, r3
 5302 00ac FB68     		ldr	r3, [r7, #12]
 5303 00ae 2A21     		movs	r1, #42
 5304 00b0 5B5E     		ldrsh	r3, [r3, r1]
 5305 00b2 99B2     		uxth	r1, r3
 5306 00b4 FB68     		ldr	r3, [r7, #12]
 5307 00b6 2220     		movs	r0, #34
 5308 00b8 1B5E     		ldrsh	r3, [r3, r0]
 5309 00ba 9BB2     		uxth	r3, r3
 5310 00bc CB1A     		subs	r3, r1, r3
 5311 00be 9BB2     		uxth	r3, r3
 5312 00c0 D318     		adds	r3, r2, r3
 5313 00c2 9BB2     		uxth	r3, r3
 5314 00c4 1AB2     		sxth	r2, r3
 5315 00c6 FB68     		ldr	r3, [r7, #12]
 5316 00c8 DA85     		strh	r2, [r3, #46]
 5317 00ca FB68     		ldr	r3, [r7, #12]
 5318 00cc 2222     		movs	r2, #34
 5319 00ce 9A5E     		ldrsh	r2, [r3, r2]
 5320 00d0 FB68     		ldr	r3, [r7, #12]
 5321 00d2 5A85     		strh	r2, [r3, #42]
 5322              	.L343:
 5323              		.loc 6 1092 0 discriminator 6
 5324 00d4 FB68     		ldr	r3, [r7, #12]
 5325 00d6 2822     		movs	r2, #40
 5326 00d8 9B5E     		ldrsh	r3, [r3, r2]
 5327 00da 1A00     		movs	r2, r3
 5328 00dc FB68     		ldr	r3, [r7, #12]
 5329 00de 2C21     		movs	r1, #44
 5330 00e0 5B5E     		ldrsh	r3, [r3, r1]
 5331 00e2 D318     		adds	r3, r2, r3
 5332 00e4 FA68     		ldr	r2, [r7, #12]
 5333 00e6 2421     		movs	r1, #36
 5334 00e8 525E     		ldrsh	r2, [r2, r1]
 5335 00ea 9342     		cmp	r3, r2
 5336 00ec 0CDD     		ble	.L344
 5337              		.loc 6 1092 0 discriminator 7
 5338 00ee FB68     		ldr	r3, [r7, #12]
 5339 00f0 2422     		movs	r2, #36
 5340 00f2 9B5E     		ldrsh	r3, [r3, r2]
 5341 00f4 9AB2     		uxth	r2, r3
 5342 00f6 FB68     		ldr	r3, [r7, #12]
 5343 00f8 2821     		movs	r1, #40
 5344 00fa 5B5E     		ldrsh	r3, [r3, r1]
 5345 00fc 9BB2     		uxth	r3, r3
 5346 00fe D31A     		subs	r3, r2, r3
 5347 0100 9BB2     		uxth	r3, r3
 5348 0102 1AB2     		sxth	r2, r3
 5349 0104 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 133


 5350 0106 9A85     		strh	r2, [r3, #44]
 5351              	.L344:
 5352              		.loc 6 1092 0 discriminator 9
 5353 0108 FB68     		ldr	r3, [r7, #12]
 5354 010a 2A22     		movs	r2, #42
 5355 010c 9B5E     		ldrsh	r3, [r3, r2]
 5356 010e 1A00     		movs	r2, r3
 5357 0110 FB68     		ldr	r3, [r7, #12]
 5358 0112 2E21     		movs	r1, #46
 5359 0114 5B5E     		ldrsh	r3, [r3, r1]
 5360 0116 D318     		adds	r3, r2, r3
 5361 0118 FA68     		ldr	r2, [r7, #12]
 5362 011a 2621     		movs	r1, #38
 5363 011c 525E     		ldrsh	r2, [r2, r1]
 5364 011e 9342     		cmp	r3, r2
 5365 0120 0CDD     		ble	.L345
 5366              		.loc 6 1092 0 discriminator 10
 5367 0122 FB68     		ldr	r3, [r7, #12]
 5368 0124 2622     		movs	r2, #38
 5369 0126 9B5E     		ldrsh	r3, [r3, r2]
 5370 0128 9AB2     		uxth	r2, r3
 5371 012a FB68     		ldr	r3, [r7, #12]
 5372 012c 2A21     		movs	r1, #42
 5373 012e 5B5E     		ldrsh	r3, [r3, r1]
 5374 0130 9BB2     		uxth	r3, r3
 5375 0132 D31A     		subs	r3, r2, r3
 5376 0134 9BB2     		uxth	r3, r3
 5377 0136 1AB2     		sxth	r2, r3
 5378 0138 FB68     		ldr	r3, [r7, #12]
 5379 013a DA85     		strh	r2, [r3, #46]
 5380              	.L345:
 5381              		.loc 6 1092 0 discriminator 12
 5382 013c FB68     		ldr	r3, [r7, #12]
 5383 013e 2C22     		movs	r2, #44
 5384 0140 9B5E     		ldrsh	r3, [r3, r2]
 5385 0142 002B     		cmp	r3, #0
 5386 0144 08DD     		ble	.L347
 5387              		.loc 6 1092 0 discriminator 13
 5388 0146 FB68     		ldr	r3, [r7, #12]
 5389 0148 2E22     		movs	r2, #46
 5390 014a 9B5E     		ldrsh	r3, [r3, r2]
 5391 014c 002B     		cmp	r3, #0
 5392 014e 03DD     		ble	.L347
1093:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		fillarea(g);
 5393              		.loc 6 1093 0 is_stmt 1
 5394 0150 FB68     		ldr	r3, [r7, #12]
 5395 0152 1800     		movs	r0, r3
 5396 0154 FFF7FEFF 		bl	fillarea
 5397              	.L347:
1094:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1095:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	autoflush_stopdone(g);
1096:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_EXIT(g);
1097:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 5398              		.loc 6 1097 0
 5399 0158 C046     		nop
 5400 015a BD46     		mov	sp, r7
 5401 015c 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 134


 5402              		@ sp needed
 5403 015e 90BD     		pop	{r4, r7, pc}
 5404              		.cfi_endproc
 5405              	.LFE71:
 5406              		.size	gdispGFillArea, .-gdispGFillArea
 5407              		.section	.text.gdispGBlitArea,"ax",%progbits
 5408              		.align	2
 5409              		.global	gdispGBlitArea
 5410              		.code	16
 5411              		.thumb_func
 5412              		.type	gdispGBlitArea, %function
 5413              	gdispGBlitArea:
 5414              	.LFB72:
1098:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1099:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGBlitArea(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, coord_t srcx, coord_
 5415              		.loc 6 1099 0
 5416              		.cfi_startproc
 5417              		@ args = 20, pretend = 0, frame = 16
 5418              		@ frame_needed = 1, uses_anonymous_args = 0
 5419 0000 90B5     		push	{r4, r7, lr}
 5420              		.cfi_def_cfa_offset 12
 5421              		.cfi_offset 4, -12
 5422              		.cfi_offset 7, -8
 5423              		.cfi_offset 14, -4
 5424 0002 85B0     		sub	sp, sp, #20
 5425              		.cfi_def_cfa_offset 32
 5426 0004 00AF     		add	r7, sp, #0
 5427              		.cfi_def_cfa_register 7
 5428 0006 F860     		str	r0, [r7, #12]
 5429 0008 0C00     		movs	r4, r1
 5430 000a 1000     		movs	r0, r2
 5431 000c 1900     		movs	r1, r3
 5432 000e 0A23     		movs	r3, #10
 5433 0010 FB18     		adds	r3, r7, r3
 5434 0012 221C     		adds	r2, r4, #0
 5435 0014 1A80     		strh	r2, [r3]
 5436 0016 0823     		movs	r3, #8
 5437 0018 FB18     		adds	r3, r7, r3
 5438 001a 021C     		adds	r2, r0, #0
 5439 001c 1A80     		strh	r2, [r3]
 5440 001e BB1D     		adds	r3, r7, #6
 5441 0020 0A1C     		adds	r2, r1, #0
 5442 0022 1A80     		strh	r2, [r3]
1100:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
1101:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1102:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if NEED_CLIPPING
1103:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
1104:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!gvmt(g)->setclip)
1105:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1106:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1107:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// This is a different clipping to fillarea(g) as it needs to take into account srcx,srcy
1108:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x < g->clipx0) { cx -= g->clipx0 - x; srcx += g->clipx0 - x; x = g->clipx0; }
 5443              		.loc 6 1108 0
 5444 0024 FB68     		ldr	r3, [r7, #12]
 5445 0026 2022     		movs	r2, #32
 5446 0028 9B5E     		ldrsh	r3, [r3, r2]
 5447 002a 0A22     		movs	r2, #10
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 135


 5448 002c BA18     		adds	r2, r7, r2
 5449 002e 0021     		movs	r1, #0
 5450 0030 525E     		ldrsh	r2, [r2, r1]
 5451 0032 9A42     		cmp	r2, r3
 5452 0034 24DA     		bge	.L349
 5453              		.loc 6 1108 0 is_stmt 0 discriminator 1
 5454 0036 0A23     		movs	r3, #10
 5455 0038 FB18     		adds	r3, r7, r3
 5456 003a 1A88     		ldrh	r2, [r3]
 5457 003c FB68     		ldr	r3, [r7, #12]
 5458 003e 2021     		movs	r1, #32
 5459 0040 5B5E     		ldrsh	r3, [r3, r1]
 5460 0042 9BB2     		uxth	r3, r3
 5461 0044 D31A     		subs	r3, r2, r3
 5462 0046 9AB2     		uxth	r2, r3
 5463 0048 BB1D     		adds	r3, r7, #6
 5464 004a 1B88     		ldrh	r3, [r3]
 5465 004c D318     		adds	r3, r2, r3
 5466 004e 9AB2     		uxth	r2, r3
 5467 0050 BB1D     		adds	r3, r7, #6
 5468 0052 1A80     		strh	r2, [r3]
 5469 0054 FB68     		ldr	r3, [r7, #12]
 5470 0056 2022     		movs	r2, #32
 5471 0058 9B5E     		ldrsh	r3, [r3, r2]
 5472 005a 9AB2     		uxth	r2, r3
 5473 005c 0A23     		movs	r3, #10
 5474 005e FB18     		adds	r3, r7, r3
 5475 0060 1B88     		ldrh	r3, [r3]
 5476 0062 D31A     		subs	r3, r2, r3
 5477 0064 9AB2     		uxth	r2, r3
 5478 0066 2423     		movs	r3, #36
 5479 0068 FB18     		adds	r3, r7, r3
 5480 006a 1B88     		ldrh	r3, [r3]
 5481 006c D318     		adds	r3, r2, r3
 5482 006e 9AB2     		uxth	r2, r3
 5483 0070 2423     		movs	r3, #36
 5484 0072 FB18     		adds	r3, r7, r3
 5485 0074 1A80     		strh	r2, [r3]
 5486 0076 0A23     		movs	r3, #10
 5487 0078 FB18     		adds	r3, r7, r3
 5488 007a FA68     		ldr	r2, [r7, #12]
 5489 007c 128C     		ldrh	r2, [r2, #32]
 5490 007e 1A80     		strh	r2, [r3]
 5491              	.L349:
1109:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (y < g->clipy0) { cy -= g->clipy0 - y; srcy += g->clipy0 - x; y = g->clipy0; }
 5492              		.loc 6 1109 0 is_stmt 1
 5493 0080 FB68     		ldr	r3, [r7, #12]
 5494 0082 2222     		movs	r2, #34
 5495 0084 9B5E     		ldrsh	r3, [r3, r2]
 5496 0086 0822     		movs	r2, #8
 5497 0088 BA18     		adds	r2, r7, r2
 5498 008a 0021     		movs	r1, #0
 5499 008c 525E     		ldrsh	r2, [r2, r1]
 5500 008e 9A42     		cmp	r2, r3
 5501 0090 26DA     		bge	.L350
 5502              		.loc 6 1109 0 is_stmt 0 discriminator 1
 5503 0092 0823     		movs	r3, #8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 136


 5504 0094 FB18     		adds	r3, r7, r3
 5505 0096 1A88     		ldrh	r2, [r3]
 5506 0098 FB68     		ldr	r3, [r7, #12]
 5507 009a 2221     		movs	r1, #34
 5508 009c 5B5E     		ldrsh	r3, [r3, r1]
 5509 009e 9BB2     		uxth	r3, r3
 5510 00a0 D31A     		subs	r3, r2, r3
 5511 00a2 9AB2     		uxth	r2, r3
 5512 00a4 2023     		movs	r3, #32
 5513 00a6 FB18     		adds	r3, r7, r3
 5514 00a8 1B88     		ldrh	r3, [r3]
 5515 00aa D318     		adds	r3, r2, r3
 5516 00ac 9AB2     		uxth	r2, r3
 5517 00ae 2023     		movs	r3, #32
 5518 00b0 FB18     		adds	r3, r7, r3
 5519 00b2 1A80     		strh	r2, [r3]
 5520 00b4 FB68     		ldr	r3, [r7, #12]
 5521 00b6 2222     		movs	r2, #34
 5522 00b8 9B5E     		ldrsh	r3, [r3, r2]
 5523 00ba 9AB2     		uxth	r2, r3
 5524 00bc 0A23     		movs	r3, #10
 5525 00be FB18     		adds	r3, r7, r3
 5526 00c0 1B88     		ldrh	r3, [r3]
 5527 00c2 D31A     		subs	r3, r2, r3
 5528 00c4 9AB2     		uxth	r2, r3
 5529 00c6 2823     		movs	r3, #40
 5530 00c8 FB18     		adds	r3, r7, r3
 5531 00ca 1B88     		ldrh	r3, [r3]
 5532 00cc D318     		adds	r3, r2, r3
 5533 00ce 9AB2     		uxth	r2, r3
 5534 00d0 2823     		movs	r3, #40
 5535 00d2 FB18     		adds	r3, r7, r3
 5536 00d4 1A80     		strh	r2, [r3]
 5537 00d6 0823     		movs	r3, #8
 5538 00d8 FB18     		adds	r3, r7, r3
 5539 00da FA68     		ldr	r2, [r7, #12]
 5540 00dc 528C     		ldrh	r2, [r2, #34]
 5541 00de 1A80     		strh	r2, [r3]
 5542              	.L350:
1110:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x+cx > g->clipx1)	cx = g->clipx1 - x;
 5543              		.loc 6 1110 0 is_stmt 1
 5544 00e0 0A23     		movs	r3, #10
 5545 00e2 FB18     		adds	r3, r7, r3
 5546 00e4 0022     		movs	r2, #0
 5547 00e6 9A5E     		ldrsh	r2, [r3, r2]
 5548 00e8 BB1D     		adds	r3, r7, #6
 5549 00ea 0021     		movs	r1, #0
 5550 00ec 5B5E     		ldrsh	r3, [r3, r1]
 5551 00ee D318     		adds	r3, r2, r3
 5552 00f0 FA68     		ldr	r2, [r7, #12]
 5553 00f2 2421     		movs	r1, #36
 5554 00f4 525E     		ldrsh	r2, [r2, r1]
 5555 00f6 9342     		cmp	r3, r2
 5556 00f8 0ADD     		ble	.L351
 5557              		.loc 6 1110 0 is_stmt 0 discriminator 1
 5558 00fa FB68     		ldr	r3, [r7, #12]
 5559 00fc 2422     		movs	r2, #36
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 137


 5560 00fe 9B5E     		ldrsh	r3, [r3, r2]
 5561 0100 9AB2     		uxth	r2, r3
 5562 0102 0A23     		movs	r3, #10
 5563 0104 FB18     		adds	r3, r7, r3
 5564 0106 1B88     		ldrh	r3, [r3]
 5565 0108 D31A     		subs	r3, r2, r3
 5566 010a 9AB2     		uxth	r2, r3
 5567 010c BB1D     		adds	r3, r7, #6
 5568 010e 1A80     		strh	r2, [r3]
 5569              	.L351:
1111:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (y+cy > g->clipy1)	cy = g->clipy1 - y;
 5570              		.loc 6 1111 0 is_stmt 1
 5571 0110 0823     		movs	r3, #8
 5572 0112 FB18     		adds	r3, r7, r3
 5573 0114 0022     		movs	r2, #0
 5574 0116 9A5E     		ldrsh	r2, [r3, r2]
 5575 0118 2023     		movs	r3, #32
 5576 011a FB18     		adds	r3, r7, r3
 5577 011c 0021     		movs	r1, #0
 5578 011e 5B5E     		ldrsh	r3, [r3, r1]
 5579 0120 D318     		adds	r3, r2, r3
 5580 0122 FA68     		ldr	r2, [r7, #12]
 5581 0124 2621     		movs	r1, #38
 5582 0126 525E     		ldrsh	r2, [r2, r1]
 5583 0128 9342     		cmp	r3, r2
 5584 012a 0BDD     		ble	.L352
 5585              		.loc 6 1111 0 is_stmt 0 discriminator 1
 5586 012c FB68     		ldr	r3, [r7, #12]
 5587 012e 2622     		movs	r2, #38
 5588 0130 9B5E     		ldrsh	r3, [r3, r2]
 5589 0132 9AB2     		uxth	r2, r3
 5590 0134 0823     		movs	r3, #8
 5591 0136 FB18     		adds	r3, r7, r3
 5592 0138 1B88     		ldrh	r3, [r3]
 5593 013a D31A     		subs	r3, r2, r3
 5594 013c 9AB2     		uxth	r2, r3
 5595 013e 2023     		movs	r3, #32
 5596 0140 FB18     		adds	r3, r7, r3
 5597 0142 1A80     		strh	r2, [r3]
 5598              	.L352:
1112:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (srcx+cx > srccx) cx = srccx - srcx;
 5599              		.loc 6 1112 0 is_stmt 1
 5600 0144 2423     		movs	r3, #36
 5601 0146 FB18     		adds	r3, r7, r3
 5602 0148 0022     		movs	r2, #0
 5603 014a 9A5E     		ldrsh	r2, [r3, r2]
 5604 014c BB1D     		adds	r3, r7, #6
 5605 014e 0021     		movs	r1, #0
 5606 0150 5B5E     		ldrsh	r3, [r3, r1]
 5607 0152 D218     		adds	r2, r2, r3
 5608 0154 2C23     		movs	r3, #44
 5609 0156 FB18     		adds	r3, r7, r3
 5610 0158 0021     		movs	r1, #0
 5611 015a 5B5E     		ldrsh	r3, [r3, r1]
 5612 015c 9A42     		cmp	r2, r3
 5613 015e 09DD     		ble	.L353
 5614              		.loc 6 1112 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 138


 5615 0160 2C23     		movs	r3, #44
 5616 0162 FB18     		adds	r3, r7, r3
 5617 0164 1A88     		ldrh	r2, [r3]
 5618 0166 2423     		movs	r3, #36
 5619 0168 FB18     		adds	r3, r7, r3
 5620 016a 1B88     		ldrh	r3, [r3]
 5621 016c D31A     		subs	r3, r2, r3
 5622 016e 9AB2     		uxth	r2, r3
 5623 0170 BB1D     		adds	r3, r7, #6
 5624 0172 1A80     		strh	r2, [r3]
 5625              	.L353:
1113:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (cx <= 0 || cy <= 0) { MUTEX_EXIT(g); return; }
 5626              		.loc 6 1113 0 is_stmt 1
 5627 0174 BB1D     		adds	r3, r7, #6
 5628 0176 0022     		movs	r2, #0
 5629 0178 9B5E     		ldrsh	r3, [r3, r2]
 5630 017a 002B     		cmp	r3, #0
 5631 017c 00DC     		bgt	.LCB4775
 5632 017e 9AE0     		b	.L361	@long jump
 5633              	.LCB4775:
 5634              		.loc 6 1113 0 is_stmt 0 discriminator 1
 5635 0180 2023     		movs	r3, #32
 5636 0182 FB18     		adds	r3, r7, r3
 5637 0184 0022     		movs	r2, #0
 5638 0186 9B5E     		ldrsh	r3, [r3, r2]
 5639 0188 002B     		cmp	r3, #0
 5640 018a 00DC     		bgt	.LCB4780
 5641 018c 93E0     		b	.L361	@long jump
 5642              	.LCB4780:
1114:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1115:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1116:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1117:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Best is hardware bitfills
1118:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_BITFILLS
1119:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_BITFILLS == HARDWARE_AUTODETECT
1120:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->blit)
1121:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1122:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1123:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x;
1124:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y;
1125:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = cx;
1126:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = cy;
1127:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x1 = srcx;
1128:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y1 = srcy;
1129:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x2 = srccx;
1130:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.ptr = (void *)buffer;
1131:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_blit_area(g);
1132:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1133:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1134:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1135:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1136:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1137:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1138:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Next best is hardware streaming
1139:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE
1140:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
1141:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->writestart)
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 139


1142:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1143:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1144:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Translate buffer to the real image data, use srcx,srcy as the end point, srccx as the buffer 
1145:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			buffer += srcy*srccx+srcx;
 5643              		.loc 6 1145 0 is_stmt 1
 5644 018e 2823     		movs	r3, #40
 5645 0190 FB18     		adds	r3, r7, r3
 5646 0192 0022     		movs	r2, #0
 5647 0194 9B5E     		ldrsh	r3, [r3, r2]
 5648 0196 2C22     		movs	r2, #44
 5649 0198 BA18     		adds	r2, r7, r2
 5650 019a 0021     		movs	r1, #0
 5651 019c 525E     		ldrsh	r2, [r2, r1]
 5652 019e 5A43     		muls	r2, r3
 5653 01a0 2423     		movs	r3, #36
 5654 01a2 FB18     		adds	r3, r7, r3
 5655 01a4 0021     		movs	r1, #0
 5656 01a6 5B5E     		ldrsh	r3, [r3, r1]
 5657 01a8 D318     		adds	r3, r2, r3
 5658 01aa 5B00     		lsls	r3, r3, #1
 5659 01ac 3A6B     		ldr	r2, [r7, #48]
 5660 01ae D318     		adds	r3, r2, r3
 5661 01b0 3B63     		str	r3, [r7, #48]
1146:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcx = x + cx;
 5662              		.loc 6 1146 0
 5663 01b2 0A23     		movs	r3, #10
 5664 01b4 FB18     		adds	r3, r7, r3
 5665 01b6 1A88     		ldrh	r2, [r3]
 5666 01b8 BB1D     		adds	r3, r7, #6
 5667 01ba 1B88     		ldrh	r3, [r3]
 5668 01bc D318     		adds	r3, r2, r3
 5669 01be 9AB2     		uxth	r2, r3
 5670 01c0 2423     		movs	r3, #36
 5671 01c2 FB18     		adds	r3, r7, r3
 5672 01c4 1A80     		strh	r2, [r3]
1147:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcy = y + cy;
 5673              		.loc 6 1147 0
 5674 01c6 0823     		movs	r3, #8
 5675 01c8 FB18     		adds	r3, r7, r3
 5676 01ca 1A88     		ldrh	r2, [r3]
 5677 01cc 2023     		movs	r3, #32
 5678 01ce FB18     		adds	r3, r7, r3
 5679 01d0 1B88     		ldrh	r3, [r3]
 5680 01d2 D318     		adds	r3, r2, r3
 5681 01d4 9AB2     		uxth	r2, r3
 5682 01d6 2823     		movs	r3, #40
 5683 01d8 FB18     		adds	r3, r7, r3
 5684 01da 1A80     		strh	r2, [r3]
1148:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srccx -= cx;
 5685              		.loc 6 1148 0
 5686 01dc 2C23     		movs	r3, #44
 5687 01de FB18     		adds	r3, r7, r3
 5688 01e0 1A88     		ldrh	r2, [r3]
 5689 01e2 BB1D     		adds	r3, r7, #6
 5690 01e4 1B88     		ldrh	r3, [r3]
 5691 01e6 D31A     		subs	r3, r2, r3
 5692 01e8 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 140


 5693 01ea 2C23     		movs	r3, #44
 5694 01ec FB18     		adds	r3, r7, r3
 5695 01ee 1A80     		strh	r2, [r3]
1149:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1150:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x;
 5696              		.loc 6 1150 0
 5697 01f0 FB68     		ldr	r3, [r7, #12]
 5698 01f2 0A22     		movs	r2, #10
 5699 01f4 BA18     		adds	r2, r7, r2
 5700 01f6 1288     		ldrh	r2, [r2]
 5701 01f8 1A85     		strh	r2, [r3, #40]
1151:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y;
 5702              		.loc 6 1151 0
 5703 01fa FB68     		ldr	r3, [r7, #12]
 5704 01fc 0822     		movs	r2, #8
 5705 01fe BA18     		adds	r2, r7, r2
 5706 0200 1288     		ldrh	r2, [r2]
 5707 0202 5A85     		strh	r2, [r3, #42]
1152:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cx = cx;
 5708              		.loc 6 1152 0
 5709 0204 FB68     		ldr	r3, [r7, #12]
 5710 0206 BA1D     		adds	r2, r7, #6
 5711 0208 1288     		ldrh	r2, [r2]
 5712 020a 9A85     		strh	r2, [r3, #44]
1153:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = cy;
 5713              		.loc 6 1153 0
 5714 020c FB68     		ldr	r3, [r7, #12]
 5715 020e 2022     		movs	r2, #32
 5716 0210 BA18     		adds	r2, r7, r2
 5717 0212 1288     		ldrh	r2, [r2]
 5718 0214 DA85     		strh	r2, [r3, #46]
1154:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_start(g);
 5719              		.loc 6 1154 0
 5720 0216 FB68     		ldr	r3, [r7, #12]
 5721 0218 1800     		movs	r0, r3
 5722 021a FFF7FEFF 		bl	gdisp_lld_write_start
1155:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_POS
1156:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_STREAM_POS == HARDWARE_AUTODETECT
1157:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (gvmt(g)->writepos)
1158:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
1159:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_write_pos(g);
 5723              		.loc 6 1159 0
 5724 021e FB68     		ldr	r3, [r7, #12]
 5725 0220 1800     		movs	r0, r3
 5726 0222 FFF7FEFF 		bl	gdisp_lld_write_pos
1160:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
1161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(g->p.y = y; g->p.y < srcy; g->p.y++, buffer += srccx) {
 5727              		.loc 6 1161 0
 5728 0226 FB68     		ldr	r3, [r7, #12]
 5729 0228 0822     		movs	r2, #8
 5730 022a BA18     		adds	r2, r7, r2
 5731 022c 1288     		ldrh	r2, [r2]
 5732 022e 5A85     		strh	r2, [r3, #42]
 5733 0230 32E0     		b	.L357
 5734              	.L360:
1162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = x; g->p.x < srcx; g->p.x++) {
 5735              		.loc 6 1162 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 141


 5736 0232 FB68     		ldr	r3, [r7, #12]
 5737 0234 0A22     		movs	r2, #10
 5738 0236 BA18     		adds	r2, r7, r2
 5739 0238 1288     		ldrh	r2, [r2]
 5740 023a 1A85     		strh	r2, [r3, #40]
 5741 023c 12E0     		b	.L358
 5742              	.L359:
1163:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = *buffer++;
 5743              		.loc 6 1163 0 discriminator 3
 5744 023e 3B6B     		ldr	r3, [r7, #48]
 5745 0240 9A1C     		adds	r2, r3, #2
 5746 0242 3A63     		str	r2, [r7, #48]
 5747 0244 1A88     		ldrh	r2, [r3]
 5748 0246 FB68     		ldr	r3, [r7, #12]
 5749 0248 1A87     		strh	r2, [r3, #56]
1164:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_write_color(g);
 5750              		.loc 6 1164 0 discriminator 3
 5751 024a FB68     		ldr	r3, [r7, #12]
 5752 024c 1800     		movs	r0, r3
 5753 024e FFF7FEFF 		bl	gdisp_lld_write_color
1162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = x; g->p.x < srcx; g->p.x++) {
 5754              		.loc 6 1162 0 discriminator 3
 5755 0252 FB68     		ldr	r3, [r7, #12]
 5756 0254 2822     		movs	r2, #40
 5757 0256 9B5E     		ldrsh	r3, [r3, r2]
 5758 0258 9BB2     		uxth	r3, r3
 5759 025a 0133     		adds	r3, r3, #1
 5760 025c 9BB2     		uxth	r3, r3
 5761 025e 1AB2     		sxth	r2, r3
 5762 0260 FB68     		ldr	r3, [r7, #12]
 5763 0262 1A85     		strh	r2, [r3, #40]
 5764              	.L358:
1162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = x; g->p.x < srcx; g->p.x++) {
 5765              		.loc 6 1162 0 is_stmt 0 discriminator 1
 5766 0264 FB68     		ldr	r3, [r7, #12]
 5767 0266 2822     		movs	r2, #40
 5768 0268 9B5E     		ldrsh	r3, [r3, r2]
 5769 026a 2422     		movs	r2, #36
 5770 026c BA18     		adds	r2, r7, r2
 5771 026e 0021     		movs	r1, #0
 5772 0270 525E     		ldrsh	r2, [r2, r1]
 5773 0272 9A42     		cmp	r2, r3
 5774 0274 E3DC     		bgt	.L359
1161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = x; g->p.x < srcx; g->p.x++) {
 5775              		.loc 6 1161 0 is_stmt 1 discriminator 2
 5776 0276 FB68     		ldr	r3, [r7, #12]
 5777 0278 2A22     		movs	r2, #42
 5778 027a 9B5E     		ldrsh	r3, [r3, r2]
 5779 027c 9BB2     		uxth	r3, r3
 5780 027e 0133     		adds	r3, r3, #1
 5781 0280 9BB2     		uxth	r3, r3
 5782 0282 1AB2     		sxth	r2, r3
 5783 0284 FB68     		ldr	r3, [r7, #12]
 5784 0286 5A85     		strh	r2, [r3, #42]
 5785 0288 2C23     		movs	r3, #44
 5786 028a FB18     		adds	r3, r7, r3
 5787 028c 0022     		movs	r2, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 142


 5788 028e 9B5E     		ldrsh	r3, [r3, r2]
 5789 0290 5B00     		lsls	r3, r3, #1
 5790 0292 3A6B     		ldr	r2, [r7, #48]
 5791 0294 D318     		adds	r3, r2, r3
 5792 0296 3B63     		str	r3, [r7, #48]
 5793              	.L357:
1161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x = x; g->p.x < srcx; g->p.x++) {
 5794              		.loc 6 1161 0 is_stmt 0 discriminator 1
 5795 0298 FB68     		ldr	r3, [r7, #12]
 5796 029a 2A22     		movs	r2, #42
 5797 029c 9B5E     		ldrsh	r3, [r3, r2]
 5798 029e 2822     		movs	r2, #40
 5799 02a0 BA18     		adds	r2, r7, r2
 5800 02a2 0021     		movs	r1, #0
 5801 02a4 525E     		ldrsh	r2, [r2, r1]
 5802 02a6 9A42     		cmp	r2, r3
 5803 02a8 C3DC     		bgt	.L360
1165:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
1166:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1167:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_write_stop(g);
 5804              		.loc 6 1167 0 is_stmt 1
 5805 02aa FB68     		ldr	r3, [r7, #12]
 5806 02ac 1800     		movs	r0, r3
 5807 02ae FFF7FEFF 		bl	gdisp_lld_write_stop
1168:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1169:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1170:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
 5808              		.loc 6 1170 0
 5809 02b2 C046     		nop
 5810 02b4 00E0     		b	.L348
 5811              	.L361:
1113:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
 5812              		.loc 6 1113 0
 5813 02b6 C046     		nop
 5814              	.L348:
1171:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1172:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1173:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1174:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Only slightly better than drawing pixels is to look for runs and use fill area
1175:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_FILLS
1176:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// We don't need to test for auto-detect on drawpixel as we know we have it because we don't have
1177:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
1178:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (gvmt(g)->fill)
1179:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1180:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1181:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Translate buffer to the real image data, use srcx,srcy as the end point, srccx as the buffer 
1182:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			buffer += srcy*srccx+srcx;
1183:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcx = x + cx;
1184:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcy = y + cy;
1185:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srccx -= cx;
1186:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1187:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.cy = 1;
1188:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(g->p.y = y; g->p.y < srcy; g->p.y++, buffer += srccx) {
1189:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x=x; g->p.x < srcx; g->p.x += g->p.cx) {
1190:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx=1;
1191:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = *buffer++;
1192:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					while(g->p.x+g->p.cx < srcx && *buffer == g->p.color) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 143


1193:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.cx++;
1194:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						buffer++;
1195:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
1196:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (g->p.cx == 1) {
1197:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_draw_pixel(g);
1198:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else {
1199:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						gdisp_lld_fill_area(g);
1200:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
1201:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
1202:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1203:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1204:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1205:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1206:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1207:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1208:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1209:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	// Worst is drawing pixels
1210:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE_FILLS
1211:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// The following test is unneeded because we are guaranteed to have draw pixel if we don't have s
1212:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
1213:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	if (gvmt(g)->pixel)
1214:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//#endif
1215:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1216:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Translate buffer to the real image data, use srcx,srcy as the end point, srccx as the buffer 
1217:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			buffer += srcy*srccx+srcx;
1218:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcx = x + cx;
1219:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srcy = y + cy;
1220:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			srccx -= cx;
1221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1222:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(g->p.y = y; g->p.y < srcy; g->p.y++, buffer += srccx) {
1223:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for(g->p.x=x; g->p.x < srcx; g->p.x++) {
1224:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = *buffer++;
1225:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_draw_pixel(g);
1226:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
1227:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1228:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			autoflush_stopdone(g);
1229:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
1230:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
1231:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1232:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1233:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 5815              		.loc 6 1233 0
 5816 02b8 BD46     		mov	sp, r7
 5817 02ba 05B0     		add	sp, sp, #20
 5818              		@ sp needed
 5819 02bc 90BD     		pop	{r4, r7, pc}
 5820              		.cfi_endproc
 5821              	.LFE72:
 5822              		.size	gdispGBlitArea, .-gdispGBlitArea
 5823 02be C046     		.section	.text.gdispGSetClip,"ax",%progbits
 5824              		.align	2
 5825              		.global	gdispGSetClip
 5826              		.code	16
 5827              		.thumb_func
 5828              		.type	gdispGSetClip, %function
 5829              	gdispGSetClip:
 5830              	.LFB73:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 144


1234:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1235:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_CLIP || GDISP_NEED_VALIDATION
1236:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGSetClip(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy) {
 5831              		.loc 6 1236 0
 5832              		.cfi_startproc
 5833              		@ args = 4, pretend = 0, frame = 16
 5834              		@ frame_needed = 1, uses_anonymous_args = 0
 5835 0000 90B5     		push	{r4, r7, lr}
 5836              		.cfi_def_cfa_offset 12
 5837              		.cfi_offset 4, -12
 5838              		.cfi_offset 7, -8
 5839              		.cfi_offset 14, -4
 5840 0002 85B0     		sub	sp, sp, #20
 5841              		.cfi_def_cfa_offset 32
 5842 0004 00AF     		add	r7, sp, #0
 5843              		.cfi_def_cfa_register 7
 5844 0006 F860     		str	r0, [r7, #12]
 5845 0008 0C00     		movs	r4, r1
 5846 000a 1000     		movs	r0, r2
 5847 000c 1900     		movs	r1, r3
 5848 000e 0A23     		movs	r3, #10
 5849 0010 FB18     		adds	r3, r7, r3
 5850 0012 221C     		adds	r2, r4, #0
 5851 0014 1A80     		strh	r2, [r3]
 5852 0016 0823     		movs	r3, #8
 5853 0018 FB18     		adds	r3, r7, r3
 5854 001a 021C     		adds	r2, r0, #0
 5855 001c 1A80     		strh	r2, [r3]
 5856 001e BB1D     		adds	r3, r7, #6
 5857 0020 0A1C     		adds	r2, r1, #0
 5858 0022 1A80     		strh	r2, [r3]
1237:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1238:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1239:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Best is using hardware clipping
1240:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP
1241:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
1242:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->setclip)
1243:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
1244:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
1245:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x;
1246:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y;
1247:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cx = cx;
1248:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cy = cy;
1249:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_set_clip(g);
1250:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1251:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
1252:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else
1253:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
1254:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1255:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1256:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Worst is using software clipping
1257:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_CLIP != TRUE
1258:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
1259:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (x < 0) { cx += x; x = 0; }
 5859              		.loc 6 1259 0
 5860 0024 0A23     		movs	r3, #10
 5861 0026 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 145


 5862 0028 0022     		movs	r2, #0
 5863 002a 9B5E     		ldrsh	r3, [r3, r2]
 5864 002c 002B     		cmp	r3, #0
 5865 002e 0CDA     		bge	.L363
 5866              		.loc 6 1259 0 is_stmt 0 discriminator 1
 5867 0030 BB1D     		adds	r3, r7, #6
 5868 0032 1A88     		ldrh	r2, [r3]
 5869 0034 0A23     		movs	r3, #10
 5870 0036 FB18     		adds	r3, r7, r3
 5871 0038 1B88     		ldrh	r3, [r3]
 5872 003a D318     		adds	r3, r2, r3
 5873 003c 9AB2     		uxth	r2, r3
 5874 003e BB1D     		adds	r3, r7, #6
 5875 0040 1A80     		strh	r2, [r3]
 5876 0042 0A23     		movs	r3, #10
 5877 0044 FB18     		adds	r3, r7, r3
 5878 0046 0022     		movs	r2, #0
 5879 0048 1A80     		strh	r2, [r3]
 5880              	.L363:
1260:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (y < 0) { cy += y; y = 0; }
 5881              		.loc 6 1260 0 is_stmt 1
 5882 004a 0823     		movs	r3, #8
 5883 004c FB18     		adds	r3, r7, r3
 5884 004e 0022     		movs	r2, #0
 5885 0050 9B5E     		ldrsh	r3, [r3, r2]
 5886 0052 002B     		cmp	r3, #0
 5887 0054 0EDA     		bge	.L364
 5888              		.loc 6 1260 0 is_stmt 0 discriminator 1
 5889 0056 2023     		movs	r3, #32
 5890 0058 FB18     		adds	r3, r7, r3
 5891 005a 1A88     		ldrh	r2, [r3]
 5892 005c 0823     		movs	r3, #8
 5893 005e FB18     		adds	r3, r7, r3
 5894 0060 1B88     		ldrh	r3, [r3]
 5895 0062 D318     		adds	r3, r2, r3
 5896 0064 9AB2     		uxth	r2, r3
 5897 0066 2023     		movs	r3, #32
 5898 0068 FB18     		adds	r3, r7, r3
 5899 006a 1A80     		strh	r2, [r3]
 5900 006c 0823     		movs	r3, #8
 5901 006e FB18     		adds	r3, r7, r3
 5902 0070 0022     		movs	r2, #0
 5903 0072 1A80     		strh	r2, [r3]
 5904              	.L364:
1261:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (cx <= 0 || cy <= 0 || x >= g->g.Width || y >= g->g.Height) { x = y = cx = cy = 0; }
 5905              		.loc 6 1261 0 is_stmt 1
 5906 0074 BB1D     		adds	r3, r7, #6
 5907 0076 0022     		movs	r2, #0
 5908 0078 9B5E     		ldrsh	r3, [r3, r2]
 5909 007a 002B     		cmp	r3, #0
 5910 007c 17DD     		ble	.L365
 5911              		.loc 6 1261 0 is_stmt 0 discriminator 2
 5912 007e 2023     		movs	r3, #32
 5913 0080 FB18     		adds	r3, r7, r3
 5914 0082 0022     		movs	r2, #0
 5915 0084 9B5E     		ldrsh	r3, [r3, r2]
 5916 0086 002B     		cmp	r3, #0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 146


 5917 0088 11DD     		ble	.L365
 5918              		.loc 6 1261 0 discriminator 4
 5919 008a FB68     		ldr	r3, [r7, #12]
 5920 008c 0822     		movs	r2, #8
 5921 008e 9B5E     		ldrsh	r3, [r3, r2]
 5922 0090 0A22     		movs	r2, #10
 5923 0092 BA18     		adds	r2, r7, r2
 5924 0094 0021     		movs	r1, #0
 5925 0096 525E     		ldrsh	r2, [r2, r1]
 5926 0098 9A42     		cmp	r2, r3
 5927 009a 08DA     		bge	.L365
 5928              		.loc 6 1261 0 discriminator 6
 5929 009c FB68     		ldr	r3, [r7, #12]
 5930 009e 0A22     		movs	r2, #10
 5931 00a0 9B5E     		ldrsh	r3, [r3, r2]
 5932 00a2 0822     		movs	r2, #8
 5933 00a4 BA18     		adds	r2, r7, r2
 5934 00a6 0021     		movs	r1, #0
 5935 00a8 525E     		ldrsh	r2, [r2, r1]
 5936 00aa 9A42     		cmp	r2, r3
 5937 00ac 13DB     		blt	.L366
 5938              	.L365:
 5939              		.loc 6 1261 0 discriminator 7
 5940 00ae 2023     		movs	r3, #32
 5941 00b0 FB18     		adds	r3, r7, r3
 5942 00b2 0022     		movs	r2, #0
 5943 00b4 1A80     		strh	r2, [r3]
 5944 00b6 BB1D     		adds	r3, r7, #6
 5945 00b8 2022     		movs	r2, #32
 5946 00ba BA18     		adds	r2, r7, r2
 5947 00bc 1288     		ldrh	r2, [r2]
 5948 00be 1A80     		strh	r2, [r3]
 5949 00c0 0823     		movs	r3, #8
 5950 00c2 FB18     		adds	r3, r7, r3
 5951 00c4 BA1D     		adds	r2, r7, #6
 5952 00c6 1288     		ldrh	r2, [r2]
 5953 00c8 1A80     		strh	r2, [r3]
 5954 00ca 0A23     		movs	r3, #10
 5955 00cc FB18     		adds	r3, r7, r3
 5956 00ce 0822     		movs	r2, #8
 5957 00d0 BA18     		adds	r2, r7, r2
 5958 00d2 1288     		ldrh	r2, [r2]
 5959 00d4 1A80     		strh	r2, [r3]
 5960              	.L366:
1262:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->clipx0 = x;
 5961              		.loc 6 1262 0 is_stmt 1
 5962 00d6 FB68     		ldr	r3, [r7, #12]
 5963 00d8 0A22     		movs	r2, #10
 5964 00da BA18     		adds	r2, r7, r2
 5965 00dc 1288     		ldrh	r2, [r2]
 5966 00de 1A84     		strh	r2, [r3, #32]
1263:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->clipy0 = y;
 5967              		.loc 6 1263 0
 5968 00e0 FB68     		ldr	r3, [r7, #12]
 5969 00e2 0822     		movs	r2, #8
 5970 00e4 BA18     		adds	r2, r7, r2
 5971 00e6 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 147


 5972 00e8 5A84     		strh	r2, [r3, #34]
1264:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->clipx1 = x+cx;	if (g->clipx1 > g->g.Width) g->clipx1 = g->g.Width;
 5973              		.loc 6 1264 0
 5974 00ea 0A23     		movs	r3, #10
 5975 00ec FB18     		adds	r3, r7, r3
 5976 00ee 1A88     		ldrh	r2, [r3]
 5977 00f0 BB1D     		adds	r3, r7, #6
 5978 00f2 1B88     		ldrh	r3, [r3]
 5979 00f4 D318     		adds	r3, r2, r3
 5980 00f6 9BB2     		uxth	r3, r3
 5981 00f8 1AB2     		sxth	r2, r3
 5982 00fa FB68     		ldr	r3, [r7, #12]
 5983 00fc 9A84     		strh	r2, [r3, #36]
 5984 00fe FB68     		ldr	r3, [r7, #12]
 5985 0100 2422     		movs	r2, #36
 5986 0102 9A5E     		ldrsh	r2, [r3, r2]
 5987 0104 FB68     		ldr	r3, [r7, #12]
 5988 0106 0821     		movs	r1, #8
 5989 0108 5B5E     		ldrsh	r3, [r3, r1]
 5990 010a 9A42     		cmp	r2, r3
 5991 010c 04DD     		ble	.L367
 5992              		.loc 6 1264 0 is_stmt 0 discriminator 1
 5993 010e FB68     		ldr	r3, [r7, #12]
 5994 0110 0822     		movs	r2, #8
 5995 0112 9A5E     		ldrsh	r2, [r3, r2]
 5996 0114 FB68     		ldr	r3, [r7, #12]
 5997 0116 9A84     		strh	r2, [r3, #36]
 5998              	.L367:
1265:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->clipy1 = y+cy;	if (g->clipy1 > g->g.Height) g->clipy1 = g->g.Height;
 5999              		.loc 6 1265 0 is_stmt 1
 6000 0118 0823     		movs	r3, #8
 6001 011a FB18     		adds	r3, r7, r3
 6002 011c 1A88     		ldrh	r2, [r3]
 6003 011e 2023     		movs	r3, #32
 6004 0120 FB18     		adds	r3, r7, r3
 6005 0122 1B88     		ldrh	r3, [r3]
 6006 0124 D318     		adds	r3, r2, r3
 6007 0126 9BB2     		uxth	r3, r3
 6008 0128 1AB2     		sxth	r2, r3
 6009 012a FB68     		ldr	r3, [r7, #12]
 6010 012c DA84     		strh	r2, [r3, #38]
 6011 012e FB68     		ldr	r3, [r7, #12]
 6012 0130 2622     		movs	r2, #38
 6013 0132 9A5E     		ldrsh	r2, [r3, r2]
 6014 0134 FB68     		ldr	r3, [r7, #12]
 6015 0136 0A21     		movs	r1, #10
 6016 0138 5B5E     		ldrsh	r3, [r3, r1]
 6017 013a 9A42     		cmp	r2, r3
 6018 013c 04DD     		ble	.L369
 6019              		.loc 6 1265 0 is_stmt 0 discriminator 1
 6020 013e FB68     		ldr	r3, [r7, #12]
 6021 0140 0A22     		movs	r2, #10
 6022 0142 9A5E     		ldrsh	r2, [r3, r2]
 6023 0144 FB68     		ldr	r3, [r7, #12]
 6024 0146 DA84     		strh	r2, [r3, #38]
 6025              	.L369:
1266:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 148


1267:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1268:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1269:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
 6026              		.loc 6 1269 0 is_stmt 1
 6027 0148 C046     		nop
 6028 014a BD46     		mov	sp, r7
 6029 014c 05B0     		add	sp, sp, #20
 6030              		@ sp needed
 6031 014e 90BD     		pop	{r4, r7, pc}
 6032              		.cfi_endproc
 6033              	.LFE73:
 6034              		.size	gdispGSetClip, .-gdispGSetClip
 6035              		.section	.text.gdispGDrawBox,"ax",%progbits
 6036              		.align	2
 6037              		.global	gdispGDrawBox
 6038              		.code	16
 6039              		.thumb_func
 6040              		.type	gdispGDrawBox, %function
 6041              	gdispGDrawBox:
 6042              	.LFB74:
1270:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1271:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1272:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_CIRCLE
1273:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawCircle(GDisplay *g, coord_t x, coord_t y, coord_t radius, color_t color) {
1274:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P;
1275:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1276:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1277:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1278:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1279:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 1;
1280:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b = radius;
1281:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = 4 - radius;
1282:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1283:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1284:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's circle algorithm
1285:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Optimized to prevent double drawing
1286:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x; g->p.y = y + b; drawpixel_clip(g);
1287:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x; g->p.y = y - b; drawpixel_clip(g);
1288:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x + b; g->p.y = y; drawpixel_clip(g);
1289:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x - b; g->p.y = y; drawpixel_clip(g);
1290:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1291:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + a; g->p.y = y + b; drawpixel_clip(g);
1292:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + a; g->p.y = y - b; drawpixel_clip(g);
1293:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + b; g->p.y = y + a; drawpixel_clip(g);
1294:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - b; g->p.y = y + a; drawpixel_clip(g);
1295:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - a; g->p.y = y + b; drawpixel_clip(g);
1296:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - a; g->p.y = y - b; drawpixel_clip(g);
1297:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + b; g->p.y = y - a; drawpixel_clip(g);
1298:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - b; g->p.y = y - a; drawpixel_clip(g);
1299:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0)
1300:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 3 + 2*a++;
1301:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else
1302:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 5 + 2*(a++ - b--);
1303:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(a < b);
1304:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x + a; g->p.y = y + b; drawpixel_clip(g);
1305:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x + a; g->p.y = y - b; drawpixel_clip(g);
1306:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x - a; g->p.y = y + b; drawpixel_clip(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 149


1307:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x - a; g->p.y = y - b; drawpixel_clip(g);
1308:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1309:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1310:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1311:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1312:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1313:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1314:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_CIRCLE
1315:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillCircle(GDisplay *g, coord_t x, coord_t y, coord_t radius, color_t color) {
1316:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P;
1317:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1318:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1319:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1320:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1321:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 1;
1322:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b = radius;
1323:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = 4 - radius;
1324:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1325:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1326:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's circle algorithm
1327:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// This is optimized to prevent overdrawing by drawing a line only when a variable is about to ch
1328:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = y; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);
1329:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = y+b; g->p.x = x; drawpixel_clip(g);
1330:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = y-b; g->p.x = x; drawpixel_clip(g);
1331:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1332:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);
1333:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);
1334:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0) {
1335:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 3 + 2*a++;
1336:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
1337:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);
1338:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);
1339:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 5 + 2*(a++ - b--);
1340:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1341:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(a < b);
1342:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);
1343:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);
1344:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1345:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1346:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1347:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1348:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1349:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1350:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_DUALCIRCLE
1351:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1352:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define DRAW_DUALLINE(yval, r1, r2) 										\
1353:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = yval;															\
1354:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x-r1;   g->p.x1 = x-r2+1; hline_clip(g);						\
1355:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x-r2;   g->p.x1 = x+r2;   g->p.color = color2; hline_clip(g);	\
1356:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x+r2+1; g->p.x1 = x+r1;   g->p.color = color1; hline_clip(g)
1357:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#define DRAW_SINGLELINE(yval, r)	g->p.y = yval; g->p.x = x-r; g->p.x1 = x+r; hline_clip(g)
1358:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1359:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillDualCircle(GDisplay *g, coord_t x, coord_t y, coord_t radius1, color_t color1, coor
1360:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b1, b2, p1, p2;
1361:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1362:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1363:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 150


1364:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Do the combined circle where the inner circle < 45 deg (and outer circle)
1365:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color1;
1366:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 0; b1 = radius1; b2 = radius2; p1 = p2 = 1;
1367:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1368:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_DUALLINE(y+a, b1, b2);
1369:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_DUALLINE(y-a, b1, b2);
1370:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (p1 >= 0) p1 -= b1--;
1371:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			p1 += a;
1372:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (p2 >= 0) p2 -= b2--;
1373:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			p2 += a;
1374:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(++a < b2);
1375:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1376:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Do the combined circle where inner circle > 45 deg, outer circle < 45
1377:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1378:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_DUALLINE(y+a, b1, b2);
1379:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_DUALLINE(y-a, b1, b2);
1380:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (p1 >= 0) p1 -= b1--;
1381:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			p1 += a;
1382:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do { p2 -= --b2; } while (p2+a >= b2);
1383:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			p2 += a;
1384:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(++a <= radius2 && a < b1);
1385:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		
1386:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (a < radius2) {
1387:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Do the combined circle where inner circle > 45 deg, outer circle > 45
1388:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1389:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_DUALLINE(y+a, b1, b2);
1390:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_DUALLINE(y-a, b1, b2);
1391:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				do { p1 -= --b1; } while (p1+a >= b1);
1392:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				p1 += a;
1393:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				do { p2 -= --b2; } while (p2+a >= b2);
1394:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				p2 += a++;
1395:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(b2 > 0);
1396:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			
1397:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else {
1398:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Do the outer circle above the inner circle but < 45 deg
1399:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1400:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_SINGLELINE(y+a, b1);
1401:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_SINGLELINE(y-a, b1);
1402:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (p1 >= 0) p1 -= b1--;
1403:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				p1 += a++;
1404:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b1);
1405:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_SINGLELINE(y+a, b1);
1406:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			DRAW_SINGLELINE(y-a, b1);
1407:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1408:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1409:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Do the top and bottom part of the outer circle (outer circle > 45deg and above inner circle)
1410:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 0; b1 = radius1; p1 = 1;
1411:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1412:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (p1 >= 0) {
1413:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_SINGLELINE(y+b1, a);
1414:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				DRAW_SINGLELINE(y-b1, a);
1415:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				p1 -= b1--;
1416:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1417:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			p1 += a++;
1418:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(b1 > radius2 && a < b1);
1419:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1420:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 151


1421:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1422:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1423:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#undef DRAW_DUALLINE
1424:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#undef DRAW_SINGLELINE
1425:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1426:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1427:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ELLIPSE
1428:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawEllipse(GDisplay *g, coord_t x, coord_t y, coord_t a, coord_t b, color_t color) {
1429:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t	dx, dy;
1430:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		int32_t	a2, b2;
1431:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		int32_t	err, e2;
1432:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1433:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1434:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1435:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1436:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx = 0;
1437:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy = b;
1438:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a2 = a*a;
1439:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b2 = b*b;
1440:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		err = b2-(2*b-1)*a2;
1441:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1442:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1443:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's ellipse algorithm
1444:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1445:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + dx; g->p.y = y + dy; drawpixel_clip(g);
1446:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - dx; g->p.y = y + dy; drawpixel_clip(g);
1447:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - dx; g->p.y = y - dy; drawpixel_clip(g);
1448:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x + dx; g->p.y = y - dy; drawpixel_clip(g);
1449:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1450:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			e2 = 2*err;
1451:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if(e2 <  (2*dx+1)*b2) {
1452:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				dx++;
1453:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				err += (2*dx+1)*b2;
1454:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1455:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if(e2 > -(2*dy-1)*a2) {
1456:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				dy--;
1457:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				err -= (2*dy-1)*a2;
1458:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1459:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(dy >= 0);
1460:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1461:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1462:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1463:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1464:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1465:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1466:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ELLIPSE
1467:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillEllipse(GDisplay *g, coord_t x, coord_t y, coord_t a, coord_t b, color_t color) {
1468:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t	dx, dy;
1469:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		int32_t	a2, b2;
1470:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		int32_t	err, e2;
1471:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1473:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1474:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1475:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx = 0;
1476:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy = b;
1477:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a2 = a*a;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 152


1478:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b2 = b*b;
1479:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		err = b2-(2*b-1)*a2;
1480:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1481:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1482:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's ellipse algorithm
1483:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// This is optimized to prevent overdrawing by drawing a line only when a y is about to change va
1484:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1485:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			e2 = 2*err;
1486:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if(e2 <  (2*dx+1)*b2) {
1487:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				dx++;
1488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				err += (2*dx+1)*b2;
1489:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1490:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if(e2 > -(2*dy-1)*a2) {
1491:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + dy; g->p.x = x - dx; g->p.x1 = x + dx; hline_clip(g);
1492:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (y) { g->p.y = y - dy; g->p.x = x - dx; g->p.x1 = x + dx; hline_clip(g); }
1493:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				dy--;
1494:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				err -= (2*dy-1)*a2;
1495:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1496:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(dy >= 0);
1497:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1498:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1499:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1500:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1501:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1502:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1503:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARCSECTORS
1504:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawArcSectors(GDisplay *g, coord_t x, coord_t y, coord_t radius, uint8_t sectors, colo
1505:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P;
1506:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1507:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1508:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1509:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1510:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 1;              // x in many explanations
1511:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b = radius;         // y in many explanations
1512:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = 4 - radius;
1513:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1514:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1515:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's circle algorithm
1516:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Optimized to prevent double drawing
1517:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x06) { g->p.x = x; g->p.y = y - b; drawpixel_clip(g); }				// Upper upper
1518:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x60) { g->p.x = x; g->p.y = y + b; drawpixel_clip(g); }				// Lower lower
1519:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x81) { g->p.x = x + b; g->p.y = y; drawpixel_clip(g); }				// Right right
1520:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x18) { g->p.x = x - b; g->p.y = y; drawpixel_clip(g); }				// Left left
1521:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1522:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1523:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x01) { g->p.x = x + b; g->p.y = y - a; drawpixel_clip(g); }		// Upper right right
1524:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x02) { g->p.x = x + a; g->p.y = y - b; drawpixel_clip(g); }		// Upper upper right
1525:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x04) { g->p.x = x - a; g->p.y = y - b; drawpixel_clip(g); }		// Upper upper left
1526:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x08) { g->p.x = x - b; g->p.y = y - a; drawpixel_clip(g); }		// Upper left  left
1527:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x10) { g->p.x = x - b; g->p.y = y + a; drawpixel_clip(g); }		// Lower left  left
1528:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x20) { g->p.x = x - a; g->p.y = y + b; drawpixel_clip(g); }		// Lower lower left
1529:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x40) { g->p.x = x + a; g->p.y = y + b; drawpixel_clip(g); }		// Lower lower right
1530:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x80) { g->p.x = x + b; g->p.y = y + a; drawpixel_clip(g); }		// Lower right right
1531:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0)
1532:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 3 + 2*a++;
1533:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else
1534:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 5 + 2*(a++ - b--);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 153


1535:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(a < b);
1536:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1537:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0xC0) { g->p.x = x + a; g->p.y = y + b; drawpixel_clip(g); }			// Lower right
1538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x03) { g->p.x = x + a; g->p.y = y - b; drawpixel_clip(g); }			// Upper right
1539:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x30) { g->p.x = x - a; g->p.y = y + b; drawpixel_clip(g); }			// Lower left
1540:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x0C) { g->p.x = x - a; g->p.y = y - b; drawpixel_clip(g); }			// Upper left
1541:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1542:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1543:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1544:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1545:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1546:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1547:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARCSECTORS
1548:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillArcSectors(GDisplay *g, coord_t x, coord_t y, coord_t radius, uint8_t sectors, colo
1549:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P;
1550:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1551:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1552:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1553:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
1554:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 1;              // x in many explanations
1555:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b = radius;         // y in many explanations
1556:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = 4 - radius;
1557:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1558:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1559:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's circle algorithm
1560:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Optimized to prevent double drawing
1561:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x06) { g->p.x = x; g->p.y = y - b; drawpixel_clip(g); }					// Upper upper
1562:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x60) { g->p.x = x; g->p.y = y + b; drawpixel_clip(g); }					// Lower lower
1563:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x81) {																	// Center right
1564:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x; g->p.x1 = x + b;
1565:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sectors & 0x18) g->p.x -= b;													// Left right
1566:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			hline_clip(g);
1567:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else if (sectors & 0x18) {															// Left center
1568:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x - b; g->p.x1 = x; g->p.y = y;
1569:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			hline_clip(g);
1570:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1571:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1572:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		do {
1573:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Top half
1574:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			switch(sectors & 0x0F) {
1575:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x01:
1576:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1577:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1578:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x02:
1579:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1580:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1581:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1582:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x03:
1583:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1584:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x; g->p.x1 = x + b; hline_clip(g);
1585:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1586:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x04:
1587:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1588:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1589:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1590:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x05:
1591:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 154


1592:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1593:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1594:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1595:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x06:
1596:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1597:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1598:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x07:
1600:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1601:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - a; g->p.x1 = x + b; hline_clip(g);
1602:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1603:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x08:
1604:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1605:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1606:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x09:
1607:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1608:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1609:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1610:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0A:
1611:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1612:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1613:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1614:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1615:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0B:
1616:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1617:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1618:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x; g->p.x1 = x + b; hline_clip(g);
1619:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1620:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0C:
1621:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1622:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x; hline_clip(g);
1623:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1624:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0D:
1625:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1626:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x; hline_clip(g);
1627:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1628:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1629:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0E:
1630:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1631:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x + a; hline_clip(g);
1632:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1633:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0F:
1634:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1635:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y - a; g->p.x = x - b; g->p.x1 = x + b; hline_clip(g);
1636:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1637:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1638:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1639:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Bottom half
1640:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			switch((sectors & 0xF0)>>4) {
1641:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x01:
1642:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1643:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1644:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x02:
1645:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1646:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1647:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1648:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x03:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 155


1649:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1650:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x; hline_clip(g);
1651:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1652:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x04:
1653:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1654:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1655:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1656:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x05:
1657:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1658:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1659:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1660:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1661:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x06:
1662:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1663:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1664:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1665:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x07:
1666:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1667:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x + a; hline_clip(g);
1668:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1669:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x08:
1670:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1671:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1672:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x09:
1673:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1674:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1675:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1676:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0A:
1677:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1678:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1679:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1680:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1681:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0B:
1682:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x; hline_clip(g);
1683:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x; hline_clip(g);
1684:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x + a; g->p.x1 = x + b; hline_clip(g);
1685:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1686:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0C:
1687:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1688:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x; g->p.x1 = x + b; hline_clip(g);
1689:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1690:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0D:
1691:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x; g->p.x1 = x + a; hline_clip(g);
1692:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x - a; hline_clip(g);
1693:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x; g->p.x1 = x + b; hline_clip(g);
1694:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1695:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0E:
1696:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1697:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - a; g->p.x1 = x + b; hline_clip(g);
1698:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1699:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case 0x0F:
1700:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + b; g->p.x = x - a; g->p.x1 = x + a; hline_clip(g);
1701:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y + a; g->p.x = x - b; g->p.x1 = x + b; hline_clip(g);
1702:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
1703:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1704:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1705:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (P < 0)
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 156


1706:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 3 + 2*a++;
1707:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else
1708:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				P += 5 + 2*(a++ - b--);
1709:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} while(a < b);
1710:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1711:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Top half
1712:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x02)			{ g->p.y = y - a; g->p.x = x; g->p.x1 = x + a; hline_clip(g); }
1713:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (sectors & 0x01)	{ g->p.y = y - a; g->p.x = x + a; drawpixel_clip(g); }
1714:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x04)			{ g->p.y = y - a; g->p.x = x - a; g->p.x1 = x; hline_clip(g); }
1715:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (sectors & 0x08)	{ g->p.y = y - a; g->p.x = x - a; drawpixel_clip(g); }
1716:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1717:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Bottom half
1718:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x40)			{ g->p.y = y + a; g->p.x = x; g->p.x1 = x + a; hline_clip(g); }
1719:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (sectors & 0x80)	{ g->p.y = y + a; g->p.x = x + a; drawpixel_clip(g); }
1720:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sectors & 0x20)			{ g->p.y = y + a; g->p.x = x - a; g->p.x1 = x; hline_clip(g); }
1721:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (sectors & 0x10)	{ g->p.y = y + a; g->p.x = x - a; drawpixel_clip(g); }
1722:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1723:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1724:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1725:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1726:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1727:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1728:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARC
1729:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if (!GMISC_NEED_FIXEDTRIG && !GMISC_NEED_FASTTRIG) || !GFX_USE_GMISC
1730:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#include <math.h>
1731:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1732:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1733:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawArc(GDisplay *g, coord_t x, coord_t y, coord_t radius, coord_t start, coord_t end, 
1734:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P, sedge, eedge;
1735:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		uint8_t	full, sbit, ebit, tbit;
1736:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1737:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Normalize the angles
1738:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (start < 0)
1739:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			start -= (start/360-1)*360;
1740:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (start >= 360)
1741:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			start %= 360;
1742:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (end < 0)
1743:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			end -= (end/360-1)*360;
1744:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (end >= 360)
1745:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			end %= 360;
1746:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1747:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		sbit = 1<<(start/45);
1748:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		ebit = 1<<(end/45);
1749:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		full = 0;
1750:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (start == end) {
1751:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			full = 0xFF;
1752:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else if (end < start) {
1753:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(tbit=sbit<<1; tbit; tbit<<=1) full |= tbit;
1754:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(tbit=ebit>>1; tbit; tbit>>=1) full |= tbit;
1755:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else if (sbit < 0x80) {
1756:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(tbit=sbit<<1; tbit < ebit; tbit<<=1) full |= tbit;
1757:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1758:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		tbit = start%45 == 0 ? sbit : 0;
1759:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1760:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1761:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1762:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 157


1763:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (full) {
1764:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Draw full sectors
1765:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Optimized to prevent double drawing
1766:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			a = 1;
1767:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			b = radius;
1768:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			P = 4 - radius;
1769:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x60) { g->p.y = y+b; g->p.x = x; drawpixel_clip(g); }
1770:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x06) { g->p.y = y-b; g->p.x = x; drawpixel_clip(g); }
1771:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x81) { g->p.y = y; g->p.x = x+b; drawpixel_clip(g); }
1772:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x18) { g->p.y = y; g->p.x = x-b; drawpixel_clip(g); }
1773:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1774:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x01) { g->p.x = x+b; g->p.y = y-a; drawpixel_clip(g); }
1775:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x02) { g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g); }
1776:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x04) { g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g); }
1777:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x08) { g->p.x = x-b; g->p.y = y-a; drawpixel_clip(g); }
1778:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x10) { g->p.x = x-b; g->p.y = y+a; drawpixel_clip(g); }
1779:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x20) { g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g); }
1780:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x40) { g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g); }
1781:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (full & 0x80) { g->p.x = x+b; g->p.y = y+a; drawpixel_clip(g); }
1782:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0)
1783:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
1784:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else
1785:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
1786:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
1787:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0xC0) { g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g); }
1788:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x0C) { g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g); }
1789:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x03) { g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g); }
1790:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full & 0x30) { g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g); }
1791:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (full == 0xFF) {
1792:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush(g);
1793:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
1794:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
1795:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
1796:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1797:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1798:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GFX_USE_GMISC && GMISC_NEED_FIXEDTRIG
1799:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sedge = NONFIXED(radius * ((sbit & 0x99) ? ffsin(start) : ffcos(start)) + FIXED0_5);
1800:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			eedge = NONFIXED(radius * ((ebit & 0x99) ? ffsin(end) : ffcos(end)) + FIXED0_5);
1801:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#elif GFX_USE_GMISC && GMISC_NEED_FASTTRIG
1802:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sedge = floor(radius * ((sbit & 0x99) ? fsin(start) : fcos(start)) + 0.5);
1803:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			eedge = floor(radius * ((ebit & 0x99) ? fsin(end) : fcos(end)) + 0.5);
1804:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
1805:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sedge = floor(radius * ((sbit & 0x99) ? sin(start*GFX_PI/180) : cos(start*GFX_PI/180)) + 0.5);
1806:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			eedge = floor(radius * ((ebit & 0x99) ? sin(end*GFX_PI/180) : cos(end*GFX_PI/180)) + 0.5);
1807:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1808:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sbit & 0xB4) sedge = -sedge;
1809:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (ebit & 0xB4) eedge = -eedge;
1810:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1811:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sbit != ebit) {
1812:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Draw start and end sectors
1813:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Optimized to prevent double drawing
1814:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			a = 1;
1815:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			b = radius;
1816:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			P = 4 - radius;
1817:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x20) || (tbit & 0x40) || (ebit & 0x40)) { g->p.x = x; g->p.y = y+b; drawpixel_clip(
1818:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x02) || (tbit & 0x04) || (ebit & 0x04)) { g->p.x = x; g->p.y = y-b; drawpixel_clip(
1819:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x80) || (tbit & 0x01) || (ebit & 0x01)) { g->p.x = x+b; g->p.y = y; drawpixel_clip(
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 158


1820:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x08) || (tbit & 0x10) || (ebit & 0x10)) { g->p.x = x-b; g->p.y = y; drawpixel_clip(
1821:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1822:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x01) && a >= sedge) || ((ebit & 0x01) && a <= eedge)) { g->p.x = x+b; g->p.y = y-
1823:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x02) && a <= sedge) || ((ebit & 0x02) && a >= eedge)) { g->p.x = x+a; g->p.y = y-
1824:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x04) && a >= sedge) || ((ebit & 0x04) && a <= eedge)) { g->p.x = x-a; g->p.y = y-
1825:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x08) && a <= sedge) || ((ebit & 0x08) && a >= eedge)) { g->p.x = x-b; g->p.y = y-
1826:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x10) && a >= sedge) || ((ebit & 0x10) && a <= eedge)) { g->p.x = x-b; g->p.y = y+
1827:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x20) && a <= sedge) || ((ebit & 0x20) && a >= eedge)) { g->p.x = x-a; g->p.y = y+
1828:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x40) && a >= sedge) || ((ebit & 0x40) && a <= eedge)) { g->p.x = x+a; g->p.y = y+
1829:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x80) && a <= sedge) || ((ebit & 0x80) && a >= eedge)) { g->p.x = x+b; g->p.y = y+
1830:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0)
1831:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
1832:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else
1833:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
1834:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
1835:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x40) && a >= sedge) || ((ebit & 0x40) && a <= eedge) || ((sbit & 0x80) && a <= sed
1836:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g); }
1837:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x04) && a >= sedge) || ((ebit & 0x04) && a <= eedge) || ((sbit & 0x08) && a <= sed
1838:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g); }
1839:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x01) && a >= sedge) || ((ebit & 0x01) && a <= eedge) || ((sbit & 0x02) && a <= sed
1840:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g); }
1841:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x10) && a >= sedge) || ((ebit & 0x10) && a <= eedge) || ((sbit & 0x20) && a <= sed
1842:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g); }
1843:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else if (end < start) {
1844:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Draw start/end sector where it is a non-internal angle
1845:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Optimized to prevent double drawing
1846:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			a = 1;
1847:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			b = radius;
1848:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			P = 4 - radius;
1849:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x60) || (tbit & 0xC0)) { g->p.x = x; g->p.y = y+b; drawpixel_clip(g); }
1850:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x06) || (tbit & 0x0C)) { g->p.x = x; g->p.y = y-b; drawpixel_clip(g); }
1851:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x81) || (tbit & 0x03)) { g->p.x = x+b; g->p.y = y; drawpixel_clip(g); }
1852:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if ((sbit & 0x18) || (tbit & 0x30)) { g->p.x = x-b; g->p.y = y; drawpixel_clip(g); }
1853:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1854:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x01) && (a >= sedge || a <= eedge)) { g->p.x = x+b; g->p.y = y-a; drawpixel_clip(g
1855:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x02) && (a <= sedge || a >= eedge)) { g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g
1856:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x04) && (a >= sedge || a <= eedge)) { g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g
1857:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x08) && (a <= sedge || a >= eedge)) { g->p.x = x-b; g->p.y = y-a; drawpixel_clip(g
1858:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x10) && (a >= sedge || a <= eedge)) { g->p.x = x-b; g->p.y = y+a; drawpixel_clip(g
1859:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x20) && (a <= sedge || a >= eedge)) { g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g
1860:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x40) && (a >= sedge || a <= eedge)) { g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g
1861:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if ((sbit & 0x80) && (a <= sedge || a >= eedge)) { g->p.x = x+b; g->p.y = y+a; drawpixel_clip(g
1862:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0)
1863:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
1864:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else
1865:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
1866:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
1867:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x04) && (a >= sedge || a <= eedge)) || ((sbit & 0x08) && (a <= sedge || a >= eedge
1868:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g); }
1869:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x40) && (a >= sedge || a <= eedge)) || ((sbit & 0x80) && (a <= sedge || a >= eedge
1870:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g); }
1871:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x01) && (a >= sedge || a <= eedge)) || ((sbit & 0x02) && (a <= sedge || a >= eedge
1872:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g); }
1873:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x10) && (a >= sedge || a <= eedge)) || ((sbit & 0x20) && (a <= sedge || a >= eedge
1874:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g); }
1875:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else {
1876:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Draw start/end sector where it is a internal angle
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 159


1877:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Optimized to prevent double drawing
1878:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			a = 1;
1879:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			b = radius;
1880:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			P = 4 - radius;
1881:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x20) && !eedge) || ((sbit & 0x40) && !sedge)) { g->p.x = x; g->p.y = y+b; drawpixe
1882:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x02) && !eedge) || ((sbit & 0x04) && !sedge)) { g->p.x = x; g->p.y = y-b; drawpixe
1883:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x80) && !eedge) || ((sbit & 0x01) && !sedge)) { g->p.x = x+b; g->p.y = y; drawpixe
1884:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x08) && !eedge) || ((sbit & 0x10) && !sedge)) { g->p.x = x-b; g->p.y = y; drawpixe
1885:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
1886:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x01) && a >= sedge && a <= eedge)) { g->p.x = x+b; g->p.y = y-a; drawpixel_clip(g
1887:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x02) && a <= sedge && a >= eedge)) { g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g
1888:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x04) && a >= sedge && a <= eedge)) { g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g
1889:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x08) && a <= sedge && a >= eedge)) { g->p.x = x-b; g->p.y = y-a; drawpixel_clip(g
1890:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x10) && a >= sedge && a <= eedge)) { g->p.x = x-b; g->p.y = y+a; drawpixel_clip(g
1891:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x20) && a <= sedge && a >= eedge)) { g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g
1892:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x40) && a >= sedge && a <= eedge)) { g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g
1893:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (((sbit & 0x80) && a <= sedge && a >= eedge)) { g->p.x = x+b; g->p.y = y+a; drawpixel_clip(g
1894:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0)
1895:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
1896:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else
1897:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
1898:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
1899:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x04) && a >= sedge && a <= eedge) || ((sbit & 0x08) && a <= sedge && a >= eedge))
1900:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y-b; drawpixel_clip(g); }
1901:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x40) && a >= sedge && a <= eedge) || ((sbit & 0x80) && a <= sedge && a >= eedge))
1902:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y+b; drawpixel_clip(g); }
1903:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x01) && a >= sedge && a <= eedge) || ((sbit & 0x02) && a <= sedge && a >= eedge))
1904:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x+a; g->p.y = y-b; drawpixel_clip(g); }
1905:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (((sbit & 0x10) && a >= sedge && a <= eedge) || ((sbit & 0x20) && a <= sedge && a >= eedge))
1906:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{ g->p.x = x-a; g->p.y = y+b; drawpixel_clip(g); }
1907:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
1908:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1909:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
1910:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
1911:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
1912:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
1913:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1914:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARC
1915:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if (!GMISC_NEED_FIXEDTRIG && !GMISC_NEED_FASTTRIG) || !GFX_USE_GMISC
1916:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#include <math.h>
1917:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
1918:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1919:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawThickArc(GDisplay *g, coord_t xc, coord_t yc, coord_t radiusStart, coord_t radiusEn
1920:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t x, y, d, r;
1921:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t startTan, endTan, curangle;
1922:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t precision = 512;
1923:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1924:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Normalize the angles
1925:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (start < 0)
1926:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			start -= (start/360-1)*360;
1927:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (start >= 360)
1928:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			start %= 360;
1929:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (end < 0)
1930:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			end -= (end/360-1)*360;
1931:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else if (end >= 360)
1932:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			end %= 360;
1933:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 160


1934:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GFX_USE_GMISC && GMISC_NEED_FIXEDTRIG
1935:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((start / 45) % 2 == 0){
1936:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = ffsin(start % 45) * precision / ffcos(start % 45) + start / 45 * precision;}
1937:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1938:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = ffsin(start % 45 - 45) * precision / ffcos(start % 45 - 45) + start / 45 * precision
1939:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1940:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((end / 45) % 2 == 0){
1941:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = ffsin(end % 45) * precision / ffcos(end % 45) + end / 45 * precision;}
1942:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1943:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = ffsin(end % 45 - 45) * precision / ffcos(end % 45 - 45) + end / 45 * precision + preci
1944:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#elif GFX_USE_GMISC && GMISC_NEED_FASTTRIG
1945:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((start / 45) % 2 == 0){
1946:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = fsin(start % 45) * precision / fcos(start % 45) + start / 45 * precision;}
1947:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1948:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = fsin(start % 45 - 45) * precision / fcos(start % 45 - 45) + start / 45 * precision +
1949:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1950:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((end / 45) % 2 == 0){
1951:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = fsin(end % 45) * precision / fcos(end % 45) + end / 45 * precision;}
1952:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1953:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = fsin(end % 45 - 45) * precision / fcos(end % 45 - 45) + end / 45 * precision + precisi
1954:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
1955:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((start / 45) % 2 == 0){
1956:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = (tan((start % 45)*GFX_PI/180) + start / 45)* precision;}
1957:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1958:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				startTan = (1+tan((start % 45 - 45)*GFX_PI/180) + start / 45)* precision;}
1959:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1960:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if((end / 45) % 2 == 0){
1961:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = (tan((end % 45) *GFX_PI/180) + end / 45) * precision;}
1962:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			else{
1963:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				endTan = (1+tan((end % 45 - 45) *GFX_PI/180) + end / 45) * precision;}
1964:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
1965:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1966:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
1967:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
1968:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1969:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//Draw concentric circles using Andres algorithm
1970:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(r = radiusStart; r <= radiusEnd; r++)
1971:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
1972:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x = 0;
1973:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y = r;
1974:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			d = r - 1;
1975:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1976:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			while (y >= x){
1977:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				//approximate tan
1978:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				curangle = x*precision/y;
1979:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1980:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if(end > start){
1981:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = color;
1982:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					//Draw points by symmetry
1983:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle > startTan && curangle < endTan){g->p.y = yc - x; g->p.x = xc + y; drawpixel_clip(
1984:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 2*precision > startTan && curangle + 2*precision < endTan){g->p.y = yc - y; g->p
1985:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 4*precision > startTan && curangle + 4*precision < endTan){g->p.y = yc + x; g->p
1986:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 6*precision > startTan && curangle + 6*precision < endTan){g->p.y = yc + y; g->p
1987:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1988:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					curangle = precision - curangle;
1989:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
1990:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + precision > startTan && curangle + precision < endTan){g->p.y = yc - y; g->p.x =
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 161


1991:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 3*precision > startTan && curangle + 3*precision < endTan){g->p.y = yc - x; g->p
1992:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 5*precision > startTan && curangle + 5*precision < endTan){g->p.y = yc + y; g->p
1993:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 7*precision > startTan && curangle + 7*precision < endTan){g->p.y = yc + x; g->p
1994:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						
1995:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
1996:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else{
1997:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					//Draw points by symmetry
1998:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle > startTan || curangle < endTan){g->p.y = yc - x; g->p.x = xc + y; drawpixel_clip(
1999:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 2*precision > startTan || curangle + 2*precision < endTan){g->p.y = yc - y; g->p
2000:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 4*precision > startTan || curangle + 4*precision < endTan){g->p.y = yc + x; g->p
2001:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 6*precision > startTan || curangle + 6*precision < endTan){g->p.y = yc + y; g->p
2002:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2003:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					curangle = precision - curangle;
2004:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2005:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + precision > startTan || curangle + precision < endTan){g->p.y = yc - y; g->p.x =
2006:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 3*precision > startTan || curangle + 3*precision < endTan){g->p.y = yc - x; g->p
2007:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 5*precision > startTan || curangle + 5*precision < endTan){g->p.y = yc + y; g->p
2008:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if(curangle + 7*precision > startTan || curangle + 7*precision < endTan){g->p.y = yc + x; g->p
2009:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2010:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2011:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				//Compute next point
2012:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (d >= 2 * x){
2013:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					d -= 2 * x + 1;
2014:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					x++;
2015:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2016:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else if (d < 2 * (r - y)){
2017:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					d += 2 * y - 1;
2018:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					y--;
2019:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2020:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				else{
2021:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					d += 2 * (y - x - 1);
2022:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					y--;
2023:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					x++;
2024:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2025:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2026:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2027:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2028:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
2029:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
2030:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2031:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2032:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2033:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARC
2034:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillArc(GDisplay *g, coord_t x, coord_t y, coord_t radius, coord_t start, coord_t end, 
2035:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t a, b, P;
2036:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t	sy, ey;
2037:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		fixed	sxa, sxb, sxd, exa, exb, exd;
2038:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		uint8_t	qtr;
2039:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2040:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
2041:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2042:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// We add a half pixel so that we are drawing from the centre of the pixel
2043:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	instead of the left edge of the pixel. This also fixes the implied floor()
2044:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		//	when converting back to a coord_t
2045:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		sxa = exa = FIXED(x) + FIXED0_5;
2046:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2047:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Do the trig to get the formulas for the start and end lines.
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 162


2048:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GFX_USE_GMISC && GMISC_NEED_FIXEDTRIG
2049:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxb = radius*ffcos(start);	sy = NONFIXED(FIXED0_5 - radius*ffsin(start));
2050:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			exb = radius*ffcos(end);	ey = NONFIXED(FIXED0_5 - radius*ffsin(end));
2051:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#elif GFX_USE_GMISC && GMISC_NEED_FASTTRIG
2052:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxb = FP2FIXED(radius*fcos(start));	sy = floor(0.5-radius*fsin(start));
2053:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			exb = FP2FIXED(radius*fcos(end));	ey = floor(0.5-radius*fsin(end));
2054:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
2055:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxb = FP2FIXED(radius*cos(start*GFX_PI/180));	sy = floor(0.5-radius*sin(start*GFX_PI/180));
2056:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			exb = FP2FIXED(radius*cos(end*GFX_PI/180));		ey = floor(0.5-radius*sin(end*GFX_PI/180));
2057:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2058:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		sxd = sy ? sxb/sy : sxb;
2059:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		exd = ey ? exb/ey : exb;
2060:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2061:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate which quarters and which direction we are traveling
2062:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		qtr = 0;
2063:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sxb > 0)	qtr |= 0x01;		// S1=0001(1), S2=0000(0), S3=0010(2), S4=0011(3)
2064:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sy > 0) 	qtr |= 0x02;
2065:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (exb > 0)	qtr |= 0x04;		// E1=0100(4), E2=0000(0), E3=1000(8), E4=1100(12)
2066:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (ey > 0) 	qtr |= 0x08;
2067:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (sy > ey || (sy == ey && sxb > 0))	qtr |= 0x10;		// order of start and end lines
2068:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2069:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Calculate intermediates
2070:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		a = 1;
2071:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		b = radius;
2072:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		P = 4 - radius;
2073:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
2074:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		sxb += sxa;
2075:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		exb += exa;
2076:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2077:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Away we go using Bresenham's circle algorithm
2078:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// This is optimized to prevent overdrawing by drawing a line only when a variable is about to ch
2079:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2080:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		switch(qtr) {
2081:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 0:		// S2E2 sy <= ey
2082:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 1:		// S1E2 sy <= ey
2083:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (ey && sy) {
2084:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x; g->p.x1 = x;								// E2S
2085:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				sxa -= sxd; exa -= exd;
2086:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (sy) {
2087:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x-b; g->p.x1 = x;								// C2S
2088:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				sxa -= sxd;
2089:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (ey) {
2090:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x; g->p.x1 = x+b;								// E2C
2091:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				exa -= exd;
2092:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
2093:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x-b; g->p.x1 = x+b;							// C2C
2094:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2095:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y;
2096:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			hline_clip(g);
2097:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2098:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= ey) {
2099:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = NONFIXED(sxa); hline_clip(g);		// E2S
2100:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd; exa -= exd;
2101:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (-a >= sy) {
2102:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);					// C2S
2103:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd;
2104:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 1) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 163


2105:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2106:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2107:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2108:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2109:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2110:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= ey) {
2111:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = NONFIXED(sxb); hline_clip(g);	// E2S
2112:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd; exb += exd;
2113:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (-b >= sy) {
2114:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = NONFIXED(sxb); hline_clip(g);				// C2S
2115:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd;
2116:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 1) {
2117:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2118:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2119:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2120:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2121:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2122:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= ey) {
2123:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = NONFIXED(sxa); hline_clip(g);			// E2S
2124:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (-a >= sy) {
2125:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);						// C2S
2126:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 1) {
2127:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2128:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2129:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2130:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2131:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 2:		// S3E2 sy <= ey
2132:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 3:		// S4E2 sy <= ey
2133:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 6:		// S3E1 sy <= ey
2134:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 7:		// S4E1 sy <= ey
2135:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 18:	// S3E2 sy > ey
2136:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 19:	// S4E2 sy > ey
2137:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 22:	// S3E1 sy > ey
2138:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 23:	// S4E1 sy > ey
2139:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x; g->p.x1 = x+b; hline_clip(g);								// SE2C
2140:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxa += sxd; exa -= exd;
2141:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2142:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= ey) {
2143:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);			// E2C
2144:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa -= exd;
2145:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 4)) {
2146:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);					// C2C
2147:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2148:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= sy) {
2149:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);			// S2C
2150:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd;
2151:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 1)) {
2152:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);					// C2C
2153:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2154:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2155:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2156:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2157:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= ey) {
2158:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = x+a; hline_clip(g);		// E2C
2159:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb += exd;
2160:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 4)) {
2161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);				// C2C
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 164


2162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2163:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= sy) {
2164:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = x+a; hline_clip(g);		// S2C
2165:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd;
2166:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 1)) {
2167:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g); 				// C2C
2168:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2169:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2170:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2171:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2172:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= ey) {
2173:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);				// E2C
2174:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 4)) {
2175:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2176:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2177:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= sy) {
2178:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+a; hline_clip(g);				// S2C
2179:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 1)) {
2180:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+a; hline_clip(g);						// C2C
2181:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2182:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2183:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2184:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 4:		// S2E1 sy <= ey
2185:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 5:		// S1E1 sy <= ey
2186:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2187:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2188:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= ey) {
2189:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);			// C2S
2190:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);			// E2C
2191:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd; exa -= exd;
2192:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (-a >= sy) {
2193:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);			// C2S
2194:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd;
2195:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 1) {
2196:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);					// C2C
2197:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2198:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2199:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2200:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2201:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2202:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= ey) {
2203:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = NONFIXED(sxb); hline_clip(g);		// C2S
2204:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = x+a; hline_clip(g);		// E2C
2205:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd; exb += exd;
2206:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (-b >= sy) {
2207:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = NONFIXED(sxb); hline_clip(g);		// C2S
2208:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd;
2209:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 1) {
2210:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);				// C2C
2211:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2212:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);					// C2C
2213:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2214:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2215:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2216:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= ey) {
2217:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);				// C2S
2218:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);				// E2C
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 165


2219:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (-a >= sy) {
2220:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);				// C2S
2221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 1) {
2222:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2223:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2224:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);							// C2C
2225:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2226:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2227:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 8:		// S2E3 sy <= ey
2228:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 9:		// S1E3 sy <= ey
2229:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 12:	// S2E4 sy <= ey
2230:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 13:	// S1E4 sy <= ey
2231:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 24:	// S2E3 sy > ey
2232:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 25:	// S1E3 sy > ey
2233:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 28:	// S2E3 sy > ey
2234:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 29:	// S1E3 sy > ey
2235:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x-b; g->p.x1 = x; hline_clip(g);								// C2SE
2236:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxa -= sxd; exa += exd;
2237:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2238:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= sy) {
2239:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);			// C2S
2240:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd;
2241:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 1) {
2242:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);					// C2C
2243:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2244:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= ey) {
2245:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);			// C2E
2246:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa += exd;
2247:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 4) {
2248:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);					// C2C
2249:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2250:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2251:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2252:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2253:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= sy) {
2254:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = NONFIXED(sxb); hline_clip(g);		// C2S
2255:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd;
2256:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 1) {
2257:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);				// C2C
2258:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2259:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= ey) {
2260:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = NONFIXED(exb); hline_clip(g);		// C2E
2261:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb -= exd;
2262:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 4) {
2263:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g); 				// C2C
2264:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2265:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2266:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2267:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2268:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= sy) {
2269:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);				// C2S
2270:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 1) {
2271:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2272:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2273:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= ey) {
2274:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);				// C2E
2275:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 4) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 166


2276:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+a; hline_clip(g);						// C2C
2277:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2278:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2279:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2280:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 10:	// S3E3 sy <= ey
2281:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 14:	// S3E4 sy <= ey
2282:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x; drawpixel_clip(g);													// S2E
2283:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxa += sxd; exa += exd;
2284:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2285:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= sy) {
2286:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = NONFIXED(exa); hline_clip(g);		// S2E
2287:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd; exa += exd;
2288:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (a <= ey) {
2289:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);					// C2E
2290:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa += exd;
2291:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 4) {
2292:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2293:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2294:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2295:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2296:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2297:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= sy) {
2298:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = NONFIXED(exb); hline_clip(g);	// S2E
2299:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd; exb -= exd;
2300:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (b <= ey) {
2301:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = NONFIXED(exb); hline_clip(g);				// C2E
2302:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb -= exd;
2303:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 4) {
2304:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2305:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2306:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2307:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2308:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2309:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= sy) {
2310:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = NONFIXED(exa); hline_clip(g);			// S2E
2311:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (a <= ey) {
2312:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);						// C2E
2313:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 4) {
2314:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2315:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2316:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2317:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2318:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 11:	// S4E3 sy <= ey
2319:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 15:	// S4E4 sy <= ey
2320:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);									// C2C
2321:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2322:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2323:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= sy) {
2324:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);				// C2E
2325:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);				// S2C
2326:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd; exa += exd;
2327:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (a <= ey) {
2328:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);				// C2E
2329:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa += exd;
2330:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (qtr & 4) {
2331:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2332:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 167


2333:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2334:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2335:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2336:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2337:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= sy) {
2338:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = NONFIXED(exb); hline_clip(g);			// C2E
2339:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = x+a; hline_clip(g);			// S2C
2340:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd; exb -= exd;
2341:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (b <= ey) {
2342:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = NONFIXED(exb); hline_clip(g);			// C2E
2343:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb -= exd;
2344:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (qtr & 4) {
2345:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);					// C2C
2346:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2347:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2348:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2349:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2350:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2351:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= sy) {
2352:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);					// C2E
2353:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);					// S2C
2354:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (a <= ey) {
2355:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);					// C2E
2356:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (qtr & 4) {
2357:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2358:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2359:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2360:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2361:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 16:	// S2E2	sy > ey
2362:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 20:	// S2E1 sy > ey
2363:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);									// C2C
2364:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			sxa -= sxd; exa -= exd;
2365:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2366:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= sy) {
2367:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);				// C2S
2368:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);				// E2C
2369:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd; exa -= exd;
2370:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (-a >= ey) {
2371:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);				// E2C
2372:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa -= exd;
2373:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 4)){
2374:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g); 						// C2C
2375:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2376:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g); 							// C2C
2377:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2378:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2379:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2380:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= sy) {
2381:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = NONFIXED(sxb); hline_clip(g);			// C2S
2382:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = x+a; hline_clip(g);			// E2C
2383:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd; exb += exd;
2384:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (-b >= ey) {
2385:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = x+a; hline_clip(g);			// E2C
2386:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb += exd;
2387:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 4)){
2388:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g); 					// C2C
2389:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 168


2390:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g); 						// C2C
2391:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2392:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2393:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2394:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= sy) {
2395:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = NONFIXED(sxa); hline_clip(g);					// C2S
2396:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);					// E2C
2397:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (-a >= ey) {
2398:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);					// E2C
2399:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 4)){
2400:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g); 							// C2C
2401:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2402:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g); 								// C2C
2403:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2404:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2405:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 17:	// S1E2 sy > ey
2406:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 21:	// S1E1 sy > ey
2407:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (sy) {
2408:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x; g->p.x1 = x;																// E2S
2409:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				sxa -= sxd; exa -= exd;
2410:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
2411:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x; g->p.x1 = x+b;																// E2C
2412:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				exa -= exd;
2413:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2414:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y;
2415:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			hline_clip(g);
2416:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2417:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (-a >= sy) {
2418:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = NONFIXED(sxa); hline_clip(g);		// E2S
2419:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa -= sxd; exa -= exd;
2420:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (-a >= ey) {
2421:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);					// E2C
2422:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					exa -= exd;
2423:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 4)) {
2424:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2425:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2426:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2427:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2428:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2429:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (-b >= sy) {
2430:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = NONFIXED(sxb); hline_clip(g);	// E2S
2431:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb += sxd; exb += exd;
2432:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (-b >= ey) {
2433:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = NONFIXED(exb); g->p.x1 = x+a; hline_clip(g);				// E2C
2434:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						exb += exd;
2435:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 4)) {
2436:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2437:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2438:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2439:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2440:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2441:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (-a >= sy) {
2442:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = NONFIXED(sxa); hline_clip(g);			// E2S
2443:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (-a >= ey) {
2444:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = NONFIXED(exa); g->p.x1 = x+b; hline_clip(g);						// E2C
2445:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 4)) {
2446:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 169


2447:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2448:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2449:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2450:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 26:	// S3E3 sy > ey
2451:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 27:	// S4E3 sy > ey
2452:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);									// C2C
2453:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2454:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2455:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= ey) {
2456:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);				// C2E
2457:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);				// S2C
2458:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd; exa += exd;
2459:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (a <= sy) {
2460:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);				// S2C
2461:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd;
2462:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 1)) {
2463:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);						// C2C
2464:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2465:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2466:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2467:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2468:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y-b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2469:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= ey) {
2470:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = NONFIXED(exb); hline_clip(g);			// C2E
2471:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = x+a; hline_clip(g);			// S2C
2472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd; exb -= exd;
2473:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (b <= sy) {
2474:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = x+a; hline_clip(g);			// S2C
2475:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd;
2476:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 1)) {
2477:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);					// C2C
2478:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2479:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2480:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2481:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2482:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.y = y-a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2483:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= ey) {
2484:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = NONFIXED(exa); hline_clip(g);					// C2E
2485:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);					// S2C
2486:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (a <= sy) {
2487:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);					// S2C
2488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 4)) {
2489:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
2490:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2491:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2492:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2493:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 30:	// S3E4 sy > ey
2494:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case 31:	// S4E4 sy > ey
2495:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			do {
2496:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (a <= ey) {
2497:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = NONFIXED(exa); hline_clip(g);		// S2E
2498:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd; exa += exd;
2499:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (a <= sy) {
2500:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);					// S2C
2501:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					sxa += sxd;
2502:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (!(qtr & 1)) {
2503:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);							// C2C
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 170


2504:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2505:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (P < 0) {
2506:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 3 + 2*a++;
2507:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else {
2508:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (b <= ey) {
2509:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = NONFIXED(exb); hline_clip(g);	// S2E
2510:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd; exb -= exd;
2511:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (b <= sy) {
2512:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = NONFIXED(sxb); g->p.x1 = x+a; hline_clip(g);				// S2C
2513:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						sxb -= sxd;
2514:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else if (!(qtr & 1)) {
2515:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						g->p.y = y+b; g->p.x = x-a; g->p.x1 = x+a; hline_clip(g);						// C2C
2516:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2517:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					P += 5 + 2*(a++ - b--);
2518:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2519:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} while(a < b);
2520:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (a <= ey) {
2521:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = NONFIXED(exa); hline_clip(g);			// S2E
2522:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (a <= sy) {
2523:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = NONFIXED(sxa); g->p.x1 = x+b; hline_clip(g);						// S2C
2524:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else if (!(qtr & 4)) {
2525:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y+a; g->p.x = x-b; g->p.x1 = x+b; hline_clip(g);								// C2C
2526:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2527:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
2528:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2529:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2530:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
2531:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
2532:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2533:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2534:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2535:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARC || GDISP_NEED_ARCSECTORS
2536:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawRoundedBox(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, coord_t radiu
2537:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (2*radius > cx || 2*radius > cy) {
2538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawBox(g, x, y, cx, cy, color);
2539:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
2540:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2541:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2542:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_ARCSECTORS
2543:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArcSectors(g, x+radius, y+radius, radius, 0x0C, color);
2544:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArcSectors(g, x+cx-1-radius, y+radius, radius, 0x03, color);
2545:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArcSectors(g, x+cx-1-radius, y+cy-1-radius, radius, 0xC0, color);
2546:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArcSectors(g, x+radius, y+cy-1-radius, radius, 0x30, color);
2547:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
2548:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArc(g, x+radius, y+radius, radius, 90, 180, color);
2549:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArc(g, x+cx-1-radius, y+radius, radius, 0, 90, color);
2550:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArc(g, x+cx-1-radius, y+cy-1-radius, radius, 270, 360, color);
2551:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGDrawArc(g, x+radius, y+cy-1-radius, radius, 180, 270, color);
2552:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2553:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGDrawLine(g, x+radius+1, y, x+cx-2-radius, y, color);
2554:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGDrawLine(g, x+cx-1, y+radius+1, x+cx-1, y+cy-2-radius, color);
2555:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGDrawLine(g, x+radius+1, y+cy-1, x+cx-2-radius, y+cy-1, color);
2556:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGDrawLine(g, x, y+radius+1, x, y+cy-2-radius, color);
2557:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2558:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2559:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2560:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_ARC || GDISP_NEED_ARCSECTORS
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 171


2561:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillRoundedBox(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, coord_t radiu
2562:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t radius2;
2563:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2564:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		radius2 = radius*2;
2565:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (radius2 > cx || radius2 > cy) {
2566:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArea(g, x, y, cx, cy, color);
2567:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
2568:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2569:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_ARCSECTORS
2570:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArcSectors(g, x+radius, y+radius, radius, 0x0C, color);
2571:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArcSectors(g, x+cx-1-radius, y+radius, radius, 0x03, color);
2572:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArcSectors(g, x+cx-1-radius, y+cy-1-radius, radius, 0xC0, color);
2573:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArcSectors(g, x+radius, y+cy-1-radius, radius, 0x30, color);
2574:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
2575:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArc(g, x+radius, y+radius, radius, 90, 180, color);
2576:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArc(g, x+cx-1-radius, y+radius, radius, 0, 90, color);
2577:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArc(g, x+cx-1-radius, y+cy-1-radius, radius, 270, 360, color);
2578:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillArc(g, x+radius, y+cy-1-radius, radius, 180, 270, color);
2579:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2580:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGFillArea(g, x+radius+1, y, cx-radius2, radius, color);
2581:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGFillArea(g, x+radius+1, y+cy-radius, cx-radius2, radius, color);
2582:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		gdispGFillArea(g, x, y+radius, cx, cy-radius2, color);
2583:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2584:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2585:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2586:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_PIXELREAD
2587:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	color_t gdispGGetPixelColor(GDisplay *g, coord_t x, coord_t y) {
2588:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		color_t		c;
2589:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2590:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Always synchronous as it must return a value */
2591:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
2592:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_PIXELREAD
2593:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_PIXELREAD == HARDWARE_AUTODETECT
2594:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->get)
2595:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2596:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
2597:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Best is direct pixel read
2598:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x;
2599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y;
2600:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				c = gdisp_lld_get_pixel_color(g);
2601:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
2602:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return c;
2603:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2604:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2605:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_PIXELREAD != TRUE && GDISP_HARDWARE_STREAM_READ
2606:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_STREAM_READ == HARDWARE_AUTODETECT
2607:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (gvmt(g)->readcolor)
2608:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2609:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
2610:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Next best is hardware streaming
2611:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x;
2612:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.y = y;
2613:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cx = 1;
2614:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.cy = 1;
2615:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_read_start(g);
2616:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				c = gdisp_lld_read_color(g);
2617:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				gdisp_lld_read_stop(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 172


2618:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
2619:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return c;
2620:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2621:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2622:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_PIXELREAD != TRUE && GDISP_HARDWARE_STREAM_READ != TRUE
2623:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if !GDISP_HARDWARE_PIXELREAD && !GDISP_HARDWARE_STREAM_READ
2624:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Worst is "not possible"
2625:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#error "GDISP: GDISP_NEED_PIXELREAD has been set but there is no hardware support for reading t
2626:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2627:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
2628:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return 0;
2629:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2630:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2631:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2632:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2633:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_SCROLL
2634:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGVerticalScroll(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, int lines, co
2635:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t		abslines;
2636:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_HARDWARE_SCROLL != TRUE
2637:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			coord_t 	fy, dy, ix, fx, i, j;
2638:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2639:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2640:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!lines) return;
2641:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2642:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
2643:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if NEED_CLIPPING
2644:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
2645:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!gvmt(g)->setclip)
2646:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2647:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			{
2648:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (x < g->clipx0) { cx -= g->clipx0 - x; x = g->clipx0; }
2649:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (y < g->clipy0) { cy -= g->clipy0 - y; y = g->clipy0; }
2650:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (cx <= 0 || cy <= 0 || x >= g->clipx1 || y >= g->clipy1) { MUTEX_EXIT(g); return; }
2651:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (x+cx > g->clipx1)	cx = g->clipx1 - x;
2652:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (y+cy > g->clipy1)	cy = g->clipy1 - y;
2653:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2654:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
2655:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2656:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		abslines = lines < 0 ? -lines : lines;
2657:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (abslines >= cy) {
2658:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			abslines = cy;
2659:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			cy = 0;
2660:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else {
2661:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Best is hardware scroll
2662:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_SCROLL
2663:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_SCROLL == HARDWARE_AUTODETECT
2664:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (gvmt(g)->vscroll)
2665:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
2666:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{
2667:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x = x;
2668:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y = y;
2669:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cx = cx;
2670:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.cy = cy;
2671:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.y1 = lines;
2672:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.color = bgcolor;
2673:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					gdisp_lld_vertical_scroll(g);
2674:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					cy -= abslines;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 173


2675:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2676:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#if GDISP_HARDWARE_SCROLL == HARDWARE_AUTODETECT
2677:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					else
2678:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#endif
2679:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#elif GDISP_LINEBUF_SIZE == 0
2680:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				#error "GDISP: GDISP_NEED_SCROLL is set but there is no hardware support and GDISP_LINEBUF_SIZE
2681:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2682:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2683:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Scroll Emulation
2684:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_SCROLL != TRUE
2685:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				{
2686:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					cy -= abslines;
2687:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (lines < 0) {
2688:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						fy = y+cy-1;
2689:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						dy = -1;
2690:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					} else {
2691:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						fy = y;
2692:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						dy = 1;
2693:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2694:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					// Move the screen - one line at a time
2695:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					for(i = 0; i < cy; i++, fy += dy) {
2696:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2697:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						// Handle where the buffer is smaller than a line
2698:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						for(ix=0; ix < cx; ix += GDISP_LINEBUF_SIZE) {
2699:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2700:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Calculate the data we can move in one operation
2701:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							fx = cx - ix;
2702:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							if (fx > GDISP_LINEBUF_SIZE)
2703:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								fx = GDISP_LINEBUF_SIZE;
2704:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2705:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Read one line of data from the screen
2706:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2707:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Best line read is hardware streaming
2708:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_STREAM_READ
2709:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_STREAM_READ == HARDWARE_AUTODETECT
2710:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									if (gvmt(g)->readstart)
2711:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2712:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2713:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x = x+ix;
2714:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y = fy+lines;
2715:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cx = fx;
2716:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cy = 1;
2717:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									gdisp_lld_read_start(g);
2718:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									for(j=0; j < fx; j++)
2719:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->linebuf[j] = gdisp_lld_read_color(g);
2720:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									gdisp_lld_read_stop(g);
2721:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
2722:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_STREAM_READ == HARDWARE_AUTODETECT
2723:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									else
2724:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2725:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2726:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2727:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Next best line read is single pixel reads
2728:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_STREAM_READ != TRUE && GDISP_HARDWARE_PIXELREAD
2729:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_PIXELREAD == HARDWARE_AUTODETECT
2730:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									if (gvmt(g)->get)
2731:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 174


2732:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2733:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									for(j=0; j < fx; j++) {
2734:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->p.x = x+ix+j;
2735:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->p.y = fy+lines;
2736:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->linebuf[j] = gdisp_lld_get_pixel_color(g);
2737:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									}
2738:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
2739:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_PIXELREAD == HARDWARE_AUTODETECT
2740:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									else {
2741:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										// Worst is "not possible"
2742:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										MUTEX_EXIT(g);
2743:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										return;
2744:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									}
2745:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2746:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2747:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2748:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Worst is "not possible"
2749:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if !GDISP_HARDWARE_STREAM_READ && !GDISP_HARDWARE_PIXELREAD
2750:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#error "GDISP: GDISP_NEED_SCROLL is set but there is no hardware support for scrolling or r
2751:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2752:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2753:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Write that line to the new location
2754:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2755:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Best line write is hardware bitfills
2756:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_BITFILLS
2757:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_BITFILLS == HARDWARE_AUTODETECT
2758:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									if (gvmt(g)->blit)
2759:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2760:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2761:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x = x+ix;
2762:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y = fy;
2763:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cx = fx;
2764:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cy = 1;
2765:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x1 = 0;
2766:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y1 = 0;
2767:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x2 = fx;
2768:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.ptr = (void *)g->linebuf;
2769:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									gdisp_lld_blit_area(g);
2770:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
2771:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_BITFILLS == HARDWARE_AUTODETECT
2772:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									else
2773:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2774:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2775:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2776:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Next best line write is hardware streaming
2777:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE
2778:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
2779:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									if (gvmt(g)->writestart)
2780:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2781:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2782:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x = x+ix;
2783:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y = fy;
2784:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cx = fx;
2785:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cy = 1;
2786:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									gdisp_lld_write_start(g);
2787:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									#if GDISP_HARDWARE_STREAM_POS
2788:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										gdisp_lld_write_pos(g);
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 175


2789:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									#endif
2790:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									for(j = 0; j < fx; j++) {
2791:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->p.color = g->linebuf[j];
2792:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										gdisp_lld_write_color(g);
2793:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									}
2794:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									gdisp_lld_write_stop(g);
2795:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
2796:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_STREAM_WRITE == HARDWARE_AUTODETECT
2797:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									else
2798:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2799:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2800:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2801:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Next best line write is drawing pixels in combination with filling
2802:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE
2803:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								// We don't need to test for auto-detect on drawpixel as we know we have it because we don'
2804:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
2805:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									if (gvmt(g)->fill)
2806:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2807:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2808:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y = fy;
2809:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cy = 1;
2810:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.x = x+ix;
2811:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.cx = 1;
2812:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									for(j = 0; j < fx; ) {
2813:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->p.color = g->linebuf[j];
2814:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										if (j + g->p.cx < fx && g->linebuf[j] == g->linebuf[j + g->p.cx])
2815:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											g->p.cx++;
2816:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										else if (g->p.cx == 1) {
2817:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											gdisp_lld_draw_pixel(g);
2818:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											j++;
2819:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											g->p.x++;
2820:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										} else {
2821:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											gdisp_lld_fill_area(g);
2822:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											j += g->p.cx;
2823:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											g->p.x += g->p.cx;
2824:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 											g->p.cx = 1;
2825:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										}
2826:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									}
2827:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
2828:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#if GDISP_HARDWARE_FILLS == HARDWARE_AUTODETECT
2829:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									else
2830:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								#endif
2831:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2832:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2833:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							// Worst line write is drawing pixels
2834:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#if GDISP_HARDWARE_BITFILLS != TRUE && GDISP_HARDWARE_STREAM_WRITE != TRUE && GDISP_HARDWARE
2835:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								// The following test is unneeded because we are guaranteed to have draw pixel if we don't 
2836:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								//#if GDISP_HARDWARE_DRAWPIXEL == HARDWARE_AUTODETECT
2837:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								//	if (gvmt(g)->pixel)
2838:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								//#endif
2839:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								{
2840:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									g->p.y = fy;
2841:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									for(g->p.x = x+ix, j = 0; j < fx; g->p.x++, j++) {
2842:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										g->p.color = g->linebuf[j];
2843:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 										gdisp_lld_draw_pixel(g);
2844:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 									}
2845:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 								}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 176


2846:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							#endif
2847:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						}
2848:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
2849:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2850:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2851:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2852:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2853:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* fill the remaining gap */
2854:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x;
2855:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.y = lines > 0 ? (y+cy) : y;
2856:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = cx;
2857:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cy = abslines;
2858:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = bgcolor;
2859:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		fillarea(g);
2860:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush_stopdone(g);
2861:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
2862:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2863:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2864:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2865:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_CONTROL
2866:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_CONTROL
2867:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		void gdispGControl(GDisplay *g, unsigned what, void *value) {
2868:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_CONTROL == HARDWARE_AUTODETECT
2869:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!gvmt(g)->control)
2870:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					return;
2871:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2872:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_ENTER(g);
2873:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = what;
2874:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.ptr = value;
2875:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (what == GDISP_CONTROL_ORIENTATION) {
2876:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				switch ((orientation_t) value) {
2877:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				case GDISP_ROTATE_LANDSCAPE:
2878:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.ptr = g->g.Width >= g->g.Height ? (void *)GDISP_ROTATE_0 : (void *)GDISP_ROTATE_90;
2879:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					break;
2880:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				case GDISP_ROTATE_PORTRAIT:
2881:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.ptr = g->g.Width >= g->g.Height ? (void *)GDISP_ROTATE_90 : (void *)GDISP_ROTATE_0;
2882:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					break;
2883:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				default:
2884:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					break;
2885:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2886:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2887:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdisp_lld_control(g);
2888:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_NEED_CLIP || GDISP_NEED_VALIDATION
2889:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (what == GDISP_CONTROL_ORIENTATION) {
2890:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					// Best is hardware clipping
2891:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#if GDISP_HARDWARE_CLIP
2892:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
2893:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							if (gvmt(g)->setclip)
2894:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						#endif
2895:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						{
2896:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->p.x = 0;
2897:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->p.y = 0;
2898:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->p.cx = g->g.Width;
2899:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->p.cy = g->g.Height;
2900:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							gdisp_lld_set_clip(g);
2901:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						}
2902:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						#if GDISP_HARDWARE_CLIP == HARDWARE_AUTODETECT
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 177


2903:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							else
2904:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						#endif
2905:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#endif
2906:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2907:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					// Worst is software clipping
2908:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#if GDISP_HARDWARE_CLIP != TRUE
2909:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						{
2910:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->clipx0 = 0;
2911:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->clipy0 = 0;
2912:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->clipx1 = g->g.Width;
2913:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 							g->clipy1 = g->g.Height;
2914:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						}
2915:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					#endif
2916:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
2917:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2918:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
2919:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2920:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
2921:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		void gdispGControl(GDisplay *g, unsigned what, void *value) {
2922:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void)g;
2923:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void)what;
2924:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void)value;
2925:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Ignore everything */
2926:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2927:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
2928:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2929:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2930:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_QUERY
2931:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_HARDWARE_QUERY
2932:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		void *gdispGQuery(GDisplay *g, unsigned what) {
2933:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			void *res;
2934:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2935:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_HARDWARE_QUERY == HARDWARE_AUTODETECT
2936:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (!gvmt(g)->query)
2937:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					return -1;
2938:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
2939:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_ENTER(g);
2940:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = (coord_t)what;
2941:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			res = gdisp_lld_query(g);
2942:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			MUTEX_EXIT(g);
2943:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return res;
2944:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2945:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
2946:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		void *gdispGQuery(GDisplay *g, unsigned what) {
2947:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void) what;
2948:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return (void *)-1;
2949:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2950:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
2951:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
2952:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2953:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
2954:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /* High Level Driver Routines.                                               */
2955:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** /*===========================================================================*/
2956:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2957:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** void gdispGDrawBox(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, color_t color) {
 6043              		.loc 6 2957 0
 6044              		.cfi_startproc
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 178


 6045              		@ args = 8, pretend = 0, frame = 16
 6046              		@ frame_needed = 1, uses_anonymous_args = 0
 6047 0000 90B5     		push	{r4, r7, lr}
 6048              		.cfi_def_cfa_offset 12
 6049              		.cfi_offset 4, -12
 6050              		.cfi_offset 7, -8
 6051              		.cfi_offset 14, -4
 6052 0002 85B0     		sub	sp, sp, #20
 6053              		.cfi_def_cfa_offset 32
 6054 0004 00AF     		add	r7, sp, #0
 6055              		.cfi_def_cfa_register 7
 6056 0006 F860     		str	r0, [r7, #12]
 6057 0008 0C00     		movs	r4, r1
 6058 000a 1000     		movs	r0, r2
 6059 000c 1900     		movs	r1, r3
 6060 000e 0A23     		movs	r3, #10
 6061 0010 FB18     		adds	r3, r7, r3
 6062 0012 221C     		adds	r2, r4, #0
 6063 0014 1A80     		strh	r2, [r3]
 6064 0016 0823     		movs	r3, #8
 6065 0018 FB18     		adds	r3, r7, r3
 6066 001a 021C     		adds	r2, r0, #0
 6067 001c 1A80     		strh	r2, [r3]
 6068 001e BB1D     		adds	r3, r7, #6
 6069 0020 0A1C     		adds	r2, r1, #0
 6070 0022 1A80     		strh	r2, [r3]
2958:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (cx <= 0 || cy <= 0) return;
 6071              		.loc 6 2958 0
 6072 0024 BB1D     		adds	r3, r7, #6
 6073 0026 0022     		movs	r2, #0
 6074 0028 9B5E     		ldrsh	r3, [r3, r2]
 6075 002a 002B     		cmp	r3, #0
 6076 002c 00DC     		bgt	.LCB5155
 6077 002e E2E0     		b	.L377	@long jump
 6078              	.LCB5155:
 6079              		.loc 6 2958 0 is_stmt 0 discriminator 1
 6080 0030 2023     		movs	r3, #32
 6081 0032 FB18     		adds	r3, r7, r3
 6082 0034 0022     		movs	r2, #0
 6083 0036 9B5E     		ldrsh	r3, [r3, r2]
 6084 0038 002B     		cmp	r3, #0
 6085 003a 00DC     		bgt	.LCB5160
 6086 003c DBE0     		b	.L377	@long jump
 6087              	.LCB5160:
2959:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	cx = x+cx-1; cy = y+cy-1;			// cx, cy are now the end point.
 6088              		.loc 6 2959 0 is_stmt 1
 6089 003e 0A23     		movs	r3, #10
 6090 0040 FB18     		adds	r3, r7, r3
 6091 0042 1A88     		ldrh	r2, [r3]
 6092 0044 BB1D     		adds	r3, r7, #6
 6093 0046 1B88     		ldrh	r3, [r3]
 6094 0048 D318     		adds	r3, r2, r3
 6095 004a 9BB2     		uxth	r3, r3
 6096 004c 013B     		subs	r3, r3, #1
 6097 004e 9AB2     		uxth	r2, r3
 6098 0050 BB1D     		adds	r3, r7, #6
 6099 0052 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 179


 6100 0054 0823     		movs	r3, #8
 6101 0056 FB18     		adds	r3, r7, r3
 6102 0058 1A88     		ldrh	r2, [r3]
 6103 005a 2023     		movs	r3, #32
 6104 005c FB18     		adds	r3, r7, r3
 6105 005e 1B88     		ldrh	r3, [r3]
 6106 0060 D318     		adds	r3, r2, r3
 6107 0062 9BB2     		uxth	r3, r3
 6108 0064 013B     		subs	r3, r3, #1
 6109 0066 9AB2     		uxth	r2, r3
 6110 0068 2023     		movs	r3, #32
 6111 006a FB18     		adds	r3, r7, r3
 6112 006c 1A80     		strh	r2, [r3]
2960:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2961:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_ENTER(g);
2962:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2963:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g->p.color = color;
 6113              		.loc 6 2963 0
 6114 006e FB68     		ldr	r3, [r7, #12]
 6115 0070 2422     		movs	r2, #36
 6116 0072 BA18     		adds	r2, r7, r2
 6117 0074 1288     		ldrh	r2, [r2]
 6118 0076 1A87     		strh	r2, [r3, #56]
2964:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2965:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	if (cx - x > 2) {
 6119              		.loc 6 2965 0
 6120 0078 BB1D     		adds	r3, r7, #6
 6121 007a 0022     		movs	r2, #0
 6122 007c 9A5E     		ldrsh	r2, [r3, r2]
 6123 007e 0A23     		movs	r3, #10
 6124 0080 FB18     		adds	r3, r7, r3
 6125 0082 0021     		movs	r1, #0
 6126 0084 5B5E     		ldrsh	r3, [r3, r1]
 6127 0086 D31A     		subs	r3, r2, r3
 6128 0088 022B     		cmp	r3, #2
 6129 008a 00DC     		bgt	.LCB5197
 6130 008c 73E0     		b	.L374	@long jump
 6131              	.LCB5197:
2966:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x; g->p.y = y; g->p.x1 = cx; hline_clip(g);
 6132              		.loc 6 2966 0
 6133 008e FB68     		ldr	r3, [r7, #12]
 6134 0090 0A22     		movs	r2, #10
 6135 0092 BA18     		adds	r2, r7, r2
 6136 0094 1288     		ldrh	r2, [r2]
 6137 0096 1A85     		strh	r2, [r3, #40]
 6138 0098 FB68     		ldr	r3, [r7, #12]
 6139 009a 0822     		movs	r2, #8
 6140 009c BA18     		adds	r2, r7, r2
 6141 009e 1288     		ldrh	r2, [r2]
 6142 00a0 5A85     		strh	r2, [r3, #42]
 6143 00a2 FB68     		ldr	r3, [r7, #12]
 6144 00a4 BA1D     		adds	r2, r7, #6
 6145 00a6 1288     		ldrh	r2, [r2]
 6146 00a8 1A86     		strh	r2, [r3, #48]
 6147 00aa FB68     		ldr	r3, [r7, #12]
 6148 00ac 1800     		movs	r0, r3
 6149 00ae FFF7FEFF 		bl	hline_clip
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 180


2967:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (y != cy) {
 6150              		.loc 6 2967 0
 6151 00b2 0823     		movs	r3, #8
 6152 00b4 FB18     		adds	r3, r7, r3
 6153 00b6 2022     		movs	r2, #32
 6154 00b8 B918     		adds	r1, r7, r2
 6155 00ba 0022     		movs	r2, #0
 6156 00bc 9A5E     		ldrsh	r2, [r3, r2]
 6157 00be 0023     		movs	r3, #0
 6158 00c0 CB5E     		ldrsh	r3, [r1, r3]
 6159 00c2 9A42     		cmp	r2, r3
 6160 00c4 00D1     		bne	.LCB5222
 6161 00c6 84E0     		b	.L376	@long jump
 6162              	.LCB5222:
2968:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = x; g->p.y = cy; g->p.x1 = cx; hline_clip(g);
 6163              		.loc 6 2968 0
 6164 00c8 FB68     		ldr	r3, [r7, #12]
 6165 00ca 0A22     		movs	r2, #10
 6166 00cc BA18     		adds	r2, r7, r2
 6167 00ce 1288     		ldrh	r2, [r2]
 6168 00d0 1A85     		strh	r2, [r3, #40]
 6169 00d2 FB68     		ldr	r3, [r7, #12]
 6170 00d4 2022     		movs	r2, #32
 6171 00d6 BA18     		adds	r2, r7, r2
 6172 00d8 1288     		ldrh	r2, [r2]
 6173 00da 5A85     		strh	r2, [r3, #42]
 6174 00dc FB68     		ldr	r3, [r7, #12]
 6175 00de BA1D     		adds	r2, r7, #6
 6176 00e0 1288     		ldrh	r2, [r2]
 6177 00e2 1A86     		strh	r2, [r3, #48]
 6178 00e4 FB68     		ldr	r3, [r7, #12]
 6179 00e6 1800     		movs	r0, r3
 6180 00e8 FFF7FEFF 		bl	hline_clip
2969:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (cy - y > 2) {
 6181              		.loc 6 2969 0
 6182 00ec 2023     		movs	r3, #32
 6183 00ee FB18     		adds	r3, r7, r3
 6184 00f0 0022     		movs	r2, #0
 6185 00f2 9A5E     		ldrsh	r2, [r3, r2]
 6186 00f4 0823     		movs	r3, #8
 6187 00f6 FB18     		adds	r3, r7, r3
 6188 00f8 0021     		movs	r1, #0
 6189 00fa 5B5E     		ldrsh	r3, [r3, r1]
 6190 00fc D31A     		subs	r3, r2, r3
 6191 00fe 022B     		cmp	r3, #2
 6192 0100 67DD     		ble	.L376
2970:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				y++; cy--;
 6193              		.loc 6 2970 0
 6194 0102 0823     		movs	r3, #8
 6195 0104 FB18     		adds	r3, r7, r3
 6196 0106 0022     		movs	r2, #0
 6197 0108 9B5E     		ldrsh	r3, [r3, r2]
 6198 010a 9BB2     		uxth	r3, r3
 6199 010c 0133     		adds	r3, r3, #1
 6200 010e 9AB2     		uxth	r2, r3
 6201 0110 0823     		movs	r3, #8
 6202 0112 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 181


 6203 0114 1A80     		strh	r2, [r3]
 6204 0116 2023     		movs	r3, #32
 6205 0118 FB18     		adds	r3, r7, r3
 6206 011a 0022     		movs	r2, #0
 6207 011c 9B5E     		ldrsh	r3, [r3, r2]
 6208 011e 9BB2     		uxth	r3, r3
 6209 0120 013B     		subs	r3, r3, #1
 6210 0122 9AB2     		uxth	r2, r3
 6211 0124 2023     		movs	r3, #32
 6212 0126 FB18     		adds	r3, r7, r3
 6213 0128 1A80     		strh	r2, [r3]
2971:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = x; g->p.y = y; g->p.y1 = cy; vline_clip(g);
 6214              		.loc 6 2971 0
 6215 012a FB68     		ldr	r3, [r7, #12]
 6216 012c 0A22     		movs	r2, #10
 6217 012e BA18     		adds	r2, r7, r2
 6218 0130 1288     		ldrh	r2, [r2]
 6219 0132 1A85     		strh	r2, [r3, #40]
 6220 0134 FB68     		ldr	r3, [r7, #12]
 6221 0136 0822     		movs	r2, #8
 6222 0138 BA18     		adds	r2, r7, r2
 6223 013a 1288     		ldrh	r2, [r2]
 6224 013c 5A85     		strh	r2, [r3, #42]
 6225 013e FB68     		ldr	r3, [r7, #12]
 6226 0140 2022     		movs	r2, #32
 6227 0142 BA18     		adds	r2, r7, r2
 6228 0144 1288     		ldrh	r2, [r2]
 6229 0146 5A86     		strh	r2, [r3, #50]
 6230 0148 FB68     		ldr	r3, [r7, #12]
 6231 014a 1800     		movs	r0, r3
 6232 014c FFF7FEFF 		bl	vline_clip
2972:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				g->p.x = cx; g->p.y = y; g->p.y1 = cy; vline_clip(g);
 6233              		.loc 6 2972 0
 6234 0150 FB68     		ldr	r3, [r7, #12]
 6235 0152 BA1D     		adds	r2, r7, #6
 6236 0154 1288     		ldrh	r2, [r2]
 6237 0156 1A85     		strh	r2, [r3, #40]
 6238 0158 FB68     		ldr	r3, [r7, #12]
 6239 015a 0822     		movs	r2, #8
 6240 015c BA18     		adds	r2, r7, r2
 6241 015e 1288     		ldrh	r2, [r2]
 6242 0160 5A85     		strh	r2, [r3, #42]
 6243 0162 FB68     		ldr	r3, [r7, #12]
 6244 0164 2022     		movs	r2, #32
 6245 0166 BA18     		adds	r2, r7, r2
 6246 0168 1288     		ldrh	r2, [r2]
 6247 016a 5A86     		strh	r2, [r3, #50]
 6248 016c FB68     		ldr	r3, [r7, #12]
 6249 016e 1800     		movs	r0, r3
 6250 0170 FFF7FEFF 		bl	vline_clip
 6251 0174 2DE0     		b	.L376
 6252              	.L374:
2973:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
2974:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2975:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	} else {
2976:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x = x; g->p.y = y; g->p.y1 = cy; vline_clip(g);
 6253              		.loc 6 2976 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 182


 6254 0176 FB68     		ldr	r3, [r7, #12]
 6255 0178 0A22     		movs	r2, #10
 6256 017a BA18     		adds	r2, r7, r2
 6257 017c 1288     		ldrh	r2, [r2]
 6258 017e 1A85     		strh	r2, [r3, #40]
 6259 0180 FB68     		ldr	r3, [r7, #12]
 6260 0182 0822     		movs	r2, #8
 6261 0184 BA18     		adds	r2, r7, r2
 6262 0186 1288     		ldrh	r2, [r2]
 6263 0188 5A85     		strh	r2, [r3, #42]
 6264 018a FB68     		ldr	r3, [r7, #12]
 6265 018c 2022     		movs	r2, #32
 6266 018e BA18     		adds	r2, r7, r2
 6267 0190 1288     		ldrh	r2, [r2]
 6268 0192 5A86     		strh	r2, [r3, #50]
 6269 0194 FB68     		ldr	r3, [r7, #12]
 6270 0196 1800     		movs	r0, r3
 6271 0198 FFF7FEFF 		bl	vline_clip
2977:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (x != cx) {
 6272              		.loc 6 2977 0
 6273 019c 0A23     		movs	r3, #10
 6274 019e FA18     		adds	r2, r7, r3
 6275 01a0 BB1D     		adds	r3, r7, #6
 6276 01a2 0021     		movs	r1, #0
 6277 01a4 525E     		ldrsh	r2, [r2, r1]
 6278 01a6 0021     		movs	r1, #0
 6279 01a8 5B5E     		ldrsh	r3, [r3, r1]
 6280 01aa 9A42     		cmp	r2, r3
 6281 01ac 11D0     		beq	.L376
2978:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x = cx; g->p.y = y; g->p.y1 = cy; vline_clip(g);
 6282              		.loc 6 2978 0
 6283 01ae FB68     		ldr	r3, [r7, #12]
 6284 01b0 BA1D     		adds	r2, r7, #6
 6285 01b2 1288     		ldrh	r2, [r2]
 6286 01b4 1A85     		strh	r2, [r3, #40]
 6287 01b6 FB68     		ldr	r3, [r7, #12]
 6288 01b8 0822     		movs	r2, #8
 6289 01ba BA18     		adds	r2, r7, r2
 6290 01bc 1288     		ldrh	r2, [r2]
 6291 01be 5A85     		strh	r2, [r3, #42]
 6292 01c0 FB68     		ldr	r3, [r7, #12]
 6293 01c2 2022     		movs	r2, #32
 6294 01c4 BA18     		adds	r2, r7, r2
 6295 01c6 1288     		ldrh	r2, [r2]
 6296 01c8 5A86     		strh	r2, [r3, #50]
 6297 01ca FB68     		ldr	r3, [r7, #12]
 6298 01cc 1800     		movs	r0, r3
 6299 01ce FFF7FEFF 		bl	vline_clip
 6300              	.L376:
2979:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2980:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
2981:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2982:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	autoflush(g);
 6301              		.loc 6 2982 0
 6302 01d2 FB68     		ldr	r3, [r7, #12]
 6303 01d4 DB8B     		ldrh	r3, [r3, #30]
 6304 01d6 1A00     		movs	r2, r3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 183


 6305 01d8 0223     		movs	r3, #2
 6306 01da 1340     		ands	r3, r2
 6307 01dc 0CD0     		beq	.L370
 6308              		.loc 6 2982 0 is_stmt 0 discriminator 1
 6309 01de FB68     		ldr	r3, [r7, #12]
 6310 01e0 1800     		movs	r0, r3
 6311 01e2 FFF7FEFF 		bl	gdisp_lld_write_stop
 6312 01e6 FB68     		ldr	r3, [r7, #12]
 6313 01e8 DB8B     		ldrh	r3, [r3, #30]
 6314 01ea 0222     		movs	r2, #2
 6315 01ec 9343     		bics	r3, r2
 6316 01ee 9AB2     		uxth	r2, r3
 6317 01f0 FB68     		ldr	r3, [r7, #12]
 6318 01f2 DA83     		strh	r2, [r3, #30]
 6319 01f4 00E0     		b	.L370
 6320              	.L377:
2958:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	cx = x+cx-1; cy = y+cy-1;			// cx, cy are now the end point.
 6321              		.loc 6 2958 0 is_stmt 1
 6322 01f6 C046     		nop
 6323              	.L370:
2983:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	MUTEX_EXIT(g);
2984:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 6324              		.loc 6 2984 0
 6325 01f8 BD46     		mov	sp, r7
 6326 01fa 05B0     		add	sp, sp, #20
 6327              		@ sp needed
 6328 01fc 90BD     		pop	{r4, r7, pc}
 6329              		.cfi_endproc
 6330              	.LFE74:
 6331              		.size	gdispGDrawBox, .-gdispGDrawBox
 6332 01fe C046     		.section	.text.gdispBlendColor,"ax",%progbits
 6333              		.align	2
 6334              		.global	gdispBlendColor
 6335              		.code	16
 6336              		.thumb_func
 6337              		.type	gdispBlendColor, %function
 6338              	gdispBlendColor:
 6339              	.LFB75:
2985:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2986:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_CONVEX_POLYGON
2987:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawPoly(GDisplay *g, coord_t tx, coord_t ty, const point *pntarray, unsigned cnt, colo
2988:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		const point	*epnt, *p;
2989:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2990:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		epnt = &pntarray[cnt-1];
2991:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2992:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
2993:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
2994:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(p = pntarray; p < epnt; p++) {
2995:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			g->p.x=tx+p->x; g->p.y=ty+p->y; g->p.x1=tx+p[1].x; g->p.y1=ty+p[1].y; line_clip(g);
2996:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
2997:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.x=tx+p->x; g->p.y=ty+p->y; g->p.x1=tx+pntarray->x; g->p.y1=ty+pntarray->y; line_clip(g);
2998:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
2999:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3000:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3001:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3002:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3003:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillConvexPoly(GDisplay *g, coord_t tx, coord_t ty, const point *pntarray, unsigned cnt
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 184


3004:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		const point	*lpnt, *rpnt, *epnts;
3005:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		fixed		lx, rx, lk, rk;
3006:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t		y, ymax, lxc, rxc;
3007:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3008:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		epnts = &pntarray[cnt-1];
3009:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3010:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Find a top point */
3011:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		rpnt = pntarray;
3012:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(lpnt=pntarray+1; lpnt <= epnts; lpnt++) {
3013:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (lpnt->y < rpnt->y)
3014:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rpnt = lpnt;
3015:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3016:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		lx = rx = FIXED(rpnt->x);
3017:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		y = rpnt->y;
3018:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3019:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Work out the slopes of the two attached line segs */
3020:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for (lpnt = rpnt <= pntarray ? epnts : rpnt-1; lpnt->y == y; cnt--) {
3021:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!cnt) return;
3022:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			lx = FIXED(lpnt->x);
3023:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			lpnt = lpnt <= pntarray ? epnts : lpnt-1;
3024:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3025:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for (rpnt = rpnt >= epnts ? pntarray : rpnt+1; rpnt->y == y; cnt--) {
3026:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!cnt) return;
3027:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			rx = FIXED(rpnt->x);
3028:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			rpnt = rpnt >= epnts ? pntarray : rpnt+1;
3029:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3030:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		lk = (FIXED(lpnt->x) - lx) / (lpnt->y - y);
3031:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		rk = (FIXED(rpnt->x) - rx) / (rpnt->y - y);
3032:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3033:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Add error correction for rounding
3034:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		lx += FIXED0_5;
3035:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		rx += FIXED0_5;
3036:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3037:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// Do all the line segments
3038:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3039:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.color = color;
3040:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		while(1) {
3041:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Determine our boundary */
3042:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			ymax = rpnt->y < lpnt->y ? rpnt->y : lpnt->y;
3043:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3044:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Scan down the line segments until we hit a boundary */
3045:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			for(; y < ymax; y++) {
3046:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				lxc = NONFIXED(lx);
3047:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rxc = NONFIXED(rx);
3048:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				/*
3049:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				 * Doesn't print the right hand point in order to allow polygon joining.
3050:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				 * Also ensures that we draw from left to right with the minimum number
3051:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				 * of pixels.
3052:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				 */
3053:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				if (lxc < rxc) {
3054:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x=tx+lxc; g->p.y=ty+y; g->p.x1=tx+rxc-1; hline_clip(g);
3055:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				} else if (lxc > rxc) {
3056:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					g->p.x=tx+rxc; g->p.y=ty+y; g->p.x1=tx+lxc-1; hline_clip(g);
3057:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
3058:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3059:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				lx += lk;
3060:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rx += rk;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 185


3061:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3062:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3063:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (!cnt) {
3064:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				autoflush(g);
3065:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				MUTEX_EXIT(g);
3066:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
3067:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3068:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			cnt--;
3069:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3070:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Replace the appropriate point */
3071:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (ymax == lpnt->y) {
3072:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				lx -= FIXED0_5;
3073:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for (lpnt = lpnt <= pntarray ? epnts : lpnt-1; lpnt->y == y; cnt--) {
3074:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (!cnt) {
3075:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						autoflush(g);
3076:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						MUTEX_EXIT(g);
3077:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						return;
3078:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
3079:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					lx = FIXED(lpnt->x);
3080:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					lpnt = lpnt <= pntarray ? epnts : lpnt-1;
3081:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
3082:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				lk = (FIXED(lpnt->x) - lx) / (lpnt->y - y);
3083:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				lx += FIXED0_5;
3084:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
3085:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rx -= FIXED0_5;
3086:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for (rpnt = rpnt >= epnts ? pntarray : rpnt+1; rpnt->y == y; cnt--) {
3087:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					if (!cnt) {
3088:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						autoflush(g);
3089:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						MUTEX_EXIT(g);
3090:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 						return;
3091:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					}
3092:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					rx = FIXED(rpnt->x);
3093:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					rpnt = rpnt >= epnts ? pntarray : rpnt+1;
3094:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
3095:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rk = (FIXED(rpnt->x) - rx) / (rpnt->y - y);
3096:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				rx += FIXED0_5;
3097:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3098:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3099:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3100:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3101:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static int32_t rounding_div(const int32_t n, const int32_t d)
3102:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	{
3103:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if ((n < 0) != (d < 0))
3104:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return (n - d/2) / d;
3105:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		else
3106:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return (n + d/2) / d;
3107:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3108:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3109:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	/* Find a vector (nx, ny) that is perpendicular to (dx, dy) and has length
3110:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	 * equal to 'norm'. */
3111:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static void get_normal_vector(coord_t dx, coord_t dy, coord_t norm, coord_t *nx, coord_t *ny)
3112:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	{
3113:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t absDx, absDy;
3114:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		int32_t len_n, len, len2;
3115:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		char maxSteps;
3116:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3117:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Take the absolute value of dx and dy, multiplied by 2 for precision */
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 186


3118:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		absDx = (dx >= 0 ? dx : -dx) * 2;
3119:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		absDy = (dy >= 0 ? dy : -dy) * 2;
3120:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3121:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Compute the quadrate length */
3122:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		len2 = absDx * absDx + absDy * absDy;
3123:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3124:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* First aproximation : length = |dx| + |dy| */
3125:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		len = absDx + absDy;
3126:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3127:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Give a max number of steps, the calculation usually takes 3 or 4 */
3128:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		for(maxSteps = 8; maxSteps > 0; maxSteps--)
3129:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
3130:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Use an adapted version of Newton's algorithm to find the correct length 
3131:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * This calculation converge quadratically towards the correct length
3132:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * n(x+1) = (n(x) + len^2 / n(x)) / 2 
3133:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 */
3134:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			len_n = (len + len2 / len) / 2;
3135:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3136:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* We reach max precision when the last result is equal or greater than the previous one */ 
3137:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if(len_n >= len){
3138:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
3139:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3140:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3141:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			len = len_n;
3142:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3143:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3144:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Compute the normal vector using nx = dy * desired length / vector length
3145:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		 * The solution is rounded to the nearest integer
3146:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		 */
3147:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		*nx = rounding_div(dy * norm * 2, len);
3148:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		*ny = rounding_div(-dx * norm * 2, len);
3149:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return;
3150:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3151:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3152:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawThickLine(GDisplay *g, coord_t x0, coord_t y0, coord_t x1, coord_t y1, color_t colo
3153:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		coord_t dx, dy, nx = 0, ny = 0;
3154:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3155:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Compute the direction vector for the line */
3156:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dx = x1 - x0;
3157:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		dy = y1 - y0;
3158:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3159:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Draw a small dot if the line length is zero. */
3160:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (dx == 0 && dy == 0)
3161:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			dx += 1;
3162:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3163:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Compute a normal vector with length 'width'. */
3164:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		get_normal_vector(dx, dy, width, &nx, &ny);
3165:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3166:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Handle 1px wide lines gracefully */
3167:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (nx == 0 && ny == 0)
3168:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			nx = 1;
3169:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3170:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Offset the x0,y0 by half the width of the line. This way we
3171:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		 * can keep the width of the line accurate even if it is not evenly
3172:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		 * divisible by 2.
3173:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		 */
3174:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		{
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 187


3175:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x0 -= rounding_div(nx, 2);
3176:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y0 -= rounding_div(ny, 2);
3177:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3178:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3179:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Fill in the point array */
3180:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!round) {
3181:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* We use 4 points for the basic line shape:
3182:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *
3183:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *  pt1                                      pt2
3184:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * (+n) ------------------------------------ (d+n)
3185:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *   |                                       |
3186:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * (0,0) ----------------------------------- (d)
3187:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *  pt0                                      pt3
3188:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 */
3189:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			point pntarray[4];
3190:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3191:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[0].x = 0;
3192:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[0].y = 0;
3193:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[1].x = nx;
3194:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[1].y = ny;
3195:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[2].x = dx + nx;
3196:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[2].y = dy + ny;
3197:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[3].x = dx;
3198:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[3].y = dy;
3199:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3200:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillConvexPoly(g, x0, y0, pntarray, 4, color);
3201:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		} else {
3202:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* We use 4 points for basic shape, plus 4 extra points for ends:
3203:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *
3204:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *           pt3 ------------------ pt4
3205:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *          /                         \
3206:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *        pt2                        pt5
3207:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *         |                          |
3208:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *        pt1                        pt6
3209:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *         \                         /
3210:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 *          pt0 -------------------pt7
3211:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 */
3212:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			point pntarray[8];
3213:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			coord_t nx2, ny2;
3214:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3215:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Magic numbers:
3216:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * 75/256  = sin(45) / (1 + sqrt(2))		diagonal octagon segments
3217:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * 106/256 = 1 / (1 + sqrt(2))				octagon side
3218:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * 53/256  = 0.5 / (1 + sqrt(2))			half of octagon side
3219:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * 150/256 = 1 - 1 / (1 + sqrt(2))	  		octagon height minus one side
3220:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 */
3221:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3222:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Rotate the normal vector 45 deg counter-clockwise and reduce
3223:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * to 1 / (1 + sqrt(2)) length, for forming octagonal ends. */
3224:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			nx2 = rounding_div((nx * 75 + ny * 75), 256);
3225:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			ny2 = rounding_div((-nx * 75 + ny * 75), 256);
3226:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3227:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Offset and extend the line so that the center of the octagon
3228:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			 * is at the specified points. */
3229:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x0 += ny * 53 / 256;
3230:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y0 -= nx * 53 / 256;
3231:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			dx -= ny * 106 / 256;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 188


3232:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			dy += nx * 106 / 256;
3233:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3234:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Now fill in the points by summing the calculated vectors. */
3235:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[0].x = 0;
3236:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[0].y = 0;
3237:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[1].x = nx2;
3238:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[1].y = ny2;
3239:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[2].x = nx2 + nx * 106/256;
3240:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[2].y = ny2 + ny * 106/256;
3241:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[3].x = nx;
3242:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[3].y = ny;
3243:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[4].x = dx + nx;
3244:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[4].y = dy + ny;
3245:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[5].x = dx + nx - nx2;
3246:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[5].y = dy + ny - ny2;
3247:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[6].x = dx + nx * 150/256 - nx2;
3248:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[6].y = dy + ny * 150/256 - ny2;
3249:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[7].x = dx;
3250:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			pntarray[7].y = dy;
3251:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3252:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			gdispGFillConvexPoly(g, x0, y0, pntarray, 8, color);
3253:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3254:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3255:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
3256:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3257:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #if GDISP_NEED_TEXT
3258:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#include "mcufont/mcufont.h"
3259:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3260:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_NEED_ANTIALIAS && GDISP_HARDWARE_PIXELREAD
3261:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static void drawcharline(int16_t x, int16_t y, uint8_t count, uint8_t alpha, void *state) {
3262:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#define GD	((GDisplay *)state)
3263:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (y < GD->t.clipy0 || y >= GD->t.clipy1 || x+count <= GD->t.clipx0 || x >= GD->t.clipx1)
3264:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
3265:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x < GD->t.clipx0) {
3266:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count -= GD->t.clipx0 - x;
3267:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x = GD->t.clipx0;
3268:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3269:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x+count > GD->t.clipx1)
3270:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count = GD->t.clipx1 - x;
3271:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (alpha == 255) {
3272:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				GD->p.x = x; GD->p.y = y; GD->p.x1 = x+count-1; GD->p.color = GD->t.color;
3273:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				hline_clip(GD);
3274:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
3275:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				for (; count; count--, x++) {
3276:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					GD->p.x = x; GD->p.y = y;
3277:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					GD->p.color = gdispBlendColor(GD->t.color, gdisp_lld_get_pixel_color(GD), alpha);
3278:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 					drawpixel_clip(GD);
3279:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				}
3280:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3281:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#undef GD
3282:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3283:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
3284:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static void drawcharline(int16_t x, int16_t y, uint8_t count, uint8_t alpha, void *state) {
3285:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#define GD	((GDisplay *)state)
3286:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (y < GD->t.clipy0 || y >= GD->t.clipy1 || x+count <= GD->t.clipx0 || x >= GD->t.clipx1)
3287:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
3288:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x < GD->t.clipx0) {
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 189


3289:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count -= GD->t.clipx0 - x;
3290:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x = GD->t.clipx0;
3291:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3292:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x+count > GD->t.clipx1)
3293:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count = GD->t.clipx1 - x;
3294:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (alpha > 0x80) {			// A best approximation when using anti-aliased fonts but we can't actuall
3295:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				GD->p.x = x; GD->p.y = y; GD->p.x1 = x+count-1; GD->p.color = GD->t.color;
3296:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				hline_clip(GD);
3297:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3298:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#undef GD
3299:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3300:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
3301:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3302:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_NEED_ANTIALIAS
3303:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static void fillcharline(int16_t x, int16_t y, uint8_t count, uint8_t alpha, void *state) {
3304:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#define GD	((GDisplay *)state)
3305:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (y < GD->t.clipy0 || y >= GD->t.clipy1 || x+count <= GD->t.clipx0 || x >= GD->t.clipx1)
3306:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				return;
3307:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x < GD->t.clipx0) {
3308:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count -= GD->t.clipx0 - x;
3309:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x = GD->t.clipx0;
3310:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3311:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (x+count > GD->t.clipx1)
3312:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				count = GD->t.clipx1 - x;
3313:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			if (alpha == 255) {
3314:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				GD->p.color = GD->t.color;
3315:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			} else {
3316:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				GD->p.color = gdispBlendColor(GD->t.color, GD->t.bgcolor, alpha);
3317:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3318:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			GD->p.x = x; GD->p.y = y; GD->p.x1 = x+count-1;
3319:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			hline_clip(GD);
3320:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#undef GD
3321:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3322:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#else
3323:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#define fillcharline	drawcharline
3324:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
3325:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3326:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	/* Callback to render characters. */
3327:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static uint8_t drawcharglyph(int16_t x, int16_t y, mf_char ch, void *state) {
3328:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#define GD	((GDisplay *)state)
3329:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return mf_render_character(GD->t.font, x, y, ch, drawcharline, state);
3330:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#undef GD
3331:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3332:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3333:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	/* Callback to render characters. */
3334:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	static uint8_t fillcharglyph(int16_t x, int16_t y, mf_char ch, void *state) {
3335:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#define GD	((GDisplay *)state)
3336:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return mf_render_character(GD->t.font, x, y, ch, fillcharline, state);
3337:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#undef GD
3338:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3339:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3340:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	/* Callback to render string boxes with word wrap. */
3341:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#if GDISP_NEED_TEXT_WORDWRAP
3342:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static bool mf_countline_callback(mf_str line, uint16_t count, void *state) {
3343:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			uint16_t *linecount;
3344:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void) line;
3345:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(void) count;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 190


3346:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3347:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			linecount = (uint16_t*)state;
3348:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			(*linecount)++;
3349:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3350:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return TRUE;
3351:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3352:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static bool mf_drawline_callback(mf_str line, uint16_t count, void *state) {
3353:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters_t* wrapParameters = (wrapParameters_t*)state;
3354:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3355:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_render_aligned(wrapParameters->font, wrapParameters->x, wrapParameters->y, wrapParameters->ju
3356:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3357:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters->y += wrapParameters->font->line_height;
3358:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return TRUE;
3359:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3360:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		static bool mf_fillline_callback(mf_str line, uint16_t count, void *state) {
3361:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters_t* wrapParameters = (wrapParameters_t*)state;
3362:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3363:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_render_aligned(wrapParameters->font, wrapParameters->x, wrapParameters->y, wrapParameters->ju
3364:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3365:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters->y += wrapParameters->font->line_height;
3366:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return TRUE;
3367:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}	
3368:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	#endif
3369:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3370:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawChar(GDisplay *g, coord_t x, coord_t y, uint16_t c, font_t font, color_t color) {
3371:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3372:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3373:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3374:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3375:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = x;
3376:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = y;
3377:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = x + mf_character_width(font, c) + font->baseline_x;
3378:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = y + font->height;
3379:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
3380:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		mf_render_character(font, x, y, c, drawcharline, g);
3381:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3382:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3383:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3384:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3385:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillChar(GDisplay *g, coord_t x, coord_t y, uint16_t c, font_t font, color_t color, col
3386:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3387:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3388:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3389:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = mf_character_width(font, c) + font->baseline_x;
3390:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cy = font->height;
3391:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3392:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = g->p.x = x;
3393:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = g->p.y = y;
3394:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = g->p.x+g->p.cx;
3395:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = g->p.y+g->p.cy;
3396:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
3397:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.bgcolor = g->p.color = bgcolor;
3398:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3399:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		TEST_CLIP_AREA(g) {
3400:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			fillarea(g);
3401:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_render_character(font, x, y, c, fillcharline, g);
3402:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 191


3403:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3404:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3405:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3406:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3407:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawString(GDisplay *g, coord_t x, coord_t y, const char *str, font_t font, color_t col
3408:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3409:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3410:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3411:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3412:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = x;
3413:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = y;
3414:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = x + mf_get_string_width(font, str, 0, 0) + font->baseline_x;
3415:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = y + font->height;
3416:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
3417:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3418:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		mf_render_aligned(font, x+font->baseline_x, y, MF_ALIGN_LEFT, str, 0, drawcharglyph, g);
3419:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3420:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3421:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3422:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3423:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillString(GDisplay *g, coord_t x, coord_t y, const char *str, font_t font, color_t col
3424:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3425:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3426:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3427:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = mf_get_string_width(font, str, 0, 0) + font->baseline_x;
3428:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cy = font->height;
3429:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3430:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = g->p.x = x;
3431:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = g->p.y = y;
3432:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = g->p.x+g->p.cx;
3433:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = g->p.y+g->p.cy;
3434:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
3435:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.bgcolor = g->p.color = bgcolor;
3436:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3437:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		TEST_CLIP_AREA(g) {
3438:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			fillarea(g);
3439:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_render_aligned(font, x+font->baseline_x, y, MF_ALIGN_LEFT, str, 0, fillcharglyph, g);
3440:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3441:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3442:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3443:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3444:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3445:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3446:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGDrawStringBox(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, const char* st
3447:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_TEXT_WORDWRAP
3448:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters_t wrapParameters;
3449:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			uint16_t nbrLines;
3450:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
3451:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3452:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3453:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3454:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3455:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3456:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3457:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = x;
3458:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = y;
3459:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = x+cx;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 192


3460:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = y+cy;
3461:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
3462:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3463:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Select the anchor position */
3464:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		switch(justify) {
3465:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case justifyCenter:
3466:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x += (cx + 1) / 2;
3467:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
3468:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case justifyRight:
3469:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x += cx;
3470:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
3471:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		default:	// justifyLeft
3472:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			x += font->baseline_x;
3473:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			break;
3474:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3475:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3476:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* Render */
3477:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_TEXT_WORDWRAP
3478:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.x = x;
3479:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.y = y;
3480:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.font = font;
3481:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.justify = justify;
3482:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.g = g;
3483:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3484:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// Count the number of lines
3485:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			nbrLines = 0;
3486:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_wordwrap(font, cx, str, mf_countline_callback, &nbrLines);
3487:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters.y += (cy+1 - nbrLines*font->height)/2;
3488:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			
3489:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_wordwrap(font, cx, str, mf_fillline_callback, &wrapParameters);
3490:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
3491:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			y += (cy+1 - font->height)/2;
3492:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			mf_render_aligned(font, x, y, justify, str, 0, drawcharglyph, g);
3493:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
3494:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3495:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3496:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3497:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3498:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3499:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	void gdispGFillStringBox(GDisplay *g, coord_t x, coord_t y, coord_t cx, coord_t cy, const char* st
3500:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_TEXT_WORDWRAP
3501:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			wrapParameters_t wrapParameters;
3502:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			uint16_t nbrLines;
3503:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
3504:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3505:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3506:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return;
3507:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_ENTER(g);
3508:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3509:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cx = cx;
3510:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->p.cy = cy;
3511:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.font = font;
3512:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx0 = g->p.x = x;
3513:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy0 = g->p.y = y;
3514:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipx1 = x+cx;
3515:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.clipy1 = y+cy;
3516:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.color = color;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 193


3517:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		g->t.bgcolor = g->p.color = bgcolor;
3518:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3519:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		TEST_CLIP_AREA(g) {
3520:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3521:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			// background fill
3522:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			fillarea(g);
3523:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3524:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Select the anchor position */
3525:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			switch(justify) {
3526:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case justifyCenter:
3527:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x += (cx + 1) / 2;
3528:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
3529:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			case justifyRight:
3530:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x += cx;
3531:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
3532:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			default:	// justifyLeft
3533:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				x += font->baseline_x;
3534:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				break;
3535:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			}
3536:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3537:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			/* Render */
3538:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#if GDISP_NEED_TEXT_WORDWRAP
3539:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.x = x;
3540:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.y = y;
3541:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.font = font;
3542:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.justify = justify;
3543:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.g = g;
3544:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3545:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3546:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				// Count the number of lines
3547:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				nbrLines = 0;
3548:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				mf_wordwrap(font, cx, str, mf_countline_callback, &nbrLines);
3549:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				wrapParameters.y += (cy+1 - nbrLines*font->height)/2;
3550:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3551:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				mf_wordwrap(font, cx, str, mf_fillline_callback, &wrapParameters);
3552:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#else
3553:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				y += (cy+1 - font->height)/2;
3554:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 				mf_render_aligned(font, x, y, justify, str, 0, fillcharglyph, g);
3555:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			#endif
3556:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3557:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3558:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		autoflush(g);
3559:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		MUTEX_EXIT(g);
3560:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3561:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3562:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	coord_t gdispGetFontMetric(font_t font, fontmetric_t metric) {
3563:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3564:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return 0;
3565:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* No mutex required as we only read static data */
3566:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		switch(metric) {
3567:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontHeight:			return font->height;
3568:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontDescendersHeight:	return font->height - font->baseline_y;
3569:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontLineSpacing:		return font->line_height;
3570:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontCharPadding:		return 0;
3571:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontMinWidth:			return font->min_x_advance;
3572:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontMaxWidth:			return font->max_x_advance;
3573:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontBaselineX:			return font->baseline_x;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 194


3574:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		case fontBaselineY:			return font->baseline_y;
3575:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		}
3576:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return 0;
3577:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3578:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3579:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	coord_t gdispGetCharWidth(char c, font_t font) {
3580:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!font)
3581:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return 0;
3582:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		/* No mutex required as we only read static data */
3583:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return mf_character_width(font, c);
3584:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3585:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3586:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	coord_t gdispGetStringWidthCount(const char* str, font_t font, uint16_t count) {
3587:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		if (!str || !font)
3588:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return 0;
3589:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3590:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		// No mutex required as we only read static data
3591:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#if GDISP_NEED_TEXT_KERNING
3592:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return mf_get_string_width(font, str, count, TRUE);
3593:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#else
3594:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 			return mf_get_string_width(font, str, count, FALSE);
3595:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		#endif
3596:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3597:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3598:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	coord_t gdispGetStringWidth(const char* str, font_t font) {
3599:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 		return gdispGetStringWidthCount(str, font, 0);
3600:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	}
3601:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** #endif
3602:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3603:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** color_t gdispBlendColor(color_t fg, color_t bg, uint8_t alpha)
3604:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** {
 6340              		.loc 6 3604 0
 6341              		.cfi_startproc
 6342              		@ args = 0, pretend = 0, frame = 24
 6343              		@ frame_needed = 1, uses_anonymous_args = 0
 6344 0000 90B5     		push	{r4, r7, lr}
 6345              		.cfi_def_cfa_offset 12
 6346              		.cfi_offset 4, -12
 6347              		.cfi_offset 7, -8
 6348              		.cfi_offset 14, -4
 6349 0002 87B0     		sub	sp, sp, #28
 6350              		.cfi_def_cfa_offset 40
 6351 0004 00AF     		add	r7, sp, #0
 6352              		.cfi_def_cfa_register 7
 6353 0006 0400     		movs	r4, r0
 6354 0008 0800     		movs	r0, r1
 6355 000a 1100     		movs	r1, r2
 6356 000c BB1D     		adds	r3, r7, #6
 6357 000e 221C     		adds	r2, r4, #0
 6358 0010 1A80     		strh	r2, [r3]
 6359 0012 3B1D     		adds	r3, r7, #4
 6360 0014 021C     		adds	r2, r0, #0
 6361 0016 1A80     		strh	r2, [r3]
 6362 0018 FB1C     		adds	r3, r7, #3
 6363 001a 0A1C     		adds	r2, r1, #0
 6364 001c 1A70     		strb	r2, [r3]
3605:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	uint16_t fg_ratio = alpha + 1;
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 195


 6365              		.loc 6 3605 0
 6366 001e FB1C     		adds	r3, r7, #3
 6367 0020 1B78     		ldrb	r3, [r3]
 6368 0022 9AB2     		uxth	r2, r3
 6369 0024 1623     		movs	r3, #22
 6370 0026 FB18     		adds	r3, r7, r3
 6371 0028 0132     		adds	r2, r2, #1
 6372 002a 1A80     		strh	r2, [r3]
3606:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	uint16_t bg_ratio = 256 - alpha;
 6373              		.loc 6 3606 0
 6374 002c FB1C     		adds	r3, r7, #3
 6375 002e 1B78     		ldrb	r3, [r3]
 6376 0030 9AB2     		uxth	r2, r3
 6377 0032 1423     		movs	r3, #20
 6378 0034 FB18     		adds	r3, r7, r3
 6379 0036 8021     		movs	r1, #128
 6380 0038 4900     		lsls	r1, r1, #1
 6381 003a 8A1A     		subs	r2, r1, r2
 6382 003c 1A80     		strh	r2, [r3]
3607:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	uint16_t r, g, b;
3608:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3609:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	r = RED_OF(fg) * fg_ratio;
 6383              		.loc 6 3609 0
 6384 003e BB1D     		adds	r3, r7, #6
 6385 0040 1B88     		ldrh	r3, [r3]
 6386 0042 1B12     		asrs	r3, r3, #8
 6387 0044 9BB2     		uxth	r3, r3
 6388 0046 F822     		movs	r2, #248
 6389 0048 1340     		ands	r3, r2
 6390 004a 9AB2     		uxth	r2, r3
 6391 004c 1223     		movs	r3, #18
 6392 004e FB18     		adds	r3, r7, r3
 6393 0050 1621     		movs	r1, #22
 6394 0052 7918     		adds	r1, r7, r1
 6395 0054 0988     		ldrh	r1, [r1]
 6396 0056 4A43     		muls	r2, r1
 6397 0058 1A80     		strh	r2, [r3]
3610:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g = GREEN_OF(fg) * fg_ratio;
 6398              		.loc 6 3610 0
 6399 005a BB1D     		adds	r3, r7, #6
 6400 005c 1B88     		ldrh	r3, [r3]
 6401 005e DB10     		asrs	r3, r3, #3
 6402 0060 9BB2     		uxth	r3, r3
 6403 0062 FC22     		movs	r2, #252
 6404 0064 1340     		ands	r3, r2
 6405 0066 9AB2     		uxth	r2, r3
 6406 0068 1023     		movs	r3, #16
 6407 006a FB18     		adds	r3, r7, r3
 6408 006c 1621     		movs	r1, #22
 6409 006e 7918     		adds	r1, r7, r1
 6410 0070 0988     		ldrh	r1, [r1]
 6411 0072 4A43     		muls	r2, r1
 6412 0074 1A80     		strh	r2, [r3]
3611:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	b = BLUE_OF(fg) * fg_ratio;
 6413              		.loc 6 3611 0
 6414 0076 BB1D     		adds	r3, r7, #6
 6415 0078 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 196


 6416 007a DB00     		lsls	r3, r3, #3
 6417 007c 9BB2     		uxth	r3, r3
 6418 007e FF22     		movs	r2, #255
 6419 0080 1340     		ands	r3, r2
 6420 0082 9AB2     		uxth	r2, r3
 6421 0084 0E23     		movs	r3, #14
 6422 0086 FB18     		adds	r3, r7, r3
 6423 0088 1621     		movs	r1, #22
 6424 008a 7918     		adds	r1, r7, r1
 6425 008c 0988     		ldrh	r1, [r1]
 6426 008e 4A43     		muls	r2, r1
 6427 0090 1A80     		strh	r2, [r3]
3612:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3613:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	r += RED_OF(bg) * bg_ratio;
 6428              		.loc 6 3613 0
 6429 0092 3B1D     		adds	r3, r7, #4
 6430 0094 1B88     		ldrh	r3, [r3]
 6431 0096 1B12     		asrs	r3, r3, #8
 6432 0098 9BB2     		uxth	r3, r3
 6433 009a F822     		movs	r2, #248
 6434 009c 1340     		ands	r3, r2
 6435 009e 9BB2     		uxth	r3, r3
 6436 00a0 1422     		movs	r2, #20
 6437 00a2 BA18     		adds	r2, r7, r2
 6438 00a4 1288     		ldrh	r2, [r2]
 6439 00a6 5343     		muls	r3, r2
 6440 00a8 99B2     		uxth	r1, r3
 6441 00aa 1223     		movs	r3, #18
 6442 00ac FB18     		adds	r3, r7, r3
 6443 00ae 1222     		movs	r2, #18
 6444 00b0 BA18     		adds	r2, r7, r2
 6445 00b2 1288     		ldrh	r2, [r2]
 6446 00b4 8A18     		adds	r2, r1, r2
 6447 00b6 1A80     		strh	r2, [r3]
3614:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g += GREEN_OF(bg) * bg_ratio;
 6448              		.loc 6 3614 0
 6449 00b8 3B1D     		adds	r3, r7, #4
 6450 00ba 1B88     		ldrh	r3, [r3]
 6451 00bc DB10     		asrs	r3, r3, #3
 6452 00be 9BB2     		uxth	r3, r3
 6453 00c0 FC22     		movs	r2, #252
 6454 00c2 1340     		ands	r3, r2
 6455 00c4 9BB2     		uxth	r3, r3
 6456 00c6 1422     		movs	r2, #20
 6457 00c8 BA18     		adds	r2, r7, r2
 6458 00ca 1288     		ldrh	r2, [r2]
 6459 00cc 5343     		muls	r3, r2
 6460 00ce 99B2     		uxth	r1, r3
 6461 00d0 1023     		movs	r3, #16
 6462 00d2 FB18     		adds	r3, r7, r3
 6463 00d4 1022     		movs	r2, #16
 6464 00d6 BA18     		adds	r2, r7, r2
 6465 00d8 1288     		ldrh	r2, [r2]
 6466 00da 8A18     		adds	r2, r1, r2
 6467 00dc 1A80     		strh	r2, [r3]
3615:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	b += BLUE_OF(bg) * bg_ratio;
 6468              		.loc 6 3615 0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 197


 6469 00de 3B1D     		adds	r3, r7, #4
 6470 00e0 1B88     		ldrh	r3, [r3]
 6471 00e2 DB00     		lsls	r3, r3, #3
 6472 00e4 9BB2     		uxth	r3, r3
 6473 00e6 FF22     		movs	r2, #255
 6474 00e8 1340     		ands	r3, r2
 6475 00ea 9BB2     		uxth	r3, r3
 6476 00ec 1422     		movs	r2, #20
 6477 00ee BA18     		adds	r2, r7, r2
 6478 00f0 1288     		ldrh	r2, [r2]
 6479 00f2 5343     		muls	r3, r2
 6480 00f4 99B2     		uxth	r1, r3
 6481 00f6 0E23     		movs	r3, #14
 6482 00f8 FB18     		adds	r3, r7, r3
 6483 00fa 0E22     		movs	r2, #14
 6484 00fc BA18     		adds	r2, r7, r2
 6485 00fe 1288     		ldrh	r2, [r2]
 6486 0100 8A18     		adds	r2, r1, r2
 6487 0102 1A80     		strh	r2, [r3]
3616:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3617:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	r >>= 8;
 6488              		.loc 6 3617 0
 6489 0104 1223     		movs	r3, #18
 6490 0106 FB18     		adds	r3, r7, r3
 6491 0108 1222     		movs	r2, #18
 6492 010a BA18     		adds	r2, r7, r2
 6493 010c 1288     		ldrh	r2, [r2]
 6494 010e 120A     		lsrs	r2, r2, #8
 6495 0110 1A80     		strh	r2, [r3]
3618:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g >>= 8;
 6496              		.loc 6 3618 0
 6497 0112 1023     		movs	r3, #16
 6498 0114 FB18     		adds	r3, r7, r3
 6499 0116 1022     		movs	r2, #16
 6500 0118 BA18     		adds	r2, r7, r2
 6501 011a 1288     		ldrh	r2, [r2]
 6502 011c 120A     		lsrs	r2, r2, #8
 6503 011e 1A80     		strh	r2, [r3]
3619:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	b >>= 8;
 6504              		.loc 6 3619 0
 6505 0120 0E23     		movs	r3, #14
 6506 0122 FB18     		adds	r3, r7, r3
 6507 0124 0E22     		movs	r2, #14
 6508 0126 BA18     		adds	r2, r7, r2
 6509 0128 1288     		ldrh	r2, [r2]
 6510 012a 120A     		lsrs	r2, r2, #8
 6511 012c 1A80     		strh	r2, [r3]
3620:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3621:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	return RGB2COLOR(r, g, b);
 6512              		.loc 6 3621 0
 6513 012e 1223     		movs	r3, #18
 6514 0130 FB18     		adds	r3, r7, r3
 6515 0132 1B88     		ldrh	r3, [r3]
 6516 0134 1B02     		lsls	r3, r3, #8
 6517 0136 1BB2     		sxth	r3, r3
 6518 0138 DB0A     		lsrs	r3, r3, #11
 6519 013a DB02     		lsls	r3, r3, #11
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 198


 6520 013c 1AB2     		sxth	r2, r3
 6521 013e 1023     		movs	r3, #16
 6522 0140 FB18     		adds	r3, r7, r3
 6523 0142 1B88     		ldrh	r3, [r3]
 6524 0144 DB00     		lsls	r3, r3, #3
 6525 0146 19B2     		sxth	r1, r3
 6526 0148 FC23     		movs	r3, #252
 6527 014a DB00     		lsls	r3, r3, #3
 6528 014c 0B40     		ands	r3, r1
 6529 014e 1BB2     		sxth	r3, r3
 6530 0150 1343     		orrs	r3, r2
 6531 0152 1AB2     		sxth	r2, r3
 6532 0154 0E23     		movs	r3, #14
 6533 0156 FB18     		adds	r3, r7, r3
 6534 0158 1B88     		ldrh	r3, [r3]
 6535 015a DB10     		asrs	r3, r3, #3
 6536 015c 1BB2     		sxth	r3, r3
 6537 015e 1F21     		movs	r1, #31
 6538 0160 0B40     		ands	r3, r1
 6539 0162 1BB2     		sxth	r3, r3
 6540 0164 1343     		orrs	r3, r2
 6541 0166 1BB2     		sxth	r3, r3
 6542 0168 9BB2     		uxth	r3, r3
3622:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 6543              		.loc 6 3622 0
 6544 016a 1800     		movs	r0, r3
 6545 016c BD46     		mov	sp, r7
 6546 016e 07B0     		add	sp, sp, #28
 6547              		@ sp needed
 6548 0170 90BD     		pop	{r4, r7, pc}
 6549              		.cfi_endproc
 6550              	.LFE75:
 6551              		.size	gdispBlendColor, .-gdispBlendColor
 6552 0172 C046     		.section	.text.gdispContrastColor,"ax",%progbits
 6553              		.align	2
 6554              		.global	gdispContrastColor
 6555              		.code	16
 6556              		.thumb_func
 6557              		.type	gdispContrastColor, %function
 6558              	gdispContrastColor:
 6559              	.LFB76:
3623:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3624:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** color_t gdispContrastColor(color_t color) {
 6560              		.loc 6 3624 0
 6561              		.cfi_startproc
 6562              		@ args = 0, pretend = 0, frame = 16
 6563              		@ frame_needed = 1, uses_anonymous_args = 0
 6564 0000 80B5     		push	{r7, lr}
 6565              		.cfi_def_cfa_offset 8
 6566              		.cfi_offset 7, -8
 6567              		.cfi_offset 14, -4
 6568 0002 84B0     		sub	sp, sp, #16
 6569              		.cfi_def_cfa_offset 24
 6570 0004 00AF     		add	r7, sp, #0
 6571              		.cfi_def_cfa_register 7
 6572 0006 0200     		movs	r2, r0
 6573 0008 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 199


 6574 000a 1A80     		strh	r2, [r3]
3625:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	uint16_t r, g, b;
3626:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3627:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	r = RED_OF(color) > 128 ? 0 : 255;
 6575              		.loc 6 3627 0
 6576 000c BB1D     		adds	r3, r7, #6
 6577 000e 1B88     		ldrh	r3, [r3]
 6578 0010 1B12     		asrs	r3, r3, #8
 6579 0012 F822     		movs	r2, #248
 6580 0014 1340     		ands	r3, r2
 6581 0016 802B     		cmp	r3, #128
 6582 0018 01DD     		ble	.L381
 6583              		.loc 6 3627 0 is_stmt 0 discriminator 1
 6584 001a 0022     		movs	r2, #0
 6585 001c 00E0     		b	.L382
 6586              	.L381:
 6587              		.loc 6 3627 0 discriminator 2
 6588 001e FF22     		movs	r2, #255
 6589              	.L382:
 6590              		.loc 6 3627 0 discriminator 4
 6591 0020 0E23     		movs	r3, #14
 6592 0022 FB18     		adds	r3, r7, r3
 6593 0024 1A80     		strh	r2, [r3]
3628:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	g = GREEN_OF(color) > 128 ? 0 : 255;
 6594              		.loc 6 3628 0 is_stmt 1 discriminator 4
 6595 0026 BB1D     		adds	r3, r7, #6
 6596 0028 1B88     		ldrh	r3, [r3]
 6597 002a DB10     		asrs	r3, r3, #3
 6598 002c FC22     		movs	r2, #252
 6599 002e 1340     		ands	r3, r2
 6600 0030 802B     		cmp	r3, #128
 6601 0032 01DD     		ble	.L383
 6602              		.loc 6 3628 0 is_stmt 0 discriminator 1
 6603 0034 0022     		movs	r2, #0
 6604 0036 00E0     		b	.L384
 6605              	.L383:
 6606              		.loc 6 3628 0 discriminator 2
 6607 0038 FF22     		movs	r2, #255
 6608              	.L384:
 6609              		.loc 6 3628 0 discriminator 4
 6610 003a 0C23     		movs	r3, #12
 6611 003c FB18     		adds	r3, r7, r3
 6612 003e 1A80     		strh	r2, [r3]
3629:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	b = BLUE_OF(color) > 128 ? 0 : 255;
 6613              		.loc 6 3629 0 is_stmt 1 discriminator 4
 6614 0040 BB1D     		adds	r3, r7, #6
 6615 0042 1B88     		ldrh	r3, [r3]
 6616 0044 DB00     		lsls	r3, r3, #3
 6617 0046 FF22     		movs	r2, #255
 6618 0048 1340     		ands	r3, r2
 6619 004a 802B     		cmp	r3, #128
 6620 004c 01DD     		ble	.L385
 6621              		.loc 6 3629 0 is_stmt 0 discriminator 1
 6622 004e 0022     		movs	r2, #0
 6623 0050 00E0     		b	.L386
 6624              	.L385:
 6625              		.loc 6 3629 0 discriminator 2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 200


 6626 0052 FF22     		movs	r2, #255
 6627              	.L386:
 6628              		.loc 6 3629 0 discriminator 4
 6629 0054 0A23     		movs	r3, #10
 6630 0056 FB18     		adds	r3, r7, r3
 6631 0058 1A80     		strh	r2, [r3]
3630:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 
3631:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** 	return RGB2COLOR(r, g, b);
 6632              		.loc 6 3631 0 is_stmt 1 discriminator 4
 6633 005a 0E23     		movs	r3, #14
 6634 005c FB18     		adds	r3, r7, r3
 6635 005e 1B88     		ldrh	r3, [r3]
 6636 0060 1B02     		lsls	r3, r3, #8
 6637 0062 1BB2     		sxth	r3, r3
 6638 0064 DB0A     		lsrs	r3, r3, #11
 6639 0066 DB02     		lsls	r3, r3, #11
 6640 0068 1AB2     		sxth	r2, r3
 6641 006a 0C23     		movs	r3, #12
 6642 006c FB18     		adds	r3, r7, r3
 6643 006e 1B88     		ldrh	r3, [r3]
 6644 0070 DB00     		lsls	r3, r3, #3
 6645 0072 19B2     		sxth	r1, r3
 6646 0074 FC23     		movs	r3, #252
 6647 0076 DB00     		lsls	r3, r3, #3
 6648 0078 0B40     		ands	r3, r1
 6649 007a 1BB2     		sxth	r3, r3
 6650 007c 1343     		orrs	r3, r2
 6651 007e 1AB2     		sxth	r2, r3
 6652 0080 0A23     		movs	r3, #10
 6653 0082 FB18     		adds	r3, r7, r3
 6654 0084 1B88     		ldrh	r3, [r3]
 6655 0086 DB10     		asrs	r3, r3, #3
 6656 0088 1BB2     		sxth	r3, r3
 6657 008a 1F21     		movs	r1, #31
 6658 008c 0B40     		ands	r3, r1
 6659 008e 1BB2     		sxth	r3, r3
 6660 0090 1343     		orrs	r3, r2
 6661 0092 1BB2     		sxth	r3, r3
 6662 0094 9BB2     		uxth	r3, r3
3632:..\..\ugfx_2.7\ugfx_2.7\src\gdisp/gdisp.c **** }
 6663              		.loc 6 3632 0 discriminator 4
 6664 0096 1800     		movs	r0, r3
 6665 0098 BD46     		mov	sp, r7
 6666 009a 04B0     		add	sp, sp, #16
 6667              		@ sp needed
 6668 009c 80BD     		pop	{r7, pc}
 6669              		.cfi_endproc
 6670              	.LFE76:
 6671              		.size	gdispContrastColor, .-gdispContrastColor
 6672 009e C046     		.section	.rodata
 6673              		.align	2
 6674              		.type	blks.5782, %object
 6675              		.size	blks.5782, 128
 6676              	blks.5782:
 6677 0000 0200     		.short	2
 6678 0002 0600     		.short	6
 6679 0004 0100     		.short	1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 201


 6680 0006 0A00     		.short	10
 6681 0008 0300     		.short	3
 6682 000a 0B00     		.short	11
 6683 000c 0400     		.short	4
 6684 000e 0100     		.short	1
 6685 0010 0600     		.short	6
 6686 0012 0600     		.short	6
 6687 0014 0100     		.short	1
 6688 0016 0600     		.short	6
 6689 0018 0800     		.short	8
 6690 001a 0000     		.short	0
 6691 001c 0100     		.short	1
 6692 001e 0C00     		.short	12
 6693 0020 0900     		.short	9
 6694 0022 0000     		.short	0
 6695 0024 0600     		.short	6
 6696 0026 0100     		.short	1
 6697 0028 0900     		.short	9
 6698 002a 0B00     		.short	11
 6699 002c 0600     		.short	6
 6700 002e 0100     		.short	1
 6701 0030 0E00     		.short	14
 6702 0032 0600     		.short	6
 6703 0034 0100     		.short	1
 6704 0036 0500     		.short	5
 6705 0038 0C00     		.short	12
 6706 003a 0600     		.short	6
 6707 003c 0200     		.short	2
 6708 003e 0100     		.short	1
 6709 0040 1000     		.short	16
 6710 0042 0000     		.short	0
 6711 0044 0100     		.short	1
 6712 0046 0C00     		.short	12
 6713 0048 1100     		.short	17
 6714 004a 0000     		.short	0
 6715 004c 0600     		.short	6
 6716 004e 0100     		.short	1
 6717 0050 1100     		.short	17
 6718 0052 0600     		.short	6
 6719 0054 0300     		.short	3
 6720 0056 0100     		.short	1
 6721 0058 1600     		.short	22
 6722 005a 0600     		.short	6
 6723 005c 0700     		.short	7
 6724 005e 0100     		.short	1
 6725 0060 1800     		.short	24
 6726 0062 0000     		.short	0
 6727 0064 0100     		.short	1
 6728 0066 0600     		.short	6
 6729 0068 1600     		.short	22
 6730 006a 0700     		.short	7
 6731 006c 0100     		.short	1
 6732 006e 0500     		.short	5
 6733 0070 1C00     		.short	28
 6734 0072 0000     		.short	0
 6735 0074 0100     		.short	1
 6736 0076 0600     		.short	6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 202


 6737 0078 1A00     		.short	26
 6738 007a 0700     		.short	7
 6739 007c 0100     		.short	1
 6740 007e 0500     		.short	5
 6741              		.text
 6742              	.Letext0:
 6743              		.file 7 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\../src/gos/gos_raw32.h"
 6744              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 6745              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 6746              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 6747              		.file 11 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\../src/gos/gos_x_threads.h"
 6748              		.file 12 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\../src/gdisp/gdisp.h"
 6749              		.file 13 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gdisp/gdisp_driver.h"
 6750              		.file 14 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\../src/gdisp/gdisp_colors.h"
 6751              		.file 15 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 6752              		.file 16 "..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gdriver/gdriver.h"
 6753              		.section	.debug_info,"",%progbits
 6754              	.Ldebug_info0:
 6755 0000 CA180000 		.4byte	0x18ca
 6756 0004 0400     		.2byte	0x4
 6757 0006 00000000 		.4byte	.Ldebug_abbrev0
 6758 000a 04       		.byte	0x4
 6759 000b 01       		.uleb128 0x1
 6760 000c 1F010000 		.4byte	.LASF229
 6761 0010 0C       		.byte	0xc
 6762 0011 A0020000 		.4byte	.LASF230
 6763 0015 8E030000 		.4byte	.LASF231
 6764 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6765 001d 00000000 		.4byte	0
 6766 0021 00000000 		.4byte	.Ldebug_line0
 6767 0025 02       		.uleb128 0x2
 6768 0026 BC040000 		.4byte	.LASF2
 6769 002a 07       		.byte	0x7
 6770 002b 20       		.byte	0x20
 6771 002c 30000000 		.4byte	0x30
 6772 0030 03       		.uleb128 0x3
 6773 0031 01       		.byte	0x1
 6774 0032 08       		.byte	0x8
 6775 0033 94090000 		.4byte	.LASF0
 6776 0037 03       		.uleb128 0x3
 6777 0038 01       		.byte	0x1
 6778 0039 06       		.byte	0x6
 6779 003a 680A0000 		.4byte	.LASF1
 6780 003e 02       		.uleb128 0x2
 6781 003f 55080000 		.4byte	.LASF3
 6782 0043 08       		.byte	0x8
 6783 0044 1D       		.byte	0x1d
 6784 0045 30000000 		.4byte	0x30
 6785 0049 02       		.uleb128 0x2
 6786 004a 1B060000 		.4byte	.LASF4
 6787 004e 08       		.byte	0x8
 6788 004f 29       		.byte	0x29
 6789 0050 54000000 		.4byte	0x54
 6790 0054 03       		.uleb128 0x3
 6791 0055 02       		.byte	0x2
 6792 0056 05       		.byte	0x5
 6793 0057 B2070000 		.4byte	.LASF5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 203


 6794 005b 02       		.uleb128 0x2
 6795 005c 7A030000 		.4byte	.LASF6
 6796 0060 08       		.byte	0x8
 6797 0061 2B       		.byte	0x2b
 6798 0062 66000000 		.4byte	0x66
 6799 0066 03       		.uleb128 0x3
 6800 0067 02       		.byte	0x2
 6801 0068 07       		.byte	0x7
 6802 0069 7F0A0000 		.4byte	.LASF7
 6803 006d 03       		.uleb128 0x3
 6804 006e 04       		.byte	0x4
 6805 006f 05       		.byte	0x5
 6806 0070 CE070000 		.4byte	.LASF8
 6807 0074 02       		.uleb128 0x2
 6808 0075 A2090000 		.4byte	.LASF9
 6809 0079 08       		.byte	0x8
 6810 007a 41       		.byte	0x41
 6811 007b 7F000000 		.4byte	0x7f
 6812 007f 03       		.uleb128 0x3
 6813 0080 04       		.byte	0x4
 6814 0081 07       		.byte	0x7
 6815 0082 C1080000 		.4byte	.LASF10
 6816 0086 03       		.uleb128 0x3
 6817 0087 08       		.byte	0x8
 6818 0088 05       		.byte	0x5
 6819 0089 02060000 		.4byte	.LASF11
 6820 008d 03       		.uleb128 0x3
 6821 008e 08       		.byte	0x8
 6822 008f 07       		.byte	0x7
 6823 0090 17030000 		.4byte	.LASF12
 6824 0094 04       		.uleb128 0x4
 6825 0095 04       		.byte	0x4
 6826 0096 05       		.byte	0x5
 6827 0097 696E7400 		.ascii	"int\000"
 6828 009b 03       		.uleb128 0x3
 6829 009c 04       		.byte	0x4
 6830 009d 07       		.byte	0x7
 6831 009e C7000000 		.4byte	.LASF13
 6832 00a2 02       		.uleb128 0x2
 6833 00a3 A4050000 		.4byte	.LASF14
 6834 00a7 09       		.byte	0x9
 6835 00a8 18       		.byte	0x18
 6836 00a9 3E000000 		.4byte	0x3e
 6837 00ad 02       		.uleb128 0x2
 6838 00ae 06030000 		.4byte	.LASF15
 6839 00b2 09       		.byte	0x9
 6840 00b3 20       		.byte	0x20
 6841 00b4 49000000 		.4byte	0x49
 6842 00b8 02       		.uleb128 0x2
 6843 00b9 4B070000 		.4byte	.LASF16
 6844 00bd 09       		.byte	0x9
 6845 00be 24       		.byte	0x24
 6846 00bf 5B000000 		.4byte	0x5b
 6847 00c3 02       		.uleb128 0x2
 6848 00c4 88020000 		.4byte	.LASF17
 6849 00c8 09       		.byte	0x9
 6850 00c9 30       		.byte	0x30
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 204


 6851 00ca 74000000 		.4byte	0x74
 6852 00ce 02       		.uleb128 0x2
 6853 00cf 96040000 		.4byte	.LASF18
 6854 00d3 0A       		.byte	0xa
 6855 00d4 D8       		.byte	0xd8
 6856 00d5 9B000000 		.4byte	0x9b
 6857 00d9 03       		.uleb128 0x3
 6858 00da 08       		.byte	0x8
 6859 00db 04       		.byte	0x4
 6860 00dc 3F070000 		.4byte	.LASF19
 6861 00e0 02       		.uleb128 0x2
 6862 00e1 A8000000 		.4byte	.LASF20
 6863 00e5 0B       		.byte	0xb
 6864 00e6 1B       		.byte	0x1b
 6865 00e7 C3000000 		.4byte	0xc3
 6866 00eb 02       		.uleb128 0x2
 6867 00ec 68020000 		.4byte	.LASF21
 6868 00f0 0B       		.byte	0xb
 6869 00f1 1C       		.byte	0x1c
 6870 00f2 C3000000 		.4byte	0xc3
 6871 00f6 02       		.uleb128 0x2
 6872 00f7 39060000 		.4byte	.LASF22
 6873 00fb 0B       		.byte	0xb
 6874 00fc 1D       		.byte	0x1d
 6875 00fd 54000000 		.4byte	0x54
 6876 0101 02       		.uleb128 0x2
 6877 0102 B5090000 		.4byte	.LASF23
 6878 0106 0B       		.byte	0xb
 6879 0107 1E       		.byte	0x1e
 6880 0108 94000000 		.4byte	0x94
 6881 010c 02       		.uleb128 0x2
 6882 010d 4C000000 		.4byte	.LASF24
 6883 0111 0B       		.byte	0xb
 6884 0112 1F       		.byte	0x1f
 6885 0113 94000000 		.4byte	0x94
 6886 0117 05       		.uleb128 0x5
 6887 0118 04       		.byte	0x4
 6888 0119 0B       		.byte	0xb
 6889 011a 2C       		.byte	0x2c
 6890 011b 38010000 		.4byte	0x138
 6891 011f 06       		.uleb128 0x6
 6892 0120 636E7400 		.ascii	"cnt\000"
 6893 0124 0B       		.byte	0xb
 6894 0125 2D       		.byte	0x2d
 6895 0126 F6000000 		.4byte	0xf6
 6896 012a 00       		.byte	0
 6897 012b 07       		.uleb128 0x7
 6898 012c DF010000 		.4byte	.LASF25
 6899 0130 0B       		.byte	0xb
 6900 0131 2E       		.byte	0x2e
 6901 0132 F6000000 		.4byte	0xf6
 6902 0136 02       		.byte	0x2
 6903 0137 00       		.byte	0
 6904 0138 02       		.uleb128 0x2
 6905 0139 FF020000 		.4byte	.LASF26
 6906 013d 0B       		.byte	0xb
 6907 013e 2F       		.byte	0x2f
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 205


 6908 013f 17010000 		.4byte	0x117
 6909 0143 02       		.uleb128 0x2
 6910 0144 AF080000 		.4byte	.LASF27
 6911 0148 0B       		.byte	0xb
 6912 0149 31       		.byte	0x31
 6913 014a C3000000 		.4byte	0xc3
 6914 014e 02       		.uleb128 0x2
 6915 014f 150B0000 		.4byte	.LASF28
 6916 0153 0B       		.byte	0xb
 6917 0154 32       		.byte	0x32
 6918 0155 59010000 		.4byte	0x159
 6919 0159 08       		.uleb128 0x8
 6920 015a 04       		.byte	0x4
 6921 015b 02       		.uleb128 0x2
 6922 015c 3A0B0000 		.4byte	.LASF29
 6923 0160 0C       		.byte	0xc
 6924 0161 27       		.byte	0x27
 6925 0162 AD000000 		.4byte	0xad
 6926 0166 09       		.uleb128 0x9
 6927 0167 FF010000 		.4byte	.LASF37
 6928 016b 02       		.byte	0x2
 6929 016c 66000000 		.4byte	0x66
 6930 0170 0C       		.byte	0xc
 6931 0171 5C       		.byte	0x5c
 6932 0172 9E010000 		.4byte	0x19e
 6933 0176 0A       		.uleb128 0xa
 6934 0177 9D040000 		.4byte	.LASF30
 6935 017b 00       		.byte	0
 6936 017c 0A       		.uleb128 0xa
 6937 017d 73080000 		.4byte	.LASF31
 6938 0181 5A       		.byte	0x5a
 6939 0182 0A       		.uleb128 0xa
 6940 0183 31080000 		.4byte	.LASF32
 6941 0187 B4       		.byte	0xb4
 6942 0188 0B       		.uleb128 0xb
 6943 0189 80000000 		.4byte	.LASF33
 6944 018d 0E01     		.2byte	0x10e
 6945 018f 0B       		.uleb128 0xb
 6946 0190 D0050000 		.4byte	.LASF34
 6947 0194 E803     		.2byte	0x3e8
 6948 0196 0B       		.uleb128 0xb
 6949 0197 E2080000 		.4byte	.LASF35
 6950 019b E903     		.2byte	0x3e9
 6951 019d 00       		.byte	0
 6952 019e 02       		.uleb128 0x2
 6953 019f 49050000 		.4byte	.LASF36
 6954 01a3 0C       		.byte	0xc
 6955 01a4 63       		.byte	0x63
 6956 01a5 66010000 		.4byte	0x166
 6957 01a9 09       		.uleb128 0x9
 6958 01aa F9080000 		.4byte	.LASF38
 6959 01ae 01       		.byte	0x1
 6960 01af 30000000 		.4byte	0x30
 6961 01b3 0C       		.byte	0xc
 6962 01b4 69       		.byte	0x69
 6963 01b5 D2010000 		.4byte	0x1d2
 6964 01b9 0A       		.uleb128 0xa
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 206


 6965 01ba 8B080000 		.4byte	.LASF39
 6966 01be 00       		.byte	0
 6967 01bf 0A       		.uleb128 0xa
 6968 01c0 D9040000 		.4byte	.LASF40
 6969 01c4 01       		.byte	0x1
 6970 01c5 0A       		.uleb128 0xa
 6971 01c6 3D000000 		.4byte	.LASF41
 6972 01ca 02       		.byte	0x2
 6973 01cb 0A       		.uleb128 0xa
 6974 01cc 5C050000 		.4byte	.LASF42
 6975 01d0 03       		.byte	0x3
 6976 01d1 00       		.byte	0
 6977 01d2 02       		.uleb128 0x2
 6978 01d3 74070000 		.4byte	.LASF43
 6979 01d7 0C       		.byte	0xc
 6980 01d8 6E       		.byte	0x6e
 6981 01d9 A9010000 		.4byte	0x1a9
 6982 01dd 02       		.uleb128 0x2
 6983 01de 13070000 		.4byte	.LASF44
 6984 01e2 0C       		.byte	0xc
 6985 01e3 73       		.byte	0x73
 6986 01e4 E8010000 		.4byte	0x1e8
 6987 01e8 0C       		.uleb128 0xc
 6988 01e9 13070000 		.4byte	.LASF44
 6989 01ed 40       		.byte	0x40
 6990 01ee 0D       		.byte	0xd
 6991 01ef 3C01     		.2byte	0x13c
 6992 01f1 8C020000 		.4byte	0x28c
 6993 01f5 0D       		.uleb128 0xd
 6994 01f6 6400     		.ascii	"d\000"
 6995 01f8 0D       		.byte	0xd
 6996 01f9 3D01     		.2byte	0x13d
 6997 01fb C2030000 		.4byte	0x3c2
 6998 01ff 00       		.byte	0
 6999 0200 0D       		.uleb128 0xd
 7000 0201 6700     		.ascii	"g\000"
 7001 0203 0D       		.byte	0xd
 7002 0204 4701     		.2byte	0x147
 7003 0206 A5040000 		.4byte	0x4a5
 7004 020a 08       		.byte	0x8
 7005 020b 0E       		.uleb128 0xe
 7006 020c 44050000 		.4byte	.LASF45
 7007 0210 0D       		.byte	0xd
 7008 0211 4901     		.2byte	0x149
 7009 0213 59010000 		.4byte	0x159
 7010 0217 14       		.byte	0x14
 7011 0218 0E       		.uleb128 0xe
 7012 0219 520A0000 		.4byte	.LASF46
 7013 021d 0D       		.byte	0xd
 7014 021e 4A01     		.2byte	0x14a
 7015 0220 59010000 		.4byte	0x159
 7016 0224 18       		.byte	0x18
 7017 0225 0E       		.uleb128 0xe
 7018 0226 D80A0000 		.4byte	.LASF47
 7019 022a 0D       		.byte	0xd
 7020 022b 4C01     		.2byte	0x14c
 7021 022d A2000000 		.4byte	0xa2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 207


 7022 0231 1C       		.byte	0x1c
 7023 0232 0E       		.uleb128 0xe
 7024 0233 ED010000 		.4byte	.LASF48
 7025 0237 0D       		.byte	0xd
 7026 0238 4D01     		.2byte	0x14d
 7027 023a A2000000 		.4byte	0xa2
 7028 023e 1D       		.byte	0x1d
 7029 023f 0E       		.uleb128 0xe
 7030 0240 91000000 		.4byte	.LASF49
 7031 0244 0D       		.byte	0xd
 7032 0245 4E01     		.2byte	0x14e
 7033 0247 B8000000 		.4byte	0xb8
 7034 024b 1E       		.byte	0x1e
 7035 024c 0E       		.uleb128 0xe
 7036 024d 11080000 		.4byte	.LASF50
 7037 0251 0D       		.byte	0xd
 7038 0252 5A01     		.2byte	0x15a
 7039 0254 5B010000 		.4byte	0x15b
 7040 0258 20       		.byte	0x20
 7041 0259 0E       		.uleb128 0xe
 7042 025a A8080000 		.4byte	.LASF51
 7043 025e 0D       		.byte	0xd
 7044 025f 5A01     		.2byte	0x15a
 7045 0261 5B010000 		.4byte	0x15b
 7046 0265 22       		.byte	0x22
 7047 0266 0E       		.uleb128 0xe
 7048 0267 18080000 		.4byte	.LASF52
 7049 026b 0D       		.byte	0xd
 7050 026c 5B01     		.2byte	0x15b
 7051 026e 5B010000 		.4byte	0x15b
 7052 0272 24       		.byte	0x24
 7053 0273 0E       		.uleb128 0xe
 7054 0274 DF060000 		.4byte	.LASF53
 7055 0278 0D       		.byte	0xd
 7056 0279 5B01     		.2byte	0x15b
 7057 027b 5B010000 		.4byte	0x15b
 7058 027f 26       		.byte	0x26
 7059 0280 0D       		.uleb128 0xd
 7060 0281 7000     		.ascii	"p\000"
 7061 0283 0D       		.byte	0xd
 7062 0284 6601     		.2byte	0x166
 7063 0286 01050000 		.4byte	0x501
 7064 028a 28       		.byte	0x28
 7065 028b 00       		.byte	0
 7066 028c 0F       		.uleb128 0xf
 7067 028d AD090000 		.4byte	.LASF54
 7068 0291 0E       		.byte	0xe
 7069 0292 9001     		.2byte	0x190
 7070 0294 B8000000 		.4byte	0xb8
 7071 0298 02       		.uleb128 0x2
 7072 0299 C4010000 		.4byte	.LASF55
 7073 029d 0C       		.byte	0xc
 7074 029e D9       		.byte	0xd9
 7075 029f 8C020000 		.4byte	0x28c
 7076 02a3 03       		.uleb128 0x3
 7077 02a4 04       		.byte	0x4
 7078 02a5 07       		.byte	0x7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 208


 7079 02a6 B8080000 		.4byte	.LASF56
 7080 02aa 10       		.uleb128 0x10
 7081 02ab 04       		.byte	0x4
 7082 02ac B0020000 		.4byte	0x2b0
 7083 02b0 03       		.uleb128 0x3
 7084 02b1 01       		.byte	0x1
 7085 02b2 08       		.byte	0x8
 7086 02b3 57050000 		.4byte	.LASF57
 7087 02b7 10       		.uleb128 0x10
 7088 02b8 04       		.byte	0x4
 7089 02b9 BD020000 		.4byte	0x2bd
 7090 02bd 11       		.uleb128 0x11
 7091 02be B0020000 		.4byte	0x2b0
 7092 02c2 12       		.uleb128 0x12
 7093 02c3 3A090000 		.4byte	.LASF58
 7094 02c7 18       		.byte	0x18
 7095 02c8 03       		.byte	0x3
 7096 02c9 AB       		.byte	0xab
 7097 02ca 16030000 		.4byte	0x316
 7098 02ce 07       		.uleb128 0x7
 7099 02cf D4000000 		.4byte	.LASF59
 7100 02d3 03       		.byte	0x3
 7101 02d4 AC       		.byte	0xac
 7102 02d5 16030000 		.4byte	0x316
 7103 02d9 00       		.byte	0
 7104 02da 07       		.uleb128 0x7
 7105 02db 91000000 		.4byte	.LASF49
 7106 02df 03       		.byte	0x3
 7107 02e0 AD       		.byte	0xad
 7108 02e1 94000000 		.4byte	0x94
 7109 02e5 04       		.byte	0x4
 7110 02e6 07       		.uleb128 0x7
 7111 02e7 8C060000 		.4byte	.LASF60
 7112 02eb 03       		.byte	0x3
 7113 02ec B2       		.byte	0xb2
 7114 02ed CE000000 		.4byte	0xce
 7115 02f1 08       		.byte	0x8
 7116 02f2 06       		.uleb128 0x6
 7117 02f3 666E00   		.ascii	"fn\000"
 7118 02f6 03       		.byte	0x3
 7119 02f7 B3       		.byte	0xb3
 7120 02f8 2B030000 		.4byte	0x32b
 7121 02fc 0C       		.byte	0xc
 7122 02fd 07       		.uleb128 0x7
 7123 02fe A7060000 		.4byte	.LASF61
 7124 0302 03       		.byte	0x3
 7125 0303 B4       		.byte	0xb4
 7126 0304 59010000 		.4byte	0x159
 7127 0308 10       		.byte	0x10
 7128 0309 06       		.uleb128 0x6
 7129 030a 63787400 		.ascii	"cxt\000"
 7130 030e 03       		.byte	0x3
 7131 030f B5       		.byte	0xb5
 7132 0310 59010000 		.4byte	0x159
 7133 0314 14       		.byte	0x14
 7134 0315 00       		.byte	0
 7135 0316 10       		.uleb128 0x10
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 209


 7136 0317 04       		.byte	0x4
 7137 0318 C2020000 		.4byte	0x2c2
 7138 031c 13       		.uleb128 0x13
 7139 031d 01010000 		.4byte	0x101
 7140 0321 2B030000 		.4byte	0x32b
 7141 0325 14       		.uleb128 0x14
 7142 0326 59010000 		.4byte	0x159
 7143 032a 00       		.byte	0
 7144 032b 10       		.uleb128 0x10
 7145 032c 04       		.byte	0x4
 7146 032d 1C030000 		.4byte	0x31c
 7147 0331 02       		.uleb128 0x2
 7148 0332 3A090000 		.4byte	.LASF58
 7149 0336 03       		.byte	0x3
 7150 0337 B6       		.byte	0xb6
 7151 0338 C2020000 		.4byte	0x2c2
 7152 033c 12       		.uleb128 0x12
 7153 033d 83080000 		.4byte	.LASF62
 7154 0341 08       		.byte	0x8
 7155 0342 03       		.byte	0x3
 7156 0343 B8       		.byte	0xb8
 7157 0344 61030000 		.4byte	0x361
 7158 0348 07       		.uleb128 0x7
 7159 0349 F0000000 		.4byte	.LASF63
 7160 034d 03       		.byte	0x3
 7161 034e B9       		.byte	0xb9
 7162 034f 61030000 		.4byte	0x361
 7163 0353 00       		.byte	0
 7164 0354 07       		.uleb128 0x7
 7165 0355 D0090000 		.4byte	.LASF64
 7166 0359 03       		.byte	0x3
 7167 035a BA       		.byte	0xba
 7168 035b 61030000 		.4byte	0x361
 7169 035f 04       		.byte	0x4
 7170 0360 00       		.byte	0
 7171 0361 10       		.uleb128 0x10
 7172 0362 04       		.byte	0x4
 7173 0363 31030000 		.4byte	0x331
 7174 0367 02       		.uleb128 0x2
 7175 0368 83080000 		.4byte	.LASF62
 7176 036c 03       		.byte	0x3
 7177 036d BB       		.byte	0xbb
 7178 036e 3C030000 		.4byte	0x33c
 7179 0372 0F       		.uleb128 0xf
 7180 0373 320B0000 		.4byte	.LASF65
 7181 0377 0F       		.byte	0xf
 7182 0378 6D01     		.2byte	0x16d
 7183 037a 7E030000 		.4byte	0x37e
 7184 037e 15       		.uleb128 0x15
 7185 037f 94000000 		.4byte	0x94
 7186 0383 8E030000 		.4byte	0x38e
 7187 0387 16       		.uleb128 0x16
 7188 0388 A3020000 		.4byte	0x2a3
 7189 038c 16       		.byte	0x16
 7190 038d 00       		.byte	0
 7191 038e 0C       		.uleb128 0xc
 7192 038f 6C070000 		.4byte	.LASF66
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 210


 7193 0393 60       		.byte	0x60
 7194 0394 03       		.byte	0x3
 7195 0395 1101     		.2byte	0x111
 7196 0397 B6030000 		.4byte	0x3b6
 7197 039b 0E       		.uleb128 0xe
 7198 039c 4E020000 		.4byte	.LASF67
 7199 03a0 03       		.byte	0x3
 7200 03a1 1201     		.2byte	0x112
 7201 03a3 AA020000 		.4byte	0x2aa
 7202 03a7 00       		.byte	0
 7203 03a8 0D       		.uleb128 0xd
 7204 03a9 63787400 		.ascii	"cxt\000"
 7205 03ad 03       		.byte	0x3
 7206 03ae 1301     		.2byte	0x113
 7207 03b0 72030000 		.4byte	0x372
 7208 03b4 04       		.byte	0x4
 7209 03b5 00       		.byte	0
 7210 03b6 0F       		.uleb128 0xf
 7211 03b7 6C070000 		.4byte	.LASF66
 7212 03bb 03       		.byte	0x3
 7213 03bc 1401     		.2byte	0x114
 7214 03be 8E030000 		.4byte	0x38e
 7215 03c2 12       		.uleb128 0x12
 7216 03c3 F9060000 		.4byte	.LASF68
 7217 03c7 08       		.byte	0x8
 7218 03c8 10       		.byte	0x10
 7219 03c9 3A       		.byte	0x3a
 7220 03ca E7030000 		.4byte	0x3e7
 7221 03ce 07       		.uleb128 0x7
 7222 03cf C4090000 		.4byte	.LASF69
 7223 03d3 10       		.byte	0x10
 7224 03d4 3B       		.byte	0x3b
 7225 03d5 E7030000 		.4byte	0x3e7
 7226 03d9 00       		.byte	0
 7227 03da 06       		.uleb128 0x6
 7228 03db 766D7400 		.ascii	"vmt\000"
 7229 03df 10       		.byte	0x10
 7230 03e0 3C       		.byte	0x3c
 7231 03e1 42040000 		.4byte	0x442
 7232 03e5 04       		.byte	0x4
 7233 03e6 00       		.byte	0
 7234 03e7 10       		.uleb128 0x10
 7235 03e8 04       		.byte	0x4
 7236 03e9 C2030000 		.4byte	0x3c2
 7237 03ed 12       		.uleb128 0x12
 7238 03ee 44060000 		.4byte	.LASF70
 7239 03f2 14       		.byte	0x14
 7240 03f3 10       		.byte	0x10
 7241 03f4 42       		.byte	0x42
 7242 03f5 42040000 		.4byte	0x442
 7243 03f9 07       		.uleb128 0x7
 7244 03fa 8F090000 		.4byte	.LASF71
 7245 03fe 10       		.byte	0x10
 7246 03ff 43       		.byte	0x43
 7247 0400 B8000000 		.4byte	0xb8
 7248 0404 00       		.byte	0
 7249 0405 07       		.uleb128 0x7
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 211


 7250 0406 91000000 		.4byte	.LASF49
 7251 040a 10       		.byte	0x10
 7252 040b 44       		.byte	0x44
 7253 040c B8000000 		.4byte	0xb8
 7254 0410 02       		.byte	0x2
 7255 0411 07       		.uleb128 0x7
 7256 0412 68090000 		.4byte	.LASF72
 7257 0416 10       		.byte	0x10
 7258 0417 45       		.byte	0x45
 7259 0418 C3000000 		.4byte	0xc3
 7260 041c 04       		.byte	0x4
 7261 041d 07       		.uleb128 0x7
 7262 041e A3080000 		.4byte	.LASF73
 7263 0422 10       		.byte	0x10
 7264 0423 46       		.byte	0x46
 7265 0424 7C040000 		.4byte	0x47c
 7266 0428 08       		.byte	0x8
 7267 0429 07       		.uleb128 0x7
 7268 042a 29050000 		.4byte	.LASF74
 7269 042e 10       		.byte	0x10
 7270 042f 4A       		.byte	0x4a
 7271 0430 8D040000 		.4byte	0x48d
 7272 0434 0C       		.byte	0xc
 7273 0435 07       		.uleb128 0x7
 7274 0436 D9000000 		.4byte	.LASF75
 7275 043a 10       		.byte	0x10
 7276 043b 4B       		.byte	0x4b
 7277 043c 8D040000 		.4byte	0x48d
 7278 0440 10       		.byte	0x10
 7279 0441 00       		.byte	0
 7280 0442 10       		.uleb128 0x10
 7281 0443 04       		.byte	0x4
 7282 0444 48040000 		.4byte	0x448
 7283 0448 11       		.uleb128 0x11
 7284 0449 ED030000 		.4byte	0x3ed
 7285 044d 02       		.uleb128 0x2
 7286 044e F9060000 		.4byte	.LASF68
 7287 0452 10       		.byte	0x10
 7288 0453 3D       		.byte	0x3d
 7289 0454 C2030000 		.4byte	0x3c2
 7290 0458 13       		.uleb128 0x13
 7291 0459 25000000 		.4byte	0x25
 7292 045d 76040000 		.4byte	0x476
 7293 0461 14       		.uleb128 0x14
 7294 0462 76040000 		.4byte	0x476
 7295 0466 14       		.uleb128 0x14
 7296 0467 59010000 		.4byte	0x159
 7297 046b 14       		.uleb128 0x14
 7298 046c 9B000000 		.4byte	0x9b
 7299 0470 14       		.uleb128 0x14
 7300 0471 9B000000 		.4byte	0x9b
 7301 0475 00       		.byte	0
 7302 0476 10       		.uleb128 0x10
 7303 0477 04       		.byte	0x4
 7304 0478 4D040000 		.4byte	0x44d
 7305 047c 10       		.uleb128 0x10
 7306 047d 04       		.byte	0x4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 212


 7307 047e 58040000 		.4byte	0x458
 7308 0482 17       		.uleb128 0x17
 7309 0483 8D040000 		.4byte	0x48d
 7310 0487 14       		.uleb128 0x14
 7311 0488 76040000 		.4byte	0x476
 7312 048c 00       		.byte	0
 7313 048d 10       		.uleb128 0x10
 7314 048e 04       		.byte	0x4
 7315 048f 82040000 		.4byte	0x482
 7316 0493 02       		.uleb128 0x2
 7317 0494 44060000 		.4byte	.LASF70
 7318 0498 10       		.byte	0x10
 7319 0499 4C       		.byte	0x4c
 7320 049a ED030000 		.4byte	0x3ed
 7321 049e 03       		.uleb128 0x3
 7322 049f 01       		.byte	0x1
 7323 04a0 02       		.byte	0x2
 7324 04a1 D3040000 		.4byte	.LASF76
 7325 04a5 0C       		.uleb128 0xc
 7326 04a6 89040000 		.4byte	.LASF77
 7327 04aa 0A       		.byte	0xa
 7328 04ab 0D       		.byte	0xd
 7329 04ac 4001     		.2byte	0x140
 7330 04ae 01050000 		.4byte	0x501
 7331 04b2 0E       		.uleb128 0xe
 7332 04b3 2B080000 		.4byte	.LASF78
 7333 04b7 0D       		.byte	0xd
 7334 04b8 4101     		.2byte	0x141
 7335 04ba 5B010000 		.4byte	0x15b
 7336 04be 00       		.byte	0
 7337 04bf 0E       		.uleb128 0xe
 7338 04c0 C5020000 		.4byte	.LASF79
 7339 04c4 0D       		.byte	0xd
 7340 04c5 4201     		.2byte	0x142
 7341 04c7 5B010000 		.4byte	0x15b
 7342 04cb 02       		.byte	0x2
 7343 04cc 0E       		.uleb128 0xe
 7344 04cd 1F080000 		.4byte	.LASF80
 7345 04d1 0D       		.byte	0xd
 7346 04d2 4301     		.2byte	0x143
 7347 04d4 9E010000 		.4byte	0x19e
 7348 04d8 04       		.byte	0x4
 7349 04d9 0E       		.uleb128 0xe
 7350 04da 09070000 		.4byte	.LASF81
 7351 04de 0D       		.byte	0xd
 7352 04df 4401     		.2byte	0x144
 7353 04e1 D2010000 		.4byte	0x1d2
 7354 04e5 06       		.byte	0x6
 7355 04e6 0E       		.uleb128 0xe
 7356 04e7 480A0000 		.4byte	.LASF82
 7357 04eb 0D       		.byte	0xd
 7358 04ec 4501     		.2byte	0x145
 7359 04ee A2000000 		.4byte	0xa2
 7360 04f2 07       		.byte	0x7
 7361 04f3 0E       		.uleb128 0xe
 7362 04f4 7F050000 		.4byte	.LASF83
 7363 04f8 0D       		.byte	0xd
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 213


 7364 04f9 4601     		.2byte	0x146
 7365 04fb A2000000 		.4byte	0xa2
 7366 04ff 08       		.byte	0x8
 7367 0500 00       		.byte	0
 7368 0501 18       		.uleb128 0x18
 7369 0502 18       		.byte	0x18
 7370 0503 0D       		.byte	0xd
 7371 0504 5F01     		.2byte	0x15f
 7372 0506 83050000 		.4byte	0x583
 7373 050a 0D       		.uleb128 0xd
 7374 050b 7800     		.ascii	"x\000"
 7375 050d 0D       		.byte	0xd
 7376 050e 6001     		.2byte	0x160
 7377 0510 5B010000 		.4byte	0x15b
 7378 0514 00       		.byte	0
 7379 0515 0D       		.uleb128 0xd
 7380 0516 7900     		.ascii	"y\000"
 7381 0518 0D       		.byte	0xd
 7382 0519 6001     		.2byte	0x160
 7383 051b 5B010000 		.4byte	0x15b
 7384 051f 02       		.byte	0x2
 7385 0520 0D       		.uleb128 0xd
 7386 0521 637800   		.ascii	"cx\000"
 7387 0524 0D       		.byte	0xd
 7388 0525 6101     		.2byte	0x161
 7389 0527 5B010000 		.4byte	0x15b
 7390 052b 04       		.byte	0x4
 7391 052c 0D       		.uleb128 0xd
 7392 052d 637900   		.ascii	"cy\000"
 7393 0530 0D       		.byte	0xd
 7394 0531 6101     		.2byte	0x161
 7395 0533 5B010000 		.4byte	0x15b
 7396 0537 06       		.byte	0x6
 7397 0538 0D       		.uleb128 0xd
 7398 0539 783100   		.ascii	"x1\000"
 7399 053c 0D       		.byte	0xd
 7400 053d 6201     		.2byte	0x162
 7401 053f 5B010000 		.4byte	0x15b
 7402 0543 08       		.byte	0x8
 7403 0544 0D       		.uleb128 0xd
 7404 0545 793100   		.ascii	"y1\000"
 7405 0548 0D       		.byte	0xd
 7406 0549 6201     		.2byte	0x162
 7407 054b 5B010000 		.4byte	0x15b
 7408 054f 0A       		.byte	0xa
 7409 0550 0D       		.uleb128 0xd
 7410 0551 783200   		.ascii	"x2\000"
 7411 0554 0D       		.byte	0xd
 7412 0555 6301     		.2byte	0x163
 7413 0557 5B010000 		.4byte	0x15b
 7414 055b 0C       		.byte	0xc
 7415 055c 0D       		.uleb128 0xd
 7416 055d 793200   		.ascii	"y2\000"
 7417 0560 0D       		.byte	0xd
 7418 0561 6301     		.2byte	0x163
 7419 0563 5B010000 		.4byte	0x15b
 7420 0567 0E       		.byte	0xe
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 214


 7421 0568 0E       		.uleb128 0xe
 7422 0569 70040000 		.4byte	.LASF84
 7423 056d 0D       		.byte	0xd
 7424 056e 6401     		.2byte	0x164
 7425 0570 8C020000 		.4byte	0x28c
 7426 0574 10       		.byte	0x10
 7427 0575 0D       		.uleb128 0xd
 7428 0576 70747200 		.ascii	"ptr\000"
 7429 057a 0D       		.byte	0xd
 7430 057b 6501     		.2byte	0x165
 7431 057d 59010000 		.4byte	0x159
 7432 0581 14       		.byte	0x14
 7433 0582 00       		.byte	0
 7434 0583 0C       		.uleb128 0xc
 7435 0584 D5090000 		.4byte	.LASF85
 7436 0588 60       		.byte	0x60
 7437 0589 0D       		.byte	0xd
 7438 058a 7A01     		.2byte	0x17a
 7439 058c 93060000 		.4byte	0x693
 7440 0590 0D       		.uleb128 0xd
 7441 0591 6400     		.ascii	"d\000"
 7442 0593 0D       		.byte	0xd
 7443 0594 7B01     		.2byte	0x17b
 7444 0596 93040000 		.4byte	0x493
 7445 059a 00       		.byte	0
 7446 059b 0E       		.uleb128 0xe
 7447 059c A3080000 		.4byte	.LASF73
 7448 05a0 0D       		.byte	0xd
 7449 05a1 7E01     		.2byte	0x17e
 7450 05a3 A8060000 		.4byte	0x6a8
 7451 05a7 14       		.byte	0x14
 7452 05a8 0E       		.uleb128 0xe
 7453 05a9 D9000000 		.4byte	.LASF75
 7454 05ad 0D       		.byte	0xd
 7455 05ae 7F01     		.2byte	0x17f
 7456 05b0 B9060000 		.4byte	0x6b9
 7457 05b4 18       		.byte	0x18
 7458 05b5 0E       		.uleb128 0xe
 7459 05b6 B4000000 		.4byte	.LASF86
 7460 05ba 0D       		.byte	0xd
 7461 05bb 8001     		.2byte	0x180
 7462 05bd B9060000 		.4byte	0x6b9
 7463 05c1 1C       		.byte	0x1c
 7464 05c2 0E       		.uleb128 0xe
 7465 05c3 0C050000 		.4byte	.LASF87
 7466 05c7 0D       		.byte	0xd
 7467 05c8 8101     		.2byte	0x181
 7468 05ca B9060000 		.4byte	0x6b9
 7469 05ce 20       		.byte	0x20
 7470 05cf 0E       		.uleb128 0xe
 7471 05d0 C60A0000 		.4byte	.LASF88
 7472 05d4 0D       		.byte	0xd
 7473 05d5 8201     		.2byte	0x182
 7474 05d7 B9060000 		.4byte	0x6b9
 7475 05db 24       		.byte	0x24
 7476 05dc 0E       		.uleb128 0xe
 7477 05dd 580A0000 		.4byte	.LASF89
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 215


 7478 05e1 0D       		.byte	0xd
 7479 05e2 8301     		.2byte	0x183
 7480 05e4 B9060000 		.4byte	0x6b9
 7481 05e8 28       		.byte	0x28
 7482 05e9 0E       		.uleb128 0xe
 7483 05ea 0B0B0000 		.4byte	.LASF90
 7484 05ee 0D       		.byte	0xd
 7485 05ef 8401     		.2byte	0x184
 7486 05f1 B9060000 		.4byte	0x6b9
 7487 05f5 2C       		.byte	0x2c
 7488 05f6 0E       		.uleb128 0xe
 7489 05f7 41090000 		.4byte	.LASF91
 7490 05fb 0D       		.byte	0xd
 7491 05fc 8501     		.2byte	0x185
 7492 05fe CE060000 		.4byte	0x6ce
 7493 0602 30       		.byte	0x30
 7494 0603 0E       		.uleb128 0xe
 7495 0604 9A080000 		.4byte	.LASF92
 7496 0608 0D       		.byte	0xd
 7497 0609 8601     		.2byte	0x186
 7498 060b B9060000 		.4byte	0x6b9
 7499 060f 34       		.byte	0x34
 7500 0610 0E       		.uleb128 0xe
 7501 0611 7A090000 		.4byte	.LASF93
 7502 0615 0D       		.byte	0xd
 7503 0616 8701     		.2byte	0x187
 7504 0618 B9060000 		.4byte	0x6b9
 7505 061c 38       		.byte	0x38
 7506 061d 0E       		.uleb128 0xe
 7507 061e 5D040000 		.4byte	.LASF94
 7508 0622 0D       		.byte	0xd
 7509 0623 8801     		.2byte	0x188
 7510 0625 B9060000 		.4byte	0x6b9
 7511 0629 3C       		.byte	0x3c
 7512 062a 0E       		.uleb128 0xe
 7513 062b 2E030000 		.4byte	.LASF95
 7514 062f 0D       		.byte	0xd
 7515 0630 8901     		.2byte	0x189
 7516 0632 B9060000 		.4byte	0x6b9
 7517 0636 40       		.byte	0x40
 7518 0637 0E       		.uleb128 0xe
 7519 0638 060B0000 		.4byte	.LASF96
 7520 063c 0D       		.byte	0xd
 7521 063d 8A01     		.2byte	0x18a
 7522 063f B9060000 		.4byte	0x6b9
 7523 0643 44       		.byte	0x44
 7524 0644 0D       		.uleb128 0xd
 7525 0645 67657400 		.ascii	"get\000"
 7526 0649 0D       		.byte	0xd
 7527 064a 8B01     		.2byte	0x18b
 7528 064c CE060000 		.4byte	0x6ce
 7529 0650 48       		.byte	0x48
 7530 0651 0E       		.uleb128 0xe
 7531 0652 92050000 		.4byte	.LASF97
 7532 0656 0D       		.byte	0xd
 7533 0657 8C01     		.2byte	0x18c
 7534 0659 B9060000 		.4byte	0x6b9
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 216


 7535 065d 4C       		.byte	0x4c
 7536 065e 0E       		.uleb128 0xe
 7537 065f BF000000 		.4byte	.LASF98
 7538 0663 0D       		.byte	0xd
 7539 0664 8D01     		.2byte	0x18d
 7540 0666 B9060000 		.4byte	0x6b9
 7541 066a 50       		.byte	0x50
 7542 066b 0E       		.uleb128 0xe
 7543 066c 33070000 		.4byte	.LASF99
 7544 0670 0D       		.byte	0xd
 7545 0671 8E01     		.2byte	0x18e
 7546 0673 E3060000 		.4byte	0x6e3
 7547 0677 54       		.byte	0x54
 7548 0678 0E       		.uleb128 0xe
 7549 0679 43030000 		.4byte	.LASF100
 7550 067d 0D       		.byte	0xd
 7551 067e 8F01     		.2byte	0x18f
 7552 0680 B9060000 		.4byte	0x6b9
 7553 0684 58       		.byte	0x58
 7554 0685 0E       		.uleb128 0xe
 7555 0686 94080000 		.4byte	.LASF101
 7556 068a 0D       		.byte	0xd
 7557 068b 9001     		.2byte	0x190
 7558 068d B9060000 		.4byte	0x6b9
 7559 0691 5C       		.byte	0x5c
 7560 0692 00       		.byte	0
 7561 0693 13       		.uleb128 0x13
 7562 0694 25000000 		.4byte	0x25
 7563 0698 A2060000 		.4byte	0x6a2
 7564 069c 14       		.uleb128 0x14
 7565 069d A2060000 		.4byte	0x6a2
 7566 06a1 00       		.byte	0
 7567 06a2 10       		.uleb128 0x10
 7568 06a3 04       		.byte	0x4
 7569 06a4 DD010000 		.4byte	0x1dd
 7570 06a8 10       		.uleb128 0x10
 7571 06a9 04       		.byte	0x4
 7572 06aa 93060000 		.4byte	0x693
 7573 06ae 17       		.uleb128 0x17
 7574 06af B9060000 		.4byte	0x6b9
 7575 06b3 14       		.uleb128 0x14
 7576 06b4 A2060000 		.4byte	0x6a2
 7577 06b8 00       		.byte	0
 7578 06b9 10       		.uleb128 0x10
 7579 06ba 04       		.byte	0x4
 7580 06bb AE060000 		.4byte	0x6ae
 7581 06bf 13       		.uleb128 0x13
 7582 06c0 8C020000 		.4byte	0x28c
 7583 06c4 CE060000 		.4byte	0x6ce
 7584 06c8 14       		.uleb128 0x14
 7585 06c9 A2060000 		.4byte	0x6a2
 7586 06cd 00       		.byte	0
 7587 06ce 10       		.uleb128 0x10
 7588 06cf 04       		.byte	0x4
 7589 06d0 BF060000 		.4byte	0x6bf
 7590 06d4 13       		.uleb128 0x13
 7591 06d5 59010000 		.4byte	0x159
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 217


 7592 06d9 E3060000 		.4byte	0x6e3
 7593 06dd 14       		.uleb128 0x14
 7594 06de A2060000 		.4byte	0x6a2
 7595 06e2 00       		.byte	0
 7596 06e3 10       		.uleb128 0x10
 7597 06e4 04       		.byte	0x4
 7598 06e5 D4060000 		.4byte	0x6d4
 7599 06e9 0F       		.uleb128 0xf
 7600 06ea D5090000 		.4byte	.LASF85
 7601 06ee 0D       		.byte	0xd
 7602 06ef 9101     		.2byte	0x191
 7603 06f1 83050000 		.4byte	0x583
 7604 06f5 19       		.uleb128 0x19
 7605 06f6 54070000 		.4byte	.LASF102
 7606 06fa 01       		.byte	0x1
 7607 06fb 51       		.byte	0x51
 7608 06fc 00000000 		.4byte	.LFB0
 7609 0700 2C000000 		.4byte	.LFE0-.LFB0
 7610 0704 01       		.uleb128 0x1
 7611 0705 9C       		.byte	0x9c
 7612 0706 19       		.uleb128 0x19
 7613 0707 4B090000 		.4byte	.LASF103
 7614 070b 01       		.byte	0x1
 7615 070c 87       		.byte	0x87
 7616 070d 00000000 		.4byte	.LFB1
 7617 0711 2C000000 		.4byte	.LFE1-.LFB1
 7618 0715 01       		.uleb128 0x1
 7619 0716 9C       		.byte	0x9c
 7620 0717 19       		.uleb128 0x19
 7621 0718 77000000 		.4byte	.LASF104
 7622 071c 02       		.byte	0x2
 7623 071d 16       		.byte	0x16
 7624 071e 00000000 		.4byte	.LFB2
 7625 0722 12000000 		.4byte	.LFE2-.LFB2
 7626 0726 01       		.uleb128 0x1
 7627 0727 9C       		.byte	0x9c
 7628 0728 1A       		.uleb128 0x1a
 7629 0729 740A0000 		.4byte	.LASF105
 7630 072d 02       		.byte	0x2
 7631 072e 27       		.byte	0x27
 7632 072f 00000000 		.4byte	.LFB3
 7633 0733 0A000000 		.4byte	.LFE3-.LFB3
 7634 0737 01       		.uleb128 0x1
 7635 0738 9C       		.byte	0x9c
 7636 0739 1B       		.uleb128 0x1b
 7637 073a F5000000 		.4byte	.LASF106
 7638 073e 02       		.byte	0x2
 7639 073f 49       		.byte	0x49
 7640 0740 00000000 		.4byte	.LFB4
 7641 0744 10000000 		.4byte	.LFE4-.LFB4
 7642 0748 01       		.uleb128 0x1
 7643 0749 9C       		.byte	0x9c
 7644 074a 6B070000 		.4byte	0x76b
 7645 074e 1C       		.uleb128 0x1c
 7646 074f 6D736700 		.ascii	"msg\000"
 7647 0753 02       		.byte	0x2
 7648 0754 49       		.byte	0x49
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 218


 7649 0755 B7020000 		.4byte	0x2b7
 7650 0759 02       		.uleb128 0x2
 7651 075a 91       		.byte	0x91
 7652 075b 6C       		.sleb128 -20
 7653 075c 1D       		.uleb128 0x1d
 7654 075d 30040000 		.4byte	.LASF108
 7655 0761 02       		.byte	0x2
 7656 0762 4E       		.byte	0x4e
 7657 0763 6B070000 		.4byte	0x76b
 7658 0767 02       		.uleb128 0x2
 7659 0768 91       		.byte	0x91
 7660 0769 74       		.sleb128 -12
 7661 076a 00       		.byte	0
 7662 076b 1E       		.uleb128 0x1e
 7663 076c C3000000 		.4byte	0xc3
 7664 0770 1B       		.uleb128 0x1b
 7665 0771 01070000 		.4byte	.LASF107
 7666 0775 02       		.byte	0x2
 7667 0776 56       		.byte	0x56
 7668 0777 00000000 		.4byte	.LFB5
 7669 077b 0E000000 		.4byte	.LFE5-.LFB5
 7670 077f 01       		.uleb128 0x1
 7671 0780 9C       		.byte	0x9c
 7672 0781 94070000 		.4byte	0x794
 7673 0785 1D       		.uleb128 0x1d
 7674 0786 30040000 		.4byte	.LASF108
 7675 078a 02       		.byte	0x2
 7676 078b 5A       		.byte	0x5a
 7677 078c 6B070000 		.4byte	0x76b
 7678 0790 02       		.uleb128 0x2
 7679 0791 91       		.byte	0x91
 7680 0792 74       		.sleb128 -12
 7681 0793 00       		.byte	0
 7682 0794 1A       		.uleb128 0x1a
 7683 0795 D7070000 		.4byte	.LASF109
 7684 0799 03       		.byte	0x3
 7685 079a 15       		.byte	0x15
 7686 079b 00000000 		.4byte	.LFB6
 7687 079f 0A000000 		.4byte	.LFE6-.LFB6
 7688 07a3 01       		.uleb128 0x1
 7689 07a4 9C       		.byte	0x9c
 7690 07a5 1A       		.uleb128 0x1a
 7691 07a6 C0060000 		.4byte	.LASF110
 7692 07aa 03       		.byte	0x3
 7693 07ab 19       		.byte	0x19
 7694 07ac 00000000 		.4byte	.LFB7
 7695 07b0 0A000000 		.4byte	.LFE7-.LFB7
 7696 07b4 01       		.uleb128 0x1
 7697 07b5 9C       		.byte	0x9c
 7698 07b6 1B       		.uleb128 0x1b
 7699 07b7 BC050000 		.4byte	.LASF111
 7700 07bb 03       		.byte	0x3
 7701 07bc 1D       		.byte	0x1d
 7702 07bd 00000000 		.4byte	.LFB8
 7703 07c1 16000000 		.4byte	.LFE8-.LFB8
 7704 07c5 01       		.uleb128 0x1
 7705 07c6 9C       		.byte	0x9c
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 219


 7706 07c7 DA070000 		.4byte	0x7da
 7707 07cb 1F       		.uleb128 0x1f
 7708 07cc D0060000 		.4byte	.LASF112
 7709 07d0 03       		.byte	0x3
 7710 07d1 1D       		.byte	0x1d
 7711 07d2 DA070000 		.4byte	0x7da
 7712 07d6 02       		.uleb128 0x2
 7713 07d7 91       		.byte	0x91
 7714 07d8 74       		.sleb128 -12
 7715 07d9 00       		.byte	0
 7716 07da 10       		.uleb128 0x10
 7717 07db 04       		.byte	0x4
 7718 07dc 43010000 		.4byte	0x143
 7719 07e0 20       		.uleb128 0x20
 7720 07e1 E4040000 		.4byte	.LASF113
 7721 07e5 03       		.byte	0x3
 7722 07e6 21       		.byte	0x21
 7723 07e7 00000000 		.4byte	.LFB9
 7724 07eb 24000000 		.4byte	.LFE9-.LFB9
 7725 07ef 01       		.uleb128 0x1
 7726 07f0 9C       		.byte	0x9c
 7727 07f1 04080000 		.4byte	0x804
 7728 07f5 1F       		.uleb128 0x1f
 7729 07f6 D0060000 		.4byte	.LASF112
 7730 07fa 03       		.byte	0x3
 7731 07fb 21       		.byte	0x21
 7732 07fc DA070000 		.4byte	0x7da
 7733 0800 02       		.uleb128 0x2
 7734 0801 91       		.byte	0x91
 7735 0802 74       		.sleb128 -12
 7736 0803 00       		.byte	0
 7737 0804 1B       		.uleb128 0x1b
 7738 0805 AD010000 		.4byte	.LASF114
 7739 0809 03       		.byte	0x3
 7740 080a 2C       		.byte	0x2c
 7741 080b 00000000 		.4byte	.LFB10
 7742 080f 16000000 		.4byte	.LFE10-.LFB10
 7743 0813 01       		.uleb128 0x1
 7744 0814 9C       		.byte	0x9c
 7745 0815 28080000 		.4byte	0x828
 7746 0819 1F       		.uleb128 0x1f
 7747 081a D0060000 		.4byte	.LASF112
 7748 081e 03       		.byte	0x3
 7749 081f 2C       		.byte	0x2c
 7750 0820 DA070000 		.4byte	0x7da
 7751 0824 02       		.uleb128 0x2
 7752 0825 91       		.byte	0x91
 7753 0826 74       		.sleb128 -12
 7754 0827 00       		.byte	0
 7755 0828 1B       		.uleb128 0x1b
 7756 0829 61070000 		.4byte	.LASF115
 7757 082d 03       		.byte	0x3
 7758 082e 30       		.byte	0x30
 7759 082f 00000000 		.4byte	.LFB11
 7760 0833 30000000 		.4byte	.LFE11-.LFB11
 7761 0837 01       		.uleb128 0x1
 7762 0838 9C       		.byte	0x9c
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 220


 7763 0839 68080000 		.4byte	0x868
 7764 083d 1F       		.uleb128 0x1f
 7765 083e 25060000 		.4byte	.LASF116
 7766 0842 03       		.byte	0x3
 7767 0843 30       		.byte	0x30
 7768 0844 68080000 		.4byte	0x868
 7769 0848 02       		.uleb128 0x2
 7770 0849 91       		.byte	0x91
 7771 084a 74       		.sleb128 -12
 7772 084b 1C       		.uleb128 0x1c
 7773 084c 76616C00 		.ascii	"val\000"
 7774 0850 03       		.byte	0x3
 7775 0851 30       		.byte	0x30
 7776 0852 F6000000 		.4byte	0xf6
 7777 0856 02       		.uleb128 0x2
 7778 0857 91       		.byte	0x91
 7779 0858 72       		.sleb128 -14
 7780 0859 1F       		.uleb128 0x1f
 7781 085a DF010000 		.4byte	.LASF25
 7782 085e 03       		.byte	0x3
 7783 085f 30       		.byte	0x30
 7784 0860 F6000000 		.4byte	0xf6
 7785 0864 02       		.uleb128 0x2
 7786 0865 91       		.byte	0x91
 7787 0866 70       		.sleb128 -16
 7788 0867 00       		.byte	0
 7789 0868 10       		.uleb128 0x10
 7790 0869 04       		.byte	0x4
 7791 086a 38010000 		.4byte	0x138
 7792 086e 21       		.uleb128 0x21
 7793 086f 05000000 		.4byte	.LASF119
 7794 0873 03       		.byte	0x3
 7795 0874 35       		.byte	0x35
 7796 0875 25000000 		.4byte	0x25
 7797 0879 00000000 		.4byte	.LFB12
 7798 087d 9C000000 		.4byte	.LFE12-.LFB12
 7799 0881 01       		.uleb128 0x1
 7800 0882 9C       		.byte	0x9c
 7801 0883 BF080000 		.4byte	0x8bf
 7802 0887 1F       		.uleb128 0x1f
 7803 0888 25060000 		.4byte	.LASF116
 7804 088c 03       		.byte	0x3
 7805 088d 35       		.byte	0x35
 7806 088e 68080000 		.4byte	0x868
 7807 0892 02       		.uleb128 0x2
 7808 0893 91       		.byte	0x91
 7809 0894 6C       		.sleb128 -20
 7810 0895 1C       		.uleb128 0x1c
 7811 0896 6D7300   		.ascii	"ms\000"
 7812 0899 03       		.byte	0x3
 7813 089a 35       		.byte	0x35
 7814 089b E0000000 		.4byte	0xe0
 7815 089f 02       		.uleb128 0x2
 7816 08a0 91       		.byte	0x91
 7817 08a1 68       		.sleb128 -24
 7818 08a2 1D       		.uleb128 0x1d
 7819 08a3 D7060000 		.4byte	.LASF117
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 221


 7820 08a7 03       		.byte	0x3
 7821 08a8 36       		.byte	0x36
 7822 08a9 EB000000 		.4byte	0xeb
 7823 08ad 02       		.uleb128 0x2
 7824 08ae 91       		.byte	0x91
 7825 08af 74       		.sleb128 -12
 7826 08b0 1D       		.uleb128 0x1d
 7827 08b1 F0070000 		.4byte	.LASF118
 7828 08b5 03       		.byte	0x3
 7829 08b6 36       		.byte	0x36
 7830 08b7 EB000000 		.4byte	0xeb
 7831 08bb 02       		.uleb128 0x2
 7832 08bc 91       		.byte	0x91
 7833 08bd 70       		.sleb128 -16
 7834 08be 00       		.byte	0
 7835 08bf 22       		.uleb128 0x22
 7836 08c0 9F0A0000 		.4byte	.LASF120
 7837 08c4 03       		.byte	0x3
 7838 08c5 5D       		.byte	0x5d
 7839 08c6 25000000 		.4byte	0x25
 7840 08ca 00000000 		.4byte	.LFB13
 7841 08ce 32000000 		.4byte	.LFE13-.LFB13
 7842 08d2 01       		.uleb128 0x1
 7843 08d3 9C       		.byte	0x9c
 7844 08d4 E7080000 		.4byte	0x8e7
 7845 08d8 1F       		.uleb128 0x1f
 7846 08d9 25060000 		.4byte	.LASF116
 7847 08dd 03       		.byte	0x3
 7848 08de 5D       		.byte	0x5d
 7849 08df 68080000 		.4byte	0x868
 7850 08e3 02       		.uleb128 0x2
 7851 08e4 91       		.byte	0x91
 7852 08e5 74       		.sleb128 -12
 7853 08e6 00       		.byte	0
 7854 08e7 20       		.uleb128 0x20
 7855 08e8 04080000 		.4byte	.LASF121
 7856 08ec 03       		.byte	0x3
 7857 08ed 64       		.byte	0x64
 7858 08ee 00000000 		.4byte	.LFB14
 7859 08f2 18000000 		.4byte	.LFE14-.LFB14
 7860 08f6 01       		.uleb128 0x1
 7861 08f7 9C       		.byte	0x9c
 7862 08f8 0B090000 		.4byte	0x90b
 7863 08fc 1F       		.uleb128 0x1f
 7864 08fd 25060000 		.4byte	.LASF116
 7865 0901 03       		.byte	0x3
 7866 0902 64       		.byte	0x64
 7867 0903 68080000 		.4byte	0x868
 7868 0907 02       		.uleb128 0x2
 7869 0908 91       		.byte	0x91
 7870 0909 74       		.sleb128 -12
 7871 090a 00       		.byte	0
 7872 090b 1B       		.uleb128 0x1b
 7873 090c 5F060000 		.4byte	.LASF122
 7874 0910 03       		.byte	0x3
 7875 0911 6A       		.byte	0x6a
 7876 0912 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 222


 7877 0916 32000000 		.4byte	.LFE15-.LFB15
 7878 091a 01       		.uleb128 0x1
 7879 091b 9C       		.byte	0x9c
 7880 091c 2F090000 		.4byte	0x92f
 7881 0920 1F       		.uleb128 0x1f
 7882 0921 25060000 		.4byte	.LASF116
 7883 0925 03       		.byte	0x3
 7884 0926 6A       		.byte	0x6a
 7885 0927 68080000 		.4byte	0x868
 7886 092b 02       		.uleb128 0x2
 7887 092c 91       		.byte	0x91
 7888 092d 74       		.sleb128 -12
 7889 092e 00       		.byte	0
 7890 092f 20       		.uleb128 0x20
 7891 0930 CC020000 		.4byte	.LASF123
 7892 0934 03       		.byte	0x3
 7893 0935 73       		.byte	0x73
 7894 0936 00000000 		.4byte	.LFB16
 7895 093a 4A000000 		.4byte	.LFE16-.LFB16
 7896 093e 01       		.uleb128 0x1
 7897 093f 9C       		.byte	0x9c
 7898 0940 6E090000 		.4byte	0x96e
 7899 0944 1C       		.uleb128 0x1c
 7900 0945 6D7300   		.ascii	"ms\000"
 7901 0948 03       		.byte	0x3
 7902 0949 73       		.byte	0x73
 7903 094a E0000000 		.4byte	0xe0
 7904 094e 02       		.uleb128 0x2
 7905 094f 91       		.byte	0x91
 7906 0950 6C       		.sleb128 -20
 7907 0951 1D       		.uleb128 0x1d
 7908 0952 D7060000 		.4byte	.LASF117
 7909 0956 03       		.byte	0x3
 7910 0957 74       		.byte	0x74
 7911 0958 EB000000 		.4byte	0xeb
 7912 095c 02       		.uleb128 0x2
 7913 095d 91       		.byte	0x91
 7914 095e 70       		.sleb128 -16
 7915 095f 1D       		.uleb128 0x1d
 7916 0960 F0070000 		.4byte	.LASF118
 7917 0964 03       		.byte	0x3
 7918 0965 74       		.byte	0x74
 7919 0966 EB000000 		.4byte	0xeb
 7920 096a 02       		.uleb128 0x2
 7921 096b 91       		.byte	0x91
 7922 096c 74       		.sleb128 -12
 7923 096d 00       		.byte	0
 7924 096e 20       		.uleb128 0x20
 7925 096f B10A0000 		.4byte	.LASF124
 7926 0973 03       		.byte	0x3
 7927 0974 89       		.byte	0x89
 7928 0975 00000000 		.4byte	.LFB17
 7929 0979 56000000 		.4byte	.LFE17-.LFB17
 7930 097d 01       		.uleb128 0x1
 7931 097e 9C       		.byte	0x9c
 7932 097f AD090000 		.4byte	0x9ad
 7933 0983 1C       		.uleb128 0x1c
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 223


 7934 0984 6D7300   		.ascii	"ms\000"
 7935 0987 03       		.byte	0x3
 7936 0988 89       		.byte	0x89
 7937 0989 E0000000 		.4byte	0xe0
 7938 098d 02       		.uleb128 0x2
 7939 098e 91       		.byte	0x91
 7940 098f 6C       		.sleb128 -20
 7941 0990 1D       		.uleb128 0x1d
 7942 0991 D7060000 		.4byte	.LASF117
 7943 0995 03       		.byte	0x3
 7944 0996 8A       		.byte	0x8a
 7945 0997 EB000000 		.4byte	0xeb
 7946 099b 02       		.uleb128 0x2
 7947 099c 91       		.byte	0x91
 7948 099d 70       		.sleb128 -16
 7949 099e 1D       		.uleb128 0x1d
 7950 099f F0070000 		.4byte	.LASF118
 7951 09a3 03       		.byte	0x3
 7952 09a4 8A       		.byte	0x8a
 7953 09a5 EB000000 		.4byte	0xeb
 7954 09a9 02       		.uleb128 0x2
 7955 09aa 91       		.byte	0x91
 7956 09ab 74       		.sleb128 -12
 7957 09ac 00       		.byte	0
 7958 09ad 23       		.uleb128 0x23
 7959 09ae 18090000 		.4byte	.LASF125
 7960 09b2 03       		.byte	0x3
 7961 09b3 1D01     		.2byte	0x11d
 7962 09b5 00000000 		.4byte	.LFB18
 7963 09b9 28000000 		.4byte	.LFE18-.LFB18
 7964 09bd 01       		.uleb128 0x1
 7965 09be 9C       		.byte	0x9c
 7966 09bf D1090000 		.4byte	0x9d1
 7967 09c3 24       		.uleb128 0x24
 7968 09c4 6300     		.ascii	"c\000"
 7969 09c6 03       		.byte	0x3
 7970 09c7 1E01     		.2byte	0x11e
 7971 09c9 AA020000 		.4byte	0x2aa
 7972 09cd 02       		.uleb128 0x2
 7973 09ce 91       		.byte	0x91
 7974 09cf 74       		.sleb128 -12
 7975 09d0 00       		.byte	0
 7976 09d1 25       		.uleb128 0x25
 7977 09d2 E9020000 		.4byte	.LASF126
 7978 09d6 03       		.byte	0x3
 7979 09d7 2201     		.2byte	0x122
 7980 09d9 00000000 		.4byte	.LFB19
 7981 09dd 2C000000 		.4byte	.LFE19-.LFB19
 7982 09e1 01       		.uleb128 0x1
 7983 09e2 9C       		.byte	0x9c
 7984 09e3 26       		.uleb128 0x26
 7985 09e4 6A030000 		.4byte	.LASF131
 7986 09e8 03       		.byte	0x3
 7987 09e9 2701     		.2byte	0x127
 7988 09eb 00000000 		.4byte	.LFB20
 7989 09ef BC010000 		.4byte	.LFE20-.LFB20
 7990 09f3 01       		.uleb128 0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 224


 7991 09f4 9C       		.byte	0x9c
 7992 09f5 530A0000 		.4byte	0xa53
 7993 09f9 24       		.uleb128 0x24
 7994 09fa 6900     		.ascii	"i\000"
 7995 09fc 03       		.byte	0x3
 7996 09fd 2801     		.2byte	0x128
 7997 09ff C3000000 		.4byte	0xc3
 7998 0a03 02       		.uleb128 0x2
 7999 0a04 91       		.byte	0x91
 8000 0a05 74       		.sleb128 -12
 8001 0a06 27       		.uleb128 0x27
 8002 0a07 00000000 		.4byte	.LASF127
 8003 0a0b 03       		.byte	0x3
 8004 0a0c 2901     		.2byte	0x129
 8005 0a0e 530A0000 		.4byte	0xa53
 8006 0a12 02       		.uleb128 0x2
 8007 0a13 91       		.byte	0x91
 8008 0a14 70       		.sleb128 -16
 8009 0a15 24       		.uleb128 0x24
 8010 0a16 70696E00 		.ascii	"pin\000"
 8011 0a1a 03       		.byte	0x3
 8012 0a1b 2A01     		.2byte	0x12a
 8013 0a1d 530A0000 		.4byte	0xa53
 8014 0a21 02       		.uleb128 0x2
 8015 0a22 91       		.byte	0x91
 8016 0a23 6C       		.sleb128 -20
 8017 0a24 27       		.uleb128 0x27
 8018 0a25 FF070000 		.4byte	.LASF128
 8019 0a29 03       		.byte	0x3
 8020 0a2a 2B01     		.2byte	0x12b
 8021 0a2c CE000000 		.4byte	0xce
 8022 0a30 02       		.uleb128 0x2
 8023 0a31 91       		.byte	0x91
 8024 0a32 64       		.sleb128 -28
 8025 0a33 27       		.uleb128 0x27
 8026 0a34 4B030000 		.4byte	.LASF129
 8027 0a38 03       		.byte	0x3
 8028 0a39 2C01     		.2byte	0x12c
 8029 0a3b AA020000 		.4byte	0x2aa
 8030 0a3f 02       		.uleb128 0x2
 8031 0a40 91       		.byte	0x91
 8032 0a41 68       		.sleb128 -24
 8033 0a42 27       		.uleb128 0x27
 8034 0a43 10060000 		.4byte	.LASF130
 8035 0a47 03       		.byte	0x3
 8036 0a48 2D01     		.2byte	0x12d
 8037 0a4a 590A0000 		.4byte	0xa59
 8038 0a4e 03       		.uleb128 0x3
 8039 0a4f 91       		.byte	0x91
 8040 0a50 A47E     		.sleb128 -220
 8041 0a52 00       		.byte	0
 8042 0a53 10       		.uleb128 0x10
 8043 0a54 04       		.byte	0x4
 8044 0a55 AA020000 		.4byte	0x2aa
 8045 0a59 15       		.uleb128 0x15
 8046 0a5a B6030000 		.4byte	0x3b6
 8047 0a5e 690A0000 		.4byte	0xa69
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 225


 8048 0a62 16       		.uleb128 0x16
 8049 0a63 A3020000 		.4byte	0x2a3
 8050 0a67 01       		.byte	0x1
 8051 0a68 00       		.byte	0
 8052 0a69 26       		.uleb128 0x26
 8053 0a6a B2060000 		.4byte	.LASF132
 8054 0a6e 03       		.byte	0x3
 8055 0a6f 5801     		.2byte	0x158
 8056 0a71 00000000 		.4byte	.LFB21
 8057 0a75 F0000000 		.4byte	.LFE21-.LFB21
 8058 0a79 01       		.uleb128 0x1
 8059 0a7a 9C       		.byte	0x9c
 8060 0a7b C40A0000 		.4byte	0xac4
 8061 0a7f 28       		.uleb128 0x28
 8062 0a80 7400     		.ascii	"t\000"
 8063 0a82 03       		.byte	0x3
 8064 0a83 5801     		.2byte	0x158
 8065 0a85 61030000 		.4byte	0x361
 8066 0a89 02       		.uleb128 0x2
 8067 0a8a 91       		.byte	0x91
 8068 0a8b 64       		.sleb128 -28
 8069 0a8c 24       		.uleb128 0x24
 8070 0a8d 7300     		.ascii	"s\000"
 8071 0a8f 03       		.byte	0x3
 8072 0a90 5901     		.2byte	0x159
 8073 0a92 530A0000 		.4byte	0xa53
 8074 0a96 02       		.uleb128 0x2
 8075 0a97 91       		.byte	0x91
 8076 0a98 68       		.sleb128 -24
 8077 0a99 24       		.uleb128 0x24
 8078 0a9a 6E6600   		.ascii	"nf\000"
 8079 0a9d 03       		.byte	0x3
 8080 0a9e 5A01     		.2byte	0x15a
 8081 0aa0 AA020000 		.4byte	0x2aa
 8082 0aa4 02       		.uleb128 0x2
 8083 0aa5 91       		.byte	0x91
 8084 0aa6 74       		.sleb128 -12
 8085 0aa7 27       		.uleb128 0x27
 8086 0aa8 FF070000 		.4byte	.LASF128
 8087 0aac 03       		.byte	0x3
 8088 0aad 5B01     		.2byte	0x15b
 8089 0aaf 94000000 		.4byte	0x94
 8090 0ab3 02       		.uleb128 0x2
 8091 0ab4 91       		.byte	0x91
 8092 0ab5 6C       		.sleb128 -20
 8093 0ab6 24       		.uleb128 0x24
 8094 0ab7 6900     		.ascii	"i\000"
 8095 0ab9 03       		.byte	0x3
 8096 0aba 5C01     		.2byte	0x15c
 8097 0abc C3000000 		.4byte	0xc3
 8098 0ac0 02       		.uleb128 0x2
 8099 0ac1 91       		.byte	0x91
 8100 0ac2 70       		.sleb128 -16
 8101 0ac3 00       		.byte	0
 8102 0ac4 26       		.uleb128 0x26
 8103 0ac5 27070000 		.4byte	.LASF133
 8104 0ac9 03       		.byte	0x3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 226


 8105 0aca 8301     		.2byte	0x183
 8106 0acc 00000000 		.4byte	.LFB22
 8107 0ad0 74000000 		.4byte	.LFE22-.LFB22
 8108 0ad4 01       		.uleb128 0x1
 8109 0ad5 9C       		.byte	0x9c
 8110 0ad6 080B0000 		.4byte	0xb08
 8111 0ada 29       		.uleb128 0x29
 8112 0adb BF010000 		.4byte	.LASF134
 8113 0adf 03       		.byte	0x3
 8114 0ae0 8301     		.2byte	0x183
 8115 0ae2 61030000 		.4byte	0x361
 8116 0ae6 02       		.uleb128 0x2
 8117 0ae7 91       		.byte	0x91
 8118 0ae8 74       		.sleb128 -12
 8119 0ae9 29       		.uleb128 0x29
 8120 0aea 10000000 		.4byte	.LASF135
 8121 0aee 03       		.byte	0x3
 8122 0aef 8301     		.2byte	0x183
 8123 0af1 61030000 		.4byte	0x361
 8124 0af5 02       		.uleb128 0x2
 8125 0af6 91       		.byte	0x91
 8126 0af7 70       		.sleb128 -16
 8127 0af8 29       		.uleb128 0x29
 8128 0af9 63040000 		.4byte	.LASF136
 8129 0afd 03       		.byte	0x3
 8130 0afe 8301     		.2byte	0x183
 8131 0b00 25000000 		.4byte	0x25
 8132 0b04 02       		.uleb128 0x2
 8133 0b05 91       		.byte	0x91
 8134 0b06 6F       		.sleb128 -17
 8135 0b07 00       		.byte	0
 8136 0b08 2A       		.uleb128 0x2a
 8137 0b09 E60A0000 		.4byte	.LASF137
 8138 0b0d 03       		.byte	0x3
 8139 0b0e A701     		.2byte	0x1a7
 8140 0b10 00000000 		.4byte	.LFB23
 8141 0b14 1E000000 		.4byte	.LFE23-.LFB23
 8142 0b18 01       		.uleb128 0x1
 8143 0b19 9C       		.byte	0x9c
 8144 0b1a 2C0B0000 		.4byte	0xb2c
 8145 0b1e 28       		.uleb128 0x28
 8146 0b1f 7100     		.ascii	"q\000"
 8147 0b21 03       		.byte	0x3
 8148 0b22 A701     		.2byte	0x1a7
 8149 0b24 2C0B0000 		.4byte	0xb2c
 8150 0b28 02       		.uleb128 0x2
 8151 0b29 91       		.byte	0x91
 8152 0b2a 74       		.sleb128 -12
 8153 0b2b 00       		.byte	0
 8154 0b2c 10       		.uleb128 0x10
 8155 0b2d 04       		.byte	0x4
 8156 0b2e 67030000 		.4byte	0x367
 8157 0b32 2A       		.uleb128 0x2a
 8158 0b33 9A050000 		.4byte	.LASF138
 8159 0b37 03       		.byte	0x3
 8160 0b38 AB01     		.2byte	0x1ab
 8161 0b3a 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 227


 8162 0b3e 3E000000 		.4byte	.LFE24-.LFB24
 8163 0b42 01       		.uleb128 0x1
 8164 0b43 9C       		.byte	0x9c
 8165 0b44 630B0000 		.4byte	0xb63
 8166 0b48 28       		.uleb128 0x28
 8167 0b49 7100     		.ascii	"q\000"
 8168 0b4b 03       		.byte	0x3
 8169 0b4c AB01     		.2byte	0x1ab
 8170 0b4e 2C0B0000 		.4byte	0xb2c
 8171 0b52 02       		.uleb128 0x2
 8172 0b53 91       		.byte	0x91
 8173 0b54 74       		.sleb128 -12
 8174 0b55 28       		.uleb128 0x28
 8175 0b56 7400     		.ascii	"t\000"
 8176 0b58 03       		.byte	0x3
 8177 0b59 AB01     		.2byte	0x1ab
 8178 0b5b 61030000 		.4byte	0x361
 8179 0b5f 02       		.uleb128 0x2
 8180 0b60 91       		.byte	0x91
 8181 0b61 70       		.sleb128 -16
 8182 0b62 00       		.byte	0
 8183 0b63 2B       		.uleb128 0x2b
 8184 0b64 BA010000 		.4byte	.LASF232
 8185 0b68 03       		.byte	0x3
 8186 0b69 B401     		.2byte	0x1b4
 8187 0b6b 61030000 		.4byte	0x361
 8188 0b6f 00000000 		.4byte	.LFB25
 8189 0b73 2C000000 		.4byte	.LFE25-.LFB25
 8190 0b77 01       		.uleb128 0x1
 8191 0b78 9C       		.byte	0x9c
 8192 0b79 980B0000 		.4byte	0xb98
 8193 0b7d 28       		.uleb128 0x28
 8194 0b7e 7100     		.ascii	"q\000"
 8195 0b80 03       		.byte	0x3
 8196 0b81 B401     		.2byte	0x1b4
 8197 0b83 2C0B0000 		.4byte	0xb2c
 8198 0b87 02       		.uleb128 0x2
 8199 0b88 91       		.byte	0x91
 8200 0b89 6C       		.sleb128 -20
 8201 0b8a 24       		.uleb128 0x24
 8202 0b8b 7400     		.ascii	"t\000"
 8203 0b8d 03       		.byte	0x3
 8204 0b8e B501     		.2byte	0x1b5
 8205 0b90 16030000 		.4byte	0x316
 8206 0b94 02       		.uleb128 0x2
 8207 0b95 91       		.byte	0x91
 8208 0b96 74       		.sleb128 -12
 8209 0b97 00       		.byte	0
 8210 0b98 25       		.uleb128 0x25
 8211 0b99 4F060000 		.4byte	.LASF139
 8212 0b9d 03       		.byte	0x3
 8213 0b9e BE01     		.2byte	0x1be
 8214 0ba0 00000000 		.4byte	.LFB26
 8215 0ba4 48000000 		.4byte	.LFE26-.LFB26
 8216 0ba8 01       		.uleb128 0x1
 8217 0ba9 9C       		.byte	0x9c
 8218 0baa 2C       		.uleb128 0x2c
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 228


 8219 0bab 80070000 		.4byte	.LASF188
 8220 0baf 03       		.byte	0x3
 8221 0bb0 CC01     		.2byte	0x1cc
 8222 0bb2 4E010000 		.4byte	0x14e
 8223 0bb6 00000000 		.4byte	.LFB27
 8224 0bba 14000000 		.4byte	.LFE27-.LFB27
 8225 0bbe 01       		.uleb128 0x1
 8226 0bbf 9C       		.byte	0x9c
 8227 0bc0 26       		.uleb128 0x26
 8228 0bc1 15000000 		.4byte	.LASF140
 8229 0bc5 03       		.byte	0x3
 8230 0bc6 D101     		.2byte	0x1d1
 8231 0bc8 00000000 		.4byte	.LFB28
 8232 0bcc 30000000 		.4byte	.LFE28-.LFB28
 8233 0bd0 01       		.uleb128 0x1
 8234 0bd1 9C       		.byte	0x9c
 8235 0bd2 E40B0000 		.4byte	0xbe4
 8236 0bd6 24       		.uleb128 0x24
 8237 0bd7 7000     		.ascii	"p\000"
 8238 0bd9 03       		.byte	0x3
 8239 0bda D201     		.2byte	0x1d2
 8240 0bdc 61030000 		.4byte	0x361
 8241 0be0 02       		.uleb128 0x2
 8242 0be1 91       		.byte	0x91
 8243 0be2 74       		.sleb128 -12
 8244 0be3 00       		.byte	0
 8245 0be4 23       		.uleb128 0x23
 8246 0be5 24020000 		.4byte	.LASF141
 8247 0be9 03       		.byte	0x3
 8248 0bea D801     		.2byte	0x1d8
 8249 0bec 00000000 		.4byte	.LFB29
 8250 0bf0 54000000 		.4byte	.LFE29-.LFB29
 8251 0bf4 01       		.uleb128 0x1
 8252 0bf5 9C       		.byte	0x9c
 8253 0bf6 090C0000 		.4byte	0xc09
 8254 0bfa 24       		.uleb128 0x24
 8255 0bfb 6D6500   		.ascii	"me\000"
 8256 0bfe 03       		.byte	0x3
 8257 0bff D901     		.2byte	0x1d9
 8258 0c01 61030000 		.4byte	0x361
 8259 0c05 02       		.uleb128 0x2
 8260 0c06 91       		.byte	0x91
 8261 0c07 74       		.sleb128 -12
 8262 0c08 00       		.byte	0
 8263 0c09 23       		.uleb128 0x23
 8264 0c0a 5D000000 		.4byte	.LASF142
 8265 0c0e 03       		.byte	0x3
 8266 0c0f E801     		.2byte	0x1e8
 8267 0c11 00000000 		.4byte	.LFB30
 8268 0c15 74000000 		.4byte	.LFE30-.LFB30
 8269 0c19 01       		.uleb128 0x1
 8270 0c1a 9C       		.byte	0x9c
 8271 0c1b 3D0C0000 		.4byte	0xc3d
 8272 0c1f 28       		.uleb128 0x28
 8273 0c20 72657400 		.ascii	"ret\000"
 8274 0c24 03       		.byte	0x3
 8275 0c25 E801     		.2byte	0x1e8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 229


 8276 0c27 01010000 		.4byte	0x101
 8277 0c2b 02       		.uleb128 0x2
 8278 0c2c 91       		.byte	0x91
 8279 0c2d 6C       		.sleb128 -20
 8280 0c2e 24       		.uleb128 0x24
 8281 0c2f 6D6500   		.ascii	"me\000"
 8282 0c32 03       		.byte	0x3
 8283 0c33 E901     		.2byte	0x1e9
 8284 0c35 61030000 		.4byte	0x361
 8285 0c39 02       		.uleb128 0x2
 8286 0c3a 91       		.byte	0x91
 8287 0c3b 74       		.sleb128 -12
 8288 0c3c 00       		.byte	0
 8289 0c3d 2D       		.uleb128 0x2d
 8290 0c3e 2A090000 		.4byte	.LASF143
 8291 0c42 03       		.byte	0x3
 8292 0c43 FF01     		.2byte	0x1ff
 8293 0c45 4E010000 		.4byte	0x14e
 8294 0c49 00000000 		.4byte	.LFB31
 8295 0c4d 94000000 		.4byte	.LFE31-.LFB31
 8296 0c51 01       		.uleb128 0x1
 8297 0c52 9C       		.byte	0x9c
 8298 0c53 BD0C0000 		.4byte	0xcbd
 8299 0c57 29       		.uleb128 0x29
 8300 0c58 70090000 		.4byte	.LASF144
 8301 0c5c 03       		.byte	0x3
 8302 0c5d FF01     		.2byte	0x1ff
 8303 0c5f 59010000 		.4byte	0x159
 8304 0c63 02       		.uleb128 0x2
 8305 0c64 91       		.byte	0x91
 8306 0c65 6C       		.sleb128 -20
 8307 0c66 29       		.uleb128 0x29
 8308 0c67 76040000 		.4byte	.LASF145
 8309 0c6b 03       		.byte	0x3
 8310 0c6c FF01     		.2byte	0x1ff
 8311 0c6e CE000000 		.4byte	0xce
 8312 0c72 02       		.uleb128 0x2
 8313 0c73 91       		.byte	0x91
 8314 0c74 68       		.sleb128 -24
 8315 0c75 29       		.uleb128 0x29
 8316 0c76 24050000 		.4byte	.LASF146
 8317 0c7a 03       		.byte	0x3
 8318 0c7b FF01     		.2byte	0x1ff
 8319 0c7d 0C010000 		.4byte	0x10c
 8320 0c81 02       		.uleb128 0x2
 8321 0c82 91       		.byte	0x91
 8322 0c83 64       		.sleb128 -28
 8323 0c84 28       		.uleb128 0x28
 8324 0c85 666E00   		.ascii	"fn\000"
 8325 0c88 03       		.byte	0x3
 8326 0c89 FF01     		.2byte	0x1ff
 8327 0c8b 2B030000 		.4byte	0x32b
 8328 0c8f 02       		.uleb128 0x2
 8329 0c90 91       		.byte	0x91
 8330 0c91 60       		.sleb128 -32
 8331 0c92 29       		.uleb128 0x29
 8332 0c93 A7060000 		.4byte	.LASF61
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 230


 8333 0c97 03       		.byte	0x3
 8334 0c98 FF01     		.2byte	0x1ff
 8335 0c9a 59010000 		.4byte	0x159
 8336 0c9e 02       		.uleb128 0x2
 8337 0c9f 91       		.byte	0x91
 8338 0ca0 00       		.sleb128 0
 8339 0ca1 24       		.uleb128 0x24
 8340 0ca2 7400     		.ascii	"t\000"
 8341 0ca4 03       		.byte	0x3
 8342 0ca5 0002     		.2byte	0x200
 8343 0ca7 61030000 		.4byte	0x361
 8344 0cab 02       		.uleb128 0x2
 8345 0cac 91       		.byte	0x91
 8346 0cad 74       		.sleb128 -12
 8347 0cae 24       		.uleb128 0x24
 8348 0caf 6D6500   		.ascii	"me\000"
 8349 0cb2 03       		.byte	0x3
 8350 0cb3 0102     		.2byte	0x201
 8351 0cb5 61030000 		.4byte	0x361
 8352 0cb9 02       		.uleb128 0x2
 8353 0cba 91       		.byte	0x91
 8354 0cbb 70       		.sleb128 -16
 8355 0cbc 00       		.byte	0
 8356 0cbd 2D       		.uleb128 0x2d
 8357 0cbe 46040000 		.4byte	.LASF147
 8358 0cc2 03       		.byte	0x3
 8359 0cc3 2202     		.2byte	0x222
 8360 0cc5 01010000 		.4byte	0x101
 8361 0cc9 00000000 		.4byte	.LFB32
 8362 0ccd 68000000 		.4byte	.LFE32-.LFB32
 8363 0cd1 01       		.uleb128 0x1
 8364 0cd2 9C       		.byte	0x9c
 8365 0cd3 F30C0000 		.4byte	0xcf3
 8366 0cd7 28       		.uleb128 0x28
 8367 0cd8 746800   		.ascii	"th\000"
 8368 0cdb 03       		.byte	0x3
 8369 0cdc 2202     		.2byte	0x222
 8370 0cde 4E010000 		.4byte	0x14e
 8371 0ce2 02       		.uleb128 0x2
 8372 0ce3 91       		.byte	0x91
 8373 0ce4 6C       		.sleb128 -20
 8374 0ce5 24       		.uleb128 0x24
 8375 0ce6 7400     		.ascii	"t\000"
 8376 0ce8 03       		.byte	0x3
 8377 0ce9 2302     		.2byte	0x223
 8378 0ceb 61030000 		.4byte	0x361
 8379 0cef 02       		.uleb128 0x2
 8380 0cf0 91       		.byte	0x91
 8381 0cf1 74       		.sleb128 -12
 8382 0cf2 00       		.byte	0
 8383 0cf3 1A       		.uleb128 0x1a
 8384 0cf4 250B0000 		.4byte	.LASF148
 8385 0cf8 04       		.byte	0x4
 8386 0cf9 12       		.byte	0x12
 8387 0cfa 00000000 		.4byte	.LFB33
 8388 0cfe 0A000000 		.4byte	.LFE33-.LFB33
 8389 0d02 01       		.uleb128 0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 231


 8390 0d03 9C       		.byte	0x9c
 8391 0d04 21       		.uleb128 0x21
 8392 0d05 0E030000 		.4byte	.LASF149
 8393 0d09 04       		.byte	0x4
 8394 0d0a 14       		.byte	0x14
 8395 0d0b 59010000 		.4byte	0x159
 8396 0d0f 00000000 		.4byte	.LFB34
 8397 0d13 1A000000 		.4byte	.LFE34-.LFB34
 8398 0d17 01       		.uleb128 0x1
 8399 0d18 9C       		.byte	0x9c
 8400 0d19 2B0D0000 		.4byte	0xd2b
 8401 0d1d 1C       		.uleb128 0x1c
 8402 0d1e 737A00   		.ascii	"sz\000"
 8403 0d21 04       		.byte	0x4
 8404 0d22 14       		.byte	0x14
 8405 0d23 CE000000 		.4byte	0xce
 8406 0d27 02       		.uleb128 0x2
 8407 0d28 91       		.byte	0x91
 8408 0d29 74       		.sleb128 -12
 8409 0d2a 00       		.byte	0
 8410 0d2b 21       		.uleb128 0x21
 8411 0d2c 7E040000 		.4byte	.LASF150
 8412 0d30 04       		.byte	0x4
 8413 0d31 18       		.byte	0x18
 8414 0d32 59010000 		.4byte	0x159
 8415 0d36 00000000 		.4byte	.LFB35
 8416 0d3a 22000000 		.4byte	.LFE35-.LFB35
 8417 0d3e 01       		.uleb128 0x1
 8418 0d3f 9C       		.byte	0x9c
 8419 0d40 6F0D0000 		.4byte	0xd6f
 8420 0d44 1C       		.uleb128 0x1c
 8421 0d45 70747200 		.ascii	"ptr\000"
 8422 0d49 04       		.byte	0x4
 8423 0d4a 18       		.byte	0x18
 8424 0d4b 59010000 		.4byte	0x159
 8425 0d4f 02       		.uleb128 0x2
 8426 0d50 91       		.byte	0x91
 8427 0d51 74       		.sleb128 -12
 8428 0d52 1F       		.uleb128 0x1f
 8429 0d53 620A0000 		.4byte	.LASF151
 8430 0d57 04       		.byte	0x4
 8431 0d58 18       		.byte	0x18
 8432 0d59 CE000000 		.4byte	0xce
 8433 0d5d 02       		.uleb128 0x2
 8434 0d5e 91       		.byte	0x91
 8435 0d5f 70       		.sleb128 -16
 8436 0d60 1F       		.uleb128 0x1f
 8437 0d61 5F080000 		.4byte	.LASF152
 8438 0d65 04       		.byte	0x4
 8439 0d66 18       		.byte	0x18
 8440 0d67 CE000000 		.4byte	0xce
 8441 0d6b 02       		.uleb128 0x2
 8442 0d6c 91       		.byte	0x91
 8443 0d6d 6C       		.sleb128 -20
 8444 0d6e 00       		.byte	0
 8445 0d6f 20       		.uleb128 0x20
 8446 0d70 E1020000 		.4byte	.LASF153
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 232


 8447 0d74 04       		.byte	0x4
 8448 0d75 1D       		.byte	0x1d
 8449 0d76 00000000 		.4byte	.LFB36
 8450 0d7a 18000000 		.4byte	.LFE36-.LFB36
 8451 0d7e 01       		.uleb128 0x1
 8452 0d7f 9C       		.byte	0x9c
 8453 0d80 930D0000 		.4byte	0xd93
 8454 0d84 1C       		.uleb128 0x1c
 8455 0d85 70747200 		.ascii	"ptr\000"
 8456 0d89 04       		.byte	0x4
 8457 0d8a 1D       		.byte	0x1d
 8458 0d8b 59010000 		.4byte	0x159
 8459 0d8f 02       		.uleb128 0x2
 8460 0d90 91       		.byte	0x91
 8461 0d91 74       		.sleb128 -12
 8462 0d92 00       		.byte	0
 8463 0d93 1A       		.uleb128 0x1a
 8464 0d94 0B020000 		.4byte	.LASF154
 8465 0d98 05       		.byte	0x5
 8466 0d99 15       		.byte	0x15
 8467 0d9a 00000000 		.4byte	.LFB37
 8468 0d9e 0A000000 		.4byte	.LFE37-.LFB37
 8469 0da2 01       		.uleb128 0x1
 8470 0da3 9C       		.byte	0x9c
 8471 0da4 19       		.uleb128 0x19
 8472 0da5 91020000 		.4byte	.LASF155
 8473 0da9 05       		.byte	0x5
 8474 0daa 19       		.byte	0x19
 8475 0dab 00000000 		.4byte	.LFB38
 8476 0daf 24000000 		.4byte	.LFE38-.LFB38
 8477 0db3 01       		.uleb128 0x1
 8478 0db4 9C       		.byte	0x9c
 8479 0db5 21       		.uleb128 0x21
 8480 0db6 AC050000 		.4byte	.LASF156
 8481 0dba 05       		.byte	0x5
 8482 0dbb 1F       		.byte	0x1f
 8483 0dbc 76040000 		.4byte	0x476
 8484 0dc0 00000000 		.4byte	.LFB39
 8485 0dc4 E0000000 		.4byte	.LFE39-.LFB39
 8486 0dc8 01       		.uleb128 0x1
 8487 0dc9 9C       		.byte	0x9c
 8488 0dca 140E0000 		.4byte	0xe14
 8489 0dce 1C       		.uleb128 0x1c
 8490 0dcf 766D7400 		.ascii	"vmt\000"
 8491 0dd3 05       		.byte	0x5
 8492 0dd4 1F       		.byte	0x1f
 8493 0dd5 140E0000 		.4byte	0xe14
 8494 0dd9 02       		.uleb128 0x2
 8495 0dda 91       		.byte	0x91
 8496 0ddb 5C       		.sleb128 -36
 8497 0ddc 1F       		.uleb128 0x1f
 8498 0ddd A7060000 		.4byte	.LASF61
 8499 0de1 05       		.byte	0x5
 8500 0de2 1F       		.byte	0x1f
 8501 0de3 59010000 		.4byte	0x159
 8502 0de7 02       		.uleb128 0x2
 8503 0de8 91       		.byte	0x91
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 233


 8504 0de9 58       		.sleb128 -40
 8505 0dea 2E       		.uleb128 0x2e
 8506 0deb 706400   		.ascii	"pd\000"
 8507 0dee 05       		.byte	0x5
 8508 0def 20       		.byte	0x20
 8509 0df0 76040000 		.4byte	0x476
 8510 0df4 02       		.uleb128 0x2
 8511 0df5 91       		.byte	0x91
 8512 0df6 6C       		.sleb128 -20
 8513 0df7 1D       		.uleb128 0x1d
 8514 0df8 91060000 		.4byte	.LASF157
 8515 0dfc 05       		.byte	0x5
 8516 0dfd 21       		.byte	0x21
 8517 0dfe 9B000000 		.4byte	0x9b
 8518 0e02 02       		.uleb128 0x2
 8519 0e03 91       		.byte	0x91
 8520 0e04 68       		.sleb128 -24
 8521 0e05 1D       		.uleb128 0x1d
 8522 0e06 EF090000 		.4byte	.LASF158
 8523 0e0a 05       		.byte	0x5
 8524 0e0b 21       		.byte	0x21
 8525 0e0c 9B000000 		.4byte	0x9b
 8526 0e10 02       		.uleb128 0x2
 8527 0e11 91       		.byte	0x91
 8528 0e12 64       		.sleb128 -28
 8529 0e13 00       		.byte	0
 8530 0e14 10       		.uleb128 0x10
 8531 0e15 04       		.byte	0x4
 8532 0e16 1A0E0000 		.4byte	0xe1a
 8533 0e1a 11       		.uleb128 0x11
 8534 0e1b 93040000 		.4byte	0x493
 8535 0e1f 20       		.uleb128 0x20
 8536 0e20 32050000 		.4byte	.LASF159
 8537 0e24 05       		.byte	0x5
 8538 0e25 45       		.byte	0x45
 8539 0e26 00000000 		.4byte	.LFB40
 8540 0e2a 90000000 		.4byte	.LFE40-.LFB40
 8541 0e2e 01       		.uleb128 0x1
 8542 0e2f 9C       		.byte	0x9c
 8543 0e30 500E0000 		.4byte	0xe50
 8544 0e34 1F       		.uleb128 0x1f
 8545 0e35 C9050000 		.4byte	.LASF160
 8546 0e39 05       		.byte	0x5
 8547 0e3a 45       		.byte	0x45
 8548 0e3b 76040000 		.4byte	0x476
 8549 0e3f 02       		.uleb128 0x2
 8550 0e40 91       		.byte	0x91
 8551 0e41 6C       		.sleb128 -20
 8552 0e42 2E       		.uleb128 0x2e
 8553 0e43 706400   		.ascii	"pd\000"
 8554 0e46 05       		.byte	0x5
 8555 0e47 46       		.byte	0x46
 8556 0e48 76040000 		.4byte	0x476
 8557 0e4c 02       		.uleb128 0x2
 8558 0e4d 91       		.byte	0x91
 8559 0e4e 74       		.sleb128 -12
 8560 0e4f 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 234


 8561 0e50 22       		.uleb128 0x22
 8562 0e51 42080000 		.4byte	.LASF161
 8563 0e55 05       		.byte	0x5
 8564 0e56 62       		.byte	0x62
 8565 0e57 76040000 		.4byte	0x476
 8566 0e5b 00000000 		.4byte	.LFB41
 8567 0e5f 54000000 		.4byte	.LFE41-.LFB41
 8568 0e63 01       		.uleb128 0x1
 8569 0e64 9C       		.byte	0x9c
 8570 0e65 A10E0000 		.4byte	0xea1
 8571 0e69 1F       		.uleb128 0x1f
 8572 0e6a 8F090000 		.4byte	.LASF71
 8573 0e6e 05       		.byte	0x5
 8574 0e6f 62       		.byte	0x62
 8575 0e70 B8000000 		.4byte	0xb8
 8576 0e74 02       		.uleb128 0x2
 8577 0e75 91       		.byte	0x91
 8578 0e76 6E       		.sleb128 -18
 8579 0e77 1F       		.uleb128 0x1f
 8580 0e78 54040000 		.4byte	.LASF162
 8581 0e7c 05       		.byte	0x5
 8582 0e7d 62       		.byte	0x62
 8583 0e7e 9B000000 		.4byte	0x9b
 8584 0e82 02       		.uleb128 0x2
 8585 0e83 91       		.byte	0x91
 8586 0e84 68       		.sleb128 -24
 8587 0e85 2E       		.uleb128 0x2e
 8588 0e86 706400   		.ascii	"pd\000"
 8589 0e89 05       		.byte	0x5
 8590 0e8a 63       		.byte	0x63
 8591 0e8b 76040000 		.4byte	0x476
 8592 0e8f 02       		.uleb128 0x2
 8593 0e90 91       		.byte	0x91
 8594 0e91 74       		.sleb128 -12
 8595 0e92 1D       		.uleb128 0x1d
 8596 0e93 EF090000 		.4byte	.LASF158
 8597 0e97 05       		.byte	0x5
 8598 0e98 64       		.byte	0x64
 8599 0e99 9B000000 		.4byte	0x9b
 8600 0e9d 02       		.uleb128 0x2
 8601 0e9e 91       		.byte	0x91
 8602 0e9f 70       		.sleb128 -16
 8603 0ea0 00       		.byte	0
 8604 0ea1 22       		.uleb128 0x22
 8605 0ea2 55030000 		.4byte	.LASF163
 8606 0ea6 05       		.byte	0x5
 8607 0ea7 72       		.byte	0x72
 8608 0ea8 9B000000 		.4byte	0x9b
 8609 0eac 00000000 		.4byte	.LFB42
 8610 0eb0 48000000 		.4byte	.LFE42-.LFB42
 8611 0eb4 01       		.uleb128 0x1
 8612 0eb5 9C       		.byte	0x9c
 8613 0eb6 E40E0000 		.4byte	0xee4
 8614 0eba 1F       		.uleb128 0x1f
 8615 0ebb 8F090000 		.4byte	.LASF71
 8616 0ebf 05       		.byte	0x5
 8617 0ec0 72       		.byte	0x72
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 235


 8618 0ec1 B8000000 		.4byte	0xb8
 8619 0ec5 02       		.uleb128 0x2
 8620 0ec6 91       		.byte	0x91
 8621 0ec7 6E       		.sleb128 -18
 8622 0ec8 2E       		.uleb128 0x2e
 8623 0ec9 706400   		.ascii	"pd\000"
 8624 0ecc 05       		.byte	0x5
 8625 0ecd 73       		.byte	0x73
 8626 0ece 76040000 		.4byte	0x476
 8627 0ed2 02       		.uleb128 0x2
 8628 0ed3 91       		.byte	0x91
 8629 0ed4 74       		.sleb128 -12
 8630 0ed5 1D       		.uleb128 0x1d
 8631 0ed6 EF090000 		.4byte	.LASF158
 8632 0eda 05       		.byte	0x5
 8633 0edb 74       		.byte	0x74
 8634 0edc 9B000000 		.4byte	0x9b
 8635 0ee0 02       		.uleb128 0x2
 8636 0ee1 91       		.byte	0x91
 8637 0ee2 70       		.sleb128 -16
 8638 0ee3 00       		.byte	0
 8639 0ee4 22       		.uleb128 0x22
 8640 0ee5 FD040000 		.4byte	.LASF164
 8641 0ee9 05       		.byte	0x5
 8642 0eea 7F       		.byte	0x7f
 8643 0eeb 76040000 		.4byte	0x476
 8644 0eef 00000000 		.4byte	.LFB43
 8645 0ef3 4C000000 		.4byte	.LFE43-.LFB43
 8646 0ef7 01       		.uleb128 0x1
 8647 0ef8 9C       		.byte	0x9c
 8648 0ef9 1A0F0000 		.4byte	0xf1a
 8649 0efd 1F       		.uleb128 0x1f
 8650 0efe 8F090000 		.4byte	.LASF71
 8651 0f02 05       		.byte	0x5
 8652 0f03 7F       		.byte	0x7f
 8653 0f04 B8000000 		.4byte	0xb8
 8654 0f08 02       		.uleb128 0x2
 8655 0f09 91       		.byte	0x91
 8656 0f0a 76       		.sleb128 -10
 8657 0f0b 1F       		.uleb128 0x1f
 8658 0f0c C9050000 		.4byte	.LASF160
 8659 0f10 05       		.byte	0x5
 8660 0f11 7F       		.byte	0x7f
 8661 0f12 76040000 		.4byte	0x476
 8662 0f16 02       		.uleb128 0x2
 8663 0f17 91       		.byte	0x91
 8664 0f18 70       		.sleb128 -16
 8665 0f19 00       		.byte	0
 8666 0f1a 22       		.uleb128 0x22
 8667 0f1b 6D060000 		.4byte	.LASF165
 8668 0f1f 05       		.byte	0x5
 8669 0f20 88       		.byte	0x88
 8670 0f21 9B000000 		.4byte	0x9b
 8671 0f25 00000000 		.4byte	.LFB44
 8672 0f29 54000000 		.4byte	.LFE44-.LFB44
 8673 0f2d 01       		.uleb128 0x1
 8674 0f2e 9C       		.byte	0x9c
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 236


 8675 0f2f 5D0F0000 		.4byte	0xf5d
 8676 0f33 1F       		.uleb128 0x1f
 8677 0f34 C9050000 		.4byte	.LASF160
 8678 0f38 05       		.byte	0x5
 8679 0f39 88       		.byte	0x88
 8680 0f3a 76040000 		.4byte	0x476
 8681 0f3e 02       		.uleb128 0x2
 8682 0f3f 91       		.byte	0x91
 8683 0f40 6C       		.sleb128 -20
 8684 0f41 2E       		.uleb128 0x2e
 8685 0f42 706400   		.ascii	"pd\000"
 8686 0f45 05       		.byte	0x5
 8687 0f46 89       		.byte	0x89
 8688 0f47 76040000 		.4byte	0x476
 8689 0f4b 02       		.uleb128 0x2
 8690 0f4c 91       		.byte	0x91
 8691 0f4d 74       		.sleb128 -12
 8692 0f4e 1D       		.uleb128 0x1d
 8693 0f4f 54040000 		.4byte	.LASF162
 8694 0f53 05       		.byte	0x5
 8695 0f54 8A       		.byte	0x8a
 8696 0f55 9B000000 		.4byte	0x9b
 8697 0f59 02       		.uleb128 0x2
 8698 0f5a 91       		.byte	0x91
 8699 0f5b 70       		.sleb128 -16
 8700 0f5c 00       		.byte	0
 8701 0f5d 2F       		.uleb128 0x2f
 8702 0f5e AC040000 		.4byte	.LASF166
 8703 0f62 06       		.byte	0x6
 8704 0f63 53       		.byte	0x53
 8705 0f64 00000000 		.4byte	.LFB45
 8706 0f68 72000000 		.4byte	.LFE45-.LFB45
 8707 0f6c 01       		.uleb128 0x1
 8708 0f6d 9C       		.byte	0x9c
 8709 0f6e 970F0000 		.4byte	0xf97
 8710 0f72 1C       		.uleb128 0x1c
 8711 0f73 6700     		.ascii	"g\000"
 8712 0f75 06       		.byte	0x6
 8713 0f76 53       		.byte	0x53
 8714 0f77 A2060000 		.4byte	0x6a2
 8715 0f7b 02       		.uleb128 0x2
 8716 0f7c 91       		.byte	0x91
 8717 0f7d 6C       		.sleb128 -20
 8718 0f7e 2E       		.uleb128 0x2e
 8719 0f7f 7800     		.ascii	"x\000"
 8720 0f81 06       		.byte	0x6
 8721 0f82 54       		.byte	0x54
 8722 0f83 5B010000 		.4byte	0x15b
 8723 0f87 02       		.uleb128 0x2
 8724 0f88 91       		.byte	0x91
 8725 0f89 76       		.sleb128 -10
 8726 0f8a 2E       		.uleb128 0x2e
 8727 0f8b 7900     		.ascii	"y\000"
 8728 0f8d 06       		.byte	0x6
 8729 0f8e 54       		.byte	0x54
 8730 0f8f 5B010000 		.4byte	0x15b
 8731 0f93 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 237


 8732 0f94 91       		.byte	0x91
 8733 0f95 74       		.sleb128 -12
 8734 0f96 00       		.byte	0
 8735 0f97 2F       		.uleb128 0x2f
 8736 0f98 9E000000 		.4byte	.LASF167
 8737 0f9c 06       		.byte	0x6
 8738 0f9d 77       		.byte	0x77
 8739 0f9e 00000000 		.4byte	.LFB46
 8740 0fa2 34000000 		.4byte	.LFE46-.LFB46
 8741 0fa6 01       		.uleb128 0x1
 8742 0fa7 9C       		.byte	0x9c
 8743 0fa8 B90F0000 		.4byte	0xfb9
 8744 0fac 1C       		.uleb128 0x1c
 8745 0fad 6700     		.ascii	"g\000"
 8746 0faf 06       		.byte	0x6
 8747 0fb0 77       		.byte	0x77
 8748 0fb1 A2060000 		.4byte	0x6a2
 8749 0fb5 02       		.uleb128 0x2
 8750 0fb6 91       		.byte	0x91
 8751 0fb7 74       		.sleb128 -12
 8752 0fb8 00       		.byte	0
 8753 0fb9 2F       		.uleb128 0x2f
 8754 0fba 80090000 		.4byte	.LASF168
 8755 0fbe 06       		.byte	0x6
 8756 0fbf A6       		.byte	0xa6
 8757 0fc0 00000000 		.4byte	.LFB47
 8758 0fc4 5A000000 		.4byte	.LFE47-.LFB47
 8759 0fc8 01       		.uleb128 0x1
 8760 0fc9 9C       		.byte	0x9c
 8761 0fca DB0F0000 		.4byte	0xfdb
 8762 0fce 1C       		.uleb128 0x1c
 8763 0fcf 6700     		.ascii	"g\000"
 8764 0fd1 06       		.byte	0x6
 8765 0fd2 A6       		.byte	0xa6
 8766 0fd3 A2060000 		.4byte	0x6a2
 8767 0fd7 02       		.uleb128 0x2
 8768 0fd8 91       		.byte	0x91
 8769 0fd9 74       		.sleb128 -12
 8770 0fda 00       		.byte	0
 8771 0fdb 2F       		.uleb128 0x2f
 8772 0fdc F6070000 		.4byte	.LASF169
 8773 0fe0 06       		.byte	0x6
 8774 0fe1 B9       		.byte	0xb9
 8775 0fe2 00000000 		.4byte	.LFB48
 8776 0fe6 72000000 		.4byte	.LFE48-.LFB48
 8777 0fea 01       		.uleb128 0x1
 8778 0feb 9C       		.byte	0x9c
 8779 0fec 15100000 		.4byte	0x1015
 8780 0ff0 1C       		.uleb128 0x1c
 8781 0ff1 6700     		.ascii	"g\000"
 8782 0ff3 06       		.byte	0x6
 8783 0ff4 B9       		.byte	0xb9
 8784 0ff5 A2060000 		.4byte	0x6a2
 8785 0ff9 02       		.uleb128 0x2
 8786 0ffa 91       		.byte	0x91
 8787 0ffb 6C       		.sleb128 -20
 8788 0ffc 30       		.uleb128 0x30
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 238


 8789 0ffd 08000000 		.4byte	.LBB2
 8790 1001 64000000 		.4byte	.LBE2-.LBB2
 8791 1005 1D       		.uleb128 0x1d
 8792 1006 E6050000 		.4byte	.LASF170
 8793 100a 06       		.byte	0x6
 8794 100b CC       		.byte	0xcc
 8795 100c C3000000 		.4byte	0xc3
 8796 1010 02       		.uleb128 0x2
 8797 1011 91       		.byte	0x91
 8798 1012 74       		.sleb128 -12
 8799 1013 00       		.byte	0
 8800 1014 00       		.byte	0
 8801 1015 2F       		.uleb128 0x2f
 8802 1016 F2040000 		.4byte	.LASF171
 8803 101a 06       		.byte	0x6
 8804 101b FE       		.byte	0xfe
 8805 101c 00000000 		.4byte	.LFB49
 8806 1020 10010000 		.4byte	.LFE49-.LFB49
 8807 1024 01       		.uleb128 0x1
 8808 1025 9C       		.byte	0x9c
 8809 1026 37100000 		.4byte	0x1037
 8810 102a 1C       		.uleb128 0x1c
 8811 102b 6700     		.ascii	"g\000"
 8812 102d 06       		.byte	0x6
 8813 102e FE       		.byte	0xfe
 8814 102f A2060000 		.4byte	0x6a2
 8815 1033 02       		.uleb128 0x2
 8816 1034 91       		.byte	0x91
 8817 1035 74       		.sleb128 -12
 8818 1036 00       		.byte	0
 8819 1037 26       		.uleb128 0x26
 8820 1038 A7070000 		.4byte	.LASF172
 8821 103c 06       		.byte	0x6
 8822 103d 5601     		.2byte	0x156
 8823 103f 00000000 		.4byte	.LFB50
 8824 1043 52010000 		.4byte	.LFE50-.LFB50
 8825 1047 01       		.uleb128 0x1
 8826 1048 9C       		.byte	0x9c
 8827 1049 5B100000 		.4byte	0x105b
 8828 104d 28       		.uleb128 0x28
 8829 104e 6700     		.ascii	"g\000"
 8830 1050 06       		.byte	0x6
 8831 1051 5601     		.2byte	0x156
 8832 1053 A2060000 		.4byte	0x6a2
 8833 1057 02       		.uleb128 0x2
 8834 1058 91       		.byte	0x91
 8835 1059 74       		.sleb128 -12
 8836 105a 00       		.byte	0
 8837 105b 26       		.uleb128 0x26
 8838 105c 88050000 		.4byte	.LASF173
 8839 1060 06       		.byte	0x6
 8840 1061 AB01     		.2byte	0x1ab
 8841 1063 00000000 		.4byte	.LFB51
 8842 1067 F2020000 		.4byte	.LFE51-.LFB51
 8843 106b 01       		.uleb128 0x1
 8844 106c 9C       		.byte	0x9c
 8845 106d E2100000 		.4byte	0x10e2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 239


 8846 1071 28       		.uleb128 0x28
 8847 1072 6700     		.ascii	"g\000"
 8848 1074 06       		.byte	0x6
 8849 1075 AB01     		.2byte	0x1ab
 8850 1077 A2060000 		.4byte	0x6a2
 8851 107b 02       		.uleb128 0x2
 8852 107c 91       		.byte	0x91
 8853 107d 64       		.sleb128 -28
 8854 107e 24       		.uleb128 0x24
 8855 107f 647900   		.ascii	"dy\000"
 8856 1082 06       		.byte	0x6
 8857 1083 AC01     		.2byte	0x1ac
 8858 1085 AD000000 		.4byte	0xad
 8859 1089 02       		.uleb128 0x2
 8860 108a 91       		.byte	0x91
 8861 108b 76       		.sleb128 -10
 8862 108c 24       		.uleb128 0x24
 8863 108d 647800   		.ascii	"dx\000"
 8864 1090 06       		.byte	0x6
 8865 1091 AC01     		.2byte	0x1ac
 8866 1093 AD000000 		.4byte	0xad
 8867 1097 02       		.uleb128 0x2
 8868 1098 91       		.byte	0x91
 8869 1099 74       		.sleb128 -12
 8870 109a 27       		.uleb128 0x27
 8871 109b 1C0A0000 		.4byte	.LASF174
 8872 109f 06       		.byte	0x6
 8873 10a0 AD01     		.2byte	0x1ad
 8874 10a2 AD000000 		.4byte	0xad
 8875 10a6 02       		.uleb128 0x2
 8876 10a7 91       		.byte	0x91
 8877 10a8 72       		.sleb128 -14
 8878 10a9 27       		.uleb128 0x27
 8879 10aa 210A0000 		.4byte	.LASF175
 8880 10ae 06       		.byte	0x6
 8881 10af AD01     		.2byte	0x1ad
 8882 10b1 AD000000 		.4byte	0xad
 8883 10b5 02       		.uleb128 0x2
 8884 10b6 91       		.byte	0x91
 8885 10b7 70       		.sleb128 -16
 8886 10b8 24       		.uleb128 0x24
 8887 10b9 5000     		.ascii	"P\000"
 8888 10bb 06       		.byte	0x6
 8889 10bc AE01     		.2byte	0x1ae
 8890 10be AD000000 		.4byte	0xad
 8891 10c2 02       		.uleb128 0x2
 8892 10c3 91       		.byte	0x91
 8893 10c4 6E       		.sleb128 -18
 8894 10c5 27       		.uleb128 0x27
 8895 10c6 FF070000 		.4byte	.LASF128
 8896 10ca 06       		.byte	0x6
 8897 10cb AE01     		.2byte	0x1ae
 8898 10cd AD000000 		.4byte	0xad
 8899 10d1 02       		.uleb128 0x2
 8900 10d2 91       		.byte	0x91
 8901 10d3 6A       		.sleb128 -22
 8902 10d4 24       		.uleb128 0x24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 240


 8903 10d5 6900     		.ascii	"i\000"
 8904 10d7 06       		.byte	0x6
 8905 10d8 AE01     		.2byte	0x1ae
 8906 10da AD000000 		.4byte	0xad
 8907 10de 02       		.uleb128 0x2
 8908 10df 91       		.byte	0x91
 8909 10e0 6C       		.sleb128 -20
 8910 10e1 00       		.byte	0
 8911 10e2 26       		.uleb128 0x26
 8912 10e3 CC010000 		.4byte	.LASF176
 8913 10e7 06       		.byte	0x6
 8914 10e8 F801     		.2byte	0x1f8
 8915 10ea 00000000 		.4byte	.LFB52
 8916 10ee 18010000 		.4byte	.LFE52-.LFB52
 8917 10f2 01       		.uleb128 0x1
 8918 10f3 9C       		.byte	0x9c
 8919 10f4 4C110000 		.4byte	0x114c
 8920 10f8 28       		.uleb128 0x28
 8921 10f9 6700     		.ascii	"g\000"
 8922 10fb 06       		.byte	0x6
 8923 10fc F801     		.2byte	0x1f8
 8924 10fe A2060000 		.4byte	0x6a2
 8925 1102 02       		.uleb128 0x2
 8926 1103 91       		.byte	0x91
 8927 1104 5C       		.sleb128 -36
 8928 1105 24       		.uleb128 0x24
 8929 1106 7800     		.ascii	"x\000"
 8930 1108 06       		.byte	0x6
 8931 1109 F901     		.2byte	0x1f9
 8932 110b 5B010000 		.4byte	0x15b
 8933 110f 02       		.uleb128 0x2
 8934 1110 91       		.byte	0x91
 8935 1111 66       		.sleb128 -26
 8936 1112 24       		.uleb128 0x24
 8937 1113 7900     		.ascii	"y\000"
 8938 1115 06       		.byte	0x6
 8939 1116 F901     		.2byte	0x1f9
 8940 1118 5B010000 		.4byte	0x15b
 8941 111c 02       		.uleb128 0x2
 8942 111d 91       		.byte	0x91
 8943 111e 64       		.sleb128 -28
 8944 111f 24       		.uleb128 0x24
 8945 1120 7700     		.ascii	"w\000"
 8946 1122 06       		.byte	0x6
 8947 1123 F901     		.2byte	0x1f9
 8948 1125 5B010000 		.4byte	0x15b
 8949 1129 02       		.uleb128 0x2
 8950 112a 91       		.byte	0x91
 8951 112b 6E       		.sleb128 -18
 8952 112c 24       		.uleb128 0x24
 8953 112d 7000     		.ascii	"p\000"
 8954 112f 06       		.byte	0x6
 8955 1130 FA01     		.2byte	0x1fa
 8956 1132 4C110000 		.4byte	0x114c
 8957 1136 02       		.uleb128 0x2
 8958 1137 91       		.byte	0x91
 8959 1138 68       		.sleb128 -24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 241


 8960 1139 27       		.uleb128 0x27
 8961 113a AD060000 		.4byte	.LASF177
 8962 113e 06       		.byte	0x6
 8963 113f FB01     		.2byte	0x1fb
 8964 1141 67110000 		.4byte	0x1167
 8965 1145 05       		.uleb128 0x5
 8966 1146 03       		.byte	0x3
 8967 1147 00000000 		.4byte	blks.5782
 8968 114b 00       		.byte	0
 8969 114c 10       		.uleb128 0x10
 8970 114d 04       		.byte	0x4
 8971 114e 52110000 		.4byte	0x1152
 8972 1152 11       		.uleb128 0x11
 8973 1153 5B010000 		.4byte	0x15b
 8974 1157 15       		.uleb128 0x15
 8975 1158 52110000 		.4byte	0x1152
 8976 115c 67110000 		.4byte	0x1167
 8977 1160 16       		.uleb128 0x16
 8978 1161 A3020000 		.4byte	0x2a3
 8979 1165 3F       		.byte	0x3f
 8980 1166 00       		.byte	0
 8981 1167 11       		.uleb128 0x11
 8982 1168 57110000 		.4byte	0x1157
 8983 116c 23       		.uleb128 0x23
 8984 116d F1050000 		.4byte	.LASF178
 8985 1171 06       		.byte	0x6
 8986 1172 2D02     		.2byte	0x22d
 8987 1174 00000000 		.4byte	.LFB53
 8988 1178 68000000 		.4byte	.LFE53-.LFB53
 8989 117c 01       		.uleb128 0x1
 8990 117d 9C       		.byte	0x9c
 8991 117e B4110000 		.4byte	0x11b4
 8992 1182 31       		.uleb128 0x31
 8993 1183 06000000 		.4byte	.LBB3
 8994 1187 16000000 		.4byte	.LBE3-.LBB3
 8995 118b 9C110000 		.4byte	0x119c
 8996 118f 32       		.uleb128 0x32
 8997 1190 DE090000 		.4byte	.LASF226
 8998 1194 06       		.byte	0x6
 8999 1195 4902     		.2byte	0x249
 9000 1197 C9110000 		.4byte	0x11c9
 9001 119b 00       		.byte	0
 9002 119c 30       		.uleb128 0x30
 9003 119d 1C000000 		.4byte	.LBB4
 9004 11a1 3C000000 		.4byte	.LBE4-.LBB4
 9005 11a5 24       		.uleb128 0x24
 9006 11a6 6700     		.ascii	"g\000"
 9007 11a8 06       		.byte	0x6
 9008 11a9 5302     		.2byte	0x253
 9009 11ab A2060000 		.4byte	0x6a2
 9010 11af 02       		.uleb128 0x2
 9011 11b0 91       		.byte	0x91
 9012 11b1 74       		.sleb128 -12
 9013 11b2 00       		.byte	0
 9014 11b3 00       		.byte	0
 9015 11b4 15       		.uleb128 0x15
 9016 11b5 C4110000 		.4byte	0x11c4
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 242


 9017 11b9 C4110000 		.4byte	0x11c4
 9018 11bd 16       		.uleb128 0x16
 9019 11be A3020000 		.4byte	0x2a3
 9020 11c2 00       		.byte	0
 9021 11c3 00       		.byte	0
 9022 11c4 11       		.uleb128 0x11
 9023 11c5 E9060000 		.4byte	0x6e9
 9024 11c9 11       		.uleb128 0x11
 9025 11ca B4110000 		.4byte	0x11b4
 9026 11ce 33       		.uleb128 0x33
 9027 11cf 920A0000 		.4byte	.LASF179
 9028 11d3 06       		.byte	0x6
 9029 11d4 6902     		.2byte	0x269
 9030 11d6 00000000 		.4byte	.LFB54
 9031 11da 0A000000 		.4byte	.LFE54-.LFB54
 9032 11de 01       		.uleb128 0x1
 9033 11df 9C       		.byte	0x9c
 9034 11e0 2D       		.uleb128 0x2d
 9035 11e1 57020000 		.4byte	.LASF180
 9036 11e5 06       		.byte	0x6
 9037 11e6 6E02     		.2byte	0x26e
 9038 11e8 25000000 		.4byte	0x25
 9039 11ec 00000000 		.4byte	.LFB55
 9040 11f0 48000000 		.4byte	.LFE55-.LFB55
 9041 11f4 01       		.uleb128 0x1
 9042 11f5 9C       		.byte	0x9c
 9043 11f6 44120000 		.4byte	0x1244
 9044 11fa 28       		.uleb128 0x28
 9045 11fb 6700     		.ascii	"g\000"
 9046 11fd 06       		.byte	0x6
 9047 11fe 6E02     		.2byte	0x26e
 9048 1200 76040000 		.4byte	0x476
 9049 1204 02       		.uleb128 0x2
 9050 1205 91       		.byte	0x91
 9051 1206 64       		.sleb128 -28
 9052 1207 29       		.uleb128 0x29
 9053 1208 A7060000 		.4byte	.LASF61
 9054 120c 06       		.byte	0x6
 9055 120d 6E02     		.2byte	0x26e
 9056 120f 59010000 		.4byte	0x159
 9057 1213 02       		.uleb128 0x2
 9058 1214 91       		.byte	0x91
 9059 1215 60       		.sleb128 -32
 9060 1216 29       		.uleb128 0x29
 9061 1217 D3080000 		.4byte	.LASF181
 9062 121b 06       		.byte	0x6
 9063 121c 6E02     		.2byte	0x26e
 9064 121e 9B000000 		.4byte	0x9b
 9065 1222 02       		.uleb128 0x2
 9066 1223 91       		.byte	0x91
 9067 1224 5C       		.sleb128 -36
 9068 1225 29       		.uleb128 0x29
 9069 1226 15050000 		.4byte	.LASF182
 9070 122a 06       		.byte	0x6
 9071 122b 6E02     		.2byte	0x26e
 9072 122d 9B000000 		.4byte	0x9b
 9073 1231 02       		.uleb128 0x2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 243


 9074 1232 91       		.byte	0x91
 9075 1233 58       		.sleb128 -40
 9076 1234 24       		.uleb128 0x24
 9077 1235 72657400 		.ascii	"ret\000"
 9078 1239 06       		.byte	0x6
 9079 123a 7002     		.2byte	0x270
 9080 123c 25000000 		.4byte	0x25
 9081 1240 02       		.uleb128 0x2
 9082 1241 91       		.byte	0x91
 9083 1242 6F       		.sleb128 -17
 9084 1243 00       		.byte	0
 9085 1244 23       		.uleb128 0x23
 9086 1245 6A050000 		.4byte	.LASF183
 9087 1249 06       		.byte	0x6
 9088 124a 8202     		.2byte	0x282
 9089 124c 00000000 		.4byte	.LFB56
 9090 1250 5C000000 		.4byte	.LFE56-.LFB56
 9091 1254 01       		.uleb128 0x1
 9092 1255 9C       		.byte	0x9c
 9093 1256 68120000 		.4byte	0x1268
 9094 125a 28       		.uleb128 0x28
 9095 125b 6700     		.ascii	"g\000"
 9096 125d 06       		.byte	0x6
 9097 125e 8202     		.2byte	0x282
 9098 1260 76040000 		.4byte	0x476
 9099 1264 02       		.uleb128 0x2
 9100 1265 91       		.byte	0x91
 9101 1266 74       		.sleb128 -12
 9102 1267 00       		.byte	0
 9103 1268 23       		.uleb128 0x23
 9104 1269 E6060000 		.4byte	.LASF184
 9105 126d 06       		.byte	0x6
 9106 126e A602     		.2byte	0x2a6
 9107 1270 00000000 		.4byte	.LFB57
 9108 1274 2C000000 		.4byte	.LFE57-.LFB57
 9109 1278 01       		.uleb128 0x1
 9110 1279 9C       		.byte	0x9c
 9111 127a 8C120000 		.4byte	0x128c
 9112 127e 28       		.uleb128 0x28
 9113 127f 6700     		.ascii	"g\000"
 9114 1281 06       		.byte	0x6
 9115 1282 A602     		.2byte	0x2a6
 9116 1284 76040000 		.4byte	0x476
 9117 1288 02       		.uleb128 0x2
 9118 1289 91       		.byte	0x91
 9119 128a 74       		.sleb128 -12
 9120 128b 00       		.byte	0
 9121 128c 2D       		.uleb128 0x2d
 9122 128d 33030000 		.4byte	.LASF185
 9123 1291 06       		.byte	0x6
 9124 1292 BB02     		.2byte	0x2bb
 9125 1294 A2060000 		.4byte	0x6a2
 9126 1298 00000000 		.4byte	.LFB58
 9127 129c 1C000000 		.4byte	.LFE58-.LFB58
 9128 12a0 01       		.uleb128 0x1
 9129 12a1 9C       		.byte	0x9c
 9130 12a2 B6120000 		.4byte	0x12b6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 244


 9131 12a6 29       		.uleb128 0x29
 9132 12a7 BC070000 		.4byte	.LASF186
 9133 12ab 06       		.byte	0x6
 9134 12ac BB02     		.2byte	0x2bb
 9135 12ae 9B000000 		.4byte	0x9b
 9136 12b2 02       		.uleb128 0x2
 9137 12b3 91       		.byte	0x91
 9138 12b4 74       		.sleb128 -12
 9139 12b5 00       		.byte	0
 9140 12b6 34       		.uleb128 0x34
 9141 12b7 E0000000 		.4byte	.LASF187
 9142 12bb 06       		.byte	0x6
 9143 12bc BF02     		.2byte	0x2bf
 9144 12be 00000000 		.4byte	.LFB59
 9145 12c2 20000000 		.4byte	.LFE59-.LFB59
 9146 12c6 01       		.uleb128 0x1
 9147 12c7 9C       		.byte	0x9c
 9148 12c8 DA120000 		.4byte	0x12da
 9149 12cc 28       		.uleb128 0x28
 9150 12cd 6700     		.ascii	"g\000"
 9151 12cf 06       		.byte	0x6
 9152 12d0 BF02     		.2byte	0x2bf
 9153 12d2 A2060000 		.4byte	0x6a2
 9154 12d6 02       		.uleb128 0x2
 9155 12d7 91       		.byte	0x91
 9156 12d8 74       		.sleb128 -12
 9157 12d9 00       		.byte	0
 9158 12da 35       		.uleb128 0x35
 9159 12db F9090000 		.4byte	.LASF189
 9160 12df 06       		.byte	0x6
 9161 12e0 C302     		.2byte	0x2c3
 9162 12e2 9B000000 		.4byte	0x9b
 9163 12e6 00000000 		.4byte	.LFB60
 9164 12ea 12000000 		.4byte	.LFE60-.LFB60
 9165 12ee 01       		.uleb128 0x1
 9166 12ef 9C       		.byte	0x9c
 9167 12f0 36       		.uleb128 0x36
 9168 12f1 03090000 		.4byte	.LASF190
 9169 12f5 06       		.byte	0x6
 9170 12f6 C702     		.2byte	0x2c7
 9171 12f8 5B010000 		.4byte	0x15b
 9172 12fc 00000000 		.4byte	.LFB61
 9173 1300 16000000 		.4byte	.LFE61-.LFB61
 9174 1304 01       		.uleb128 0x1
 9175 1305 9C       		.byte	0x9c
 9176 1306 18130000 		.4byte	0x1318
 9177 130a 28       		.uleb128 0x28
 9178 130b 6700     		.ascii	"g\000"
 9179 130d 06       		.byte	0x6
 9180 130e C702     		.2byte	0x2c7
 9181 1310 A2060000 		.4byte	0x6a2
 9182 1314 02       		.uleb128 0x2
 9183 1315 91       		.byte	0x91
 9184 1316 74       		.sleb128 -12
 9185 1317 00       		.byte	0
 9186 1318 36       		.uleb128 0x36
 9187 1319 36040000 		.4byte	.LASF191
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 245


 9188 131d 06       		.byte	0x6
 9189 131e C802     		.2byte	0x2c8
 9190 1320 5B010000 		.4byte	0x15b
 9191 1324 00000000 		.4byte	.LFB62
 9192 1328 16000000 		.4byte	.LFE62-.LFB62
 9193 132c 01       		.uleb128 0x1
 9194 132d 9C       		.byte	0x9c
 9195 132e 40130000 		.4byte	0x1340
 9196 1332 28       		.uleb128 0x28
 9197 1333 6700     		.ascii	"g\000"
 9198 1335 06       		.byte	0x6
 9199 1336 C802     		.2byte	0x2c8
 9200 1338 A2060000 		.4byte	0x6a2
 9201 133c 02       		.uleb128 0x2
 9202 133d 91       		.byte	0x91
 9203 133e 74       		.sleb128 -12
 9204 133f 00       		.byte	0
 9205 1340 36       		.uleb128 0x36
 9206 1341 3B020000 		.4byte	.LASF192
 9207 1345 06       		.byte	0x6
 9208 1346 C902     		.2byte	0x2c9
 9209 1348 D2010000 		.4byte	0x1d2
 9210 134c 00000000 		.4byte	.LFB63
 9211 1350 14000000 		.4byte	.LFE63-.LFB63
 9212 1354 01       		.uleb128 0x1
 9213 1355 9C       		.byte	0x9c
 9214 1356 68130000 		.4byte	0x1368
 9215 135a 28       		.uleb128 0x28
 9216 135b 6700     		.ascii	"g\000"
 9217 135d 06       		.byte	0x6
 9218 135e C902     		.2byte	0x2c9
 9219 1360 A2060000 		.4byte	0x6a2
 9220 1364 02       		.uleb128 0x2
 9221 1365 91       		.byte	0x91
 9222 1366 74       		.sleb128 -12
 9223 1367 00       		.byte	0
 9224 1368 36       		.uleb128 0x36
 9225 1369 28000000 		.4byte	.LASF193
 9226 136d 06       		.byte	0x6
 9227 136e CA02     		.2byte	0x2ca
 9228 1370 9E010000 		.4byte	0x19e
 9229 1374 00000000 		.4byte	.LFB64
 9230 1378 14000000 		.4byte	.LFE64-.LFB64
 9231 137c 01       		.uleb128 0x1
 9232 137d 9C       		.byte	0x9c
 9233 137e 90130000 		.4byte	0x1390
 9234 1382 28       		.uleb128 0x28
 9235 1383 6700     		.ascii	"g\000"
 9236 1385 06       		.byte	0x6
 9237 1386 CA02     		.2byte	0x2ca
 9238 1388 A2060000 		.4byte	0x6a2
 9239 138c 02       		.uleb128 0x2
 9240 138d 91       		.byte	0x91
 9241 138e 74       		.sleb128 -12
 9242 138f 00       		.byte	0
 9243 1390 36       		.uleb128 0x36
 9244 1391 0C010000 		.4byte	.LASF194
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 246


 9245 1395 06       		.byte	0x6
 9246 1396 CB02     		.2byte	0x2cb
 9247 1398 A2000000 		.4byte	0xa2
 9248 139c 00000000 		.4byte	.LFB65
 9249 13a0 14000000 		.4byte	.LFE65-.LFB65
 9250 13a4 01       		.uleb128 0x1
 9251 13a5 9C       		.byte	0x9c
 9252 13a6 B8130000 		.4byte	0x13b8
 9253 13aa 28       		.uleb128 0x28
 9254 13ab 6700     		.ascii	"g\000"
 9255 13ad 06       		.byte	0x6
 9256 13ae CB02     		.2byte	0x2cb
 9257 13b0 A2060000 		.4byte	0x6a2
 9258 13b4 02       		.uleb128 0x2
 9259 13b5 91       		.byte	0x91
 9260 13b6 74       		.sleb128 -12
 9261 13b7 00       		.byte	0
 9262 13b8 36       		.uleb128 0x36
 9263 13b9 8C070000 		.4byte	.LASF195
 9264 13bd 06       		.byte	0x6
 9265 13be CC02     		.2byte	0x2cc
 9266 13c0 A2000000 		.4byte	0xa2
 9267 13c4 00000000 		.4byte	.LFB66
 9268 13c8 14000000 		.4byte	.LFE66-.LFB66
 9269 13cc 01       		.uleb128 0x1
 9270 13cd 9C       		.byte	0x9c
 9271 13ce E0130000 		.4byte	0x13e0
 9272 13d2 28       		.uleb128 0x28
 9273 13d3 6700     		.ascii	"g\000"
 9274 13d5 06       		.byte	0x6
 9275 13d6 CC02     		.2byte	0x2cc
 9276 13d8 A2060000 		.4byte	0x6a2
 9277 13dc 02       		.uleb128 0x2
 9278 13dd 91       		.byte	0x91
 9279 13de 74       		.sleb128 -12
 9280 13df 00       		.byte	0
 9281 13e0 34       		.uleb128 0x34
 9282 13e1 6B000000 		.4byte	.LASF196
 9283 13e5 06       		.byte	0x6
 9284 13e6 CE02     		.2byte	0x2ce
 9285 13e8 00000000 		.4byte	.LFB67
 9286 13ec 10000000 		.4byte	.LFE67-.LFB67
 9287 13f0 01       		.uleb128 0x1
 9288 13f1 9C       		.byte	0x9c
 9289 13f2 04140000 		.4byte	0x1404
 9290 13f6 28       		.uleb128 0x28
 9291 13f7 6700     		.ascii	"g\000"
 9292 13f9 06       		.byte	0x6
 9293 13fa CE02     		.2byte	0x2ce
 9294 13fc A2060000 		.4byte	0x6a2
 9295 1400 02       		.uleb128 0x2
 9296 1401 91       		.byte	0x91
 9297 1402 74       		.sleb128 -12
 9298 1403 00       		.byte	0
 9299 1404 23       		.uleb128 0x23
 9300 1405 260A0000 		.4byte	.LASF197
 9301 1409 06       		.byte	0x6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 247


 9302 140a D403     		.2byte	0x3d4
 9303 140c 00000000 		.4byte	.LFB68
 9304 1410 72000000 		.4byte	.LFE68-.LFB68
 9305 1414 01       		.uleb128 0x1
 9306 1415 9C       		.byte	0x9c
 9307 1416 51140000 		.4byte	0x1451
 9308 141a 28       		.uleb128 0x28
 9309 141b 6700     		.ascii	"g\000"
 9310 141d 06       		.byte	0x6
 9311 141e D403     		.2byte	0x3d4
 9312 1420 A2060000 		.4byte	0x6a2
 9313 1424 02       		.uleb128 0x2
 9314 1425 91       		.byte	0x91
 9315 1426 6C       		.sleb128 -20
 9316 1427 28       		.uleb128 0x28
 9317 1428 7800     		.ascii	"x\000"
 9318 142a 06       		.byte	0x6
 9319 142b D403     		.2byte	0x3d4
 9320 142d 5B010000 		.4byte	0x15b
 9321 1431 02       		.uleb128 0x2
 9322 1432 91       		.byte	0x91
 9323 1433 6A       		.sleb128 -22
 9324 1434 28       		.uleb128 0x28
 9325 1435 7900     		.ascii	"y\000"
 9326 1437 06       		.byte	0x6
 9327 1438 D403     		.2byte	0x3d4
 9328 143a 5B010000 		.4byte	0x15b
 9329 143e 02       		.uleb128 0x2
 9330 143f 91       		.byte	0x91
 9331 1440 68       		.sleb128 -24
 9332 1441 29       		.uleb128 0x29
 9333 1442 70040000 		.4byte	.LASF84
 9334 1446 06       		.byte	0x6
 9335 1447 D403     		.2byte	0x3d4
 9336 1449 8C020000 		.4byte	0x28c
 9337 144d 02       		.uleb128 0x2
 9338 144e 91       		.byte	0x91
 9339 144f 66       		.sleb128 -26
 9340 1450 00       		.byte	0
 9341 1451 23       		.uleb128 0x23
 9342 1452 FD000000 		.4byte	.LASF198
 9343 1456 06       		.byte	0x6
 9344 1457 DE03     		.2byte	0x3de
 9345 1459 00000000 		.4byte	.LFB69
 9346 145d 86000000 		.4byte	.LFE69-.LFB69
 9347 1461 01       		.uleb128 0x1
 9348 1462 9C       		.byte	0x9c
 9349 1463 BC140000 		.4byte	0x14bc
 9350 1467 28       		.uleb128 0x28
 9351 1468 6700     		.ascii	"g\000"
 9352 146a 06       		.byte	0x6
 9353 146b DE03     		.2byte	0x3de
 9354 146d A2060000 		.4byte	0x6a2
 9355 1471 02       		.uleb128 0x2
 9356 1472 91       		.byte	0x91
 9357 1473 6C       		.sleb128 -20
 9358 1474 28       		.uleb128 0x28
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 248


 9359 1475 783000   		.ascii	"x0\000"
 9360 1478 06       		.byte	0x6
 9361 1479 DE03     		.2byte	0x3de
 9362 147b 5B010000 		.4byte	0x15b
 9363 147f 02       		.uleb128 0x2
 9364 1480 91       		.byte	0x91
 9365 1481 6A       		.sleb128 -22
 9366 1482 28       		.uleb128 0x28
 9367 1483 793000   		.ascii	"y0\000"
 9368 1486 06       		.byte	0x6
 9369 1487 DE03     		.2byte	0x3de
 9370 1489 5B010000 		.4byte	0x15b
 9371 148d 02       		.uleb128 0x2
 9372 148e 91       		.byte	0x91
 9373 148f 68       		.sleb128 -24
 9374 1490 28       		.uleb128 0x28
 9375 1491 783100   		.ascii	"x1\000"
 9376 1494 06       		.byte	0x6
 9377 1495 DE03     		.2byte	0x3de
 9378 1497 5B010000 		.4byte	0x15b
 9379 149b 02       		.uleb128 0x2
 9380 149c 91       		.byte	0x91
 9381 149d 66       		.sleb128 -26
 9382 149e 28       		.uleb128 0x28
 9383 149f 793100   		.ascii	"y1\000"
 9384 14a2 06       		.byte	0x6
 9385 14a3 DE03     		.2byte	0x3de
 9386 14a5 5B010000 		.4byte	0x15b
 9387 14a9 02       		.uleb128 0x2
 9388 14aa 91       		.byte	0x91
 9389 14ab 00       		.sleb128 0
 9390 14ac 29       		.uleb128 0x29
 9391 14ad 70040000 		.4byte	.LASF84
 9392 14b1 06       		.byte	0x6
 9393 14b2 DE03     		.2byte	0x3de
 9394 14b4 8C020000 		.4byte	0x28c
 9395 14b8 02       		.uleb128 0x2
 9396 14b9 91       		.byte	0x91
 9397 14ba 04       		.sleb128 4
 9398 14bb 00       		.byte	0
 9399 14bc 23       		.uleb128 0x23
 9400 14bd 9B060000 		.4byte	.LASF199
 9401 14c1 06       		.byte	0x6
 9402 14c2 EA03     		.2byte	0x3ea
 9403 14c4 00000000 		.4byte	.LFB70
 9404 14c8 82000000 		.4byte	.LFE70-.LFB70
 9405 14cc 01       		.uleb128 0x1
 9406 14cd 9C       		.byte	0x9c
 9407 14ce 08150000 		.4byte	0x1508
 9408 14d2 28       		.uleb128 0x28
 9409 14d3 6700     		.ascii	"g\000"
 9410 14d5 06       		.byte	0x6
 9411 14d6 EA03     		.2byte	0x3ea
 9412 14d8 A2060000 		.4byte	0x6a2
 9413 14dc 02       		.uleb128 0x2
 9414 14dd 91       		.byte	0x91
 9415 14de 6C       		.sleb128 -20
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 249


 9416 14df 29       		.uleb128 0x29
 9417 14e0 70040000 		.4byte	.LASF84
 9418 14e4 06       		.byte	0x6
 9419 14e5 EA03     		.2byte	0x3ea
 9420 14e7 8C020000 		.4byte	0x28c
 9421 14eb 02       		.uleb128 0x2
 9422 14ec 91       		.byte	0x91
 9423 14ed 6A       		.sleb128 -22
 9424 14ee 30       		.uleb128 0x30
 9425 14ef 0E000000 		.4byte	.LBB5
 9426 14f3 6E000000 		.4byte	.LBE5-.LBB5
 9427 14f7 27       		.uleb128 0x27
 9428 14f8 E6050000 		.4byte	.LASF170
 9429 14fc 06       		.byte	0x6
 9430 14fd 1304     		.2byte	0x413
 9431 14ff C3000000 		.4byte	0xc3
 9432 1503 02       		.uleb128 0x2
 9433 1504 91       		.byte	0x91
 9434 1505 74       		.sleb128 -12
 9435 1506 00       		.byte	0
 9436 1507 00       		.byte	0
 9437 1508 23       		.uleb128 0x23
 9438 1509 F70A0000 		.4byte	.LASF200
 9439 150d 06       		.byte	0x6
 9440 150e 3D04     		.2byte	0x43d
 9441 1510 00000000 		.4byte	.LFB71
 9442 1514 60010000 		.4byte	.LFE71-.LFB71
 9443 1518 01       		.uleb128 0x1
 9444 1519 9C       		.byte	0x9c
 9445 151a 71150000 		.4byte	0x1571
 9446 151e 28       		.uleb128 0x28
 9447 151f 6700     		.ascii	"g\000"
 9448 1521 06       		.byte	0x6
 9449 1522 3D04     		.2byte	0x43d
 9450 1524 A2060000 		.4byte	0x6a2
 9451 1528 02       		.uleb128 0x2
 9452 1529 91       		.byte	0x91
 9453 152a 6C       		.sleb128 -20
 9454 152b 28       		.uleb128 0x28
 9455 152c 7800     		.ascii	"x\000"
 9456 152e 06       		.byte	0x6
 9457 152f 3D04     		.2byte	0x43d
 9458 1531 5B010000 		.4byte	0x15b
 9459 1535 02       		.uleb128 0x2
 9460 1536 91       		.byte	0x91
 9461 1537 6A       		.sleb128 -22
 9462 1538 28       		.uleb128 0x28
 9463 1539 7900     		.ascii	"y\000"
 9464 153b 06       		.byte	0x6
 9465 153c 3D04     		.2byte	0x43d
 9466 153e 5B010000 		.4byte	0x15b
 9467 1542 02       		.uleb128 0x2
 9468 1543 91       		.byte	0x91
 9469 1544 68       		.sleb128 -24
 9470 1545 28       		.uleb128 0x28
 9471 1546 637800   		.ascii	"cx\000"
 9472 1549 06       		.byte	0x6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 250


 9473 154a 3D04     		.2byte	0x43d
 9474 154c 5B010000 		.4byte	0x15b
 9475 1550 02       		.uleb128 0x2
 9476 1551 91       		.byte	0x91
 9477 1552 66       		.sleb128 -26
 9478 1553 28       		.uleb128 0x28
 9479 1554 637900   		.ascii	"cy\000"
 9480 1557 06       		.byte	0x6
 9481 1558 3D04     		.2byte	0x43d
 9482 155a 5B010000 		.4byte	0x15b
 9483 155e 02       		.uleb128 0x2
 9484 155f 91       		.byte	0x91
 9485 1560 00       		.sleb128 0
 9486 1561 29       		.uleb128 0x29
 9487 1562 70040000 		.4byte	.LASF84
 9488 1566 06       		.byte	0x6
 9489 1567 3D04     		.2byte	0x43d
 9490 1569 8C020000 		.4byte	0x28c
 9491 156d 02       		.uleb128 0x2
 9492 156e 91       		.byte	0x91
 9493 156f 04       		.sleb128 4
 9494 1570 00       		.byte	0
 9495 1571 23       		.uleb128 0x23
 9496 1572 2A060000 		.4byte	.LASF201
 9497 1576 06       		.byte	0x6
 9498 1577 4B04     		.2byte	0x44b
 9499 1579 00000000 		.4byte	.LFB72
 9500 157d BE020000 		.4byte	.LFE72-.LFB72
 9501 1581 01       		.uleb128 0x1
 9502 1582 9C       		.byte	0x9c
 9503 1583 07160000 		.4byte	0x1607
 9504 1587 28       		.uleb128 0x28
 9505 1588 6700     		.ascii	"g\000"
 9506 158a 06       		.byte	0x6
 9507 158b 4B04     		.2byte	0x44b
 9508 158d A2060000 		.4byte	0x6a2
 9509 1591 02       		.uleb128 0x2
 9510 1592 91       		.byte	0x91
 9511 1593 6C       		.sleb128 -20
 9512 1594 28       		.uleb128 0x28
 9513 1595 7800     		.ascii	"x\000"
 9514 1597 06       		.byte	0x6
 9515 1598 4B04     		.2byte	0x44b
 9516 159a 5B010000 		.4byte	0x15b
 9517 159e 02       		.uleb128 0x2
 9518 159f 91       		.byte	0x91
 9519 15a0 6A       		.sleb128 -22
 9520 15a1 28       		.uleb128 0x28
 9521 15a2 7900     		.ascii	"y\000"
 9522 15a4 06       		.byte	0x6
 9523 15a5 4B04     		.2byte	0x44b
 9524 15a7 5B010000 		.4byte	0x15b
 9525 15ab 02       		.uleb128 0x2
 9526 15ac 91       		.byte	0x91
 9527 15ad 68       		.sleb128 -24
 9528 15ae 28       		.uleb128 0x28
 9529 15af 637800   		.ascii	"cx\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 251


 9530 15b2 06       		.byte	0x6
 9531 15b3 4B04     		.2byte	0x44b
 9532 15b5 5B010000 		.4byte	0x15b
 9533 15b9 02       		.uleb128 0x2
 9534 15ba 91       		.byte	0x91
 9535 15bb 66       		.sleb128 -26
 9536 15bc 28       		.uleb128 0x28
 9537 15bd 637900   		.ascii	"cy\000"
 9538 15c0 06       		.byte	0x6
 9539 15c1 4B04     		.2byte	0x44b
 9540 15c3 5B010000 		.4byte	0x15b
 9541 15c7 02       		.uleb128 0x2
 9542 15c8 91       		.byte	0x91
 9543 15c9 00       		.sleb128 0
 9544 15ca 29       		.uleb128 0x29
 9545 15cb 5C070000 		.4byte	.LASF202
 9546 15cf 06       		.byte	0x6
 9547 15d0 4B04     		.2byte	0x44b
 9548 15d2 5B010000 		.4byte	0x15b
 9549 15d6 02       		.uleb128 0x2
 9550 15d7 91       		.byte	0x91
 9551 15d8 04       		.sleb128 4
 9552 15d9 29       		.uleb128 0x29
 9553 15da 9F050000 		.4byte	.LASF203
 9554 15de 06       		.byte	0x6
 9555 15df 4B04     		.2byte	0x44b
 9556 15e1 5B010000 		.4byte	0x15b
 9557 15e5 02       		.uleb128 0x2
 9558 15e6 91       		.byte	0x91
 9559 15e7 08       		.sleb128 8
 9560 15e8 29       		.uleb128 0x29
 9561 15e9 64050000 		.4byte	.LASF204
 9562 15ed 06       		.byte	0x6
 9563 15ee 4B04     		.2byte	0x44b
 9564 15f0 5B010000 		.4byte	0x15b
 9565 15f4 02       		.uleb128 0x2
 9566 15f5 91       		.byte	0x91
 9567 15f6 0C       		.sleb128 12
 9568 15f7 29       		.uleb128 0x29
 9569 15f8 97000000 		.4byte	.LASF205
 9570 15fc 06       		.byte	0x6
 9571 15fd 4B04     		.2byte	0x44b
 9572 15ff 07160000 		.4byte	0x1607
 9573 1603 02       		.uleb128 0x2
 9574 1604 91       		.byte	0x91
 9575 1605 10       		.sleb128 16
 9576 1606 00       		.byte	0
 9577 1607 10       		.uleb128 0x10
 9578 1608 04       		.byte	0x4
 9579 1609 0D160000 		.4byte	0x160d
 9580 160d 11       		.uleb128 0x11
 9581 160e 98020000 		.4byte	0x298
 9582 1612 34       		.uleb128 0x34
 9583 1613 0E0A0000 		.4byte	.LASF206
 9584 1617 06       		.byte	0x6
 9585 1618 D404     		.2byte	0x4d4
 9586 161a 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 252


 9587 161e 50010000 		.4byte	.LFE73-.LFB73
 9588 1622 01       		.uleb128 0x1
 9589 1623 9C       		.byte	0x9c
 9590 1624 6C160000 		.4byte	0x166c
 9591 1628 28       		.uleb128 0x28
 9592 1629 6700     		.ascii	"g\000"
 9593 162b 06       		.byte	0x6
 9594 162c D404     		.2byte	0x4d4
 9595 162e A2060000 		.4byte	0x6a2
 9596 1632 02       		.uleb128 0x2
 9597 1633 91       		.byte	0x91
 9598 1634 6C       		.sleb128 -20
 9599 1635 28       		.uleb128 0x28
 9600 1636 7800     		.ascii	"x\000"
 9601 1638 06       		.byte	0x6
 9602 1639 D404     		.2byte	0x4d4
 9603 163b 5B010000 		.4byte	0x15b
 9604 163f 02       		.uleb128 0x2
 9605 1640 91       		.byte	0x91
 9606 1641 6A       		.sleb128 -22
 9607 1642 28       		.uleb128 0x28
 9608 1643 7900     		.ascii	"y\000"
 9609 1645 06       		.byte	0x6
 9610 1646 D404     		.2byte	0x4d4
 9611 1648 5B010000 		.4byte	0x15b
 9612 164c 02       		.uleb128 0x2
 9613 164d 91       		.byte	0x91
 9614 164e 68       		.sleb128 -24
 9615 164f 28       		.uleb128 0x28
 9616 1650 637800   		.ascii	"cx\000"
 9617 1653 06       		.byte	0x6
 9618 1654 D404     		.2byte	0x4d4
 9619 1656 5B010000 		.4byte	0x15b
 9620 165a 02       		.uleb128 0x2
 9621 165b 91       		.byte	0x91
 9622 165c 66       		.sleb128 -26
 9623 165d 28       		.uleb128 0x28
 9624 165e 637900   		.ascii	"cy\000"
 9625 1661 06       		.byte	0x6
 9626 1662 D404     		.2byte	0x4d4
 9627 1664 5B010000 		.4byte	0x15b
 9628 1668 02       		.uleb128 0x2
 9629 1669 91       		.byte	0x91
 9630 166a 00       		.sleb128 0
 9631 166b 00       		.byte	0
 9632 166c 23       		.uleb128 0x23
 9633 166d 65080000 		.4byte	.LASF207
 9634 1671 06       		.byte	0x6
 9635 1672 8D0B     		.2byte	0xb8d
 9636 1674 00000000 		.4byte	.LFB74
 9637 1678 FE010000 		.4byte	.LFE74-.LFB74
 9638 167c 01       		.uleb128 0x1
 9639 167d 9C       		.byte	0x9c
 9640 167e D5160000 		.4byte	0x16d5
 9641 1682 28       		.uleb128 0x28
 9642 1683 6700     		.ascii	"g\000"
 9643 1685 06       		.byte	0x6
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 253


 9644 1686 8D0B     		.2byte	0xb8d
 9645 1688 A2060000 		.4byte	0x6a2
 9646 168c 02       		.uleb128 0x2
 9647 168d 91       		.byte	0x91
 9648 168e 6C       		.sleb128 -20
 9649 168f 28       		.uleb128 0x28
 9650 1690 7800     		.ascii	"x\000"
 9651 1692 06       		.byte	0x6
 9652 1693 8D0B     		.2byte	0xb8d
 9653 1695 5B010000 		.4byte	0x15b
 9654 1699 02       		.uleb128 0x2
 9655 169a 91       		.byte	0x91
 9656 169b 6A       		.sleb128 -22
 9657 169c 28       		.uleb128 0x28
 9658 169d 7900     		.ascii	"y\000"
 9659 169f 06       		.byte	0x6
 9660 16a0 8D0B     		.2byte	0xb8d
 9661 16a2 5B010000 		.4byte	0x15b
 9662 16a6 02       		.uleb128 0x2
 9663 16a7 91       		.byte	0x91
 9664 16a8 68       		.sleb128 -24
 9665 16a9 28       		.uleb128 0x28
 9666 16aa 637800   		.ascii	"cx\000"
 9667 16ad 06       		.byte	0x6
 9668 16ae 8D0B     		.2byte	0xb8d
 9669 16b0 5B010000 		.4byte	0x15b
 9670 16b4 02       		.uleb128 0x2
 9671 16b5 91       		.byte	0x91
 9672 16b6 66       		.sleb128 -26
 9673 16b7 28       		.uleb128 0x28
 9674 16b8 637900   		.ascii	"cy\000"
 9675 16bb 06       		.byte	0x6
 9676 16bc 8D0B     		.2byte	0xb8d
 9677 16be 5B010000 		.4byte	0x15b
 9678 16c2 02       		.uleb128 0x2
 9679 16c3 91       		.byte	0x91
 9680 16c4 00       		.sleb128 0
 9681 16c5 29       		.uleb128 0x29
 9682 16c6 70040000 		.4byte	.LASF84
 9683 16ca 06       		.byte	0x6
 9684 16cb 8D0B     		.2byte	0xb8d
 9685 16cd 8C020000 		.4byte	0x28c
 9686 16d1 02       		.uleb128 0x2
 9687 16d2 91       		.byte	0x91
 9688 16d3 04       		.sleb128 4
 9689 16d4 00       		.byte	0
 9690 16d5 36       		.uleb128 0x36
 9691 16d6 C3040000 		.4byte	.LASF208
 9692 16da 06       		.byte	0x6
 9693 16db 130E     		.2byte	0xe13
 9694 16dd 8C020000 		.4byte	0x28c
 9695 16e1 00000000 		.4byte	.LFB75
 9696 16e5 72010000 		.4byte	.LFE75-.LFB75
 9697 16e9 01       		.uleb128 0x1
 9698 16ea 9C       		.byte	0x9c
 9699 16eb 60170000 		.4byte	0x1760
 9700 16ef 28       		.uleb128 0x28
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 254


 9701 16f0 666700   		.ascii	"fg\000"
 9702 16f3 06       		.byte	0x6
 9703 16f4 130E     		.2byte	0xe13
 9704 16f6 8C020000 		.4byte	0x28c
 9705 16fa 02       		.uleb128 0x2
 9706 16fb 91       		.byte	0x91
 9707 16fc 5E       		.sleb128 -34
 9708 16fd 28       		.uleb128 0x28
 9709 16fe 626700   		.ascii	"bg\000"
 9710 1701 06       		.byte	0x6
 9711 1702 130E     		.2byte	0xe13
 9712 1704 8C020000 		.4byte	0x28c
 9713 1708 02       		.uleb128 0x2
 9714 1709 91       		.byte	0x91
 9715 170a 5C       		.sleb128 -36
 9716 170b 29       		.uleb128 0x29
 9717 170c 12090000 		.4byte	.LASF209
 9718 1710 06       		.byte	0x6
 9719 1711 130E     		.2byte	0xe13
 9720 1713 A2000000 		.4byte	0xa2
 9721 1717 02       		.uleb128 0x2
 9722 1718 91       		.byte	0x91
 9723 1719 5B       		.sleb128 -37
 9724 171a 27       		.uleb128 0x27
 9725 171b 9E070000 		.4byte	.LASF210
 9726 171f 06       		.byte	0x6
 9727 1720 150E     		.2byte	0xe15
 9728 1722 B8000000 		.4byte	0xb8
 9729 1726 02       		.uleb128 0x2
 9730 1727 91       		.byte	0x91
 9731 1728 6E       		.sleb128 -18
 9732 1729 27       		.uleb128 0x27
 9733 172a 85030000 		.4byte	.LASF211
 9734 172e 06       		.byte	0x6
 9735 172f 160E     		.2byte	0xe16
 9736 1731 B8000000 		.4byte	0xb8
 9737 1735 02       		.uleb128 0x2
 9738 1736 91       		.byte	0x91
 9739 1737 6C       		.sleb128 -20
 9740 1738 24       		.uleb128 0x24
 9741 1739 7200     		.ascii	"r\000"
 9742 173b 06       		.byte	0x6
 9743 173c 170E     		.2byte	0xe17
 9744 173e B8000000 		.4byte	0xb8
 9745 1742 02       		.uleb128 0x2
 9746 1743 91       		.byte	0x91
 9747 1744 6A       		.sleb128 -22
 9748 1745 24       		.uleb128 0x24
 9749 1746 6700     		.ascii	"g\000"
 9750 1748 06       		.byte	0x6
 9751 1749 170E     		.2byte	0xe17
 9752 174b B8000000 		.4byte	0xb8
 9753 174f 02       		.uleb128 0x2
 9754 1750 91       		.byte	0x91
 9755 1751 68       		.sleb128 -24
 9756 1752 24       		.uleb128 0x24
 9757 1753 6200     		.ascii	"b\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 255


 9758 1755 06       		.byte	0x6
 9759 1756 170E     		.2byte	0xe17
 9760 1758 B8000000 		.4byte	0xb8
 9761 175c 02       		.uleb128 0x2
 9762 175d 91       		.byte	0x91
 9763 175e 66       		.sleb128 -26
 9764 175f 00       		.byte	0
 9765 1760 36       		.uleb128 0x36
 9766 1761 55090000 		.4byte	.LASF212
 9767 1765 06       		.byte	0x6
 9768 1766 280E     		.2byte	0xe28
 9769 1768 8C020000 		.4byte	0x28c
 9770 176c 00000000 		.4byte	.LFB76
 9771 1770 9E000000 		.4byte	.LFE76-.LFB76
 9772 1774 01       		.uleb128 0x1
 9773 1775 9C       		.byte	0x9c
 9774 1776 B1170000 		.4byte	0x17b1
 9775 177a 29       		.uleb128 0x29
 9776 177b 70040000 		.4byte	.LASF84
 9777 177f 06       		.byte	0x6
 9778 1780 280E     		.2byte	0xe28
 9779 1782 8C020000 		.4byte	0x28c
 9780 1786 02       		.uleb128 0x2
 9781 1787 91       		.byte	0x91
 9782 1788 6E       		.sleb128 -18
 9783 1789 24       		.uleb128 0x24
 9784 178a 7200     		.ascii	"r\000"
 9785 178c 06       		.byte	0x6
 9786 178d 290E     		.2byte	0xe29
 9787 178f B8000000 		.4byte	0xb8
 9788 1793 02       		.uleb128 0x2
 9789 1794 91       		.byte	0x91
 9790 1795 76       		.sleb128 -10
 9791 1796 24       		.uleb128 0x24
 9792 1797 6700     		.ascii	"g\000"
 9793 1799 06       		.byte	0x6
 9794 179a 290E     		.2byte	0xe29
 9795 179c B8000000 		.4byte	0xb8
 9796 17a0 02       		.uleb128 0x2
 9797 17a1 91       		.byte	0x91
 9798 17a2 74       		.sleb128 -12
 9799 17a3 24       		.uleb128 0x24
 9800 17a4 6200     		.ascii	"b\000"
 9801 17a6 06       		.byte	0x6
 9802 17a7 290E     		.2byte	0xe29
 9803 17a9 B8000000 		.4byte	0xb8
 9804 17ad 02       		.uleb128 0x2
 9805 17ae 91       		.byte	0x91
 9806 17af 72       		.sleb128 -14
 9807 17b0 00       		.byte	0
 9808 17b1 1D       		.uleb128 0x1d
 9809 17b2 18020000 		.4byte	.LASF213
 9810 17b6 01       		.byte	0x1
 9811 17b7 12       		.byte	0x12
 9812 17b8 25000000 		.4byte	0x25
 9813 17bc 05       		.uleb128 0x5
 9814 17bd 03       		.byte	0x3
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 256


 9815 17be 00000000 		.4byte	gfxInitDone
 9816 17c2 1D       		.uleb128 0x1d
 9817 17c3 D10A0000 		.4byte	.LASF214
 9818 17c7 03       		.byte	0x3
 9819 17c8 BD       		.byte	0xbd
 9820 17c9 67030000 		.4byte	0x367
 9821 17cd 05       		.uleb128 0x5
 9822 17ce 03       		.byte	0x3
 9823 17cf 04000000 		.4byte	readyQ
 9824 17d3 1D       		.uleb128 0x1d
 9825 17d4 EB050000 		.4byte	.LASF215
 9826 17d8 03       		.byte	0x3
 9827 17d9 BE       		.byte	0xbe
 9828 17da 67030000 		.4byte	0x367
 9829 17de 05       		.uleb128 0x5
 9830 17df 03       		.byte	0x3
 9831 17e0 0C000000 		.4byte	deadQ
 9832 17e4 1D       		.uleb128 0x1d
 9833 17e5 1C070000 		.4byte	.LASF216
 9834 17e9 03       		.byte	0x3
 9835 17ea C0       		.byte	0xc0
 9836 17eb 31030000 		.4byte	0x331
 9837 17ef 05       		.uleb128 0x5
 9838 17f0 03       		.byte	0x3
 9839 17f1 14000000 		.4byte	mainthread
 9840 17f5 1D       		.uleb128 0x1d
 9841 17f6 E5010000 		.4byte	.LASF217
 9842 17fa 03       		.byte	0x3
 9843 17fb E6       		.byte	0xe6
 9844 17fc 72030000 		.4byte	0x372
 9845 1800 05       		.uleb128 0x5
 9846 1801 03       		.byte	0x3
 9847 1802 2C000000 		.4byte	maincxt
 9848 1806 27       		.uleb128 0x27
 9849 1807 E5070000 		.4byte	.LASF218
 9850 180b 03       		.byte	0x3
 9851 180c 1601     		.2byte	0x116
 9852 180e 25000000 		.4byte	0x25
 9853 1812 05       		.uleb128 0x5
 9854 1813 03       		.byte	0x3
 9855 1814 88000000 		.4byte	stackdirup
 9856 1818 27       		.uleb128 0x27
 9857 1819 76020000 		.4byte	.LASF219
 9858 181d 03       		.byte	0x3
 9859 181e 1701     		.2byte	0x117
 9860 1820 C3000000 		.4byte	0xc3
 9861 1824 05       		.uleb128 0x5
 9862 1825 03       		.byte	0x3
 9863 1826 8C000000 		.4byte	jmpmask1
 9864 182a 27       		.uleb128 0x27
 9865 182b 7F020000 		.4byte	.LASF220
 9866 182f 03       		.byte	0x3
 9867 1830 1801     		.2byte	0x118
 9868 1832 C3000000 		.4byte	0xc3
 9869 1836 05       		.uleb128 0x5
 9870 1837 03       		.byte	0x3
 9871 1838 90000000 		.4byte	jmpmask2
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 257


 9872 183c 27       		.uleb128 0x27
 9873 183d C4070000 		.4byte	.LASF221
 9874 1841 03       		.byte	0x3
 9875 1842 1901     		.2byte	0x119
 9876 1844 CE000000 		.4byte	0xce
 9877 1848 05       		.uleb128 0x5
 9878 1849 03       		.byte	0x3
 9879 184a 94000000 		.4byte	stackbase
 9880 184e 27       		.uleb128 0x27
 9881 184f EC0A0000 		.4byte	.LASF222
 9882 1853 03       		.byte	0x3
 9883 1854 1A01     		.2byte	0x11a
 9884 1856 60180000 		.4byte	0x1860
 9885 185a 05       		.uleb128 0x5
 9886 185b 03       		.byte	0x3
 9887 185c 98000000 		.4byte	pframeinfo
 9888 1860 10       		.uleb128 0x10
 9889 1861 04       		.byte	0x4
 9890 1862 B6030000 		.4byte	0x3b6
 9891 1866 1D       		.uleb128 0x1d
 9892 1867 39070000 		.4byte	.LASF223
 9893 186b 05       		.byte	0x5
 9894 186c 11       		.byte	0x11
 9895 186d 76040000 		.4byte	0x476
 9896 1871 05       		.uleb128 0x5
 9897 1872 03       		.byte	0x3
 9898 1873 9C000000 		.4byte	dhead
 9899 1877 1D       		.uleb128 0x1d
 9900 1878 FC050000 		.4byte	.LASF224
 9901 187c 05       		.byte	0x5
 9902 187d 12       		.byte	0x12
 9903 187e 76040000 		.4byte	0x476
 9904 1882 05       		.uleb128 0x5
 9905 1883 03       		.byte	0x3
 9906 1884 A0000000 		.4byte	dtail
 9907 1888 27       		.uleb128 0x27
 9908 1889 2D020000 		.4byte	.LASF225
 9909 188d 06       		.byte	0x6
 9910 188e F701     		.2byte	0x1f7
 9911 1890 25000000 		.4byte	0x25
 9912 1894 05       		.uleb128 0x5
 9913 1895 03       		.byte	0x3
 9914 1896 A4000000 		.4byte	gdispInitDone
 9915 189a 37       		.uleb128 0x37
 9916 189b AB0A0000 		.4byte	.LASF227
 9917 189f 06       		.byte	0x6
 9918 18a0 2A       		.byte	0x2a
 9919 18a1 A2060000 		.4byte	0x6a2
 9920 18a5 05       		.uleb128 0x5
 9921 18a6 03       		.byte	0x3
 9922 18a7 00000000 		.4byte	GDISP
 9923 18ab 37       		.uleb128 0x37
 9924 18ac 360A0000 		.4byte	.LASF228
 9925 18b0 03       		.byte	0x3
 9926 18b1 BF       		.byte	0xbf
 9927 18b2 61030000 		.4byte	0x361
 9928 18b6 05       		.uleb128 0x5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 258


 9929 18b7 03       		.byte	0x3
 9930 18b8 00000000 		.4byte	_gfxCurrentThread
 9931 18bc 32       		.uleb128 0x32
 9932 18bd DE090000 		.4byte	.LASF226
 9933 18c1 06       		.byte	0x6
 9934 18c2 4902     		.2byte	0x249
 9935 18c4 C8180000 		.4byte	0x18c8
 9936 18c8 11       		.uleb128 0x11
 9937 18c9 B4110000 		.4byte	0x11b4
 9938 18cd 00       		.byte	0
 9939              		.section	.debug_abbrev,"",%progbits
 9940              	.Ldebug_abbrev0:
 9941 0000 01       		.uleb128 0x1
 9942 0001 11       		.uleb128 0x11
 9943 0002 01       		.byte	0x1
 9944 0003 25       		.uleb128 0x25
 9945 0004 0E       		.uleb128 0xe
 9946 0005 13       		.uleb128 0x13
 9947 0006 0B       		.uleb128 0xb
 9948 0007 03       		.uleb128 0x3
 9949 0008 0E       		.uleb128 0xe
 9950 0009 1B       		.uleb128 0x1b
 9951 000a 0E       		.uleb128 0xe
 9952 000b 55       		.uleb128 0x55
 9953 000c 17       		.uleb128 0x17
 9954 000d 11       		.uleb128 0x11
 9955 000e 01       		.uleb128 0x1
 9956 000f 10       		.uleb128 0x10
 9957 0010 17       		.uleb128 0x17
 9958 0011 00       		.byte	0
 9959 0012 00       		.byte	0
 9960 0013 02       		.uleb128 0x2
 9961 0014 16       		.uleb128 0x16
 9962 0015 00       		.byte	0
 9963 0016 03       		.uleb128 0x3
 9964 0017 0E       		.uleb128 0xe
 9965 0018 3A       		.uleb128 0x3a
 9966 0019 0B       		.uleb128 0xb
 9967 001a 3B       		.uleb128 0x3b
 9968 001b 0B       		.uleb128 0xb
 9969 001c 49       		.uleb128 0x49
 9970 001d 13       		.uleb128 0x13
 9971 001e 00       		.byte	0
 9972 001f 00       		.byte	0
 9973 0020 03       		.uleb128 0x3
 9974 0021 24       		.uleb128 0x24
 9975 0022 00       		.byte	0
 9976 0023 0B       		.uleb128 0xb
 9977 0024 0B       		.uleb128 0xb
 9978 0025 3E       		.uleb128 0x3e
 9979 0026 0B       		.uleb128 0xb
 9980 0027 03       		.uleb128 0x3
 9981 0028 0E       		.uleb128 0xe
 9982 0029 00       		.byte	0
 9983 002a 00       		.byte	0
 9984 002b 04       		.uleb128 0x4
 9985 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 259


 9986 002d 00       		.byte	0
 9987 002e 0B       		.uleb128 0xb
 9988 002f 0B       		.uleb128 0xb
 9989 0030 3E       		.uleb128 0x3e
 9990 0031 0B       		.uleb128 0xb
 9991 0032 03       		.uleb128 0x3
 9992 0033 08       		.uleb128 0x8
 9993 0034 00       		.byte	0
 9994 0035 00       		.byte	0
 9995 0036 05       		.uleb128 0x5
 9996 0037 13       		.uleb128 0x13
 9997 0038 01       		.byte	0x1
 9998 0039 0B       		.uleb128 0xb
 9999 003a 0B       		.uleb128 0xb
 10000 003b 3A       		.uleb128 0x3a
 10001 003c 0B       		.uleb128 0xb
 10002 003d 3B       		.uleb128 0x3b
 10003 003e 0B       		.uleb128 0xb
 10004 003f 01       		.uleb128 0x1
 10005 0040 13       		.uleb128 0x13
 10006 0041 00       		.byte	0
 10007 0042 00       		.byte	0
 10008 0043 06       		.uleb128 0x6
 10009 0044 0D       		.uleb128 0xd
 10010 0045 00       		.byte	0
 10011 0046 03       		.uleb128 0x3
 10012 0047 08       		.uleb128 0x8
 10013 0048 3A       		.uleb128 0x3a
 10014 0049 0B       		.uleb128 0xb
 10015 004a 3B       		.uleb128 0x3b
 10016 004b 0B       		.uleb128 0xb
 10017 004c 49       		.uleb128 0x49
 10018 004d 13       		.uleb128 0x13
 10019 004e 38       		.uleb128 0x38
 10020 004f 0B       		.uleb128 0xb
 10021 0050 00       		.byte	0
 10022 0051 00       		.byte	0
 10023 0052 07       		.uleb128 0x7
 10024 0053 0D       		.uleb128 0xd
 10025 0054 00       		.byte	0
 10026 0055 03       		.uleb128 0x3
 10027 0056 0E       		.uleb128 0xe
 10028 0057 3A       		.uleb128 0x3a
 10029 0058 0B       		.uleb128 0xb
 10030 0059 3B       		.uleb128 0x3b
 10031 005a 0B       		.uleb128 0xb
 10032 005b 49       		.uleb128 0x49
 10033 005c 13       		.uleb128 0x13
 10034 005d 38       		.uleb128 0x38
 10035 005e 0B       		.uleb128 0xb
 10036 005f 00       		.byte	0
 10037 0060 00       		.byte	0
 10038 0061 08       		.uleb128 0x8
 10039 0062 0F       		.uleb128 0xf
 10040 0063 00       		.byte	0
 10041 0064 0B       		.uleb128 0xb
 10042 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 260


 10043 0066 00       		.byte	0
 10044 0067 00       		.byte	0
 10045 0068 09       		.uleb128 0x9
 10046 0069 04       		.uleb128 0x4
 10047 006a 01       		.byte	0x1
 10048 006b 03       		.uleb128 0x3
 10049 006c 0E       		.uleb128 0xe
 10050 006d 0B       		.uleb128 0xb
 10051 006e 0B       		.uleb128 0xb
 10052 006f 49       		.uleb128 0x49
 10053 0070 13       		.uleb128 0x13
 10054 0071 3A       		.uleb128 0x3a
 10055 0072 0B       		.uleb128 0xb
 10056 0073 3B       		.uleb128 0x3b
 10057 0074 0B       		.uleb128 0xb
 10058 0075 01       		.uleb128 0x1
 10059 0076 13       		.uleb128 0x13
 10060 0077 00       		.byte	0
 10061 0078 00       		.byte	0
 10062 0079 0A       		.uleb128 0xa
 10063 007a 28       		.uleb128 0x28
 10064 007b 00       		.byte	0
 10065 007c 03       		.uleb128 0x3
 10066 007d 0E       		.uleb128 0xe
 10067 007e 1C       		.uleb128 0x1c
 10068 007f 0B       		.uleb128 0xb
 10069 0080 00       		.byte	0
 10070 0081 00       		.byte	0
 10071 0082 0B       		.uleb128 0xb
 10072 0083 28       		.uleb128 0x28
 10073 0084 00       		.byte	0
 10074 0085 03       		.uleb128 0x3
 10075 0086 0E       		.uleb128 0xe
 10076 0087 1C       		.uleb128 0x1c
 10077 0088 05       		.uleb128 0x5
 10078 0089 00       		.byte	0
 10079 008a 00       		.byte	0
 10080 008b 0C       		.uleb128 0xc
 10081 008c 13       		.uleb128 0x13
 10082 008d 01       		.byte	0x1
 10083 008e 03       		.uleb128 0x3
 10084 008f 0E       		.uleb128 0xe
 10085 0090 0B       		.uleb128 0xb
 10086 0091 0B       		.uleb128 0xb
 10087 0092 3A       		.uleb128 0x3a
 10088 0093 0B       		.uleb128 0xb
 10089 0094 3B       		.uleb128 0x3b
 10090 0095 05       		.uleb128 0x5
 10091 0096 01       		.uleb128 0x1
 10092 0097 13       		.uleb128 0x13
 10093 0098 00       		.byte	0
 10094 0099 00       		.byte	0
 10095 009a 0D       		.uleb128 0xd
 10096 009b 0D       		.uleb128 0xd
 10097 009c 00       		.byte	0
 10098 009d 03       		.uleb128 0x3
 10099 009e 08       		.uleb128 0x8
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 261


 10100 009f 3A       		.uleb128 0x3a
 10101 00a0 0B       		.uleb128 0xb
 10102 00a1 3B       		.uleb128 0x3b
 10103 00a2 05       		.uleb128 0x5
 10104 00a3 49       		.uleb128 0x49
 10105 00a4 13       		.uleb128 0x13
 10106 00a5 38       		.uleb128 0x38
 10107 00a6 0B       		.uleb128 0xb
 10108 00a7 00       		.byte	0
 10109 00a8 00       		.byte	0
 10110 00a9 0E       		.uleb128 0xe
 10111 00aa 0D       		.uleb128 0xd
 10112 00ab 00       		.byte	0
 10113 00ac 03       		.uleb128 0x3
 10114 00ad 0E       		.uleb128 0xe
 10115 00ae 3A       		.uleb128 0x3a
 10116 00af 0B       		.uleb128 0xb
 10117 00b0 3B       		.uleb128 0x3b
 10118 00b1 05       		.uleb128 0x5
 10119 00b2 49       		.uleb128 0x49
 10120 00b3 13       		.uleb128 0x13
 10121 00b4 38       		.uleb128 0x38
 10122 00b5 0B       		.uleb128 0xb
 10123 00b6 00       		.byte	0
 10124 00b7 00       		.byte	0
 10125 00b8 0F       		.uleb128 0xf
 10126 00b9 16       		.uleb128 0x16
 10127 00ba 00       		.byte	0
 10128 00bb 03       		.uleb128 0x3
 10129 00bc 0E       		.uleb128 0xe
 10130 00bd 3A       		.uleb128 0x3a
 10131 00be 0B       		.uleb128 0xb
 10132 00bf 3B       		.uleb128 0x3b
 10133 00c0 05       		.uleb128 0x5
 10134 00c1 49       		.uleb128 0x49
 10135 00c2 13       		.uleb128 0x13
 10136 00c3 00       		.byte	0
 10137 00c4 00       		.byte	0
 10138 00c5 10       		.uleb128 0x10
 10139 00c6 0F       		.uleb128 0xf
 10140 00c7 00       		.byte	0
 10141 00c8 0B       		.uleb128 0xb
 10142 00c9 0B       		.uleb128 0xb
 10143 00ca 49       		.uleb128 0x49
 10144 00cb 13       		.uleb128 0x13
 10145 00cc 00       		.byte	0
 10146 00cd 00       		.byte	0
 10147 00ce 11       		.uleb128 0x11
 10148 00cf 26       		.uleb128 0x26
 10149 00d0 00       		.byte	0
 10150 00d1 49       		.uleb128 0x49
 10151 00d2 13       		.uleb128 0x13
 10152 00d3 00       		.byte	0
 10153 00d4 00       		.byte	0
 10154 00d5 12       		.uleb128 0x12
 10155 00d6 13       		.uleb128 0x13
 10156 00d7 01       		.byte	0x1
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 262


 10157 00d8 03       		.uleb128 0x3
 10158 00d9 0E       		.uleb128 0xe
 10159 00da 0B       		.uleb128 0xb
 10160 00db 0B       		.uleb128 0xb
 10161 00dc 3A       		.uleb128 0x3a
 10162 00dd 0B       		.uleb128 0xb
 10163 00de 3B       		.uleb128 0x3b
 10164 00df 0B       		.uleb128 0xb
 10165 00e0 01       		.uleb128 0x1
 10166 00e1 13       		.uleb128 0x13
 10167 00e2 00       		.byte	0
 10168 00e3 00       		.byte	0
 10169 00e4 13       		.uleb128 0x13
 10170 00e5 15       		.uleb128 0x15
 10171 00e6 01       		.byte	0x1
 10172 00e7 27       		.uleb128 0x27
 10173 00e8 19       		.uleb128 0x19
 10174 00e9 49       		.uleb128 0x49
 10175 00ea 13       		.uleb128 0x13
 10176 00eb 01       		.uleb128 0x1
 10177 00ec 13       		.uleb128 0x13
 10178 00ed 00       		.byte	0
 10179 00ee 00       		.byte	0
 10180 00ef 14       		.uleb128 0x14
 10181 00f0 05       		.uleb128 0x5
 10182 00f1 00       		.byte	0
 10183 00f2 49       		.uleb128 0x49
 10184 00f3 13       		.uleb128 0x13
 10185 00f4 00       		.byte	0
 10186 00f5 00       		.byte	0
 10187 00f6 15       		.uleb128 0x15
 10188 00f7 01       		.uleb128 0x1
 10189 00f8 01       		.byte	0x1
 10190 00f9 49       		.uleb128 0x49
 10191 00fa 13       		.uleb128 0x13
 10192 00fb 01       		.uleb128 0x1
 10193 00fc 13       		.uleb128 0x13
 10194 00fd 00       		.byte	0
 10195 00fe 00       		.byte	0
 10196 00ff 16       		.uleb128 0x16
 10197 0100 21       		.uleb128 0x21
 10198 0101 00       		.byte	0
 10199 0102 49       		.uleb128 0x49
 10200 0103 13       		.uleb128 0x13
 10201 0104 2F       		.uleb128 0x2f
 10202 0105 0B       		.uleb128 0xb
 10203 0106 00       		.byte	0
 10204 0107 00       		.byte	0
 10205 0108 17       		.uleb128 0x17
 10206 0109 15       		.uleb128 0x15
 10207 010a 01       		.byte	0x1
 10208 010b 27       		.uleb128 0x27
 10209 010c 19       		.uleb128 0x19
 10210 010d 01       		.uleb128 0x1
 10211 010e 13       		.uleb128 0x13
 10212 010f 00       		.byte	0
 10213 0110 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 263


 10214 0111 18       		.uleb128 0x18
 10215 0112 13       		.uleb128 0x13
 10216 0113 01       		.byte	0x1
 10217 0114 0B       		.uleb128 0xb
 10218 0115 0B       		.uleb128 0xb
 10219 0116 3A       		.uleb128 0x3a
 10220 0117 0B       		.uleb128 0xb
 10221 0118 3B       		.uleb128 0x3b
 10222 0119 05       		.uleb128 0x5
 10223 011a 01       		.uleb128 0x1
 10224 011b 13       		.uleb128 0x13
 10225 011c 00       		.byte	0
 10226 011d 00       		.byte	0
 10227 011e 19       		.uleb128 0x19
 10228 011f 2E       		.uleb128 0x2e
 10229 0120 00       		.byte	0
 10230 0121 3F       		.uleb128 0x3f
 10231 0122 19       		.uleb128 0x19
 10232 0123 03       		.uleb128 0x3
 10233 0124 0E       		.uleb128 0xe
 10234 0125 3A       		.uleb128 0x3a
 10235 0126 0B       		.uleb128 0xb
 10236 0127 3B       		.uleb128 0x3b
 10237 0128 0B       		.uleb128 0xb
 10238 0129 27       		.uleb128 0x27
 10239 012a 19       		.uleb128 0x19
 10240 012b 11       		.uleb128 0x11
 10241 012c 01       		.uleb128 0x1
 10242 012d 12       		.uleb128 0x12
 10243 012e 06       		.uleb128 0x6
 10244 012f 40       		.uleb128 0x40
 10245 0130 18       		.uleb128 0x18
 10246 0131 9642     		.uleb128 0x2116
 10247 0133 19       		.uleb128 0x19
 10248 0134 00       		.byte	0
 10249 0135 00       		.byte	0
 10250 0136 1A       		.uleb128 0x1a
 10251 0137 2E       		.uleb128 0x2e
 10252 0138 00       		.byte	0
 10253 0139 3F       		.uleb128 0x3f
 10254 013a 19       		.uleb128 0x19
 10255 013b 03       		.uleb128 0x3
 10256 013c 0E       		.uleb128 0xe
 10257 013d 3A       		.uleb128 0x3a
 10258 013e 0B       		.uleb128 0xb
 10259 013f 3B       		.uleb128 0x3b
 10260 0140 0B       		.uleb128 0xb
 10261 0141 27       		.uleb128 0x27
 10262 0142 19       		.uleb128 0x19
 10263 0143 11       		.uleb128 0x11
 10264 0144 01       		.uleb128 0x1
 10265 0145 12       		.uleb128 0x12
 10266 0146 06       		.uleb128 0x6
 10267 0147 40       		.uleb128 0x40
 10268 0148 18       		.uleb128 0x18
 10269 0149 9742     		.uleb128 0x2117
 10270 014b 19       		.uleb128 0x19
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 264


 10271 014c 00       		.byte	0
 10272 014d 00       		.byte	0
 10273 014e 1B       		.uleb128 0x1b
 10274 014f 2E       		.uleb128 0x2e
 10275 0150 01       		.byte	0x1
 10276 0151 3F       		.uleb128 0x3f
 10277 0152 19       		.uleb128 0x19
 10278 0153 03       		.uleb128 0x3
 10279 0154 0E       		.uleb128 0xe
 10280 0155 3A       		.uleb128 0x3a
 10281 0156 0B       		.uleb128 0xb
 10282 0157 3B       		.uleb128 0x3b
 10283 0158 0B       		.uleb128 0xb
 10284 0159 27       		.uleb128 0x27
 10285 015a 19       		.uleb128 0x19
 10286 015b 11       		.uleb128 0x11
 10287 015c 01       		.uleb128 0x1
 10288 015d 12       		.uleb128 0x12
 10289 015e 06       		.uleb128 0x6
 10290 015f 40       		.uleb128 0x40
 10291 0160 18       		.uleb128 0x18
 10292 0161 9742     		.uleb128 0x2117
 10293 0163 19       		.uleb128 0x19
 10294 0164 01       		.uleb128 0x1
 10295 0165 13       		.uleb128 0x13
 10296 0166 00       		.byte	0
 10297 0167 00       		.byte	0
 10298 0168 1C       		.uleb128 0x1c
 10299 0169 05       		.uleb128 0x5
 10300 016a 00       		.byte	0
 10301 016b 03       		.uleb128 0x3
 10302 016c 08       		.uleb128 0x8
 10303 016d 3A       		.uleb128 0x3a
 10304 016e 0B       		.uleb128 0xb
 10305 016f 3B       		.uleb128 0x3b
 10306 0170 0B       		.uleb128 0xb
 10307 0171 49       		.uleb128 0x49
 10308 0172 13       		.uleb128 0x13
 10309 0173 02       		.uleb128 0x2
 10310 0174 18       		.uleb128 0x18
 10311 0175 00       		.byte	0
 10312 0176 00       		.byte	0
 10313 0177 1D       		.uleb128 0x1d
 10314 0178 34       		.uleb128 0x34
 10315 0179 00       		.byte	0
 10316 017a 03       		.uleb128 0x3
 10317 017b 0E       		.uleb128 0xe
 10318 017c 3A       		.uleb128 0x3a
 10319 017d 0B       		.uleb128 0xb
 10320 017e 3B       		.uleb128 0x3b
 10321 017f 0B       		.uleb128 0xb
 10322 0180 49       		.uleb128 0x49
 10323 0181 13       		.uleb128 0x13
 10324 0182 02       		.uleb128 0x2
 10325 0183 18       		.uleb128 0x18
 10326 0184 00       		.byte	0
 10327 0185 00       		.byte	0
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 265


 10328 0186 1E       		.uleb128 0x1e
 10329 0187 35       		.uleb128 0x35
 10330 0188 00       		.byte	0
 10331 0189 49       		.uleb128 0x49
 10332 018a 13       		.uleb128 0x13
 10333 018b 00       		.byte	0
 10334 018c 00       		.byte	0
 10335 018d 1F       		.uleb128 0x1f
 10336 018e 05       		.uleb128 0x5
 10337 018f 00       		.byte	0
 10338 0190 03       		.uleb128 0x3
 10339 0191 0E       		.uleb128 0xe
 10340 0192 3A       		.uleb128 0x3a
 10341 0193 0B       		.uleb128 0xb
 10342 0194 3B       		.uleb128 0x3b
 10343 0195 0B       		.uleb128 0xb
 10344 0196 49       		.uleb128 0x49
 10345 0197 13       		.uleb128 0x13
 10346 0198 02       		.uleb128 0x2
 10347 0199 18       		.uleb128 0x18
 10348 019a 00       		.byte	0
 10349 019b 00       		.byte	0
 10350 019c 20       		.uleb128 0x20
 10351 019d 2E       		.uleb128 0x2e
 10352 019e 01       		.byte	0x1
 10353 019f 3F       		.uleb128 0x3f
 10354 01a0 19       		.uleb128 0x19
 10355 01a1 03       		.uleb128 0x3
 10356 01a2 0E       		.uleb128 0xe
 10357 01a3 3A       		.uleb128 0x3a
 10358 01a4 0B       		.uleb128 0xb
 10359 01a5 3B       		.uleb128 0x3b
 10360 01a6 0B       		.uleb128 0xb
 10361 01a7 27       		.uleb128 0x27
 10362 01a8 19       		.uleb128 0x19
 10363 01a9 11       		.uleb128 0x11
 10364 01aa 01       		.uleb128 0x1
 10365 01ab 12       		.uleb128 0x12
 10366 01ac 06       		.uleb128 0x6
 10367 01ad 40       		.uleb128 0x40
 10368 01ae 18       		.uleb128 0x18
 10369 01af 9642     		.uleb128 0x2116
 10370 01b1 19       		.uleb128 0x19
 10371 01b2 01       		.uleb128 0x1
 10372 01b3 13       		.uleb128 0x13
 10373 01b4 00       		.byte	0
 10374 01b5 00       		.byte	0
 10375 01b6 21       		.uleb128 0x21
 10376 01b7 2E       		.uleb128 0x2e
 10377 01b8 01       		.byte	0x1
 10378 01b9 3F       		.uleb128 0x3f
 10379 01ba 19       		.uleb128 0x19
 10380 01bb 03       		.uleb128 0x3
 10381 01bc 0E       		.uleb128 0xe
 10382 01bd 3A       		.uleb128 0x3a
 10383 01be 0B       		.uleb128 0xb
 10384 01bf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 266


 10385 01c0 0B       		.uleb128 0xb
 10386 01c1 27       		.uleb128 0x27
 10387 01c2 19       		.uleb128 0x19
 10388 01c3 49       		.uleb128 0x49
 10389 01c4 13       		.uleb128 0x13
 10390 01c5 11       		.uleb128 0x11
 10391 01c6 01       		.uleb128 0x1
 10392 01c7 12       		.uleb128 0x12
 10393 01c8 06       		.uleb128 0x6
 10394 01c9 40       		.uleb128 0x40
 10395 01ca 18       		.uleb128 0x18
 10396 01cb 9642     		.uleb128 0x2116
 10397 01cd 19       		.uleb128 0x19
 10398 01ce 01       		.uleb128 0x1
 10399 01cf 13       		.uleb128 0x13
 10400 01d0 00       		.byte	0
 10401 01d1 00       		.byte	0
 10402 01d2 22       		.uleb128 0x22
 10403 01d3 2E       		.uleb128 0x2e
 10404 01d4 01       		.byte	0x1
 10405 01d5 3F       		.uleb128 0x3f
 10406 01d6 19       		.uleb128 0x19
 10407 01d7 03       		.uleb128 0x3
 10408 01d8 0E       		.uleb128 0xe
 10409 01d9 3A       		.uleb128 0x3a
 10410 01da 0B       		.uleb128 0xb
 10411 01db 3B       		.uleb128 0x3b
 10412 01dc 0B       		.uleb128 0xb
 10413 01dd 27       		.uleb128 0x27
 10414 01de 19       		.uleb128 0x19
 10415 01df 49       		.uleb128 0x49
 10416 01e0 13       		.uleb128 0x13
 10417 01e1 11       		.uleb128 0x11
 10418 01e2 01       		.uleb128 0x1
 10419 01e3 12       		.uleb128 0x12
 10420 01e4 06       		.uleb128 0x6
 10421 01e5 40       		.uleb128 0x40
 10422 01e6 18       		.uleb128 0x18
 10423 01e7 9742     		.uleb128 0x2117
 10424 01e9 19       		.uleb128 0x19
 10425 01ea 01       		.uleb128 0x1
 10426 01eb 13       		.uleb128 0x13
 10427 01ec 00       		.byte	0
 10428 01ed 00       		.byte	0
 10429 01ee 23       		.uleb128 0x23
 10430 01ef 2E       		.uleb128 0x2e
 10431 01f0 01       		.byte	0x1
 10432 01f1 3F       		.uleb128 0x3f
 10433 01f2 19       		.uleb128 0x19
 10434 01f3 03       		.uleb128 0x3
 10435 01f4 0E       		.uleb128 0xe
 10436 01f5 3A       		.uleb128 0x3a
 10437 01f6 0B       		.uleb128 0xb
 10438 01f7 3B       		.uleb128 0x3b
 10439 01f8 05       		.uleb128 0x5
 10440 01f9 27       		.uleb128 0x27
 10441 01fa 19       		.uleb128 0x19
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 267


 10442 01fb 11       		.uleb128 0x11
 10443 01fc 01       		.uleb128 0x1
 10444 01fd 12       		.uleb128 0x12
 10445 01fe 06       		.uleb128 0x6
 10446 01ff 40       		.uleb128 0x40
 10447 0200 18       		.uleb128 0x18
 10448 0201 9642     		.uleb128 0x2116
 10449 0203 19       		.uleb128 0x19
 10450 0204 01       		.uleb128 0x1
 10451 0205 13       		.uleb128 0x13
 10452 0206 00       		.byte	0
 10453 0207 00       		.byte	0
 10454 0208 24       		.uleb128 0x24
 10455 0209 34       		.uleb128 0x34
 10456 020a 00       		.byte	0
 10457 020b 03       		.uleb128 0x3
 10458 020c 08       		.uleb128 0x8
 10459 020d 3A       		.uleb128 0x3a
 10460 020e 0B       		.uleb128 0xb
 10461 020f 3B       		.uleb128 0x3b
 10462 0210 05       		.uleb128 0x5
 10463 0211 49       		.uleb128 0x49
 10464 0212 13       		.uleb128 0x13
 10465 0213 02       		.uleb128 0x2
 10466 0214 18       		.uleb128 0x18
 10467 0215 00       		.byte	0
 10468 0216 00       		.byte	0
 10469 0217 25       		.uleb128 0x25
 10470 0218 2E       		.uleb128 0x2e
 10471 0219 00       		.byte	0
 10472 021a 3F       		.uleb128 0x3f
 10473 021b 19       		.uleb128 0x19
 10474 021c 03       		.uleb128 0x3
 10475 021d 0E       		.uleb128 0xe
 10476 021e 3A       		.uleb128 0x3a
 10477 021f 0B       		.uleb128 0xb
 10478 0220 3B       		.uleb128 0x3b
 10479 0221 05       		.uleb128 0x5
 10480 0222 27       		.uleb128 0x27
 10481 0223 19       		.uleb128 0x19
 10482 0224 11       		.uleb128 0x11
 10483 0225 01       		.uleb128 0x1
 10484 0226 12       		.uleb128 0x12
 10485 0227 06       		.uleb128 0x6
 10486 0228 40       		.uleb128 0x40
 10487 0229 18       		.uleb128 0x18
 10488 022a 9642     		.uleb128 0x2116
 10489 022c 19       		.uleb128 0x19
 10490 022d 00       		.byte	0
 10491 022e 00       		.byte	0
 10492 022f 26       		.uleb128 0x26
 10493 0230 2E       		.uleb128 0x2e
 10494 0231 01       		.byte	0x1
 10495 0232 03       		.uleb128 0x3
 10496 0233 0E       		.uleb128 0xe
 10497 0234 3A       		.uleb128 0x3a
 10498 0235 0B       		.uleb128 0xb
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 268


 10499 0236 3B       		.uleb128 0x3b
 10500 0237 05       		.uleb128 0x5
 10501 0238 27       		.uleb128 0x27
 10502 0239 19       		.uleb128 0x19
 10503 023a 11       		.uleb128 0x11
 10504 023b 01       		.uleb128 0x1
 10505 023c 12       		.uleb128 0x12
 10506 023d 06       		.uleb128 0x6
 10507 023e 40       		.uleb128 0x40
 10508 023f 18       		.uleb128 0x18
 10509 0240 9642     		.uleb128 0x2116
 10510 0242 19       		.uleb128 0x19
 10511 0243 01       		.uleb128 0x1
 10512 0244 13       		.uleb128 0x13
 10513 0245 00       		.byte	0
 10514 0246 00       		.byte	0
 10515 0247 27       		.uleb128 0x27
 10516 0248 34       		.uleb128 0x34
 10517 0249 00       		.byte	0
 10518 024a 03       		.uleb128 0x3
 10519 024b 0E       		.uleb128 0xe
 10520 024c 3A       		.uleb128 0x3a
 10521 024d 0B       		.uleb128 0xb
 10522 024e 3B       		.uleb128 0x3b
 10523 024f 05       		.uleb128 0x5
 10524 0250 49       		.uleb128 0x49
 10525 0251 13       		.uleb128 0x13
 10526 0252 02       		.uleb128 0x2
 10527 0253 18       		.uleb128 0x18
 10528 0254 00       		.byte	0
 10529 0255 00       		.byte	0
 10530 0256 28       		.uleb128 0x28
 10531 0257 05       		.uleb128 0x5
 10532 0258 00       		.byte	0
 10533 0259 03       		.uleb128 0x3
 10534 025a 08       		.uleb128 0x8
 10535 025b 3A       		.uleb128 0x3a
 10536 025c 0B       		.uleb128 0xb
 10537 025d 3B       		.uleb128 0x3b
 10538 025e 05       		.uleb128 0x5
 10539 025f 49       		.uleb128 0x49
 10540 0260 13       		.uleb128 0x13
 10541 0261 02       		.uleb128 0x2
 10542 0262 18       		.uleb128 0x18
 10543 0263 00       		.byte	0
 10544 0264 00       		.byte	0
 10545 0265 29       		.uleb128 0x29
 10546 0266 05       		.uleb128 0x5
 10547 0267 00       		.byte	0
 10548 0268 03       		.uleb128 0x3
 10549 0269 0E       		.uleb128 0xe
 10550 026a 3A       		.uleb128 0x3a
 10551 026b 0B       		.uleb128 0xb
 10552 026c 3B       		.uleb128 0x3b
 10553 026d 05       		.uleb128 0x5
 10554 026e 49       		.uleb128 0x49
 10555 026f 13       		.uleb128 0x13
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 269


 10556 0270 02       		.uleb128 0x2
 10557 0271 18       		.uleb128 0x18
 10558 0272 00       		.byte	0
 10559 0273 00       		.byte	0
 10560 0274 2A       		.uleb128 0x2a
 10561 0275 2E       		.uleb128 0x2e
 10562 0276 01       		.byte	0x1
 10563 0277 03       		.uleb128 0x3
 10564 0278 0E       		.uleb128 0xe
 10565 0279 3A       		.uleb128 0x3a
 10566 027a 0B       		.uleb128 0xb
 10567 027b 3B       		.uleb128 0x3b
 10568 027c 05       		.uleb128 0x5
 10569 027d 27       		.uleb128 0x27
 10570 027e 19       		.uleb128 0x19
 10571 027f 11       		.uleb128 0x11
 10572 0280 01       		.uleb128 0x1
 10573 0281 12       		.uleb128 0x12
 10574 0282 06       		.uleb128 0x6
 10575 0283 40       		.uleb128 0x40
 10576 0284 18       		.uleb128 0x18
 10577 0285 9742     		.uleb128 0x2117
 10578 0287 19       		.uleb128 0x19
 10579 0288 01       		.uleb128 0x1
 10580 0289 13       		.uleb128 0x13
 10581 028a 00       		.byte	0
 10582 028b 00       		.byte	0
 10583 028c 2B       		.uleb128 0x2b
 10584 028d 2E       		.uleb128 0x2e
 10585 028e 01       		.byte	0x1
 10586 028f 03       		.uleb128 0x3
 10587 0290 0E       		.uleb128 0xe
 10588 0291 3A       		.uleb128 0x3a
 10589 0292 0B       		.uleb128 0xb
 10590 0293 3B       		.uleb128 0x3b
 10591 0294 05       		.uleb128 0x5
 10592 0295 27       		.uleb128 0x27
 10593 0296 19       		.uleb128 0x19
 10594 0297 49       		.uleb128 0x49
 10595 0298 13       		.uleb128 0x13
 10596 0299 11       		.uleb128 0x11
 10597 029a 01       		.uleb128 0x1
 10598 029b 12       		.uleb128 0x12
 10599 029c 06       		.uleb128 0x6
 10600 029d 40       		.uleb128 0x40
 10601 029e 18       		.uleb128 0x18
 10602 029f 9742     		.uleb128 0x2117
 10603 02a1 19       		.uleb128 0x19
 10604 02a2 01       		.uleb128 0x1
 10605 02a3 13       		.uleb128 0x13
 10606 02a4 00       		.byte	0
 10607 02a5 00       		.byte	0
 10608 02a6 2C       		.uleb128 0x2c
 10609 02a7 2E       		.uleb128 0x2e
 10610 02a8 00       		.byte	0
 10611 02a9 3F       		.uleb128 0x3f
 10612 02aa 19       		.uleb128 0x19
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 270


 10613 02ab 03       		.uleb128 0x3
 10614 02ac 0E       		.uleb128 0xe
 10615 02ad 3A       		.uleb128 0x3a
 10616 02ae 0B       		.uleb128 0xb
 10617 02af 3B       		.uleb128 0x3b
 10618 02b0 05       		.uleb128 0x5
 10619 02b1 27       		.uleb128 0x27
 10620 02b2 19       		.uleb128 0x19
 10621 02b3 49       		.uleb128 0x49
 10622 02b4 13       		.uleb128 0x13
 10623 02b5 11       		.uleb128 0x11
 10624 02b6 01       		.uleb128 0x1
 10625 02b7 12       		.uleb128 0x12
 10626 02b8 06       		.uleb128 0x6
 10627 02b9 40       		.uleb128 0x40
 10628 02ba 18       		.uleb128 0x18
 10629 02bb 9742     		.uleb128 0x2117
 10630 02bd 19       		.uleb128 0x19
 10631 02be 00       		.byte	0
 10632 02bf 00       		.byte	0
 10633 02c0 2D       		.uleb128 0x2d
 10634 02c1 2E       		.uleb128 0x2e
 10635 02c2 01       		.byte	0x1
 10636 02c3 3F       		.uleb128 0x3f
 10637 02c4 19       		.uleb128 0x19
 10638 02c5 03       		.uleb128 0x3
 10639 02c6 0E       		.uleb128 0xe
 10640 02c7 3A       		.uleb128 0x3a
 10641 02c8 0B       		.uleb128 0xb
 10642 02c9 3B       		.uleb128 0x3b
 10643 02ca 05       		.uleb128 0x5
 10644 02cb 27       		.uleb128 0x27
 10645 02cc 19       		.uleb128 0x19
 10646 02cd 49       		.uleb128 0x49
 10647 02ce 13       		.uleb128 0x13
 10648 02cf 11       		.uleb128 0x11
 10649 02d0 01       		.uleb128 0x1
 10650 02d1 12       		.uleb128 0x12
 10651 02d2 06       		.uleb128 0x6
 10652 02d3 40       		.uleb128 0x40
 10653 02d4 18       		.uleb128 0x18
 10654 02d5 9642     		.uleb128 0x2116
 10655 02d7 19       		.uleb128 0x19
 10656 02d8 01       		.uleb128 0x1
 10657 02d9 13       		.uleb128 0x13
 10658 02da 00       		.byte	0
 10659 02db 00       		.byte	0
 10660 02dc 2E       		.uleb128 0x2e
 10661 02dd 34       		.uleb128 0x34
 10662 02de 00       		.byte	0
 10663 02df 03       		.uleb128 0x3
 10664 02e0 08       		.uleb128 0x8
 10665 02e1 3A       		.uleb128 0x3a
 10666 02e2 0B       		.uleb128 0xb
 10667 02e3 3B       		.uleb128 0x3b
 10668 02e4 0B       		.uleb128 0xb
 10669 02e5 49       		.uleb128 0x49
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 271


 10670 02e6 13       		.uleb128 0x13
 10671 02e7 02       		.uleb128 0x2
 10672 02e8 18       		.uleb128 0x18
 10673 02e9 00       		.byte	0
 10674 02ea 00       		.byte	0
 10675 02eb 2F       		.uleb128 0x2f
 10676 02ec 2E       		.uleb128 0x2e
 10677 02ed 01       		.byte	0x1
 10678 02ee 03       		.uleb128 0x3
 10679 02ef 0E       		.uleb128 0xe
 10680 02f0 3A       		.uleb128 0x3a
 10681 02f1 0B       		.uleb128 0xb
 10682 02f2 3B       		.uleb128 0x3b
 10683 02f3 0B       		.uleb128 0xb
 10684 02f4 27       		.uleb128 0x27
 10685 02f5 19       		.uleb128 0x19
 10686 02f6 11       		.uleb128 0x11
 10687 02f7 01       		.uleb128 0x1
 10688 02f8 12       		.uleb128 0x12
 10689 02f9 06       		.uleb128 0x6
 10690 02fa 40       		.uleb128 0x40
 10691 02fb 18       		.uleb128 0x18
 10692 02fc 9642     		.uleb128 0x2116
 10693 02fe 19       		.uleb128 0x19
 10694 02ff 01       		.uleb128 0x1
 10695 0300 13       		.uleb128 0x13
 10696 0301 00       		.byte	0
 10697 0302 00       		.byte	0
 10698 0303 30       		.uleb128 0x30
 10699 0304 0B       		.uleb128 0xb
 10700 0305 01       		.byte	0x1
 10701 0306 11       		.uleb128 0x11
 10702 0307 01       		.uleb128 0x1
 10703 0308 12       		.uleb128 0x12
 10704 0309 06       		.uleb128 0x6
 10705 030a 00       		.byte	0
 10706 030b 00       		.byte	0
 10707 030c 31       		.uleb128 0x31
 10708 030d 0B       		.uleb128 0xb
 10709 030e 01       		.byte	0x1
 10710 030f 11       		.uleb128 0x11
 10711 0310 01       		.uleb128 0x1
 10712 0311 12       		.uleb128 0x12
 10713 0312 06       		.uleb128 0x6
 10714 0313 01       		.uleb128 0x1
 10715 0314 13       		.uleb128 0x13
 10716 0315 00       		.byte	0
 10717 0316 00       		.byte	0
 10718 0317 32       		.uleb128 0x32
 10719 0318 34       		.uleb128 0x34
 10720 0319 00       		.byte	0
 10721 031a 03       		.uleb128 0x3
 10722 031b 0E       		.uleb128 0xe
 10723 031c 3A       		.uleb128 0x3a
 10724 031d 0B       		.uleb128 0xb
 10725 031e 3B       		.uleb128 0x3b
 10726 031f 05       		.uleb128 0x5
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 272


 10727 0320 49       		.uleb128 0x49
 10728 0321 13       		.uleb128 0x13
 10729 0322 3F       		.uleb128 0x3f
 10730 0323 19       		.uleb128 0x19
 10731 0324 3C       		.uleb128 0x3c
 10732 0325 19       		.uleb128 0x19
 10733 0326 00       		.byte	0
 10734 0327 00       		.byte	0
 10735 0328 33       		.uleb128 0x33
 10736 0329 2E       		.uleb128 0x2e
 10737 032a 00       		.byte	0
 10738 032b 3F       		.uleb128 0x3f
 10739 032c 19       		.uleb128 0x19
 10740 032d 03       		.uleb128 0x3
 10741 032e 0E       		.uleb128 0xe
 10742 032f 3A       		.uleb128 0x3a
 10743 0330 0B       		.uleb128 0xb
 10744 0331 3B       		.uleb128 0x3b
 10745 0332 05       		.uleb128 0x5
 10746 0333 27       		.uleb128 0x27
 10747 0334 19       		.uleb128 0x19
 10748 0335 11       		.uleb128 0x11
 10749 0336 01       		.uleb128 0x1
 10750 0337 12       		.uleb128 0x12
 10751 0338 06       		.uleb128 0x6
 10752 0339 40       		.uleb128 0x40
 10753 033a 18       		.uleb128 0x18
 10754 033b 9742     		.uleb128 0x2117
 10755 033d 19       		.uleb128 0x19
 10756 033e 00       		.byte	0
 10757 033f 00       		.byte	0
 10758 0340 34       		.uleb128 0x34
 10759 0341 2E       		.uleb128 0x2e
 10760 0342 01       		.byte	0x1
 10761 0343 3F       		.uleb128 0x3f
 10762 0344 19       		.uleb128 0x19
 10763 0345 03       		.uleb128 0x3
 10764 0346 0E       		.uleb128 0xe
 10765 0347 3A       		.uleb128 0x3a
 10766 0348 0B       		.uleb128 0xb
 10767 0349 3B       		.uleb128 0x3b
 10768 034a 05       		.uleb128 0x5
 10769 034b 27       		.uleb128 0x27
 10770 034c 19       		.uleb128 0x19
 10771 034d 11       		.uleb128 0x11
 10772 034e 01       		.uleb128 0x1
 10773 034f 12       		.uleb128 0x12
 10774 0350 06       		.uleb128 0x6
 10775 0351 40       		.uleb128 0x40
 10776 0352 18       		.uleb128 0x18
 10777 0353 9742     		.uleb128 0x2117
 10778 0355 19       		.uleb128 0x19
 10779 0356 01       		.uleb128 0x1
 10780 0357 13       		.uleb128 0x13
 10781 0358 00       		.byte	0
 10782 0359 00       		.byte	0
 10783 035a 35       		.uleb128 0x35
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 273


 10784 035b 2E       		.uleb128 0x2e
 10785 035c 00       		.byte	0
 10786 035d 3F       		.uleb128 0x3f
 10787 035e 19       		.uleb128 0x19
 10788 035f 03       		.uleb128 0x3
 10789 0360 0E       		.uleb128 0xe
 10790 0361 3A       		.uleb128 0x3a
 10791 0362 0B       		.uleb128 0xb
 10792 0363 3B       		.uleb128 0x3b
 10793 0364 05       		.uleb128 0x5
 10794 0365 27       		.uleb128 0x27
 10795 0366 19       		.uleb128 0x19
 10796 0367 49       		.uleb128 0x49
 10797 0368 13       		.uleb128 0x13
 10798 0369 11       		.uleb128 0x11
 10799 036a 01       		.uleb128 0x1
 10800 036b 12       		.uleb128 0x12
 10801 036c 06       		.uleb128 0x6
 10802 036d 40       		.uleb128 0x40
 10803 036e 18       		.uleb128 0x18
 10804 036f 9642     		.uleb128 0x2116
 10805 0371 19       		.uleb128 0x19
 10806 0372 00       		.byte	0
 10807 0373 00       		.byte	0
 10808 0374 36       		.uleb128 0x36
 10809 0375 2E       		.uleb128 0x2e
 10810 0376 01       		.byte	0x1
 10811 0377 3F       		.uleb128 0x3f
 10812 0378 19       		.uleb128 0x19
 10813 0379 03       		.uleb128 0x3
 10814 037a 0E       		.uleb128 0xe
 10815 037b 3A       		.uleb128 0x3a
 10816 037c 0B       		.uleb128 0xb
 10817 037d 3B       		.uleb128 0x3b
 10818 037e 05       		.uleb128 0x5
 10819 037f 27       		.uleb128 0x27
 10820 0380 19       		.uleb128 0x19
 10821 0381 49       		.uleb128 0x49
 10822 0382 13       		.uleb128 0x13
 10823 0383 11       		.uleb128 0x11
 10824 0384 01       		.uleb128 0x1
 10825 0385 12       		.uleb128 0x12
 10826 0386 06       		.uleb128 0x6
 10827 0387 40       		.uleb128 0x40
 10828 0388 18       		.uleb128 0x18
 10829 0389 9742     		.uleb128 0x2117
 10830 038b 19       		.uleb128 0x19
 10831 038c 01       		.uleb128 0x1
 10832 038d 13       		.uleb128 0x13
 10833 038e 00       		.byte	0
 10834 038f 00       		.byte	0
 10835 0390 37       		.uleb128 0x37
 10836 0391 34       		.uleb128 0x34
 10837 0392 00       		.byte	0
 10838 0393 03       		.uleb128 0x3
 10839 0394 0E       		.uleb128 0xe
 10840 0395 3A       		.uleb128 0x3a
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 274


 10841 0396 0B       		.uleb128 0xb
 10842 0397 3B       		.uleb128 0x3b
 10843 0398 0B       		.uleb128 0xb
 10844 0399 49       		.uleb128 0x49
 10845 039a 13       		.uleb128 0x13
 10846 039b 3F       		.uleb128 0x3f
 10847 039c 19       		.uleb128 0x19
 10848 039d 02       		.uleb128 0x2
 10849 039e 18       		.uleb128 0x18
 10850 039f 00       		.byte	0
 10851 03a0 00       		.byte	0
 10852 03a1 00       		.byte	0
 10853              		.section	.debug_aranges,"",%progbits
 10854 0000 7C020000 		.4byte	0x27c
 10855 0004 0200     		.2byte	0x2
 10856 0006 00000000 		.4byte	.Ldebug_info0
 10857 000a 04       		.byte	0x4
 10858 000b 00       		.byte	0
 10859 000c 0000     		.2byte	0
 10860 000e 0000     		.2byte	0
 10861 0010 00000000 		.4byte	.LFB0
 10862 0014 2C000000 		.4byte	.LFE0-.LFB0
 10863 0018 00000000 		.4byte	.LFB1
 10864 001c 2C000000 		.4byte	.LFE1-.LFB1
 10865 0020 00000000 		.4byte	.LFB2
 10866 0024 12000000 		.4byte	.LFE2-.LFB2
 10867 0028 00000000 		.4byte	.LFB3
 10868 002c 0A000000 		.4byte	.LFE3-.LFB3
 10869 0030 00000000 		.4byte	.LFB4
 10870 0034 10000000 		.4byte	.LFE4-.LFB4
 10871 0038 00000000 		.4byte	.LFB5
 10872 003c 0E000000 		.4byte	.LFE5-.LFB5
 10873 0040 00000000 		.4byte	.LFB6
 10874 0044 0A000000 		.4byte	.LFE6-.LFB6
 10875 0048 00000000 		.4byte	.LFB7
 10876 004c 0A000000 		.4byte	.LFE7-.LFB7
 10877 0050 00000000 		.4byte	.LFB8
 10878 0054 16000000 		.4byte	.LFE8-.LFB8
 10879 0058 00000000 		.4byte	.LFB9
 10880 005c 24000000 		.4byte	.LFE9-.LFB9
 10881 0060 00000000 		.4byte	.LFB10
 10882 0064 16000000 		.4byte	.LFE10-.LFB10
 10883 0068 00000000 		.4byte	.LFB11
 10884 006c 30000000 		.4byte	.LFE11-.LFB11
 10885 0070 00000000 		.4byte	.LFB12
 10886 0074 9C000000 		.4byte	.LFE12-.LFB12
 10887 0078 00000000 		.4byte	.LFB13
 10888 007c 32000000 		.4byte	.LFE13-.LFB13
 10889 0080 00000000 		.4byte	.LFB14
 10890 0084 18000000 		.4byte	.LFE14-.LFB14
 10891 0088 00000000 		.4byte	.LFB15
 10892 008c 32000000 		.4byte	.LFE15-.LFB15
 10893 0090 00000000 		.4byte	.LFB16
 10894 0094 4A000000 		.4byte	.LFE16-.LFB16
 10895 0098 00000000 		.4byte	.LFB17
 10896 009c 56000000 		.4byte	.LFE17-.LFB17
 10897 00a0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 275


 10898 00a4 28000000 		.4byte	.LFE18-.LFB18
 10899 00a8 00000000 		.4byte	.LFB19
 10900 00ac 2C000000 		.4byte	.LFE19-.LFB19
 10901 00b0 00000000 		.4byte	.LFB20
 10902 00b4 BC010000 		.4byte	.LFE20-.LFB20
 10903 00b8 00000000 		.4byte	.LFB21
 10904 00bc F0000000 		.4byte	.LFE21-.LFB21
 10905 00c0 00000000 		.4byte	.LFB22
 10906 00c4 74000000 		.4byte	.LFE22-.LFB22
 10907 00c8 00000000 		.4byte	.LFB23
 10908 00cc 1E000000 		.4byte	.LFE23-.LFB23
 10909 00d0 00000000 		.4byte	.LFB24
 10910 00d4 3E000000 		.4byte	.LFE24-.LFB24
 10911 00d8 00000000 		.4byte	.LFB25
 10912 00dc 2C000000 		.4byte	.LFE25-.LFB25
 10913 00e0 00000000 		.4byte	.LFB26
 10914 00e4 48000000 		.4byte	.LFE26-.LFB26
 10915 00e8 00000000 		.4byte	.LFB27
 10916 00ec 14000000 		.4byte	.LFE27-.LFB27
 10917 00f0 00000000 		.4byte	.LFB28
 10918 00f4 30000000 		.4byte	.LFE28-.LFB28
 10919 00f8 00000000 		.4byte	.LFB29
 10920 00fc 54000000 		.4byte	.LFE29-.LFB29
 10921 0100 00000000 		.4byte	.LFB30
 10922 0104 74000000 		.4byte	.LFE30-.LFB30
 10923 0108 00000000 		.4byte	.LFB31
 10924 010c 94000000 		.4byte	.LFE31-.LFB31
 10925 0110 00000000 		.4byte	.LFB32
 10926 0114 68000000 		.4byte	.LFE32-.LFB32
 10927 0118 00000000 		.4byte	.LFB33
 10928 011c 0A000000 		.4byte	.LFE33-.LFB33
 10929 0120 00000000 		.4byte	.LFB34
 10930 0124 1A000000 		.4byte	.LFE34-.LFB34
 10931 0128 00000000 		.4byte	.LFB35
 10932 012c 22000000 		.4byte	.LFE35-.LFB35
 10933 0130 00000000 		.4byte	.LFB36
 10934 0134 18000000 		.4byte	.LFE36-.LFB36
 10935 0138 00000000 		.4byte	.LFB37
 10936 013c 0A000000 		.4byte	.LFE37-.LFB37
 10937 0140 00000000 		.4byte	.LFB38
 10938 0144 24000000 		.4byte	.LFE38-.LFB38
 10939 0148 00000000 		.4byte	.LFB39
 10940 014c E0000000 		.4byte	.LFE39-.LFB39
 10941 0150 00000000 		.4byte	.LFB40
 10942 0154 90000000 		.4byte	.LFE40-.LFB40
 10943 0158 00000000 		.4byte	.LFB41
 10944 015c 54000000 		.4byte	.LFE41-.LFB41
 10945 0160 00000000 		.4byte	.LFB42
 10946 0164 48000000 		.4byte	.LFE42-.LFB42
 10947 0168 00000000 		.4byte	.LFB43
 10948 016c 4C000000 		.4byte	.LFE43-.LFB43
 10949 0170 00000000 		.4byte	.LFB44
 10950 0174 54000000 		.4byte	.LFE44-.LFB44
 10951 0178 00000000 		.4byte	.LFB45
 10952 017c 72000000 		.4byte	.LFE45-.LFB45
 10953 0180 00000000 		.4byte	.LFB46
 10954 0184 34000000 		.4byte	.LFE46-.LFB46
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 276


 10955 0188 00000000 		.4byte	.LFB47
 10956 018c 5A000000 		.4byte	.LFE47-.LFB47
 10957 0190 00000000 		.4byte	.LFB48
 10958 0194 72000000 		.4byte	.LFE48-.LFB48
 10959 0198 00000000 		.4byte	.LFB49
 10960 019c 10010000 		.4byte	.LFE49-.LFB49
 10961 01a0 00000000 		.4byte	.LFB50
 10962 01a4 52010000 		.4byte	.LFE50-.LFB50
 10963 01a8 00000000 		.4byte	.LFB51
 10964 01ac F2020000 		.4byte	.LFE51-.LFB51
 10965 01b0 00000000 		.4byte	.LFB52
 10966 01b4 18010000 		.4byte	.LFE52-.LFB52
 10967 01b8 00000000 		.4byte	.LFB53
 10968 01bc 68000000 		.4byte	.LFE53-.LFB53
 10969 01c0 00000000 		.4byte	.LFB54
 10970 01c4 0A000000 		.4byte	.LFE54-.LFB54
 10971 01c8 00000000 		.4byte	.LFB55
 10972 01cc 48000000 		.4byte	.LFE55-.LFB55
 10973 01d0 00000000 		.4byte	.LFB56
 10974 01d4 5C000000 		.4byte	.LFE56-.LFB56
 10975 01d8 00000000 		.4byte	.LFB57
 10976 01dc 2C000000 		.4byte	.LFE57-.LFB57
 10977 01e0 00000000 		.4byte	.LFB58
 10978 01e4 1C000000 		.4byte	.LFE58-.LFB58
 10979 01e8 00000000 		.4byte	.LFB59
 10980 01ec 20000000 		.4byte	.LFE59-.LFB59
 10981 01f0 00000000 		.4byte	.LFB60
 10982 01f4 12000000 		.4byte	.LFE60-.LFB60
 10983 01f8 00000000 		.4byte	.LFB61
 10984 01fc 16000000 		.4byte	.LFE61-.LFB61
 10985 0200 00000000 		.4byte	.LFB62
 10986 0204 16000000 		.4byte	.LFE62-.LFB62
 10987 0208 00000000 		.4byte	.LFB63
 10988 020c 14000000 		.4byte	.LFE63-.LFB63
 10989 0210 00000000 		.4byte	.LFB64
 10990 0214 14000000 		.4byte	.LFE64-.LFB64
 10991 0218 00000000 		.4byte	.LFB65
 10992 021c 14000000 		.4byte	.LFE65-.LFB65
 10993 0220 00000000 		.4byte	.LFB66
 10994 0224 14000000 		.4byte	.LFE66-.LFB66
 10995 0228 00000000 		.4byte	.LFB67
 10996 022c 10000000 		.4byte	.LFE67-.LFB67
 10997 0230 00000000 		.4byte	.LFB68
 10998 0234 72000000 		.4byte	.LFE68-.LFB68
 10999 0238 00000000 		.4byte	.LFB69
 11000 023c 86000000 		.4byte	.LFE69-.LFB69
 11001 0240 00000000 		.4byte	.LFB70
 11002 0244 82000000 		.4byte	.LFE70-.LFB70
 11003 0248 00000000 		.4byte	.LFB71
 11004 024c 60010000 		.4byte	.LFE71-.LFB71
 11005 0250 00000000 		.4byte	.LFB72
 11006 0254 BE020000 		.4byte	.LFE72-.LFB72
 11007 0258 00000000 		.4byte	.LFB73
 11008 025c 50010000 		.4byte	.LFE73-.LFB73
 11009 0260 00000000 		.4byte	.LFB74
 11010 0264 FE010000 		.4byte	.LFE74-.LFB74
 11011 0268 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 277


 11012 026c 72010000 		.4byte	.LFE75-.LFB75
 11013 0270 00000000 		.4byte	.LFB76
 11014 0274 9E000000 		.4byte	.LFE76-.LFB76
 11015 0278 00000000 		.4byte	0
 11016 027c 00000000 		.4byte	0
 11017              		.section	.debug_ranges,"",%progbits
 11018              	.Ldebug_ranges0:
 11019 0000 00000000 		.4byte	.LFB0
 11020 0004 2C000000 		.4byte	.LFE0
 11021 0008 00000000 		.4byte	.LFB1
 11022 000c 2C000000 		.4byte	.LFE1
 11023 0010 00000000 		.4byte	.LFB2
 11024 0014 12000000 		.4byte	.LFE2
 11025 0018 00000000 		.4byte	.LFB3
 11026 001c 0A000000 		.4byte	.LFE3
 11027 0020 00000000 		.4byte	.LFB4
 11028 0024 10000000 		.4byte	.LFE4
 11029 0028 00000000 		.4byte	.LFB5
 11030 002c 0E000000 		.4byte	.LFE5
 11031 0030 00000000 		.4byte	.LFB6
 11032 0034 0A000000 		.4byte	.LFE6
 11033 0038 00000000 		.4byte	.LFB7
 11034 003c 0A000000 		.4byte	.LFE7
 11035 0040 00000000 		.4byte	.LFB8
 11036 0044 16000000 		.4byte	.LFE8
 11037 0048 00000000 		.4byte	.LFB9
 11038 004c 24000000 		.4byte	.LFE9
 11039 0050 00000000 		.4byte	.LFB10
 11040 0054 16000000 		.4byte	.LFE10
 11041 0058 00000000 		.4byte	.LFB11
 11042 005c 30000000 		.4byte	.LFE11
 11043 0060 00000000 		.4byte	.LFB12
 11044 0064 9C000000 		.4byte	.LFE12
 11045 0068 00000000 		.4byte	.LFB13
 11046 006c 32000000 		.4byte	.LFE13
 11047 0070 00000000 		.4byte	.LFB14
 11048 0074 18000000 		.4byte	.LFE14
 11049 0078 00000000 		.4byte	.LFB15
 11050 007c 32000000 		.4byte	.LFE15
 11051 0080 00000000 		.4byte	.LFB16
 11052 0084 4A000000 		.4byte	.LFE16
 11053 0088 00000000 		.4byte	.LFB17
 11054 008c 56000000 		.4byte	.LFE17
 11055 0090 00000000 		.4byte	.LFB18
 11056 0094 28000000 		.4byte	.LFE18
 11057 0098 00000000 		.4byte	.LFB19
 11058 009c 2C000000 		.4byte	.LFE19
 11059 00a0 00000000 		.4byte	.LFB20
 11060 00a4 BC010000 		.4byte	.LFE20
 11061 00a8 00000000 		.4byte	.LFB21
 11062 00ac F0000000 		.4byte	.LFE21
 11063 00b0 00000000 		.4byte	.LFB22
 11064 00b4 74000000 		.4byte	.LFE22
 11065 00b8 00000000 		.4byte	.LFB23
 11066 00bc 1E000000 		.4byte	.LFE23
 11067 00c0 00000000 		.4byte	.LFB24
 11068 00c4 3E000000 		.4byte	.LFE24
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 278


 11069 00c8 00000000 		.4byte	.LFB25
 11070 00cc 2C000000 		.4byte	.LFE25
 11071 00d0 00000000 		.4byte	.LFB26
 11072 00d4 48000000 		.4byte	.LFE26
 11073 00d8 00000000 		.4byte	.LFB27
 11074 00dc 14000000 		.4byte	.LFE27
 11075 00e0 00000000 		.4byte	.LFB28
 11076 00e4 30000000 		.4byte	.LFE28
 11077 00e8 00000000 		.4byte	.LFB29
 11078 00ec 54000000 		.4byte	.LFE29
 11079 00f0 00000000 		.4byte	.LFB30
 11080 00f4 74000000 		.4byte	.LFE30
 11081 00f8 00000000 		.4byte	.LFB31
 11082 00fc 94000000 		.4byte	.LFE31
 11083 0100 00000000 		.4byte	.LFB32
 11084 0104 68000000 		.4byte	.LFE32
 11085 0108 00000000 		.4byte	.LFB33
 11086 010c 0A000000 		.4byte	.LFE33
 11087 0110 00000000 		.4byte	.LFB34
 11088 0114 1A000000 		.4byte	.LFE34
 11089 0118 00000000 		.4byte	.LFB35
 11090 011c 22000000 		.4byte	.LFE35
 11091 0120 00000000 		.4byte	.LFB36
 11092 0124 18000000 		.4byte	.LFE36
 11093 0128 00000000 		.4byte	.LFB37
 11094 012c 0A000000 		.4byte	.LFE37
 11095 0130 00000000 		.4byte	.LFB38
 11096 0134 24000000 		.4byte	.LFE38
 11097 0138 00000000 		.4byte	.LFB39
 11098 013c E0000000 		.4byte	.LFE39
 11099 0140 00000000 		.4byte	.LFB40
 11100 0144 90000000 		.4byte	.LFE40
 11101 0148 00000000 		.4byte	.LFB41
 11102 014c 54000000 		.4byte	.LFE41
 11103 0150 00000000 		.4byte	.LFB42
 11104 0154 48000000 		.4byte	.LFE42
 11105 0158 00000000 		.4byte	.LFB43
 11106 015c 4C000000 		.4byte	.LFE43
 11107 0160 00000000 		.4byte	.LFB44
 11108 0164 54000000 		.4byte	.LFE44
 11109 0168 00000000 		.4byte	.LFB45
 11110 016c 72000000 		.4byte	.LFE45
 11111 0170 00000000 		.4byte	.LFB46
 11112 0174 34000000 		.4byte	.LFE46
 11113 0178 00000000 		.4byte	.LFB47
 11114 017c 5A000000 		.4byte	.LFE47
 11115 0180 00000000 		.4byte	.LFB48
 11116 0184 72000000 		.4byte	.LFE48
 11117 0188 00000000 		.4byte	.LFB49
 11118 018c 10010000 		.4byte	.LFE49
 11119 0190 00000000 		.4byte	.LFB50
 11120 0194 52010000 		.4byte	.LFE50
 11121 0198 00000000 		.4byte	.LFB51
 11122 019c F2020000 		.4byte	.LFE51
 11123 01a0 00000000 		.4byte	.LFB52
 11124 01a4 18010000 		.4byte	.LFE52
 11125 01a8 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 279


 11126 01ac 68000000 		.4byte	.LFE53
 11127 01b0 00000000 		.4byte	.LFB54
 11128 01b4 0A000000 		.4byte	.LFE54
 11129 01b8 00000000 		.4byte	.LFB55
 11130 01bc 48000000 		.4byte	.LFE55
 11131 01c0 00000000 		.4byte	.LFB56
 11132 01c4 5C000000 		.4byte	.LFE56
 11133 01c8 00000000 		.4byte	.LFB57
 11134 01cc 2C000000 		.4byte	.LFE57
 11135 01d0 00000000 		.4byte	.LFB58
 11136 01d4 1C000000 		.4byte	.LFE58
 11137 01d8 00000000 		.4byte	.LFB59
 11138 01dc 20000000 		.4byte	.LFE59
 11139 01e0 00000000 		.4byte	.LFB60
 11140 01e4 12000000 		.4byte	.LFE60
 11141 01e8 00000000 		.4byte	.LFB61
 11142 01ec 16000000 		.4byte	.LFE61
 11143 01f0 00000000 		.4byte	.LFB62
 11144 01f4 16000000 		.4byte	.LFE62
 11145 01f8 00000000 		.4byte	.LFB63
 11146 01fc 14000000 		.4byte	.LFE63
 11147 0200 00000000 		.4byte	.LFB64
 11148 0204 14000000 		.4byte	.LFE64
 11149 0208 00000000 		.4byte	.LFB65
 11150 020c 14000000 		.4byte	.LFE65
 11151 0210 00000000 		.4byte	.LFB66
 11152 0214 14000000 		.4byte	.LFE66
 11153 0218 00000000 		.4byte	.LFB67
 11154 021c 10000000 		.4byte	.LFE67
 11155 0220 00000000 		.4byte	.LFB68
 11156 0224 72000000 		.4byte	.LFE68
 11157 0228 00000000 		.4byte	.LFB69
 11158 022c 86000000 		.4byte	.LFE69
 11159 0230 00000000 		.4byte	.LFB70
 11160 0234 82000000 		.4byte	.LFE70
 11161 0238 00000000 		.4byte	.LFB71
 11162 023c 60010000 		.4byte	.LFE71
 11163 0240 00000000 		.4byte	.LFB72
 11164 0244 BE020000 		.4byte	.LFE72
 11165 0248 00000000 		.4byte	.LFB73
 11166 024c 50010000 		.4byte	.LFE73
 11167 0250 00000000 		.4byte	.LFB74
 11168 0254 FE010000 		.4byte	.LFE74
 11169 0258 00000000 		.4byte	.LFB75
 11170 025c 72010000 		.4byte	.LFE75
 11171 0260 00000000 		.4byte	.LFB76
 11172 0264 9E000000 		.4byte	.LFE76
 11173 0268 00000000 		.4byte	0
 11174 026c 00000000 		.4byte	0
 11175              		.section	.debug_line,"",%progbits
 11176              	.Ldebug_line0:
 11177 0000 A90D0000 		.section	.debug_str,"MS",%progbits,1
 11177      02002103 
 11177      00000201 
 11177      FB0E0D00 
 11177      01010101 
 11178              	.LASF127:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 280


 11179 0000 706F7574 		.ascii	"pout\000"
 11179      00
 11180              	.LASF119:
 11181 0005 67667853 		.ascii	"gfxSemWait\000"
 11181      656D5761 
 11181      697400
 11182              	.LASF135:
 11183 0010 6E657774 		.ascii	"newt\000"
 11183      00
 11184              	.LASF140:
 11185 0015 636C6561 		.ascii	"cleanUpDeadThreads\000"
 11185      6E557044 
 11185      65616454 
 11185      68726561 
 11185      647300
 11186              	.LASF193:
 11187 0028 67646973 		.ascii	"gdispGGetOrientation\000"
 11187      70474765 
 11187      744F7269 
 11187      656E7461 
 11187      74696F6E 
 11188              	.LASF41:
 11189 003d 706F7765 		.ascii	"powerDeepSleep\000"
 11189      72446565 
 11189      70536C65 
 11189      657000
 11190              	.LASF24:
 11191 004c 74687265 		.ascii	"threadpriority_t\000"
 11191      61647072 
 11191      696F7269 
 11191      74795F74 
 11191      00
 11192              	.LASF142:
 11193 005d 67667854 		.ascii	"gfxThreadExit\000"
 11193      68726561 
 11193      64457869 
 11193      7400
 11194              	.LASF196:
 11195 006b 67646973 		.ascii	"gdispGFlush\000"
 11195      7047466C 
 11195      75736800 
 11196              	.LASF104:
 11197 0077 5F676F73 		.ascii	"_gosInit\000"
 11197      496E6974 
 11197      00
 11198              	.LASF33:
 11199 0080 47444953 		.ascii	"GDISP_ROTATE_270\000"
 11199      505F524F 
 11199      54415445 
 11199      5F323730 
 11199      00
 11200              	.LASF49:
 11201 0091 666C6167 		.ascii	"flags\000"
 11201      7300
 11202              	.LASF205:
 11203 0097 62756666 		.ascii	"buffer\000"
 11203      657200
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 281


 11204              	.LASF167:
 11205 009e 64726177 		.ascii	"drawpixel\000"
 11205      70697865 
 11205      6C00
 11206              	.LASF20:
 11207 00a8 64656C61 		.ascii	"delaytime_t\000"
 11207      7974696D 
 11207      655F7400 
 11208              	.LASF86:
 11209 00b4 77726974 		.ascii	"writestart\000"
 11209      65737461 
 11209      727400
 11210              	.LASF98:
 11211 00bf 636F6E74 		.ascii	"control\000"
 11211      726F6C00 
 11212              	.LASF13:
 11213 00c7 756E7369 		.ascii	"unsigned int\000"
 11213      676E6564 
 11213      20696E74 
 11213      00
 11214              	.LASF59:
 11215 00d4 6E657874 		.ascii	"next\000"
 11215      00
 11216              	.LASF75:
 11217 00d9 6465696E 		.ascii	"deinit\000"
 11217      697400
 11218              	.LASF187:
 11219 00e0 67646973 		.ascii	"gdispSetDisplay\000"
 11219      70536574 
 11219      44697370 
 11219      6C617900 
 11220              	.LASF63:
 11221 00f0 68656164 		.ascii	"head\000"
 11221      00
 11222              	.LASF106:
 11223 00f5 67667848 		.ascii	"gfxHalt\000"
 11223      616C7400 
 11224              	.LASF198:
 11225 00fd 67646973 		.ascii	"gdispGDrawLine\000"
 11225      70474472 
 11225      61774C69 
 11225      6E6500
 11226              	.LASF194:
 11227 010c 67646973 		.ascii	"gdispGGetBacklight\000"
 11227      70474765 
 11227      74426163 
 11227      6B6C6967 
 11227      687400
 11228              	.LASF229:
 11229 011f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11229      43313120 
 11229      352E342E 
 11229      31203230 
 11229      31363036 
 11230 0152 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 11230      20726576 
 11230      6973696F 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 282


 11230      6E203233 
 11230      37373135 
 11231 0185 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11231      66756E63 
 11231      74696F6E 
 11231      2D736563 
 11231      74696F6E 
 11232              	.LASF114:
 11233 01ad 6766784D 		.ascii	"gfxMutexExit\000"
 11233      75746578 
 11233      45786974 
 11233      00
 11234              	.LASF232:
 11235 01ba 51706F70 		.ascii	"Qpop\000"
 11235      00
 11236              	.LASF134:
 11237 01bf 6F6C6474 		.ascii	"oldt\000"
 11237      00
 11238              	.LASF55:
 11239 01c4 70697865 		.ascii	"pixel_t\000"
 11239      6C5F7400 
 11240              	.LASF176:
 11241 01cc 53746172 		.ascii	"StartupLogoDisplay\000"
 11241      7475704C 
 11241      6F676F44 
 11241      6973706C 
 11241      617900
 11242              	.LASF25:
 11243 01df 6C696D69 		.ascii	"limit\000"
 11243      7400
 11244              	.LASF217:
 11245 01e5 6D61696E 		.ascii	"maincxt\000"
 11245      63787400 
 11246              	.LASF48:
 11247 01ed 636F6E74 		.ascii	"controllerdisplay\000"
 11247      726F6C6C 
 11247      65726469 
 11247      73706C61 
 11247      7900
 11248              	.LASF37:
 11249 01ff 6F726965 		.ascii	"orientation\000"
 11249      6E746174 
 11249      696F6E00 
 11250              	.LASF154:
 11251 020b 5F676472 		.ascii	"_gdriverInit\000"
 11251      69766572 
 11251      496E6974 
 11251      00
 11252              	.LASF213:
 11253 0218 67667849 		.ascii	"gfxInitDone\000"
 11253      6E697444 
 11253      6F6E6500 
 11254              	.LASF141:
 11255 0224 67667859 		.ascii	"gfxYield\000"
 11255      69656C64 
 11255      00
 11256              	.LASF225:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 283


 11257 022d 67646973 		.ascii	"gdispInitDone\000"
 11257      70496E69 
 11257      74446F6E 
 11257      6500
 11258              	.LASF192:
 11259 023b 67646973 		.ascii	"gdispGGetPowerMode\000"
 11259      70474765 
 11259      74506F77 
 11259      65724D6F 
 11259      646500
 11260              	.LASF67:
 11261 024e 6C6F6361 		.ascii	"localptr\000"
 11261      6C707472 
 11261      00
 11262              	.LASF180:
 11263 0257 5F676469 		.ascii	"_gdispInitDriver\000"
 11263      7370496E 
 11263      69744472 
 11263      69766572 
 11263      00
 11264              	.LASF21:
 11265 0268 73797374 		.ascii	"systemticks_t\000"
 11265      656D7469 
 11265      636B735F 
 11265      7400
 11266              	.LASF219:
 11267 0276 6A6D706D 		.ascii	"jmpmask1\000"
 11267      61736B31 
 11267      00
 11268              	.LASF220:
 11269 027f 6A6D706D 		.ascii	"jmpmask2\000"
 11269      61736B32 
 11269      00
 11270              	.LASF17:
 11271 0288 75696E74 		.ascii	"uint32_t\000"
 11271      33325F74 
 11271      00
 11272              	.LASF155:
 11273 0291 5F676472 		.ascii	"_gdriverDeinit\000"
 11273      69766572 
 11273      4465696E 
 11273      697400
 11274              	.LASF230:
 11275 02a0 2E2E5C2E 		.ascii	"..\\..\\ugfx_2.7\\ugfx_2.7\\src\\gfx_mk.c\000"
 11275      2E5C7567 
 11275      66785F32 
 11275      2E375C75 
 11275      6766785F 
 11276              	.LASF79:
 11277 02c5 48656967 		.ascii	"Height\000"
 11277      687400
 11278              	.LASF123:
 11279 02cc 67667853 		.ascii	"gfxSleepMilliseconds\000"
 11279      6C656570 
 11279      4D696C6C 
 11279      69736563 
 11279      6F6E6473 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 284


 11280              	.LASF153:
 11281 02e1 67667846 		.ascii	"gfxFree\000"
 11281      72656500 
 11282              	.LASF126:
 11283 02e9 5F676678 		.ascii	"_gfxGetStackStateInFn\000"
 11283      47657453 
 11283      7461636B 
 11283      53746174 
 11283      65496E46 
 11284              	.LASF26:
 11285 02ff 67667853 		.ascii	"gfxSem\000"
 11285      656D00
 11286              	.LASF15:
 11287 0306 696E7431 		.ascii	"int16_t\000"
 11287      365F7400 
 11288              	.LASF149:
 11289 030e 67667841 		.ascii	"gfxAlloc\000"
 11289      6C6C6F63 
 11289      00
 11290              	.LASF12:
 11291 0317 6C6F6E67 		.ascii	"long long unsigned int\000"
 11291      206C6F6E 
 11291      6720756E 
 11291      7369676E 
 11291      65642069 
 11292              	.LASF95:
 11293 032e 66696C6C 		.ascii	"fill\000"
 11293      00
 11294              	.LASF185:
 11295 0333 67646973 		.ascii	"gdispGetDisplay\000"
 11295      70476574 
 11295      44697370 
 11295      6C617900 
 11296              	.LASF100:
 11297 0343 73657463 		.ascii	"setclip\000"
 11297      6C697000 
 11298              	.LASF129:
 11299 034b 6672616D 		.ascii	"framebase\000"
 11299      65626173 
 11299      6500
 11300              	.LASF163:
 11301 0355 67647269 		.ascii	"gdriverInstanceCount\000"
 11301      76657249 
 11301      6E737461 
 11301      6E636543 
 11301      6F756E74 
 11302              	.LASF131:
 11303 036a 5F676678 		.ascii	"_gfxThreadsInit\000"
 11303      54687265 
 11303      61647349 
 11303      6E697400 
 11304              	.LASF6:
 11305 037a 5F5F7569 		.ascii	"__uint16_t\000"
 11305      6E743136 
 11305      5F7400
 11306              	.LASF211:
 11307 0385 62675F72 		.ascii	"bg_ratio\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 285


 11307      6174696F 
 11307      00
 11308              	.LASF231:
 11309 038e 433A5C55 		.ascii	"C:\\Users\\megan\\Google Drive\\College\\S10 - Fall"
 11309      73657273 
 11309      5C6D6567 
 11309      616E5C47 
 11309      6F6F676C 
 11310 03bc 20323031 		.ascii	" 2017\\ECEN 4350 - Embedded uC Design\\Github\\ECEN"
 11310      375C4543 
 11310      454E2034 
 11310      33353020 
 11310      2D20456D 
 11311 03ec 34333530 		.ascii	"4350-EmbeddedMicrocontrollerDesign\\CYBLE-202007-01"
 11311      2D456D62 
 11311      65646465 
 11311      644D6963 
 11311      726F636F 
 11312 041e 5C42696E 		.ascii	"\\BinMonitor.cydsn\000"
 11312      4D6F6E69 
 11312      746F722E 
 11312      63796473 
 11312      6E00
 11313              	.LASF108:
 11314 0430 64756D6D 		.ascii	"dummy\000"
 11314      7900
 11315              	.LASF191:
 11316 0436 67646973 		.ascii	"gdispGGetHeight\000"
 11316      70474765 
 11316      74486569 
 11316      67687400 
 11317              	.LASF147:
 11318 0446 67667854 		.ascii	"gfxThreadWait\000"
 11318      68726561 
 11318      64576169 
 11318      7400
 11319              	.LASF162:
 11320 0454 696E7374 		.ascii	"instance\000"
 11320      616E6365 
 11320      00
 11321              	.LASF94:
 11322 045d 636C6561 		.ascii	"clear\000"
 11322      7200
 11323              	.LASF136:
 11324 0463 646F4275 		.ascii	"doBuildFrame\000"
 11324      696C6446 
 11324      72616D65 
 11324      00
 11325              	.LASF84:
 11326 0470 636F6C6F 		.ascii	"color\000"
 11326      7200
 11327              	.LASF145:
 11328 0476 73746163 		.ascii	"stacksz\000"
 11328      6B737A00 
 11329              	.LASF150:
 11330 047e 67667852 		.ascii	"gfxRealloc\000"
 11330      65616C6C 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 286


 11330      6F6300
 11331              	.LASF77:
 11332 0489 47444953 		.ascii	"GDISPControl\000"
 11332      50436F6E 
 11332      74726F6C 
 11332      00
 11333              	.LASF18:
 11334 0496 73697A65 		.ascii	"size_t\000"
 11334      5F7400
 11335              	.LASF30:
 11336 049d 47444953 		.ascii	"GDISP_ROTATE_0\000"
 11336      505F524F 
 11336      54415445 
 11336      5F3000
 11337              	.LASF166:
 11338 04ac 73657467 		.ascii	"setglobalwindow\000"
 11338      6C6F6261 
 11338      6C77696E 
 11338      646F7700 
 11339              	.LASF2:
 11340 04bc 626F6F6C 		.ascii	"bool_t\000"
 11340      5F7400
 11341              	.LASF208:
 11342 04c3 67646973 		.ascii	"gdispBlendColor\000"
 11342      70426C65 
 11342      6E64436F 
 11342      6C6F7200 
 11343              	.LASF76:
 11344 04d3 5F426F6F 		.ascii	"_Bool\000"
 11344      6C00
 11345              	.LASF40:
 11346 04d9 706F7765 		.ascii	"powerSleep\000"
 11346      72536C65 
 11346      657000
 11347              	.LASF113:
 11348 04e4 6766784D 		.ascii	"gfxMutexEnter\000"
 11348      75746578 
 11348      456E7465 
 11348      7200
 11349              	.LASF171:
 11350 04f2 686C696E 		.ascii	"hline_clip\000"
 11350      655F636C 
 11350      697000
 11351              	.LASF164:
 11352 04fd 67647269 		.ascii	"gdriverGetNext\000"
 11352      76657247 
 11352      65744E65 
 11352      787400
 11353              	.LASF87:
 11354 050c 77726974 		.ascii	"writepos\000"
 11354      65706F73 
 11354      00
 11355              	.LASF182:
 11356 0515 73797374 		.ascii	"systeminstance\000"
 11356      656D696E 
 11356      7374616E 
 11356      636500
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 287


 11357              	.LASF146:
 11358 0524 7072696F 		.ascii	"prio\000"
 11358      00
 11359              	.LASF74:
 11360 0529 706F7374 		.ascii	"postinit\000"
 11360      696E6974 
 11360      00
 11361              	.LASF159:
 11362 0532 67647269 		.ascii	"gdriverUnRegister\000"
 11362      76657255 
 11362      6E526567 
 11362      69737465 
 11362      7200
 11363              	.LASF45:
 11364 0544 70726976 		.ascii	"priv\000"
 11364      00
 11365              	.LASF36:
 11366 0549 6F726965 		.ascii	"orientation_t\000"
 11366      6E746174 
 11366      696F6E5F 
 11366      7400
 11367              	.LASF57:
 11368 0557 63686172 		.ascii	"char\000"
 11368      00
 11369              	.LASF42:
 11370 055c 706F7765 		.ascii	"powerOn\000"
 11370      724F6E00 
 11371              	.LASF204:
 11372 0564 73726363 		.ascii	"srccx\000"
 11372      7800
 11373              	.LASF183:
 11374 056a 5F676469 		.ascii	"_gdispPostInitDriver\000"
 11374      7370506F 
 11374      7374496E 
 11374      69744472 
 11374      69766572 
 11375              	.LASF83:
 11376 057f 436F6E74 		.ascii	"Contrast\000"
 11376      72617374 
 11376      00
 11377              	.LASF173:
 11378 0588 6C696E65 		.ascii	"line_clip\000"
 11378      5F636C69 
 11378      7000
 11379              	.LASF97:
 11380 0592 76736372 		.ascii	"vscroll\000"
 11380      6F6C6C00 
 11381              	.LASF138:
 11382 059a 51616464 		.ascii	"Qadd\000"
 11382      00
 11383              	.LASF203:
 11384 059f 73726379 		.ascii	"srcy\000"
 11384      00
 11385              	.LASF14:
 11386 05a4 75696E74 		.ascii	"uint8_t\000"
 11386      385F7400 
 11387              	.LASF156:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 288


 11388 05ac 67647269 		.ascii	"gdriverRegister\000"
 11388      76657252 
 11388      65676973 
 11388      74657200 
 11389              	.LASF111:
 11390 05bc 6766784D 		.ascii	"gfxMutexInit\000"
 11390      75746578 
 11390      496E6974 
 11390      00
 11391              	.LASF160:
 11392 05c9 64726976 		.ascii	"driver\000"
 11392      657200
 11393              	.LASF34:
 11394 05d0 47444953 		.ascii	"GDISP_ROTATE_PORTRAIT\000"
 11394      505F524F 
 11394      54415445 
 11394      5F504F52 
 11394      54524149 
 11395              	.LASF170:
 11396 05e6 61726561 		.ascii	"area\000"
 11396      00
 11397              	.LASF215:
 11398 05eb 64656164 		.ascii	"deadQ\000"
 11398      5100
 11399              	.LASF178:
 11400 05f1 5F676469 		.ascii	"_gdispInit\000"
 11400      7370496E 
 11400      697400
 11401              	.LASF224:
 11402 05fc 64746169 		.ascii	"dtail\000"
 11402      6C00
 11403              	.LASF11:
 11404 0602 6C6F6E67 		.ascii	"long long int\000"
 11404      206C6F6E 
 11404      6720696E 
 11404      7400
 11405              	.LASF130:
 11406 0610 746D7073 		.ascii	"tmpsaveloc\000"
 11406      6176656C 
 11406      6F6300
 11407              	.LASF4:
 11408 061b 5F5F696E 		.ascii	"__int16_t\000"
 11408      7431365F 
 11408      7400
 11409              	.LASF116:
 11410 0625 7073656D 		.ascii	"psem\000"
 11410      00
 11411              	.LASF201:
 11412 062a 67646973 		.ascii	"gdispGBlitArea\000"
 11412      7047426C 
 11412      69744172 
 11412      656100
 11413              	.LASF22:
 11414 0639 73656D63 		.ascii	"semcount_t\000"
 11414      6F756E74 
 11414      5F7400
 11415              	.LASF70:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 289


 11416 0644 47447269 		.ascii	"GDriverVMT\000"
 11416      76657256 
 11416      4D5400
 11417              	.LASF139:
 11418 064f 5F676F73 		.ascii	"_gosThreadsInit\000"
 11418      54687265 
 11418      61647349 
 11418      6E697400 
 11419              	.LASF122:
 11420 065f 67667853 		.ascii	"gfxSemSignalI\000"
 11420      656D5369 
 11420      676E616C 
 11420      4900
 11421              	.LASF165:
 11422 066d 67647269 		.ascii	"gdriverGetDriverInstanceNumber\000"
 11422      76657247 
 11422      65744472 
 11422      69766572 
 11422      496E7374 
 11423              	.LASF60:
 11424 068c 73697A65 		.ascii	"size\000"
 11424      00
 11425              	.LASF157:
 11426 0691 64696E73 		.ascii	"dinstance\000"
 11426      74616E63 
 11426      6500
 11427              	.LASF199:
 11428 069b 67646973 		.ascii	"gdispGClear\000"
 11428      7047436C 
 11428      65617200 
 11429              	.LASF61:
 11430 06a7 70617261 		.ascii	"param\000"
 11430      6D00
 11431              	.LASF177:
 11432 06ad 626C6B73 		.ascii	"blks\000"
 11432      00
 11433              	.LASF132:
 11434 06b2 5F676678 		.ascii	"_gfxAdjustCxt\000"
 11434      41646A75 
 11434      73744378 
 11434      7400
 11435              	.LASF110:
 11436 06c0 67667853 		.ascii	"gfxSystemUnlock\000"
 11436      79737465 
 11436      6D556E6C 
 11436      6F636B00 
 11437              	.LASF112:
 11438 06d0 706D7574 		.ascii	"pmutex\000"
 11438      657800
 11439              	.LASF117:
 11440 06d7 73746172 		.ascii	"starttm\000"
 11440      74746D00 
 11441              	.LASF53:
 11442 06df 636C6970 		.ascii	"clipy1\000"
 11442      793100
 11443              	.LASF184:
 11444 06e6 5F676469 		.ascii	"_gdispDeInitDriver\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 290


 11444      73704465 
 11444      496E6974 
 11444      44726976 
 11444      657200
 11445              	.LASF68:
 11446 06f9 47447269 		.ascii	"GDriver\000"
 11446      76657200 
 11447              	.LASF107:
 11448 0701 67667845 		.ascii	"gfxExit\000"
 11448      78697400 
 11449              	.LASF81:
 11450 0709 506F7765 		.ascii	"Powermode\000"
 11450      726D6F64 
 11450      6500
 11451              	.LASF44:
 11452 0713 47446973 		.ascii	"GDisplay\000"
 11452      706C6179 
 11452      00
 11453              	.LASF216:
 11454 071c 6D61696E 		.ascii	"mainthread\000"
 11454      74687265 
 11454      616400
 11455              	.LASF133:
 11456 0727 5F676678 		.ascii	"_gfxXSwitch\000"
 11456      58537769 
 11456      74636800 
 11457              	.LASF99:
 11458 0733 71756572 		.ascii	"query\000"
 11458      7900
 11459              	.LASF223:
 11460 0739 64686561 		.ascii	"dhead\000"
 11460      6400
 11461              	.LASF19:
 11462 073f 6C6F6E67 		.ascii	"long double\000"
 11462      20646F75 
 11462      626C6500 
 11463              	.LASF16:
 11464 074b 75696E74 		.ascii	"uint16_t\000"
 11464      31365F74 
 11464      00
 11465              	.LASF102:
 11466 0754 67667849 		.ascii	"gfxInit\000"
 11466      6E697400 
 11467              	.LASF202:
 11468 075c 73726378 		.ascii	"srcx\000"
 11468      00
 11469              	.LASF115:
 11470 0761 67667853 		.ascii	"gfxSemInit\000"
 11470      656D496E 
 11470      697400
 11471              	.LASF66:
 11472 076c 73617665 		.ascii	"saveloc\000"
 11472      6C6F6300 
 11473              	.LASF43:
 11474 0774 706F7765 		.ascii	"powermode_t\000"
 11474      726D6F64 
 11474      655F7400 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 291


 11475              	.LASF188:
 11476 0780 67667854 		.ascii	"gfxThreadMe\000"
 11476      68726561 
 11476      644D6500 
 11477              	.LASF195:
 11478 078c 67646973 		.ascii	"gdispGGetContrast\000"
 11478      70474765 
 11478      74436F6E 
 11478      74726173 
 11478      7400
 11479              	.LASF210:
 11480 079e 66675F72 		.ascii	"fg_ratio\000"
 11480      6174696F 
 11480      00
 11481              	.LASF172:
 11482 07a7 766C696E 		.ascii	"vline_clip\000"
 11482      655F636C 
 11482      697000
 11483              	.LASF5:
 11484 07b2 73686F72 		.ascii	"short int\000"
 11484      7420696E 
 11484      7400
 11485              	.LASF186:
 11486 07bc 64697370 		.ascii	"display\000"
 11486      6C617900 
 11487              	.LASF221:
 11488 07c4 73746163 		.ascii	"stackbase\000"
 11488      6B626173 
 11488      6500
 11489              	.LASF8:
 11490 07ce 6C6F6E67 		.ascii	"long int\000"
 11490      20696E74 
 11490      00
 11491              	.LASF109:
 11492 07d7 67667853 		.ascii	"gfxSystemLock\000"
 11492      79737465 
 11492      6D4C6F63 
 11492      6B00
 11493              	.LASF218:
 11494 07e5 73746163 		.ascii	"stackdirup\000"
 11494      6B646972 
 11494      757000
 11495              	.LASF118:
 11496 07f0 64656C61 		.ascii	"delay\000"
 11496      7900
 11497              	.LASF169:
 11498 07f6 66696C6C 		.ascii	"fillarea\000"
 11498      61726561 
 11498      00
 11499              	.LASF128:
 11500 07ff 64696666 		.ascii	"diff\000"
 11500      00
 11501              	.LASF121:
 11502 0804 67667853 		.ascii	"gfxSemSignal\000"
 11502      656D5369 
 11502      676E616C 
 11502      00
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 292


 11503              	.LASF50:
 11504 0811 636C6970 		.ascii	"clipx0\000"
 11504      783000
 11505              	.LASF52:
 11506 0818 636C6970 		.ascii	"clipx1\000"
 11506      783100
 11507              	.LASF80:
 11508 081f 4F726965 		.ascii	"Orientation\000"
 11508      6E746174 
 11508      696F6E00 
 11509              	.LASF78:
 11510 082b 57696474 		.ascii	"Width\000"
 11510      6800
 11511              	.LASF32:
 11512 0831 47444953 		.ascii	"GDISP_ROTATE_180\000"
 11512      505F524F 
 11512      54415445 
 11512      5F313830 
 11512      00
 11513              	.LASF161:
 11514 0842 67647269 		.ascii	"gdriverGetInstance\000"
 11514      76657247 
 11514      6574496E 
 11514      7374616E 
 11514      636500
 11515              	.LASF3:
 11516 0855 5F5F7569 		.ascii	"__uint8_t\000"
 11516      6E74385F 
 11516      7400
 11517              	.LASF152:
 11518 085f 6E657773 		.ascii	"newsz\000"
 11518      7A00
 11519              	.LASF207:
 11520 0865 67646973 		.ascii	"gdispGDrawBox\000"
 11520      70474472 
 11520      6177426F 
 11520      7800
 11521              	.LASF31:
 11522 0873 47444953 		.ascii	"GDISP_ROTATE_90\000"
 11522      505F524F 
 11522      54415445 
 11522      5F393000 
 11523              	.LASF62:
 11524 0883 74687265 		.ascii	"threadQ\000"
 11524      61645100 
 11525              	.LASF39:
 11526 088b 706F7765 		.ascii	"powerOff\000"
 11526      724F6666 
 11526      00
 11527              	.LASF101:
 11528 0894 666C7573 		.ascii	"flush\000"
 11528      6800
 11529              	.LASF92:
 11530 089a 72656164 		.ascii	"readstop\000"
 11530      73746F70 
 11530      00
 11531              	.LASF73:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 293


 11532 08a3 696E6974 		.ascii	"init\000"
 11532      00
 11533              	.LASF51:
 11534 08a8 636C6970 		.ascii	"clipy0\000"
 11534      793000
 11535              	.LASF27:
 11536 08af 6766784D 		.ascii	"gfxMutex\000"
 11536      75746578 
 11536      00
 11537              	.LASF56:
 11538 08b8 73697A65 		.ascii	"sizetype\000"
 11538      74797065 
 11538      00
 11539              	.LASF10:
 11540 08c1 6C6F6E67 		.ascii	"long unsigned int\000"
 11540      20756E73 
 11540      69676E65 
 11540      6420696E 
 11540      7400
 11541              	.LASF181:
 11542 08d3 64726976 		.ascii	"driverinstance\000"
 11542      6572696E 
 11542      7374616E 
 11542      636500
 11543              	.LASF35:
 11544 08e2 47444953 		.ascii	"GDISP_ROTATE_LANDSCAPE\000"
 11544      505F524F 
 11544      54415445 
 11544      5F4C414E 
 11544      44534341 
 11545              	.LASF38:
 11546 08f9 706F7765 		.ascii	"powermode\000"
 11546      726D6F64 
 11546      6500
 11547              	.LASF190:
 11548 0903 67646973 		.ascii	"gdispGGetWidth\000"
 11548      70474765 
 11548      74576964 
 11548      746800
 11549              	.LASF209:
 11550 0912 616C7068 		.ascii	"alpha\000"
 11550      6100
 11551              	.LASF125:
 11552 0918 5F676678 		.ascii	"_gfxGetStackState\000"
 11552      47657453 
 11552      7461636B 
 11552      53746174 
 11552      6500
 11553              	.LASF143:
 11554 092a 67667854 		.ascii	"gfxThreadCreate\000"
 11554      68726561 
 11554      64437265 
 11554      61746500 
 11555              	.LASF58:
 11556 093a 74687265 		.ascii	"thread\000"
 11556      616400
 11557              	.LASF91:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 294


 11558 0941 72656164 		.ascii	"readcolor\000"
 11558      636F6C6F 
 11558      7200
 11559              	.LASF103:
 11560 094b 67667844 		.ascii	"gfxDeinit\000"
 11560      65696E69 
 11560      7400
 11561              	.LASF212:
 11562 0955 67646973 		.ascii	"gdispContrastColor\000"
 11562      70436F6E 
 11562      74726173 
 11562      74436F6C 
 11562      6F7200
 11563              	.LASF72:
 11564 0968 6F626A73 		.ascii	"objsize\000"
 11564      697A6500 
 11565              	.LASF144:
 11566 0970 73746163 		.ascii	"stackarea\000"
 11566      6B617265 
 11566      6100
 11567              	.LASF93:
 11568 097a 70697865 		.ascii	"pixel\000"
 11568      6C00
 11569              	.LASF168:
 11570 0980 64726177 		.ascii	"drawpixel_clip\000"
 11570      70697865 
 11570      6C5F636C 
 11570      697000
 11571              	.LASF71:
 11572 098f 74797065 		.ascii	"type\000"
 11572      00
 11573              	.LASF0:
 11574 0994 756E7369 		.ascii	"unsigned char\000"
 11574      676E6564 
 11574      20636861 
 11574      7200
 11575              	.LASF9:
 11576 09a2 5F5F7569 		.ascii	"__uint32_t\000"
 11576      6E743332 
 11576      5F7400
 11577              	.LASF54:
 11578 09ad 636F6C6F 		.ascii	"color_t\000"
 11578      725F7400 
 11579              	.LASF23:
 11580 09b5 74687265 		.ascii	"threadreturn_t\000"
 11580      61647265 
 11580      7475726E 
 11580      5F7400
 11581              	.LASF69:
 11582 09c4 64726976 		.ascii	"driverchain\000"
 11582      65726368 
 11582      61696E00 
 11583              	.LASF64:
 11584 09d0 7461696C 		.ascii	"tail\000"
 11584      00
 11585              	.LASF85:
 11586 09d5 47444953 		.ascii	"GDISPVMT\000"
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 295


 11586      50564D54 
 11586      00
 11587              	.LASF226:
 11588 09de 47444953 		.ascii	"GDISPVMT_OnlyOne\000"
 11588      50564D54 
 11588      5F4F6E6C 
 11588      794F6E65 
 11588      00
 11589              	.LASF158:
 11590 09ef 73696E73 		.ascii	"sinstance\000"
 11590      74616E63 
 11590      6500
 11591              	.LASF189:
 11592 09f9 67646973 		.ascii	"gdispGetDisplayCount\000"
 11592      70476574 
 11592      44697370 
 11592      6C617943 
 11592      6F756E74 
 11593              	.LASF206:
 11594 0a0e 67646973 		.ascii	"gdispGSetClip\000"
 11594      70475365 
 11594      74436C69 
 11594      7000
 11595              	.LASF174:
 11596 0a1c 61646478 		.ascii	"addx\000"
 11596      00
 11597              	.LASF175:
 11598 0a21 61646479 		.ascii	"addy\000"
 11598      00
 11599              	.LASF197:
 11600 0a26 67646973 		.ascii	"gdispGDrawPixel\000"
 11600      70474472 
 11600      61775069 
 11600      78656C00 
 11601              	.LASF228:
 11602 0a36 5F676678 		.ascii	"_gfxCurrentThread\000"
 11602      43757272 
 11602      656E7454 
 11602      68726561 
 11602      6400
 11603              	.LASF82:
 11604 0a48 4261636B 		.ascii	"Backlight\000"
 11604      6C696768 
 11604      7400
 11605              	.LASF46:
 11606 0a52 626F6172 		.ascii	"board\000"
 11606      6400
 11607              	.LASF89:
 11608 0a58 77726974 		.ascii	"writestop\000"
 11608      6573746F 
 11608      7000
 11609              	.LASF151:
 11610 0a62 6F6C6473 		.ascii	"oldsz\000"
 11610      7A00
 11611              	.LASF1:
 11612 0a68 7369676E 		.ascii	"signed char\000"
 11612      65642063 
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 296


 11612      68617200 
 11613              	.LASF105:
 11614 0a74 5F676F73 		.ascii	"_gosDeinit\000"
 11614      4465696E 
 11614      697400
 11615              	.LASF7:
 11616 0a7f 73686F72 		.ascii	"short unsigned int\000"
 11616      7420756E 
 11616      7369676E 
 11616      65642069 
 11616      6E7400
 11617              	.LASF179:
 11618 0a92 5F676469 		.ascii	"_gdispDeinit\000"
 11618      73704465 
 11618      696E6974 
 11618      00
 11619              	.LASF120:
 11620 0a9f 67667853 		.ascii	"gfxSemWaitI\000"
 11620      656D5761 
 11620      69744900 
 11621              	.LASF227:
 11622 0aab 47444953 		.ascii	"GDISP\000"
 11622      5000
 11623              	.LASF124:
 11624 0ab1 67667853 		.ascii	"gfxSleepMicroseconds\000"
 11624      6C656570 
 11624      4D696372 
 11624      6F736563 
 11624      6F6E6473 
 11625              	.LASF88:
 11626 0ac6 77726974 		.ascii	"writecolor\000"
 11626      65636F6C 
 11626      6F7200
 11627              	.LASF214:
 11628 0ad1 72656164 		.ascii	"readyQ\000"
 11628      795100
 11629              	.LASF47:
 11630 0ad8 73797374 		.ascii	"systemdisplay\000"
 11630      656D6469 
 11630      73706C61 
 11630      7900
 11631              	.LASF137:
 11632 0ae6 51696E69 		.ascii	"Qinit\000"
 11632      7400
 11633              	.LASF222:
 11634 0aec 70667261 		.ascii	"pframeinfo\000"
 11634      6D65696E 
 11634      666F00
 11635              	.LASF200:
 11636 0af7 67646973 		.ascii	"gdispGFillArea\000"
 11636      70474669 
 11636      6C6C4172 
 11636      656100
 11637              	.LASF96:
 11638 0b06 626C6974 		.ascii	"blit\000"
 11638      00
 11639              	.LASF90:
ARM GAS  C:\Users\megan\AppData\Local\Temp\ccVElWjj.s 			page 297


 11640 0b0b 72656164 		.ascii	"readstart\000"
 11640      73746172 
 11640      7400
 11641              	.LASF28:
 11642 0b15 67667854 		.ascii	"gfxThreadHandle\000"
 11642      68726561 
 11642      6448616E 
 11642      646C6500 
 11643              	.LASF148:
 11644 0b25 5F676F73 		.ascii	"_gosHeapInit\000"
 11644      48656170 
 11644      496E6974 
 11644      00
 11645              	.LASF65:
 11646 0b32 6A6D705F 		.ascii	"jmp_buf\000"
 11646      62756600 
 11647              	.LASF29:
 11648 0b3a 636F6F72 		.ascii	"coord_t\000"
 11648      645F7400 
 11649              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
